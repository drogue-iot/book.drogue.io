antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,20.666]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[1,58.129]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[2,17.563]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1",[3,12.182,4,27.794]],["name/1",[5,1.313]],["text/1",[0,2.281,1,4.915,2,1.748,3,1.633,4,2.642,6,1.516,7,2.424,8,4.567,9,2.974,10,1.542,11,1.596,12,2.253,13,1.05,14,3.774,15,1.196,16,1.364,17,1.566,18,2.424,19,1.62,20,2.956,21,1.641,22,1.564,23,1.266,24,1.226,25,2.253,26,1.022,27,1.696,28,2.086,29,1.102,30,1.468,31,3.568,32,4.334,33,1.449,34,1.054,35,2.248,36,2.524,37,0.989,38,1.532,39,1.437,40,0.665,41,1.989,42,1.153,43,2.187,44,1.449,45,2.849,46,1.057,47,3.122,48,1.462,49,1.989,50,2.253,51,2.253,52,2.056,53,2.056,54,1.373,55,1.54,56,4.048,57,1.741,58,3.451,59,2.424,60,2.424,61,2.424,62,1.169,63,2.424,64,1.488,65,0.824,66,2.14,67,2.4,68,1.046,69,2.424,70,1.989,71,1.641,72,0.986,73,0.999,74,1.129,75,1.664,76,2.14,77,1.22,78,1.273,79,1.706,80,1.601,81,1.62,82,1.582,83,1.202,84,1.989,85,1.057,86,1.474,87,1.081,88,1.239,89,1.404,90,1.148,91,1.741,92,1.75,93,1.713,94,1.245,95,1.143,96,2.253,97,0.824,98,1.688,99,1.098,100,1.76,101,1.449,102,2.424,103,3.91,104,3.568,105,1.057,106,0.983,107,1.138,108,1.502,109,2.455,110,1.426,111,1.073,112,1.564,113,0.891]],["component/1",[3,0.373,114,1.893]],["title/2-1",[40,24.428]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[0,20.666]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[115,28.417]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2-4",[100,28.123]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["title/2",[94,45.762]],["name/2",[94,1.34]],["text/2",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/2",[2,0.423,3,0.373]],["title/3",[2,13.805,3,12.182]],["name/3",[5,1.313]],["text/3",[0,1.838,2,2.236,3,0.918,4,3.778,6,3.3,10,1.933,27,3.193,36,3.587,40,1.447,54,2.988,65,2.694,72,2.146,97,1.793,98,3.672,100,1.665,115,1.683,129,3.681,135,2.555,136,3.938,141,2.882,149,2.927,158,2.628,167,2.603,168,3.102,169,2.889,170,4.01,171,4.071,172,2.269,173,3.208,174,2.927,175,2.947,176,1.84,177,2.836,178,2.446,179,3.333,180,3.009,181,2.446,182,3.268,183,3.238,184,2.477,185,2.908,186,2.532,187,2.836]],["component/3",[2,0.423,3,0.373]],["title/4-1",[188,29.601,189,33.305]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[34,21.309,188,20.729,189,23.323,190,21.861]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[97,30.281]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4-4",[191,34.22,192,34.061]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["title/4",[193,21.758,194,39.578,195,39.578]],["name/4",[194,1.002,195,1.002]],["text/4",[2,1.391,3,1.701,11,1.72,17,1.688,20,1.174,24,1.337,28,0.989,30,0.922,34,1.97,39,1.567,55,1.644,68,1.141,77,1.33,83,1.31,97,3.472,99,2.052,106,2.861,113,2.593,115,0.843,129,1.022,130,0.909,131,1.992,137,2.394,153,1.246,178,2.102,181,1.226,184,3.314,185,3.89,186,1.268,190,1.179,191,2.216,192,1.286,193,0.997,196,1.174,197,4.055,198,4.349,199,1.344,200,1.963,201,2.836,202,1.84,203,1.396,204,1.706,205,2.354,206,2.06,207,1.096,208,2.168,209,2.242,210,1.38,211,2.055,212,4.371,213,2.069,214,3.844,215,4.331,216,1.149,217,0.961,218,2.242,219,2.055,220,2.242,221,1.373,222,2.168,223,1.622,224,1.421,225,1.868,226,2.009,227,1.477,228,1.594,229,4.15,230,1.257,231,2.242,232,2.168,233,3.2,234,2.242,235,2.242,236,2.242,237,2.242,238,2.242,239,2.242,240,2.242,241,2.242,242,2.242,243,2.242,244,2.242,245,2.242,246,2.242,247,2.242,248,1.542,249,2.242,250,1.477,251,2.242,252,1.594,253,2.107,254,2.437,255,1.67,256,2.242,257,1.365,258,1.246,259,2.077,260,1.84]],["component/4",[2,0.423,3,0.373]],["title/5-1",[261,49.103]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[262,46.008]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5",[263,43.795,264,30.006]],["name/5",[264,1.118]],["text/5",[17,3.948,26,1.489,30,2.56,34,2.513,37,1.441,39,2.094,45,2.392,55,2.584,68,3.167,97,1.966,150,1.494,153,1.666,164,1.6,167,1.743,168,2.078,176,2.56,181,1.638,193,3.2,204,1.329,205,1.835,212,2.189,217,1.285,228,2.13,229,2.078,255,2.232,261,3.187,262,4.381,263,2.21,264,4.305,265,1.778,266,2.425,267,2.112,268,2.582,269,2.538,270,2.28,271,2.582,272,2.078,273,6.42,274,2.149,275,2.538,276,5.364,277,2.967,278,2.392,279,2.333,280,2.631,281,2.306,282,2.001,283,2.816,284,2.816,285,4.089,286,1.845,287,2.03,288,2.816,289,2.747,290,1.355,291,1.525,292,1.835,293,2.54,294,2.459,295,2.046,296,1.911,297,2.631,298,1.974,299,3.208,300,4.025,301,2.685,302,2.685,303,2.392]],["component/5",[2,0.423,3,0.373]],["title/6-1",[188,24.383,189,27.434,304,23.313]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[193,21.758,233,31.004,305,31.388]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[138,27.929,193,21.758,233,31.004]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[55,13.541,286,25.604,306,17.741,307,25.188]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6",[193,26.415,308,36.163]],["name/6",[307,1.34]],["text/6",[2,1.341,3,1.183,17,1.18,20,1.408,54,2.995,55,2.925,62,1.528,80,2.093,82,2.069,92,2.199,97,1.078,99,2.394,106,3.218,138,2.56,145,1.88,159,1.62,176,1.844,193,3.814,204,1.193,205,1.647,207,1.314,230,4.196,233,5.434,257,1.638,286,2.761,305,1.726,306,4.541,308,4.556,309,2.896,310,1.647,311,1.736,312,5.447,313,1.47,314,3.852,315,6.965,316,1.895,317,3.061,318,1.508,319,1.29,320,3.865,321,1.822,322,1.528,323,2.119,324,1.911,325,1.983,326,1.895,327,4.019,328,1.783,329,4.019,330,3.798,331,1.458,332,2.361,333,1.715,334,2.024,335,2.003,336,2.366,337,2.093,338,2.207,339,2.176]],["component/6",[2,0.423,3,0.373]],["title/7",[193,33.606]],["name/7",[5,1.313]],["text/7",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/7",[2,0.423,3,0.373]],["title/8-1",[306,20.868,345,35.396,346,34.19]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[347,67.707]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[348,51.972]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8-4",[97,23.801,306,25.334]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["title/8-5",[190,25.715,304,23.313,306,20.868]],["name/8-5",[]],["text/8-5",[]],["component/8-5",[]],["title/8-6",[77,29.021,306,20.868,349,37.216]],["name/8-6",[]],["text/8-6",[]],["component/8-6",[]],["title/8-7",[304,23.313,306,20.868,350,19.516]],["name/8-7",[]],["text/8-7",[]],["component/8-7",[]],["title/8-8",[298,32.217,328,32.439,351,24.632]],["name/8-8",[]],["text/8-8",[]],["component/8-8",[]],["title/8-9",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/8-9",[]],["text/8-9",[]],["component/8-9",[]],["title/8-10",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/8-10",[]],["text/8-10",[]],["component/8-10",[]],["title/8-11",[97,19.606,306,20.868,354,28.593]],["name/8-11",[]],["text/8-11",[]],["component/8-11",[]],["title/8-12",[355,38.595,356,27.631]],["name/8-12",[]],["text/8-12",[]],["component/8-12",[]],["title/8",[286,36.562,306,25.334]],["name/8",[306,0.944]],["text/8",[2,0.835,3,1.269,4,2.059,17,0.338,24,0.459,26,0.382,28,0.339,30,2.091,34,0.746,40,0.471,42,2.014,43,0.356,44,1.026,46,0.748,47,0.376,55,2.405,65,1.439,68,0.391,72,0.369,77,2.38,78,0.476,79,0.368,85,1.065,88,0.877,90,0.429,97,1.255,105,0.395,111,0.759,115,1.509,117,0.521,124,0.375,130,0.312,135,1.5,138,0.831,142,0.624,143,0.653,144,0.868,145,0.538,150,0.383,155,0.411,156,0.447,161,0.45,176,0.852,181,1.132,184,0.426,185,1.346,190,1.089,192,2.916,193,2.523,196,0.762,197,0.986,199,0.461,200,0.393,204,0.341,206,0.412,207,2.773,210,0.474,216,1.061,217,0.624,221,0.471,227,0.507,258,1.461,259,1.692,260,1.7,261,1.707,262,2.187,264,2.866,277,0.367,285,1.177,286,3.318,290,0.348,292,0.471,293,0.398,295,2.739,298,1.73,299,1.355,304,0.987,306,4.304,308,0.468,310,0.471,318,0.431,319,0.993,322,0.827,323,1.147,328,0.51,335,2.675,342,0.431,344,0.485,345,1.053,346,1.836,349,0.585,350,1.755,351,1.577,352,1.513,353,2.763,354,0.45,356,0.358,357,2.76,358,0.592,359,0.868,360,0.831,361,1.323,362,0.651,363,0.689,364,0.663,365,0.651,366,0.485,367,0.843,368,0.493,369,1.576,370,0.8,371,0.723,372,1.895,373,0.868,374,0.843,375,0.675,376,0.533,377,0.514,378,0.614,379,0.557,380,0.675,381,0.579,382,0.592,383,0.723,384,0.533,385,0.562,386,0.689,387,0.641,388,0.641,389,0.689,390,0.487,391,0.507,392,2.354,393,0.689,394,1.213,395,0.689,396,1.278,397,0.395,398,1.213,399,1.919,400,1.919,401,1.73,402,2.75,403,0.567,404,0.551,405,0.51,406,2.307,407,1.009,408,0.675,409,1.947,410,1.856,411,1.383,412,0.622,413,0.675,414,0.426,415,1.162,416,1.334,417,0.651,418,0.447,419,0.387,420,0.614,421,0.705,422,1.334,423,0.631,424,0.972,425,0.705,426,0.493,427,0.723,428,1.898,429,0.562,430,0.8,431,3.677,432,1.304,433,1.947,434,0.631,435,0.631,436,2.07,437,0.562,438,1.177,439,0.542,440,0.744,441,0.497,442,0.8,443,0.689,444,0.503,445,0.631,446,0.454,447,0.651,448,0.651,449,0.651,450,0.651,451,0.606,452,2.156,453,2.156,454,2.156,455,2.156,456,2.003,457,1.337,458,1.543,459,1.856,460,0.8,461,0.542,462,0.542,463,0.514,464,0.557,465,0.521,466,0.631,467,0.525,468,0.482,469,0.471,470,0.567,471,0.663,472,0.622,473,0.592]],["component/8",[2,0.423,3,0.373]],["title/9-1",[193,33.606]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[55,24.602]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[217,32.395]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9",[193,26.415,474,40.538]],["name/9",[474,1.511]],["text/9",[2,0.918,3,0.81,55,1.286,65,2.449,74,2.169,92,1.937,97,1.583,106,1.888,131,2.046,172,2.003,193,4.047,204,1.752,207,1.93,210,2.432,213,2.125,217,2.62,255,2.942,286,2.432,290,1.786,291,2.01,306,3.189,307,2.392,319,1.894,332,3.468,350,2.438,351,1.989,357,2.717,361,1.668,369,3.005,372,2.084,402,5.366,408,3.468,412,3.196,415,6.715,424,2.638,434,5.016,438,4.945,444,4.89,464,2.858,474,2.696,475,4.307,476,4.111,477,4.796,478,2.276,479,3.82,480,2.913,481,4.111,482,3.468,483,2.784,484,4.111,485,3.949,486,3.54,487,3.153,488,4.111]],["component/9",[2,0.423,3,0.373]],["title/10-1",[29,26.213,176,20.116,177,31.004]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[181,32.468,264,30.006]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10",[188,29.601,189,33.305]],["name/10",[188,0.617,489,1.11]],["text/10",[2,1.478,3,1.583,17,2.791,29,2.229,34,2.131,65,3.465,79,1.988,83,2.431,97,1.667,131,2.154,142,2.726,143,1.865,155,2.22,176,1.71,177,2.636,178,2.274,181,4.22,193,3.434,194,3.365,195,3.365,197,2.818,203,2.59,206,2.229,254,2.636,261,2.703,262,2.533,264,3.213,293,2.154,295,4.34,299,2.721,342,2.332,357,4.374,359,2.48,391,2.739,490,2.839,491,3.727,492,3.413,493,3.413,494,3.164,495,6.652,496,3.465,497,5.298,498,3.727,499,2.839,500,3.413,501,3.727,502,3.727,503,3.727,504,3.727,505,3.727]],["component/10",[2,0.423,3,0.373]],["title/11-1",[357,40.85,369,45.18]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11",[506,65.105]],["name/11",[506,1.907]],["text/11",[2,1.651,3,1.457,55,2.312,191,5.362,193,3.158,207,3.47,357,4.884,361,2.999,369,5.402,372,3.747,475,5.004,506,8.944,507,9.685,508,6.508,509,7.39,510,4.615,511,5.138]],["component/11",[2,0.423,3,0.373]],["title/12-1",[188,29.601,189,33.305]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[68,30.215,190,31.218]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[43,27.47,46,30.538]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12-4",[512,73.068]],["name/12-4",[]],["text/12-4",[]],["component/12-4",[]],["title/12-5",[513,62.957]],["name/12-5",[]],["text/12-5",[]],["component/12-5",[]],["title/12-6",[492,48.74,493,48.74]],["name/12-6",[]],["text/12-6",[]],["component/12-6",[]],["title/12-7",[62,42.941]],["name/12-7",[]],["text/12-7",[]],["component/12-7",[]],["title/12-8",[342,42.372]],["name/12-8",[]],["text/12-8",[]],["component/12-8",[]],["title/12-9",[97,19.606,342,27.434,514,32.439]],["name/12-9",[]],["text/12-9",[]],["component/12-9",[]],["title/12-10",[72,23.457,125,25.155,342,27.434]],["name/12-10",[]],["text/12-10",[]],["component/12-10",[]],["title/12-11",[233,37.638,515,33.16]],["name/12-11",[]],["text/12-11",[]],["component/12-11",[]],["title/12-12",[193,33.606]],["name/12-12",[]],["text/12-12",[]],["component/12-12",[]],["title/12-13",[181,32.468,200,30.322]],["name/12-13",[]],["text/12-13",[]],["component/12-13",[]],["title/12-14",[97,23.801,193,26.415]],["name/12-14",[]],["text/12-14",[]],["component/12-14",[]],["title/12-15",[357,40.85,369,45.18]],["name/12-15",[]],["text/12-15",[]],["component/12-15",[]],["title/12-16",[65,30.281]],["name/12-16",[]],["text/12-16",[]],["component/12-16",[]],["title/12-17",[65,19.606,293,25.337,516,38.548]],["name/12-17",[]],["text/12-17",[]],["component/12-17",[]],["title/12-18",[109,40.85,517,42.583]],["name/12-18",[]],["text/12-18",[]],["component/12-18",[]],["title/12-19",[97,19.606,198,31.587,206,26.213]],["name/12-19",[]],["text/12-19",[]],["component/12-19",[]],["title/12-20",[2,11.372,97,19.606,109,33.649]],["name/12-20",[]],["text/12-20",[]],["component/12-20",[]],["title/12",[307,35.969,518,41.173]],["name/12",[5,1.313]],["text/12",[2,0.726,3,0.641,6,0.908,13,0.329,15,0.375,17,2.227,20,0.925,26,0.612,27,0.306,28,0.285,29,0.66,30,0.265,34,1.387,37,0.592,39,0.451,43,1.044,45,0.983,46,0.633,47,0.602,54,0.431,55,2.306,56,2.773,62,3.166,65,1.808,68,1.967,72,0.847,77,1.048,79,1.079,85,0.332,86,0.463,87,0.647,89,0.44,90,0.36,92,0.604,93,0.537,97,2.776,99,2.407,100,0.24,106,2.971,109,1.552,111,0.337,116,0.626,125,1.804,131,0.638,141,0.528,148,0.556,150,0.322,153,0.359,159,0.742,160,0.937,164,0.657,175,2.057,176,0.506,181,0.966,188,0.614,189,0.362,190,0.339,191,0.709,193,1.72,197,0.834,198,0.795,200,0.629,201,0.476,202,0.529,203,0.767,204,0.784,206,1.88,207,1.527,210,0.758,212,0.471,216,0.331,217,0.277,221,0.754,224,0.409,225,2.256,227,1.486,228,0.875,230,0.69,233,1.119,248,0.847,250,0.811,255,0.48,257,0.393,260,0.529,261,2.03,262,0.393,264,1.578,266,0.522,267,0.455,268,0.556,269,1.043,270,0.491,271,0.556,272,0.854,273,0.996,274,0.463,276,1.061,278,0.515,282,1.179,286,0.397,291,0.899,293,2.336,295,0.84,296,0.785,299,0.422,303,0.515,304,0.587,306,2.811,307,1.367,308,0.75,311,0.417,313,0.353,314,0.822,322,0.7,324,2.748,326,1.245,327,1.103,328,0.428,335,0.48,340,0.463,341,0.529,342,3.485,346,0.451,350,0.491,351,0.325,352,0.471,357,0.847,360,0.368,361,0.52,365,0.546,366,0.776,368,1.133,369,0.937,378,0.515,381,0.927,382,1.359,390,0.409,391,0.811,397,0.633,398,1.026,401,0.425,406,0.566,411,0.431,414,0.357,417,0.546,418,0.375,423,0.529,436,0.508,438,0.522,440,0.624,450,0.546,458,0.48,459,0.578,461,0.455,462,0.455,463,1.179,469,0.395,479,1.191,490,1.848,492,1.45,493,1.45,494,1.344,495,0.556,496,0.537,512,0.624,513,2.603,514,1.171,515,0.36,516,2.765,517,0.463,518,0.447,519,0.899,520,0.707,521,1.619,522,1.349,523,0.707,524,0.707,525,1.191,526,2.799,527,1.935,528,2.182,529,0.707,530,0.566,531,0.411,532,0.707,533,0.645,534,1.179,535,0.624,536,0.606,537,0.48,538,0.463,539,0.891,540,0.707,541,1.094,542,1.081,543,1.191,544,0.485,545,0.983,546,0.707,547,0.566,548,0.409,549,0.707,550,0.707,551,0.707,552,0.694,553,0.707,554,1.191,555,0.556,556,0.645,557,0.645,558,0.546,559,1.281,560,1.838,561,1.349,562,1.349,563,1.349,564,0.707,565,0.707,566,0.707,567,0.707,568,1.349,569,0.707,570,0.707,571,0.707,572,0.707,573,0.707,574,0.707,575,0.671,576,0.671,577,0.529,578,2.311,579,0.707,580,0.508,581,0.476,582,0.861,583,1.191,584,1.281,585,0.515,586,0.624,587,0.515,588,0.645,589,0.556,590,0.707,591,0.707,592,0.671,593,0.671,594,0.471,595,0.707,596,0.411,597,0.671,598,0.578,599,1.349,600,1.496,601,0.455,602,0.707,603,0.645,604,2.472,605,0.707,606,0.861,607,0.591,608,0.671,609,0.671,610,0.707,611,0.444,612,2.349,613,1.349,614,0.546,615,0.671,616,0.707,617,1.349,618,0.707,619,0.707,620,1.349,621,0.578,622,0.795,623,0.402,624,0.707,625,0.707,626,0.707,627,1.157,628,0.707,629,0.515,630,0.707,631,0.496,632,0.707,633,0.707,634,1.231,635,0.671,636,0.671,637,0.707,638,0.707,639,0.707,640,0.707,641,0.437,642,0.645,643,0.419,644,0.707,645,0.707]],["component/12",[2,0.423,3,0.373]],["title/13-1",[65,19.606,477,31.388,646,36.438]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[548,37.638,647,42.211]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13",[88,35.779,304,28.302]],["name/13",[272,1.534]],["text/13",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,646,4.941,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245]],["component/13",[2,0.423,3,0.373]],["title/14-1",[0,16.243,336,31.336]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[28,26.203,113,25.725]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[100,18.208,136,21.469,351,24.632]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[186,33.6,187,37.638]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14",[285,33.752,664,42.211]],["name/14",[285,1.258]],["text/14",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/14",[2,0.423,3,0.373]],["title/15-1",[129,27.08,171,35.969]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[690,42.211,696,30.006]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[696,30.006,715,32.878]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[176,31.069]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[65,19.606,446,28.876,673,24.889]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15",[10,25.659,664,42.211]],["name/15",[10,0.956]],["text/15",[0,2.185,2,1.729,3,1.164,4,0.906,10,0.836,11,0.866,13,0.364,17,1.081,20,0.374,21,0.569,23,1.813,24,0.425,26,0.354,28,1.299,33,0.955,34,0.365,36,2.223,37,0.343,38,0.531,39,0.499,40,1.226,43,0.895,47,0.946,48,0.963,55,1.574,68,0.363,72,0.65,73,0.346,74,1.858,77,0.423,79,1.407,85,0.367,86,1.388,87,1.017,89,0.487,92,1.66,94,0.432,95,0.397,97,0.286,99,0.381,100,0.266,105,1.514,106,0.648,107,0.395,108,0.521,110,0.939,111,0.372,112,0.543,113,1.642,115,1.273,124,0.66,125,0.995,129,2.587,130,1.373,131,0.369,132,0.439,133,1.525,134,2.914,135,2.164,136,2.253,138,0.407,141,0.306,142,1.056,143,1.104,144,0.425,145,0.499,146,0.507,151,0.464,153,0.397,155,0.381,156,0.415,157,1.041,159,1.166,160,1.472,162,0.869,164,1.033,165,0.849,167,0.415,168,0.495,171,0.432,172,0.687,174,0.467,176,2.618,178,0.39,179,1.009,180,0.48,182,0.521,184,2.306,185,0.881,186,0.404,187,0.452,191,0.411,196,1.014,198,0.461,199,0.428,200,1.257,203,0.444,207,0.662,213,0.384,217,0.83,224,0.452,250,0.47,257,0.434,258,0.397,264,0.36,274,0.511,277,0.34,282,0.476,290,0.613,291,0.363,313,0.741,316,0.955,319,0.65,321,0.918,322,0.405,328,1.633,331,1.597,333,1.877,336,0.376,338,1.112,350,0.285,356,0.332,359,0.425,360,0.407,366,0.449,371,0.67,373,0.808,401,0.47,414,0.395,419,1.482,420,0.569,426,0.869,446,1.142,469,0.437,499,0.487,515,0.757,531,0.455,534,0.905,535,0.69,538,0.511,542,0.626,552,0.402,582,0.499,589,0.615,606,0.499,611,0.932,614,0.604,622,0.875,623,0.844,631,0.549,641,0.918,651,0.413,654,2.326,658,0.437,659,0.507,661,0.521,669,0.516,673,1.722,674,0.864,684,1.242,685,0.892,688,0.562,689,0.516,690,0.507,691,0.521,692,0.796,696,3.972,701,0.521,702,0.464,704,0.899,706,0.918,708,0.694,712,0.784,714,0.421,715,3.404,716,0.452,717,0.626,718,0.615,719,0.615,720,0.585,721,0.626,722,0.526,723,1.055,724,0.69,725,0.577,726,0.839,727,0.585,728,1.388,729,0.626,730,0.549,731,1.096,732,0.395,733,0.626,734,0.577,735,2.743,736,1.639,737,0.939,738,0.562,739,0.859,740,0.499,741,0.639,742,0.311,743,0.99,744,1.699,745,0.639,746,0.639,747,0.562,748,1.214,749,0.526,750,0.543,751,0.859,752,0.886,753,0.577,754,0.639,755,0.615,756,0.639,757,1.055,758,0.577,759,0.626,760,0.639,761,0.48,762,0.516,763,0.639,764,0.742,765,0.604,766,0.626,767,0.781,768,0.639,769,0.594,770,0.585,771,0.604,772,0.654,773,0.577,774,0.781,775,0.604,776,0.713,777,0.67,778,0.713,779,0.99,780,0.781,781,0.594,782,0.742,783,0.742,784,0.626,785,0.781,786,0.69,787,0.516,788,0.531,789,0.639,790,0.639,791,0.594,792,0.639,793,1.031,794,0.639,795,0.639,796,0.577,797,0.543,798,0.543,799,0.549,800,0.577,801,0.543,802,0.549,803,0.577,804,0.43,805,0.626,806,1.214]],["component/15",[2,0.423,3,0.373]],["title/16",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/16",[0,0.605]],["text/16",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,809,1.764,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234]],["component/16",[2,0.423,3,0.373]],["title/17",[826,62.957]],["name/17",[5,1.313]],["text/17",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/17",[2,0.423,3,0.373]],["title/18-1",[0,16.243,336,31.336]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[27,28.215,141,25.463]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[46,38.852]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18-4",[46,30.538,726,36.768]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["title/18-5",[13,24.977,46,25.155,73,23.754]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["title/18-6",[115,28.417]],["name/18-6",[]],["text/18-6",[]],["component/18-6",[]],["title/18-7",[115,22.336,144,35.41]],["name/18-7",[]],["text/18-7",[]],["component/18-7",[]],["title/18-8",[115,22.336,143,26.631]],["name/18-8",[]],["text/18-8",[]],["component/18-8",[]],["title/18-9",[115,22.336,142,25.463]],["name/18-9",[]],["text/18-9",[]],["component/18-9",[]],["title/18-10",[115,22.336,176,24.42]],["name/18-10",[]],["text/18-10",[]],["component/18-10",[]],["title/18-11",[100,28.123]],["name/18-11",[]],["text/18-11",[]],["component/18-11",[]],["title/18-12",[100,22.105,142,25.463]],["name/18-12",[]],["text/18-12",[]],["component/18-12",[]],["title/18",[113,25.725,848,53.218]],["name/18",[113,0.959]],["text/18",[0,2.356,2,1.904,3,1.767,4,2.961,11,1.091,13,2.109,15,1.419,27,1.159,28,2.791,30,1.003,36,1.302,37,1.173,40,2.045,43,1.128,46,3.253,55,1.345,68,1.241,72,1.17,73,2.006,87,2.172,100,2,113,2.74,115,2.379,116,1.241,117,1.652,129,1.112,130,0.989,131,1.263,132,2.544,136,2.777,137,1.519,141,2.712,142,2.712,143,1.853,144,1.454,155,2.869,157,1.312,159,1.469,184,1.35,199,1.462,200,1.245,204,1.082,290,1.868,291,1.241,333,2.634,336,1.287,351,1.228,359,1.454,361,1.03,461,2.912,467,1.665,468,1.528,470,1.799,478,1.405,531,1.555,548,1.546,622,1.575,643,1.585,658,1.493,689,1.765,691,1.781,692,2.427,696,1.232,710,1.575,712,3.112,716,1.546,726,2.558,730,3.179,732,1.35,740,1.705,827,3.925,843,1.899,849,2.141,850,2.002,851,1.836,852,1.817,853,2.186,854,1.836,855,1.922,856,2.102,857,1.64]],["component/18",[2,0.423,3,0.373]],["title/19-1",[37,20.004,40,13.446,277,19.819,361,17.564]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[188,29.601,189,33.305]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[858,50.816]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19-4",[55,19.337,859,46.228]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["title/19-5",[40,19.2,694,29.903]],["name/19-5",[]],["text/19-5",[]],["component/19-5",[]],["title/19",[27,28.215,40,19.2]],["name/19",[860,1.252]],["text/19",[0,0.826,2,1.147,3,1.16,4,0.796,11,3.564,13,2.081,17,1.788,28,0.75,30,2.973,40,2.984,42,0.954,43,1.885,55,2.595,65,3.963,73,1.979,74,0.934,79,0.813,83,0.994,87,0.894,90,0.95,100,0.633,109,1.17,111,0.887,122,1.34,125,2.095,128,1.189,130,0.689,141,2.424,153,0.945,167,0.989,175,1.12,190,0.894,191,0.98,196,0.891,207,0.831,210,1.047,216,4.241,217,0.729,254,1.914,259,1.631,267,2.129,277,2.694,291,0.865,296,1.084,309,1.098,316,1.198,351,2.052,354,2.382,356,0.791,361,0.718,372,0.897,397,1.553,439,1.198,478,0.98,552,2.781,656,1.098,693,1.112,694,3.152,702,1.105,712,4.614,765,1.44,804,2.974,859,4.401,860,3.199,861,2.147,862,2.603,863,3.253,864,2.652,865,1.559,866,1.417,867,1.938,868,1.524,869,2.078,870,5.138,871,3.129,872,1.17,873,1.23,874,1.376,875,3.735,876,1.376,877,2.298,878,1.559,879,1.189,880,1.559,881,1.559]],["component/19",[2,0.423,3,0.373]],["title/20-1",[0,11.375,37,20.004,277,19.819,361,17.564]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[188,29.601,189,33.305]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[858,50.816]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[0,16.243,694,29.903]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20-5",[0,16.243,882,51.173]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["title/20",[0,16.243,27,28.215]],["name/20",[0,0.605]],["text/20",[0,2.772,2,1.416,3,1.25,13,1.483,17,1.275,30,1.966,40,0.939,43,1.343,55,0.946,65,3.556,73,1.41,87,1.527,111,1.515,116,1.478,125,3.132,150,3.519,204,1.288,217,1.245,230,2.681,254,3.03,259,1.569,277,2.278,296,3.884,322,1.651,351,1.462,356,2.224,373,1.732,385,3.491,397,1.494,552,3.977,601,2.047,693,1.9,694,3.067,712,5.868,804,2.88,823,4.012,852,2.163,860,3.994,867,1.864,871,3.03,883,2.163,884,3.767,885,2.662,886,2.142,887,2.55,888,5.459,889,2.55,890,2.603,891,2.603,892,2.603,893,2.603,894,2.55,895,2.603,896,2.603,897,2.603,898,2.603,899,2.163,900,2.603,901,2.603]],["component/20",[2,0.423,3,0.373]],["title/21",[13,24.977,73,23.754,100,18.208]],["name/21",[5,1.313]],["text/21",[0,2.544,2,2.022,3,1.85,4,1.814,11,1.012,13,3.075,26,1.124,27,1.075,30,3.425,36,3.215,37,1.089,40,3.158,43,2.786,55,2.206,73,2.925,85,1.164,95,3.766,100,2.749,130,1.572,140,1.418,141,0.97,150,1.932,157,1.218,158,1.33,171,1.371,172,1.148,200,1.156,213,1.218,216,2.605,217,2.18,230,1.269,287,1.534,290,1.023,293,1.172,313,1.238,331,1.227,336,1.194,354,1.323,360,1.292,373,1.35,391,1.491,407,1.569,418,1.317,446,1.336,478,1.304,511,1.638,658,1.386,694,3.977,696,1.144,712,5.528,751,1.435,823,1.491,851,1.704,852,1.686,861,1.609,873,1.638,874,1.831,877,1.722,902,1.987,903,2.075,904,1.762,905,1.95,906,1.831,907,1.95,908,1.741,909,1.917,910,1.807,911,2.075]],["component/21",[2,0.423,3,0.373]],["title/22-1",[350,30.143]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[16,50.102]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[1,58.129]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[2,13.805,3,12.182]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22-5",[40,24.428]],["name/22-5",[]],["text/22-5",[]],["component/22-5",[]],["title/22-6",[113,25.725,692,34.882]],["name/22-6",[]],["text/22-6",[]],["component/22-6",[]],["title/22",[474,40.538,912,53.218]],["name/22",[474,0.845,912,1.11]],["text/22",[0,0.786,1,0.859,2,1.693,3,1.241,4,0.523,10,2.905,11,0.499,16,5.418,17,0.905,19,0.88,27,2.482,28,0.493,30,1.182,37,0.537,38,0.832,40,1.689,42,1.157,43,3.11,46,2.157,47,0.546,53,1.117,55,2.876,64,2.08,68,1.821,73,1.738,76,1.162,84,1.995,87,0.587,88,0.673,89,1.962,90,0.624,92,1.755,95,3.901,97,1.681,98,0.917,100,1.07,104,1.117,106,0.986,111,1.076,113,2.263,115,1.081,121,0.891,129,1.311,130,1.701,135,0.638,136,2.08,140,0.699,141,1.799,142,0.885,149,0.731,150,1.028,154,0.691,156,0.65,157,0.601,158,0.656,176,0.459,181,0.611,183,1.493,184,1.142,185,0.726,199,1.236,201,0.824,204,0.495,217,2.032,250,0.736,264,1.042,277,1.37,290,1.618,305,1.324,306,0.476,311,0.721,314,1.378,336,1.089,342,0.626,350,0.823,354,0.653,356,0.52,358,2.212,360,0.638,401,0.736,403,0.824,417,0.946,418,0.65,446,0.659,468,2.241,474,1.408,537,0.832,541,0.691,544,0.841,545,0.891,641,1.398,651,0.647,668,0.676,669,0.808,673,1.463,679,1.693,681,0.962,692,1.212,696,0.564,705,1.419,708,1.473,714,1.218,715,1.142,732,0.618,739,0.708,747,0.88,769,0.931,771,0.946,779,0.816,784,0.981,799,0.859,800,0.904,815,1.537,822,0.85,833,0.946,858,0.751,863,0.891,872,0.768,883,0.832,905,0.962,912,1.001,913,1.849,914,1.08,915,1.224,916,1.224,917,1.117,918,0.917,919,2.26,920,1.856,921,0.962,922,1.939,923,4.597,924,1.117,925,1.117,926,0.891,927,1.224,928,1.224,929,1.224,930,1.162,931,1.08,932,0.691,933,2.477,934,1.024,935,1.117,936,1.224,937,1.05,938,1.05,939,1.719,940,1.024,941,3.15,942,1.693,943,1.224,944,1.162,945,0.962,946,1.162,947,1.162,948,1.224,949,1.08,950,1.224,951,1.224,952,1.024,953,1.05,954,1.08,955,0.981,956,1.224,957,1.224,958,0.931,959,1.224,960,1.224,961,1.224,962,0.751]],["component/22",[2,0.423,3,0.373]],["title/23",[55,19.337,79,28.389]],["name/23",[5,1.313]],["text/23",[2,1.99,3,1.756,4,2.314,8,3.999,14,3.946,20,3.79,39,3.455,40,1.598,55,3.068,79,4.092,87,2.599,91,4.186,92,3.548,93,4.119,193,2.199,293,2.56,307,2.994,319,2.37,350,2.887,474,3.374,696,2.498,859,3.848,871,3.133,912,4.43,921,4.26,926,3.946,963,4.531,964,5.416,965,4.43,966,4.186,967,5.416,968,5.416,969,5.416,970,4.186,971,5.145,972,5.416,973,4.26,974,5.416]],["component/23",[2,0.423,3,0.373]],["title/24-1",[350,23.693,649,40.538]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[0,20.666]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24-3",[2,13.805,3,12.182]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["title/24-4",[399,43.374,400,43.374]],["name/24-4",[]],["text/24-4",[]],["component/24-4",[]],["title/24-5",[517,42.583,975,59.374]],["name/24-5",[]],["text/24-5",[]],["component/24-5",[]],["title/24-6",[541,36.768,838,34.545]],["name/24-6",[]],["text/24-6",[]],["component/24-6",[]],["title/24",[921,51.173,926,47.402]],["name/24",[921,1.067,926,0.989]],["text/24",[0,2.653,2,1.323,3,1.168,4,0.685,10,3.2,11,0.654,17,1.159,27,0.695,29,0.784,30,1.086,37,1.27,38,1.09,40,0.854,43,1.221,44,1.031,46,1.358,54,1.763,55,2.021,62,0.832,64,1.91,70,1.415,73,0.711,78,1.635,79,0.699,85,1.855,90,0.817,97,1.058,100,0.545,106,0.699,110,1.83,113,0.634,121,1.168,130,1.463,131,1.368,136,1.583,149,1.727,157,1.941,171,2.675,183,3.196,184,2.445,186,0.828,193,1.174,194,1.184,195,1.184,204,0.649,205,0.896,215,1.059,221,1.616,230,0.821,264,1.334,265,0.868,285,0.832,287,0.991,307,0.886,310,1.616,312,1.184,313,0.8,314,0.977,320,1.261,336,0.772,355,0.951,361,0.618,366,0.922,399,4.158,400,3.727,401,0.964,415,1.168,434,1.201,458,1.09,463,0.977,467,0.999,468,1.654,475,1.861,478,0.843,483,1.031,490,0.999,517,2.587,541,4.12,548,2.799,555,2.275,600,1.239,641,2.992,647,2.564,651,2.089,671,1.04,672,1.126,673,0.744,703,1.845,715,1.462,737,1.014,749,1.947,757,1.139,773,1.184,775,1.239,822,1.113,838,3.871,886,1.079,913,1.311,921,2.275,924,1.463,926,2.879,942,1.201,962,3.432,976,1.415,977,1.375,978,1.375,979,1.603,980,1.603,981,1.261,982,1.375,983,1.523,984,1.523,985,1.285,986,1.523,987,2.748,988,1.603,989,2.893,990,2.64,991,2.893,992,1.603,993,1.375,994,1.375,995,1.415,996,1.603,997,1.603,998,1.603,999,1.415,1000,1.341,1001,1.603,1002,1.523,1003,1.101,1004,1.201,1005,1.219,1006,1.603,1007,1.341,1008,2.553,1009,1.113,1010,1.375,1011,2.64,1012,1.463,1013,1.415,1014,1.415,1015,1.463,1016,1.285]],["component/24",[2,0.423,3,0.373]],["title/25-1",[350,30.143]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25-2",[1,58.129]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["title/25-3",[966,63.984]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["title/25-4",[799,58.129]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["title/25-5",[40,24.428]],["name/25-5",[]],["text/25-5",[]],["component/25-5",[]],["title/25",[965,53.218,966,50.292]],["name/25",[965,1.11,966,1.049]],["text/25",[0,0.99,1,1.608,2,0.986,3,0.87,10,2.636,11,0.507,16,1.386,17,2.101,23,1.287,26,1.038,27,3.066,28,0.922,38,1.557,40,0.941,43,0.524,46,2.181,47,0.554,49,2.022,52,1.133,55,2.302,65,0.454,68,0.576,72,0.543,74,3.134,78,1.294,88,2.181,89,0.773,90,0.633,97,1.919,98,1.716,99,0.605,101,0.798,113,0.491,124,0.552,129,0.517,130,0.848,132,1.287,136,1.277,141,0.896,150,0.565,157,1.125,158,0.665,176,1.744,181,0.619,183,3.465,184,2.651,186,0.641,193,0.504,198,0.732,199,0.679,200,2.165,201,0.835,204,0.503,217,2.448,221,0.694,250,0.746,264,4.487,281,0.872,285,2.057,291,0.576,333,0.722,337,0.882,350,0.452,401,0.746,414,0.627,434,0.93,467,0.773,468,0.71,474,0.773,483,1.473,490,0.773,499,0.773,508,2.667,515,0.633,517,2.596,521,1.038,544,0.853,629,0.904,641,2.873,649,0.773,656,0.732,660,1.542,664,0.805,674,2.308,691,1.527,692,0.665,703,0.792,708,1.491,714,1.234,715,0.627,718,1.801,719,1.801,728,0.812,749,0.835,757,0.882,777,1.965,779,0.827,799,4.392,809,0.785,822,0.862,879,0.792,886,0.835,914,1.096,917,1.133,922,1.965,925,2.09,926,0.904,931,1.096,942,0.93,962,2.435,965,1.873,966,7.752,975,3.619,978,1.065,981,3.654,982,1.065,1005,1.742,1017,3.029,1018,1.241,1019,1.241,1020,2.022,1021,1.096,1022,2.29,1023,1.241,1024,1.241,1025,1.133,1026,1.038,1027,5.101,1028,0.835,1029,1.038,1030,1.096,1031,3.029,1032,1.133,1033,2.29,1034,1.179,1035,1.133,1036,1.241,1037,1.241,1038,1.241,1039,1.241,1040,1.241,1041,1.241,1042,3.966,1043,0.835,1044,1.179,1045,2.29,1046,1.916,1047,1.179,1048,1.096,1049,1.096,1050,0.893,1051,1.241,1052,1.241,1053,1.241,1054,1.179,1055,1.179,1056,0.53,1057,1.241,1058,1.179,1059,1.241,1060,1.038]],["component/25",[2,0.423,3,0.373]],["title/26-1",[418,43.951]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[118,48.918,814,30.092,1061,36.514]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26-3",[694,38.044]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["title/26-4",[216,38.714]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["title/26-5",[0,20.666]],["name/26-5",[]],["text/26-5",[]],["component/26-5",[]],["title/26-6",[0,13.38,42,27.434,92,23.984]],["name/26-6",[]],["text/26-6",[]],["component/26-6",[]],["title/26-7",[0,16.243,1062,57.432]],["name/26-7",[]],["text/26-7",[]],["component/26-7",[]],["title/26-8",[0,15.604,331,19.613,1061,31.755,1063,42.637]],["name/26-8",[]],["text/26-8",[]],["component/26-8",[]],["title/26-9",[10,32.645]],["name/26-9",[]],["text/26-9",[]],["component/26-9",[]],["title/26-10",[136,26.064,737,41.173]],["name/26-10",[]],["text/26-10",[]],["component/26-10",[]],["title/26-11",[176,24.42,1064,51.173]],["name/26-11",[]],["text/26-11",[]],["component/26-11",[]],["title/26-12",[10,25.659,1065,65.064]],["name/26-12",[]],["text/26-12",[]],["component/26-12",[]],["title/26",[94,35.969,787,42.971]],["name/26",[94,0.75,787,0.896]],["text/26",[0,2.671,2,1.526,3,1.305,10,1.636,13,0.364,17,0.313,19,0.561,20,0.373,21,0.568,23,0.833,24,0.425,26,0.354,27,0.643,28,1.085,30,1.011,37,0.343,38,0.531,40,1.986,42,1.084,43,0.894,47,0.348,48,0.506,55,1.572,68,0.362,72,0.649,73,0.938,74,1.35,75,1.99,77,0.423,79,1.81,83,0.416,85,0.994,86,0.511,87,0.374,91,0.603,92,1.857,93,1.127,94,1.171,95,2.506,99,0.38,100,0.265,105,0.366,106,0.34,109,0.49,113,0.837,115,0.509,118,1.892,120,0.554,124,0.941,125,0.366,126,0.904,127,0.479,129,0.617,130,2.079,131,0.369,132,0.438,134,0.874,136,2.488,140,1.21,141,0.305,150,0.355,152,0.828,153,0.396,157,0.728,158,1.727,161,0.416,164,0.38,165,1.54,171,1.171,172,0.686,176,2.432,179,0.531,181,1.345,184,0.749,190,0.374,191,0.41,196,1.012,200,0.691,203,0.443,204,0.857,207,0.661,216,1.733,217,1.055,250,0.891,257,0.434,262,0.434,265,0.423,270,0.542,277,0.645,282,1.291,287,0.483,292,0.436,298,0.469,311,0.874,313,1.345,317,1.679,328,1.282,331,2.444,334,0.536,337,1.915,338,1.586,348,0.49,349,0.542,350,0.981,351,0.681,354,1.13,356,1.368,360,0.772,361,0.301,368,0.457,370,1.408,373,0.807,394,0.593,396,0.625,397,0.696,404,0.511,414,1.362,418,4.037,419,0.359,445,0.585,451,1.066,457,0.874,461,0.502,464,0.979,465,0.917,466,0.585,467,0.486,468,1.21,471,0.614,531,0.454,606,1.351,611,0.49,643,0.879,651,0.783,654,1.642,661,0.52,666,1.374,684,0.457,690,0.506,692,0.418,694,2.978,702,0.463,703,0.946,704,0.897,705,0.49,706,0.483,708,0.99,710,0.874,712,1.424,713,1.08,714,0.799,715,1.07,716,1.225,725,0.576,726,0.441,728,0.511,731,0.576,732,0.394,735,0.979,737,1.705,744,1.697,747,0.561,749,0.525,750,0.542,751,0.451,752,1.609,765,1.637,766,1.188,768,0.638,773,0.576,777,1.272,778,0.712,781,0.593,796,0.576,798,1.029,801,0.542,813,1.665,822,0.542,824,0.625,841,0.568,877,1.029,899,0.531,904,0.554,942,0.585,970,0.603,978,0.669,1003,1.018,1007,1.771,1028,0.525,1046,0.653,1055,0.741,1062,1.309,1064,0.614,1066,0.712,1067,0.78,1068,0.78,1069,0.84,1070,1.066,1071,2.312,1072,1.029,1073,0.84,1074,0.78,1075,1.637,1076,0.712,1077,1.24,1078,0.988,1079,0.603,1080,0.638,1081,1.353,1082,0.689,1083,0.638,1084,1.066,1085,0.669,1086,0.84,1087,0.78,1088,0.576,1089,0.84,1090,0.84,1091,0.585,1092,0.603,1093,0.653,1094,1.213,1095,0.84,1096,0.84,1097,0.689,1098,0.84,1099,0.614,1100,0.84,1101,0.653,1102,1.127,1103,1.08,1104,0.614,1105,0.84,1106,1.595,1107,0.712,1108,0.593,1109,0.689,1110,0.84,1111,0.554,1112,0.593,1113,0.84,1114,0.525,1115,0.593,1116,0.625,1117,0.78,1118,0.84,1119,0.84]],["component/26",[2,0.423,3,0.373]],["title/27-1",[161,34.712,1120,54.43]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[115,18.399,161,28.593,692,28.733]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[143,21.937,407,33.915,1121,42.152]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27-4",[673,38.442]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["title/27-5",[143,21.937,304,23.313,1122,35.396]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["title/27-6",[429,55.183]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["title/27-7",[192,43.335]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["title/27",[217,25.463,787,42.971]],["name/27",[217,0.531,787,0.896]],["text/27",[2,0.847,3,0.748,21,1.183,35,0.933,43,1.235,55,2.853,65,0.594,68,0.754,87,0.779,88,0.893,106,1.276,107,0.82,115,3.214,116,1.359,124,1.301,129,0.676,143,2.308,161,2.13,171,0.897,190,0.779,191,1.539,192,3.586,196,0.776,203,0.923,204,1.978,207,2.516,210,4.126,213,1.436,216,0.759,217,2.461,258,2.026,290,0.67,304,0.706,319,0.71,326,1.044,331,0.803,350,1.065,359,0.883,361,1.539,368,2.339,372,0.782,373,0.883,375,1.301,397,0.762,407,3.091,411,0.989,419,1.344,426,0.951,429,4.192,463,0.989,486,1.328,510,0.963,511,1.072,552,3.775,596,1.703,656,2.879,668,2.207,673,0.754,692,2.619,695,2.613,702,2.369,706,1.809,726,0.917,732,0.82,766,1.301,779,1.082,787,1.932,801,2.031,802,2.054,804,2.686,857,1.796,871,1.692,933,1.277,1028,1.093,1077,2.447,1082,1.433,1084,2.104,1120,4.086,1121,3.842,1122,2.637,1123,1.542,1124,1.481,1125,1.542,1126,2.67,1127,1.542,1128,1.542,1129,1.542,1130,1.542,1131,1.542,1132,1.301,1133,1.542,1134,1.481,1135,1.542,1136,1.542,1137,1.277,1138,5.877,1139,6.508,1140,1.542,1141,1.759,1142,2.261,1143,1.036,1144,2.779,1145,1.481,1146,1.542,1147,1.542,1148,1.542,1149,1.542,1150,1.542,1151,1.542,1152,1.542,1153,1.542,1154,1.542,1155,1.542,1156,1.542,1157,1.542,1158,1.542,1159,1.542,1160,1.542,1161,1.542,1162,1.542,1163,1.542,1164,1.542,1165,1.542,1166,1.542,1167,1.542,1168,1.542,1169,1.542,1170,1.542,1171,1.542,1172,1.542,1173,1.542,1174,1.542,1175,1.542,1176,1.542]],["component/27",[2,0.423,3,0.373]],["title/28-1",[142,20.974,832,29.472,932,30.287]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[130,30.633]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28",[]],["name/28",[142,0.369,787,0.622,932,0.532]],["text/28",[2,1.183,3,1.044,28,2.246,38,2.336,44,2.21,55,2.646,72,2.441,78,1.942,88,3.066,92,3.149,97,1.257,100,1.167,113,2.205,115,2.78,124,1.528,129,2.929,130,2.604,137,1.953,142,4.45,150,3.202,169,2.025,171,1.899,178,4.443,191,1.807,192,2.919,196,2.665,198,2.025,258,2.83,290,1.418,296,2,304,1.495,309,2.025,313,1.715,361,1.325,373,1.87,510,2.038,517,4.606,587,2.503,678,3.587,685,3.352,796,2.537,797,2.386,798,2.386,832,3.87,932,5.389,1026,2.874,1085,4.783,1177,2.874,1178,2.441,1179,2.229,1180,2.81,1181,2.753,1182,3.033,1183,2.81,1184,3.135]],["component/28",[2,0.423,3,0.373]],["title/29-1",[419,38.044]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[742,32.986]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29",[115,18.399,129,22.306,144,29.168]],["name/29",[115,0.466,144,0.739]],["text/29",[0,2.608,2,0.37,3,0.326,10,1.23,17,1.696,40,1.748,42,0.893,55,1.761,56,1.141,65,1.885,67,1.07,72,0.763,73,0.773,79,0.761,83,0.93,85,0.818,87,0.837,99,0.85,113,0.689,115,1.769,125,1.987,129,0.726,130,0.645,132,0.98,133,0.985,141,0.682,143,1.277,144,3.582,150,0.793,152,0.974,154,2.912,156,0.926,157,2.909,165,0.997,169,1.028,176,2.47,190,2.842,204,1.714,210,2.895,216,1.98,221,0.974,224,1.805,252,1.131,257,2.353,290,0.72,319,0.763,337,1.239,339,1.288,342,0.893,350,0.635,355,1.85,356,2.188,360,0.909,361,0.672,372,2.039,376,1.103,404,1.141,414,0.881,419,3.711,424,1.063,429,2.08,464,1.152,483,1.122,515,0.889,581,1.174,585,3.084,598,1.426,654,1.59,673,2.751,695,1.141,708,1.459,714,0.939,732,2.139,737,1.103,742,2.361,752,1.863,761,1.07,770,1.306,775,1.348,832,1.715,869,1.095,883,1.185,962,1.07,981,1.371,1016,1.397,1029,1.459,1043,1.174,1056,1.808,1078,1.162,1084,1.254,1092,1.348,1094,1.426,1111,1.239,1112,2.373,1122,1.152,1141,2.544,1185,1.539,1186,1.371,1187,1.539,1188,1.539,1189,2.754,1190,2.304,1191,1.306,1192,1.539,1193,1.211,1194,1.086,1195,1.539,1196,1.397,1197,1.254,1198,1.539,1199,1.539,1200,1.539,1201,1.539,1202,2.754,1203,2.754,1204,1.397,1205,1.459,1206,1.371,1207,1.539,1208,1.539,1209,1.539,1210,1.539,1211,1.539,1212,1.539,1213,1.459,1214,1.539,1215,3.462,1216,2.754,1217,1.539,1218,1.539,1219,1.539,1220,1.539,1221,2.562,1222,1.539,1223,1.426,1224,1.426,1225,1.539,1226,1.539]],["component/29",[2,0.423,3,0.373]],["title/30-1",[141,20.974,143,21.937,207,23.907]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[515,33.16,962,39.942]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30-3",[673,38.442]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["title/30-4",[1056,35.362]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["title/30-5",[1206,51.173,1221,39.381]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["title/30-6",[450,63.984]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["title/30-7",[13,24.977,73,23.754,1227,42.152]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["title/30-8",[13,24.977,73,23.754,851,36.817]],["name/30-8",[]],["text/30-8",[]],["component/30-8",[]],["title/30",[115,18.399,129,22.306,143,21.937]],["name/30",[115,0.466,143,0.555]],["text/30",[0,2.554,2,0.723,3,0.361,4,0.823,17,0.771,28,1.846,40,2.065,42,0.986,47,0.859,55,2.249,65,3.743,68,0.894,71,2.483,72,2.006,77,1.043,90,0.981,92,0.862,111,0.917,113,0.761,115,1.17,116,0.894,124,0.856,127,2.814,129,1.418,130,1.261,133,1.088,134,1.135,140,1.101,141,2.168,143,3.629,165,1.948,169,2.008,172,2.563,178,1.7,187,1.114,192,1.008,203,1.094,204,1.38,206,0.942,207,0.859,216,3.273,217,0.754,228,2.211,258,2.326,290,1.406,304,0.838,305,1.996,306,1.327,336,0.927,342,0.986,356,1.447,397,2.151,407,2.156,423,1.442,424,1.174,441,1.135,462,1.239,463,1.174,475,1.239,494,1.337,500,1.442,596,3.685,651,1.018,673,2.94,685,2.048,686,1.2,695,2.23,708,0.901,710,2.008,801,1.337,802,1.352,814,1.272,860,0.994,869,2.139,872,1.209,879,1.228,1056,0.823,1088,2.516,1194,5.021,1196,1.543,1228,3.433,1229,1.757,1230,1.757,1231,1.757,1232,1.465,1233,1.757,1234,2.948,1235,1.757,1236,1.514,1237,1.757,1238,1.757,1239,3.692,1240,1.465,1241,1.757,1242,1.757,1243,2.731,1244,3.109,1245,3.109,1246,3.109,1247,1.757,1248,3.109,1249,1.757,1250,1.757,1251,1.757,1252,1.757,1253,1.757,1254,1.757]],["component/30",[2,0.423,3,0.373]],["title/31-1",[0,15.604,95,20.108,107,20.023,1061,31.755]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[130,30.633]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[673,38.442]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31-4",[178,26.745,258,27.198,685,32.217]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["title/31-5",[686,51.575]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["title/31-6",[129,27.08,1255,44.235]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["title/31-7",[3,10.035,1190,39.578,1255,36.438]],["name/31-7",[]],["text/31-7",[]],["component/31-7",[]],["title/31-8",[10,25.659,515,33.16]],["name/31-8",[]],["text/31-8",[]],["component/31-8",[]],["title/31-9",[42,23.323,65,16.667,152,25.462,654,23.222]],["name/31-9",[]],["text/31-9",[]],["component/31-9",[]],["title/31-10",[162,38.105,176,24.42]],["name/31-10",[]],["text/31-10",[]],["component/31-10",[]],["title/31-11",[726,30.287,1179,34.77,1255,36.438]],["name/31-11",[]],["text/31-11",[]],["component/31-11",[]],["title/31-12",[10,25.659,515,33.16]],["name/31-12",[]],["text/31-12",[]],["component/31-12",[]],["title/31-13",[130,19.833,832,29.472,932,30.287]],["name/31-13",[]],["text/31-13",[]],["component/31-13",[]],["title/31",[115,18.399,129,22.306,142,20.974]],["name/31",[115,0.466,142,0.531]],["text/31",[0,2.823,2,0.8,3,0.939,10,1.191,17,0.866,19,0.838,28,0.87,29,0.57,40,0.891,42,2.268,44,0.75,46,0.547,47,0.52,48,0.756,55,2.227,65,1.379,72,0.946,79,0.943,86,1.414,87,1.037,92,0.522,95,3.265,106,0.509,107,0.589,111,1.029,113,0.461,115,1.521,116,0.541,124,0.518,125,0.547,128,0.744,129,1.257,130,2.653,133,0.659,136,1.21,140,0.666,141,0.456,142,3.653,149,0.696,150,1.374,152,2.476,154,0.659,155,2.159,157,0.572,158,0.625,162,2.208,165,1.235,169,1.274,172,1,173,0.763,176,1.883,178,1.507,187,0.674,190,0.559,191,0.613,192,0.61,196,1.033,204,0.472,207,0.964,213,0.572,216,1.764,217,1.476,248,0.732,250,0.701,258,1.097,265,0.631,290,1.556,291,1.004,293,0.551,304,0.507,305,0.683,311,0.687,313,1.507,318,0.597,319,0.51,321,0.721,326,0.75,331,1.495,336,0.561,350,0.424,351,0.536,356,1.283,361,0.449,368,0.683,397,0.547,401,0.701,414,0.589,424,0.71,437,0.777,439,0.75,441,0.687,457,0.687,458,0.793,465,0.721,478,0.613,510,0.691,515,3.063,552,1.553,611,0.732,641,0.721,643,0.691,651,0.616,654,1.922,655,2.679,663,0.726,672,0.819,685,0.701,696,1.393,706,0.721,708,0.545,710,2.957,720,0.873,725,1.596,726,3.636,739,0.674,740,0.744,750,0.809,751,0.674,762,0.77,768,0.953,798,0.809,801,0.809,802,0.819,804,1.188,827,0.777,832,1.188,836,1.554,854,0.801,855,1.554,857,1.854,860,0.602,867,0.683,871,1.25,872,0.732,908,0.819,932,1.221,937,1,942,2.263,970,0.901,1066,1.064,1078,1.441,1088,2.231,1102,0.887,1103,0.849,1104,0.917,1122,0.77,1141,0.701,1143,0.744,1177,0.975,1179,0.756,1180,0.953,1181,0.934,1190,1.596,1191,0.873,1193,0.809,1255,3.411,1256,0.861,1257,1.107,1258,0.849,1259,0.901,1260,1.107,1261,1.107,1262,1.107,1263,1.107,1264,1.972,1265,0.917,1266,1.064,1267,0.873,1268,1.107,1269,3.582,1270,2.053,1271,2.87,1272,2.053,1273,1.107,1274,1.107,1275,1.107,1276,0.887,1277,1,1278,1]],["component/31",[2,0.423,3,0.373]],["title/32",[11,26.559,518,41.173]],["name/32",[5,1.313]],["text/32",[2,2.4,3,2.118,11,3.738,55,2.722,113,3.621,368,5.363,518,5.795,715,4.628,821,6.763]],["component/32",[2,0.423,3,0.373]],["title/33",[100,18.208,143,21.937,176,20.116]],["name/33",[100,0.461,176,0.509]],["text/33",[0,2.1,28,3.388,72,3.682,90,4.288,100,2.858,107,4.251,115,2.888,141,4.62,143,4.39,176,4.431,708,3.934]],["component/33",[2,0.423,3,0.373]],["title/34",[100,18.208,183,35.396,184,27.082]],["name/34",[100,0.461,184,0.686]],["text/34",[0,2.135,2,1.815,15,4.541,36,4.166,40,2.524,100,2.905,136,4.341,149,5.106,154,4.833,184,4.321,290,3.53,311,5.04,1279,7.154,1280,5.938]],["component/34",[2,0.423,3,0.373]],["title/35-1",[217,32.395]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["title/35-2",[511,42.971,1281,55.815]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["title/35",[100,22.105,135,33.905]],["name/35",[100,0.461,135,0.707]],["textcomponent/35",[2,0.423,3,0.373]],["title/36-1",[130,30.633]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["title/36-2",[1288,66.337]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["title/36-3",[668,35.969,1289,48.74]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["title/36-4",[141,25.463,259,32.076]],["name/36-4",[]],["text/36-4",[]],["component/36-4",[]],["title/36-5",[136,26.064,162,38.105]],["name/36-5",[]],["text/36-5",[]],["component/36-5",[]],["title/36-6",[10,25.659,732,32.878]],["name/36-6",[]],["text/36-6",[]],["component/36-6",[]],["title/36-7",[137,30.46,152,29.951,622,31.587]],["name/36-7",[]],["text/36-7",[]],["component/36-7",[]],["title/36-8",[684,38.105,1290,53.218]],["name/36-8",[]],["text/36-8",[]],["component/36-8",[]],["title/36-9",[176,24.42,515,33.16]],["name/36-9",[]],["text/36-9",[]],["component/36-9",[]],["title/36-10",[130,19.833,832,29.472,932,30.287]],["name/36-10",[]],["text/36-10",[]],["component/36-10",[]],["title/36",[100,22.105,142,25.463]],["name/36",[100,0.461,142,0.531]],["text/36",[0,1.381,2,0.335,3,0.296,10,1.125,11,2.258,17,1.916,23,0.887,28,1.149,30,0.593,40,0.842,47,0.704,55,3.051,65,1.044,72,0.691,77,0.855,78,1.612,79,2.087,80,1.122,86,1.033,90,1.454,100,0.969,106,0.689,109,0.991,113,1.543,116,0.733,124,0.702,126,0.962,130,1.77,131,1.349,136,1.916,137,0.897,141,1.527,142,4.018,150,0.718,152,1.594,154,2.205,157,1.401,161,0.842,162,3.945,173,1.867,176,1.795,184,1.442,192,1.493,193,0.641,196,0.755,204,1.936,205,0.882,207,1.272,213,2.348,216,0.738,230,0.808,248,0.991,257,0.877,259,1.406,290,1.974,291,2.221,293,0.746,303,1.15,305,1.671,309,0.93,313,1.947,318,0.808,319,0.691,331,1.412,350,1.039,356,0.67,360,0.823,372,1.374,390,0.913,391,0.949,414,1.442,419,0.726,478,1.5,515,1.454,544,1.084,596,2.784,622,1.681,654,3.147,666,1.024,668,3.414,673,0.733,684,2.801,696,1.316,702,0.936,704,0.955,708,2.587,715,3.121,726,1.612,732,0.798,738,1.135,739,1.65,743,3.188,814,1.884,832,1.569,854,2.681,857,0.969,860,3.189,872,0.991,879,1.007,932,1.612,1108,1.201,1178,2.027,1197,1.135,1236,1.242,1276,1.201,1278,1.354,1280,2.71,1288,1.265,1289,2.137,1290,3.192,1291,1.441,1292,2.333,1293,1.22,1294,1.321,1295,2.17,1296,1.441,1297,1.441,1298,1.441,1299,1.579,1300,1.441,1301,2.603,1302,1.441,1303,1.441,1304,1.441]],["component/36",[2,0.423,3,0.373]],["title/37-1",[673,38.442]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37-2",[668,29.629,1289,40.148,1293,41.427]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["title/37-3",[125,25.155,715,27.082,743,35.728]],["name/37-3",[]],["text/37-3",[]],["component/37-3",[]],["title/37",[100,22.105,932,36.768]],["name/37",[100,0.461,1305,1.164]],["text/37",[0,0.664,17,1.065,28,3.792,55,2.916,65,1.649,72,1.164,79,1.966,92,1.19,99,1.295,100,0.903,101,1.71,107,1.343,115,1.547,124,1.182,125,3.242,130,0.984,136,1.805,141,1.764,143,2.401,150,1.209,154,1.502,158,1.425,174,2.691,178,1.327,184,1.343,196,1.271,216,2.108,224,1.538,257,1.478,259,2.892,274,1.74,290,2.421,305,1.557,313,1.327,350,0.968,354,1.418,356,1.129,361,1.737,372,1.28,441,1.567,446,1.432,457,1.567,475,1.71,478,1.398,534,1.62,596,3.414,601,1.71,654,1.355,667,2.055,668,5.206,673,1.235,678,1.71,684,1.557,695,1.74,708,1.243,715,4.245,716,1.538,727,3.376,743,5.154,918,1.991,932,3.904,1056,2.506,1099,2.091,1108,2.022,1122,1.756,1141,1.598,1142,5.34,1194,3.655,1280,1.846,1289,3.376,1292,2.174,1293,3.483,1306,2.347,1307,2.525,1308,2.426,1309,2.86,1310,4.849,1311,2.86,1312,2.86,1313,2.86,1314,2.525,1315,3.866,1316,2.224,1317,2.525]],["component/37",[2,0.423,3,0.373]],["title/38-1",[136,26.064,737,41.173]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[0,16.243,136,26.064]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38-3",[1318,62.01]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["title/38-4",[654,42.188]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["title/38-5",[130,24.078,136,26.064]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["title/38-6",[1318,62.01]],["name/38-6",[]],["text/38-6",[]],["component/38-6",[]],["title/38-7",[654,42.188]],["name/38-7",[]],["text/38-7",[]],["component/38-7",[]],["title/38-8",[0,13.38,136,21.469,336,25.812]],["name/38-8",[]],["text/38-8",[]],["component/38-8",[]],["title/38-9",[1318,62.01]],["name/38-9",[]],["text/38-9",[]],["component/38-9",[]],["title/38-10",[654,42.188]],["name/38-10",[]],["text/38-10",[]],["component/38-10",[]],["title/38-11",[176,31.069]],["name/38-11",[]],["text/38-11",[]],["component/38-11",[]],["title/38",[100,28.123]],["name/38",[100,0.824]],["text/38",[0,2.66,2,1.654,3,1.316,10,1.271,11,0.393,15,0.961,20,0.865,36,0.469,37,0.423,40,1.894,42,3.109,43,0.407,47,0.43,65,0.352,68,1.775,79,0.42,85,0.849,86,1.184,89,0.6,94,1,95,0.489,99,0.881,100,0.615,120,3.098,125,3.548,126,1.559,127,4.64,129,0.401,130,2.797,134,0.568,136,4.09,141,0.708,142,0.377,149,1.08,152,0.538,154,0.545,155,0.469,158,0.517,161,0.965,165,0.551,169,0.568,173,0.631,176,1.637,200,2.032,202,1.355,204,0.733,207,0.43,216,2.666,221,1.011,224,0.557,252,1.659,290,0.398,291,0.447,304,0.419,305,1.498,311,0.568,317,0.6,319,0.422,321,3.525,333,1.053,336,0.464,350,0.351,351,1.482,356,0.768,371,0.827,397,1.2,414,2.204,441,1.9,451,0.693,457,1.066,494,7.454,510,0.572,547,0.772,611,2.738,643,0.572,654,2.698,657,0.625,660,0.649,661,0.642,696,0.834,708,0.451,710,0.568,714,0.519,732,0.487,735,2.88,737,1.145,747,0.693,752,1.08,755,0.758,757,0.685,758,1.889,770,0.722,779,0.642,781,0.733,787,1.689,856,2.011,872,0.605,942,0.722,962,0.592,990,0.879,1007,0.806,1064,0.758,1065,0.964,1078,0.642,1088,0.712,1094,0.788,1101,0.806,1102,0.733,1103,0.702,1112,1.945,1191,1.916,1213,0.806,1239,7.207,1267,0.722,1280,0.669,1318,3.633,1319,0.879,1320,0.772,1321,0.964,1322,2.557,1323,0.851,1324,2.557,1325,2.846,1326,0.851,1327,2.257,1328,2.557,1329,2.557,1330,2.557,1331,0.964,1332,0.964,1333,0.851,1334,0.827,1335,0.827,1336,0.964,1337,1.037,1338,0.788,1339,1.037]],["component/38",[2,0.423,3,0.373]],["title/39-1",[1137,51.173,1340,50.292]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["title/39-2",[11,21.877,40,15.816,426,31.388]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["title/39-3",[40,19.2,1341,43.795]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["title/39",[40,19.2,684,38.105]],["name/39",[27,0.409,860,0.487,1340,0.728]],["text/39",[0,1.057,2,0.662,3,0.584,11,3.296,14,1.27,20,0.834,27,2.234,30,0.654,40,3.131,55,1.258,65,4.41,67,3.163,106,0.761,136,0.699,140,0.997,149,1.041,156,0.926,157,0.856,158,0.935,161,2.258,164,0.85,175,1.875,196,0.834,207,0.778,212,2.08,216,0.816,221,0.974,224,1.009,228,1.131,254,5.43,279,1.239,290,1.287,291,1.449,313,0.87,334,1.198,344,1.003,350,0.635,351,0.801,352,1.162,359,0.949,391,1.048,403,1.174,426,3.017,465,1.078,544,1.198,606,1.112,607,1.459,608,2.963,643,2.511,657,1.131,684,1.827,693,3.93,694,2.368,715,0.881,763,1.426,775,1.348,860,2.661,870,4.438,872,3.719,899,1.185,904,1.239,958,5.006,1072,1.211,1078,3.435,1102,1.326,1114,2.1,1137,6.351,1141,1.048,1186,5.622,1239,1.162,1288,1.397,1340,7.627,1341,2.1,1342,1.496,1343,1.539,1344,5.81,1345,1.239,1346,1.744,1347,1.496,1348,1.591,1349,2.676,1350,1.326,1351,1.539,1352,1.876,1353,1.876,1354,1.744,1355,1.876,1356,1.876,1357,1.876,1358,1.744,1359,2.754,1360,1.254]],["component/39",[2,0.423,3,0.373]],["title/40-1",[826,62.957]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["title/40-2",[217,25.463,1141,39.112]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["title/40-3",[1255,56.278]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["title/40-4",[3,12.182,1190,48.048]],["name/40-4",[]],["text/40-4",[]],["component/40-4",[]],["title/40-5",[726,36.768,1179,42.211]],["name/40-5",[]],["text/40-5",[]],["component/40-5",[]],["title/40",[142,25.463,1255,44.235]],["name/40",[27,0.588,142,0.531]],["text/40",[0,2.15,2,1.078,3,0.716,10,0.866,17,2.034,20,1.049,26,0.995,27,0.952,40,1.793,42,3.11,55,1.136,82,1.542,88,1.207,90,1.119,92,1.711,115,0.754,116,1.02,124,0.976,125,2.384,129,2.529,130,0.812,136,1.532,140,1.255,141,0.859,142,3.181,143,0.899,150,0.999,153,1.94,161,2.04,162,1.286,172,1.016,173,1.437,178,1.096,180,1.348,182,1.464,190,2.437,199,1.201,203,1.248,204,0.889,207,0.979,217,3.181,230,1.124,265,1.189,293,1.038,296,1.278,304,1.663,313,1.096,317,1.368,319,0.961,348,1.378,356,0.932,359,1.195,361,0.846,366,1.262,368,1.286,397,1.03,407,1.389,411,1.338,418,1.166,426,1.286,441,1.294,463,1.338,466,2.864,475,1.412,510,1.302,515,1.949,525,1.938,552,2.611,601,1.412,654,1.949,656,2.253,696,1.763,726,2.87,731,1.621,732,1.109,739,1.27,771,1.697,781,3.862,799,1.542,804,2.793,832,1.207,836,1.579,854,1.508,855,1.579,857,1.348,867,1.286,1103,1.6,1143,1.401,1255,6.976,1256,1.621,1277,1.883,1287,1.697,1333,1.938,1334,1.883,1361,1.883,1362,2.086,1363,1.883,1364,2.086,1365,2.086,1366,1.883,1367,2.086,1368,2.086,1369,1.621,1370,2.086,1371,2.003,1372,2.086,1373,2.086,1374,2.086,1375,1.883,1376,2.086,1377,2.086,1378,3.632,1379,3.632,1380,3.632,1381,2.086,1382,2.003,1383,2.086,1384,2.086,1385,1.796]],["component/40",[2,0.423,3,0.373]],["title/41-1",[118,58.129]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[217,32.395]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[1193,57.481]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[165,37.193,318,33.305]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41-5",[1386,71.011]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["title/41-6",[321,40.235,384,41.173]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["title/41-7",[1387,78.635]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["title/41-8",[46,38.852]],["name/41-8",[]],["text/41-8",[]],["component/41-8",[]],["title/41-9",[65,22.864,740,25.278,1104,31.165,1114,26.672]],["name/41-9",[]],["text/41-9",[]],["component/41-9",[]],["title/41-10",[1388,61.807,1389,55.815]],["name/41-10",[]],["text/41-10",[]],["component/41-10",[]],["title/41-11",[136,21.469,692,28.733,702,31.792]],["name/41-11",[]],["text/41-11",[]],["component/41-11",[]],["title/41-12",[136,21.469,692,28.733,1390,44.835]],["name/41-12",[]],["text/41-12",[]],["component/41-12",[]],["title/41",[74,26.856,136,21.469,188,24.383]],["name/41",[27,0.588,1193,0.942]],["text/41",[0,0.976,2,1.415,3,0.566,6,0.486,10,0.285,11,0.806,15,0.384,20,0.659,23,0.774,24,0.393,26,0.328,28,0.555,36,0.671,37,0.317,39,0.461,40,0.407,42,2.887,43,0.582,46,3.021,47,0.322,55,1.491,65,1.431,72,0.603,74,2.826,75,1.017,79,0.601,80,0.513,87,0.661,90,1.776,92,0.323,99,0.671,100,0.245,105,0.647,107,0.365,111,0.94,113,0.286,115,1.833,124,1.344,130,0.267,131,0.651,133,0.408,135,0.377,136,3.767,137,2.448,140,0.413,143,0.296,150,0.627,152,1.409,154,1.708,156,0.731,161,0.735,163,0.534,165,2.462,167,0.731,168,0.457,169,0.426,171,0.399,183,0.477,184,0.365,188,0.329,190,0.347,196,0.944,198,0.426,199,0.395,203,0.411,204,0.799,207,1.124,216,0.644,217,1.363,250,0.828,252,0.894,257,0.766,267,1.621,275,0.558,277,0.314,282,1.536,290,1.04,292,0.77,296,0.802,304,0.314,311,1.164,314,0.44,317,0.858,318,2.002,319,0.316,321,1.559,322,0.375,334,0.496,340,1.292,341,0.541,350,0.719,354,0.735,355,0.429,356,0.307,358,0.507,360,0.377,361,1.343,368,0.807,372,2.074,373,0.393,378,0.526,384,2.725,418,0.384,419,1.158,441,0.426,445,0.541,446,0.389,451,0.991,457,1.164,462,0.465,475,0.465,514,0.437,515,0.368,521,0.604,530,0.579,531,0.421,536,0.62,538,0.473,552,2.58,580,0.52,601,0.465,611,0.865,622,1.486,623,1.122,629,0.526,641,0.447,654,1.993,656,1.164,657,0.469,673,0.336,691,0.482,692,1.62,702,1.495,706,0.852,708,0.923,709,0.894,714,0.389,715,0.696,726,0.408,728,0.473,734,0.534,735,0.91,736,0.558,737,0.457,739,1.748,740,2.223,742,2.359,752,0.431,758,0.534,761,1.212,803,0.534,804,2.368,832,0.397,850,0.541,857,2.139,867,0.423,871,1.458,873,0.477,899,1.714,910,1.004,945,0.568,970,0.558,977,0.62,985,2.422,993,0.62,994,0.62,1030,0.638,1043,0.486,1050,0.52,1056,0.844,1064,1.084,1072,0.502,1077,1.153,1083,0.591,1084,0.991,1092,0.558,1093,1.153,1102,0.55,1104,3.677,1109,1.216,1111,0.513,1114,2.034,1115,0.55,1116,1.104,1122,0.477,1141,0.434,1143,1.26,1178,0.979,1191,1.032,1193,3.707,1221,0.437,1243,0.579,1267,0.541,1276,0.55,1280,1.75,1283,0.541,1287,0.558,1318,2.264,1323,0.638,1325,0.638,1326,0.638,1327,3.802,1338,0.591,1347,0.62,1366,0.62,1386,0.62,1389,0.62,1390,0.604,1391,0.686,1392,0.659,1393,0.638,1394,0.686,1395,0.541,1396,0.686,1397,0.686,1398,0.686,1399,0.604,1400,0.686,1401,0.659,1402,0.496,1403,0.686,1404,0.604,1405,0.568,1406,1.216,1407,0.686,1408,0.659,1409,0.604,1410,1.309,1411,0.579,1412,0.686,1413,0.686,1414,0.686,1415,0.686,1416,0.686,1417,0.686,1418,0.659,1419,0.686,1420,3.93,1421,1.743,1422,0.579,1423,1.802,1424,3.31,1425,0.686,1426,0.686,1427,1.153,1428,1.309,1429,0.686,1430,0.638,1431,0.507,1432,0.686,1433,1.309,1434,2.394,1435,0.686,1436,0.659,1437,0.659,1438,0.591,1439,0.604,1440,0.604,1441,0.927,1442,0.686,1443,0.686,1444,0.659,1445,1.876,1446,1.032,1447,0.62,1448,0.686,1449,0.604,1450,0.686,1451,0.686,1452,0.568,1453,0.686,1454,0.604]],["component/41",[2,0.423,3,0.373]],["title/42-1",[40,24.428]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[30,20.116,40,15.816,277,23.313]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[40,19.2,709,42.211]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[40,19.2,694,29.903]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42-5",[0,20.666]],["name/42-5",[]],["text/42-5",[]],["component/42-5",[]],["title/42-6",[0,13.38,30,20.116,277,23.313]],["name/42-6",[]],["text/42-6",[]],["component/42-6",[]],["title/42-7",[0,16.243,709,42.211]],["name/42-7",[]],["text/42-7",[]],["component/42-7",[]],["title/42-8",[0,16.243,694,29.903]],["name/42-8",[]],["text/42-8",[]],["component/42-8",[]],["title/42-9",[172,24.803,213,26.317,361,20.661]],["name/42-9",[]],["text/42-9",[]],["component/42-9",[]],["title/42-10",[188,29.601,189,33.305]],["name/42-10",[]],["text/42-10",[]],["component/42-10",[]],["title/42-11",[858,50.816]],["name/42-11",[]],["text/42-11",[]],["component/42-11",[]],["title/42-12",[172,24.803,361,20.661,686,33.392]],["name/42-12",[]],["text/42-12",[]],["component/42-12",[]],["title/42-13",[188,29.601,189,33.305]],["name/42-13",[]],["text/42-13",[]],["component/42-13",[]],["title/42-14",[858,50.816]],["name/42-14",[]],["text/42-14",[]],["component/42-14",[]],["title/42-15",[127,24.325,172,18.338,361,15.275,596,23.063,686,24.688]],["name/42-15",[]],["text/42-15",[]],["component/42-15",[]],["title/42-16",[188,29.601,189,33.305]],["name/42-16",[]],["text/42-16",[]],["component/42-16",[]],["title/42-17",[858,50.816]],["name/42-17",[]],["text/42-17",[]],["component/42-17",[]],["title/42-18",[172,18.338,178,19.774,258,20.108,361,15.275,685,23.82]],["name/42-18",[]],["text/42-18",[]],["component/42-18",[]],["title/42-19",[0,13.38,95,27.198,217,20.974]],["name/42-19",[]],["text/42-19",[]],["component/42-19",[]],["title/42-20",[188,29.601,189,33.305]],["name/42-20",[]],["text/42-20",[]],["component/42-20",[]],["title/42-21",[858,50.816]],["name/42-21",[]],["text/42-21",[]],["component/42-21",[]],["title/42-22",[213,31.949,1402,44.696]],["name/42-22",[]],["text/42-22",[]],["component/42-22",[]],["title/42-23",[150,29.601,1402,44.696]],["name/42-23",[]],["text/42-23",[]],["component/42-23",[]],["title/42",[0,13.38,27,23.242,40,15.816]],["name/42",[27,1.051]],["text/42",[0,2.76,2,0.451,3,0.278,11,1.697,16,0.9,17,0.851,20,1.291,24,0.809,27,0.645,28,1.301,29,0.727,30,2.228,34,0.366,37,0.932,40,2.188,42,1.087,44,0.503,46,0.698,47,0.349,55,2.141,65,3.253,68,1.5,74,0.745,77,0.424,78,0.442,79,0.649,83,0.418,85,0.367,90,0.399,95,2.69,99,0.381,106,0.926,111,0.708,115,0.51,116,0.69,120,1.056,124,1.436,125,0.698,126,0.477,127,1.983,128,0.499,129,0.326,130,0.786,131,0.37,141,0.306,143,0.32,150,1.469,153,0.397,156,0.416,157,0.384,158,1.448,161,0.418,164,0.724,172,3.774,176,1.715,177,0.86,186,0.404,196,1.544,198,0.876,199,0.428,204,2.403,205,0.437,207,0.663,213,3.739,216,3.265,217,1.788,250,0.47,254,3.067,257,1.18,264,0.361,265,1.15,277,0.924,290,0.614,291,0.986,292,0.831,304,0.924,309,0.461,313,0.391,318,0.401,322,0.406,326,0.503,331,1.051,335,1.837,350,0.773,351,0.683,356,0.631,358,1.044,361,1.431,368,0.458,372,0.377,390,0.453,397,0.698,403,1.819,418,0.416,424,0.477,439,0.503,457,0.876,510,0.882,518,0.495,541,0.84,545,1.083,552,3.467,582,0.499,587,0.57,596,3.277,606,0.499,643,0.882,651,0.414,673,0.363,674,0.865,686,1.323,693,1.928,694,2.1,701,0.522,710,1.903,711,1.098,732,0.395,739,2.148,752,0.888,804,1.486,842,0.543,857,0.913,860,3.933,866,0.595,867,3.105,871,1.563,879,0.499,886,1.001,904,0.556,908,1.044,918,1.114,1043,0.527,1056,0.334,1070,0.563,1071,1.821,1078,0.522,1088,0.578,1114,0.527,1141,0.47,1143,0.948,1179,1.377,1194,0.488,1204,0.627,1239,0.522,1258,0.57,1259,0.605,1282,0.991,1402,4.275,1427,1.244,1441,0.527,1446,0.586,1455,0.743,1456,2.26,1457,2.125,1458,0.671,1459,0.616,1460,0.616,1461,0.627,1462,0.691,1463,2.721,1464,0.714,1465,3.037,1466,1.357,1467,1.357,1468,0.64,1469,1.641,1470,1.216,1471,0.714]],["component/42",[2,0.423,3,0.373]],["title/43-1",[40,24.428]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[0,20.666]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[115,28.417]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[100,28.123]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43",[94,45.762]],["name/43",[94,1.34]],["text/43",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/43",[2,0.423,3,0.373]],["title/44",[2,13.805,3,12.182]],["name/44",[5,1.313]],["text/44",[0,1.838,2,2.236,3,0.918,4,3.778,6,3.3,10,1.933,27,3.193,36,3.587,40,1.447,54,2.988,65,2.694,72,2.146,97,1.793,98,3.672,100,1.665,115,1.683,129,3.681,135,2.555,136,3.938,141,2.882,149,2.927,158,2.628,167,2.603,168,3.102,169,2.889,170,4.01,171,4.071,172,2.269,173,3.208,174,2.927,175,2.947,176,1.84,177,2.836,178,2.446,179,3.333,180,3.009,181,2.446,182,3.268,183,3.238,184,2.477,185,2.908,186,2.532,187,2.836]],["component/44",[2,0.423,3,0.373]],["title/45-1",[188,29.601,189,33.305]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["title/45-2",[34,21.309,188,20.729,189,23.323,190,21.861]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["title/45-3",[97,30.281]],["name/45-3",[]],["text/45-3",[]],["component/45-3",[]],["title/45-4",[191,34.22,192,34.061]],["name/45-4",[]],["text/45-4",[]],["component/45-4",[]],["title/45",[193,21.758,194,39.578,195,39.578]],["name/45",[194,1.002,195,1.002]],["text/45",[2,1.391,3,1.701,11,1.72,17,1.688,20,1.174,24,1.337,28,0.989,30,0.922,34,1.97,39,1.567,55,1.644,68,1.141,77,1.33,83,1.31,97,3.472,99,2.052,106,2.861,113,2.593,115,0.843,129,1.022,130,0.909,131,1.992,137,2.394,153,1.246,178,2.102,181,1.226,184,3.314,185,3.89,186,1.268,190,1.179,191,2.216,192,1.286,193,0.997,196,1.174,197,4.055,198,4.349,199,1.344,200,1.963,201,2.836,202,1.84,203,1.396,204,1.706,205,2.354,206,2.06,207,1.096,208,2.168,209,2.242,210,1.38,211,2.055,212,4.371,213,2.069,214,3.844,215,4.331,216,1.149,217,0.961,218,2.242,219,2.055,220,2.242,221,1.373,222,2.168,223,1.622,224,1.421,225,1.868,226,2.009,227,1.477,228,1.594,229,4.15,230,1.257,231,2.242,232,2.168,233,3.2,234,2.242,235,2.242,236,2.242,237,2.242,238,2.242,239,2.242,240,2.242,241,2.242,242,2.242,243,2.242,244,2.242,245,2.242,246,2.242,247,2.242,248,1.542,249,2.242,250,1.477,251,2.242,252,1.594,253,2.107,254,2.437,255,1.67,256,2.242,257,1.365,258,1.246,259,2.077,260,1.84]],["component/45",[2,0.423,3,0.373]],["title/46-1",[261,49.103]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["title/46-2",[262,46.008]],["name/46-2",[]],["text/46-2",[]],["component/46-2",[]],["title/46-3",[]],["name/46-3",[]],["text/46-3",[]],["component/46-3",[]],["title/46",[263,43.795,264,30.006]],["name/46",[264,1.118]],["text/46",[17,3.948,26,1.489,30,2.56,34,2.513,37,1.441,39,2.094,45,2.392,55,2.584,68,3.167,97,1.966,150,1.494,153,1.666,164,1.6,167,1.743,168,2.078,176,2.56,181,1.638,193,3.2,204,1.329,205,1.835,212,2.189,217,1.285,228,2.13,229,2.078,255,2.232,261,3.187,262,4.381,263,2.21,264,4.305,265,1.778,266,2.425,267,2.112,268,2.582,269,2.538,270,2.28,271,2.582,272,2.078,273,6.42,274,2.149,275,2.538,276,5.364,277,2.967,278,2.392,279,2.333,280,2.631,281,2.306,282,2.001,283,2.816,284,2.816,285,4.089,286,1.845,287,2.03,288,2.816,289,2.747,290,1.355,291,1.525,292,1.835,293,2.54,294,2.459,295,2.046,296,1.911,297,2.631,298,1.974,299,3.208,300,4.025,301,2.685,302,2.685,303,2.392]],["component/46",[2,0.423,3,0.373]],["title/47-1",[188,24.383,189,27.434,304,23.313]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["title/47-2",[193,21.758,233,31.004,305,31.388]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["title/47-3",[138,27.929,193,21.758,233,31.004]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["title/47-4",[55,13.541,286,25.604,306,17.741,307,25.188]],["name/47-4",[]],["text/47-4",[]],["component/47-4",[]],["title/47",[193,26.415,308,36.163]],["name/47",[307,1.34]],["text/47",[2,1.341,3,1.183,17,1.18,20,1.408,54,2.995,55,2.925,62,1.528,80,2.093,82,2.069,92,2.199,97,1.078,99,2.394,106,3.218,138,2.56,145,1.88,159,1.62,176,1.844,193,3.814,204,1.193,205,1.647,207,1.314,230,4.196,233,5.434,257,1.638,286,2.761,305,1.726,306,4.541,308,4.556,309,2.896,310,1.647,311,1.736,312,5.447,313,1.47,314,3.852,315,6.965,316,1.895,317,3.061,318,1.508,319,1.29,320,3.865,321,1.822,322,1.528,323,2.119,324,1.911,325,1.983,326,1.895,327,4.019,328,1.783,329,4.019,330,3.798,331,1.458,332,2.361,333,1.715,334,2.024,335,2.003,336,2.366,337,2.093,338,2.207,339,2.176]],["component/47",[2,0.423,3,0.373]],["title/48",[193,33.606]],["name/48",[5,1.313]],["text/48",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/48",[2,0.423,3,0.373]],["title/49-1",[306,20.868,345,35.396,346,34.19]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49-2",[347,67.707]],["name/49-2",[]],["text/49-2",[]],["component/49-2",[]],["title/49-3",[348,51.972]],["name/49-3",[]],["text/49-3",[]],["component/49-3",[]],["title/49-4",[97,23.801,306,25.334]],["name/49-4",[]],["text/49-4",[]],["component/49-4",[]],["title/49-5",[190,25.715,304,23.313,306,20.868]],["name/49-5",[]],["text/49-5",[]],["component/49-5",[]],["title/49-6",[77,29.021,306,20.868,349,37.216]],["name/49-6",[]],["text/49-6",[]],["component/49-6",[]],["title/49-7",[304,23.313,306,20.868,350,19.516]],["name/49-7",[]],["text/49-7",[]],["component/49-7",[]],["title/49-8",[298,32.217,328,32.439,351,24.632]],["name/49-8",[]],["text/49-8",[]],["component/49-8",[]],["title/49-9",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/49-9",[]],["text/49-9",[]],["component/49-9",[]],["title/49-10",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/49-10",[]],["text/49-10",[]],["component/49-10",[]],["title/49-11",[97,19.606,306,20.868,354,28.593]],["name/49-11",[]],["text/49-11",[]],["component/49-11",[]],["title/49-12",[355,38.595,356,27.631]],["name/49-12",[]],["text/49-12",[]],["component/49-12",[]],["title/49",[286,36.562,306,25.334]],["name/49",[306,0.944]],["text/49",[2,0.835,3,1.269,4,2.059,17,0.338,24,0.459,26,0.382,28,0.339,30,2.091,34,0.746,40,0.471,42,2.014,43,0.356,44,1.026,46,0.748,47,0.376,55,2.405,65,1.439,68,0.391,72,0.369,77,2.38,78,0.476,79,0.368,85,1.065,88,0.877,90,0.429,97,1.255,105,0.395,111,0.759,115,1.509,117,0.521,124,0.375,130,0.312,135,1.5,138,0.831,142,0.624,143,0.653,144,0.868,145,0.538,150,0.383,155,0.411,156,0.447,161,0.45,176,0.852,181,1.132,184,0.426,185,1.346,190,1.089,192,2.916,193,2.523,196,0.762,197,0.986,199,0.461,200,0.393,204,0.341,206,0.412,207,2.773,210,0.474,216,1.061,217,0.624,221,0.471,227,0.507,258,1.461,259,1.692,260,1.7,261,1.707,262,2.187,264,2.866,277,0.367,285,1.177,286,3.318,290,0.348,292,0.471,293,0.398,295,2.739,298,1.73,299,1.355,304,0.987,306,4.304,308,0.468,310,0.471,318,0.431,319,0.993,322,0.827,323,1.147,328,0.51,335,2.675,342,0.431,344,0.485,345,1.053,346,1.836,349,0.585,350,1.755,351,1.577,352,1.513,353,2.763,354,0.45,356,0.358,357,2.76,358,0.592,359,0.868,360,0.831,361,1.323,362,0.651,363,0.689,364,0.663,365,0.651,366,0.485,367,0.843,368,0.493,369,1.576,370,0.8,371,0.723,372,1.895,373,0.868,374,0.843,375,0.675,376,0.533,377,0.514,378,0.614,379,0.557,380,0.675,381,0.579,382,0.592,383,0.723,384,0.533,385,0.562,386,0.689,387,0.641,388,0.641,389,0.689,390,0.487,391,0.507,392,2.354,393,0.689,394,1.213,395,0.689,396,1.278,397,0.395,398,1.213,399,1.919,400,1.919,401,1.73,402,2.75,403,0.567,404,0.551,405,0.51,406,2.307,407,1.009,408,0.675,409,1.947,410,1.856,411,1.383,412,0.622,413,0.675,414,0.426,415,1.162,416,1.334,417,0.651,418,0.447,419,0.387,420,0.614,421,0.705,422,1.334,423,0.631,424,0.972,425,0.705,426,0.493,427,0.723,428,1.898,429,0.562,430,0.8,431,3.677,432,1.304,433,1.947,434,0.631,435,0.631,436,2.07,437,0.562,438,1.177,439,0.542,440,0.744,441,0.497,442,0.8,443,0.689,444,0.503,445,0.631,446,0.454,447,0.651,448,0.651,449,0.651,450,0.651,451,0.606,452,2.156,453,2.156,454,2.156,455,2.156,456,2.003,457,1.337,458,1.543,459,1.856,460,0.8,461,0.542,462,0.542,463,0.514,464,0.557,465,0.521,466,0.631,467,0.525,468,0.482,469,0.471,470,0.567,471,0.663,472,0.622,473,0.592]],["component/49",[2,0.423,3,0.373]],["title/50-1",[193,33.606]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[55,24.602]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[217,32.395]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50",[193,26.415,474,40.538]],["name/50",[474,1.511]],["text/50",[2,0.918,3,0.81,55,1.286,65,2.449,74,2.169,92,1.937,97,1.583,106,1.888,131,2.046,172,2.003,193,4.047,204,1.752,207,1.93,210,2.432,213,2.125,217,2.62,255,2.942,286,2.432,290,1.786,291,2.01,306,3.189,307,2.392,319,1.894,332,3.468,350,2.438,351,1.989,357,2.717,361,1.668,369,3.005,372,2.084,402,5.366,408,3.468,412,3.196,415,6.715,424,2.638,434,5.016,438,4.945,444,4.89,464,2.858,474,2.696,475,4.307,476,4.111,477,4.796,478,2.276,479,3.82,480,2.913,481,4.111,482,3.468,483,2.784,484,4.111,485,3.949,486,3.54,487,3.153,488,4.111]],["component/50",[2,0.423,3,0.373]],["title/51-1",[29,26.213,176,20.116,177,31.004]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["title/51-2",[181,32.468,264,30.006]],["name/51-2",[]],["text/51-2",[]],["component/51-2",[]],["title/51",[188,29.601,189,33.305]],["name/51",[188,0.617,489,1.11]],["text/51",[2,1.478,3,1.583,17,2.791,29,2.229,34,2.131,65,3.465,79,1.988,83,2.431,97,1.667,131,2.154,142,2.726,143,1.865,155,2.22,176,1.71,177,2.636,178,2.274,181,4.22,193,3.434,194,3.365,195,3.365,197,2.818,203,2.59,206,2.229,254,2.636,261,2.703,262,2.533,264,3.213,293,2.154,295,4.34,299,2.721,342,2.332,357,4.374,359,2.48,391,2.739,490,2.839,491,3.727,492,3.413,493,3.413,494,3.164,495,6.652,496,3.465,497,5.298,498,3.727,499,2.839,500,3.413,501,3.727,502,3.727,503,3.727,504,3.727,505,3.727]],["component/51",[2,0.423,3,0.373]],["title/52-1",[357,40.85,369,45.18]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["title/52",[506,65.105]],["name/52",[506,1.907]],["text/52",[2,1.651,3,1.457,55,2.312,191,5.362,193,3.158,207,3.47,357,4.884,361,2.999,369,5.402,372,3.747,475,5.004,506,8.944,507,9.685,508,6.508,509,7.39,510,4.615,511,5.138]],["component/52",[2,0.423,3,0.373]],["title/53-1",[188,29.601,189,33.305]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53-2",[68,30.215,190,31.218]],["name/53-2",[]],["text/53-2",[]],["component/53-2",[]],["title/53-3",[43,27.47,46,30.538]],["name/53-3",[]],["text/53-3",[]],["component/53-3",[]],["title/53-4",[512,73.068]],["name/53-4",[]],["text/53-4",[]],["component/53-4",[]],["title/53-5",[513,62.957]],["name/53-5",[]],["text/53-5",[]],["component/53-5",[]],["title/53-6",[492,48.74,493,48.74]],["name/53-6",[]],["text/53-6",[]],["component/53-6",[]],["title/53-7",[62,42.941]],["name/53-7",[]],["text/53-7",[]],["component/53-7",[]],["title/53-8",[342,42.372]],["name/53-8",[]],["text/53-8",[]],["component/53-8",[]],["title/53-9",[97,19.606,342,27.434,514,32.439]],["name/53-9",[]],["text/53-9",[]],["component/53-9",[]],["title/53-10",[72,23.457,125,25.155,342,27.434]],["name/53-10",[]],["text/53-10",[]],["component/53-10",[]],["title/53-11",[233,37.638,515,33.16]],["name/53-11",[]],["text/53-11",[]],["component/53-11",[]],["title/53-12",[193,33.606]],["name/53-12",[]],["text/53-12",[]],["component/53-12",[]],["title/53-13",[181,32.468,200,30.322]],["name/53-13",[]],["text/53-13",[]],["component/53-13",[]],["title/53-14",[97,23.801,193,26.415]],["name/53-14",[]],["text/53-14",[]],["component/53-14",[]],["title/53-15",[357,40.85,369,45.18]],["name/53-15",[]],["text/53-15",[]],["component/53-15",[]],["title/53-16",[65,30.281]],["name/53-16",[]],["text/53-16",[]],["component/53-16",[]],["title/53-17",[65,19.606,293,25.337,516,38.548]],["name/53-17",[]],["text/53-17",[]],["component/53-17",[]],["title/53-18",[109,40.85,517,42.583]],["name/53-18",[]],["text/53-18",[]],["component/53-18",[]],["title/53-19",[97,19.606,198,31.587,206,26.213]],["name/53-19",[]],["text/53-19",[]],["component/53-19",[]],["title/53-20",[2,11.372,97,19.606,109,33.649]],["name/53-20",[]],["text/53-20",[]],["component/53-20",[]],["title/53",[307,35.969,518,41.173]],["name/53",[5,1.313]],["text/53",[2,0.726,3,0.641,6,0.908,13,0.329,15,0.375,17,2.227,20,0.925,26,0.612,27,0.306,28,0.285,29,0.66,30,0.265,34,1.387,37,0.592,39,0.451,43,1.044,45,0.983,46,0.633,47,0.602,54,0.431,55,2.306,56,2.773,62,3.166,65,1.808,68,1.967,72,0.847,77,1.048,79,1.079,85,0.332,86,0.463,87,0.647,89,0.44,90,0.36,92,0.604,93,0.537,97,2.776,99,2.407,100,0.24,106,2.971,109,1.552,111,0.337,116,0.626,125,1.804,131,0.638,141,0.528,148,0.556,150,0.322,153,0.359,159,0.742,160,0.937,164,0.657,175,2.057,176,0.506,181,0.966,188,0.614,189,0.362,190,0.339,191,0.709,193,1.72,197,0.834,198,0.795,200,0.629,201,0.476,202,0.529,203,0.767,204,0.784,206,1.88,207,1.527,210,0.758,212,0.471,216,0.331,217,0.277,221,0.754,224,0.409,225,2.256,227,1.486,228,0.875,230,0.69,233,1.119,248,0.847,250,0.811,255,0.48,257,0.393,260,0.529,261,2.03,262,0.393,264,1.578,266,0.522,267,0.455,268,0.556,269,1.043,270,0.491,271,0.556,272,0.854,273,0.996,274,0.463,276,1.061,278,0.515,282,1.179,286,0.397,291,0.899,293,2.336,295,0.84,296,0.785,299,0.422,303,0.515,304,0.587,306,2.811,307,1.367,308,0.75,311,0.417,313,0.353,314,0.822,322,0.7,324,2.748,326,1.245,327,1.103,328,0.428,335,0.48,340,0.463,341,0.529,342,3.485,346,0.451,350,0.491,351,0.325,352,0.471,357,0.847,360,0.368,361,0.52,365,0.546,366,0.776,368,1.133,369,0.937,378,0.515,381,0.927,382,1.359,390,0.409,391,0.811,397,0.633,398,1.026,401,0.425,406,0.566,411,0.431,414,0.357,417,0.546,418,0.375,423,0.529,436,0.508,438,0.522,440,0.624,450,0.546,458,0.48,459,0.578,461,0.455,462,0.455,463,1.179,469,0.395,479,1.191,490,1.848,492,1.45,493,1.45,494,1.344,495,0.556,496,0.537,512,0.624,513,2.603,514,1.171,515,0.36,516,2.765,517,0.463,518,0.447,519,0.899,520,0.707,521,1.619,522,1.349,523,0.707,524,0.707,525,1.191,526,2.799,527,1.935,528,2.182,529,0.707,530,0.566,531,0.411,532,0.707,533,0.645,534,1.179,535,0.624,536,0.606,537,0.48,538,0.463,539,0.891,540,0.707,541,1.094,542,1.081,543,1.191,544,0.485,545,0.983,546,0.707,547,0.566,548,0.409,549,0.707,550,0.707,551,0.707,552,0.694,553,0.707,554,1.191,555,0.556,556,0.645,557,0.645,558,0.546,559,1.281,560,1.838,561,1.349,562,1.349,563,1.349,564,0.707,565,0.707,566,0.707,567,0.707,568,1.349,569,0.707,570,0.707,571,0.707,572,0.707,573,0.707,574,0.707,575,0.671,576,0.671,577,0.529,578,2.311,579,0.707,580,0.508,581,0.476,582,0.861,583,1.191,584,1.281,585,0.515,586,0.624,587,0.515,588,0.645,589,0.556,590,0.707,591,0.707,592,0.671,593,0.671,594,0.471,595,0.707,596,0.411,597,0.671,598,0.578,599,1.349,600,1.496,601,0.455,602,0.707,603,0.645,604,2.472,605,0.707,606,0.861,607,0.591,608,0.671,609,0.671,610,0.707,611,0.444,612,2.349,613,1.349,614,0.546,615,0.671,616,0.707,617,1.349,618,0.707,619,0.707,620,1.349,621,0.578,622,0.795,623,0.402,624,0.707,625,0.707,626,0.707,627,1.157,628,0.707,629,0.515,630,0.707,631,0.496,632,0.707,633,0.707,634,1.231,635,0.671,636,0.671,637,0.707,638,0.707,639,0.707,640,0.707,641,0.437,642,0.645,643,0.419,644,0.707,645,0.707]],["component/53",[2,0.423,3,0.373]],["title/54-1",[65,19.606,477,31.388,646,36.438]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[548,37.638,647,42.211]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54",[88,35.779,304,28.302]],["name/54",[272,1.534]],["text/54",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,646,4.941,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245]],["component/54",[2,0.423,3,0.373]],["title/55-1",[0,16.243,336,31.336]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[28,26.203,113,25.725]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55-3",[100,18.208,136,21.469,351,24.632]],["name/55-3",[]],["text/55-3",[]],["component/55-3",[]],["title/55-4",[186,33.6,187,37.638]],["name/55-4",[]],["text/55-4",[]],["component/55-4",[]],["title/55",[285,33.752,664,42.211]],["name/55",[285,1.258]],["text/55",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/55",[2,0.423,3,0.373]],["title/56-1",[129,27.08,171,35.969]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56-2",[690,42.211,696,30.006]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["title/56-3",[696,30.006,715,32.878]],["name/56-3",[]],["text/56-3",[]],["component/56-3",[]],["title/56-4",[176,31.069]],["name/56-4",[]],["text/56-4",[]],["component/56-4",[]],["title/56-5",[65,19.606,446,28.876,673,24.889]],["name/56-5",[]],["text/56-5",[]],["component/56-5",[]],["title/56",[10,25.659,664,42.211]],["name/56",[10,0.956]],["text/56",[0,2.185,2,1.729,3,1.164,4,0.906,10,0.836,11,0.866,13,0.364,17,1.081,20,0.374,21,0.569,23,1.813,24,0.425,26,0.354,28,1.299,33,0.955,34,0.365,36,2.223,37,0.343,38,0.531,39,0.499,40,1.226,43,0.895,47,0.946,48,0.963,55,1.574,68,0.363,72,0.65,73,0.346,74,1.858,77,0.423,79,1.407,85,0.367,86,1.388,87,1.017,89,0.487,92,1.66,94,0.432,95,0.397,97,0.286,99,0.381,100,0.266,105,1.514,106,0.648,107,0.395,108,0.521,110,0.939,111,0.372,112,0.543,113,1.642,115,1.273,124,0.66,125,0.995,129,2.587,130,1.373,131,0.369,132,0.439,133,1.525,134,2.914,135,2.164,136,2.253,138,0.407,141,0.306,142,1.056,143,1.104,144,0.425,145,0.499,146,0.507,151,0.464,153,0.397,155,0.381,156,0.415,157,1.041,159,1.166,160,1.472,162,0.869,164,1.033,165,0.849,167,0.415,168,0.495,171,0.432,172,0.687,174,0.467,176,2.618,178,0.39,179,1.009,180,0.48,182,0.521,184,2.306,185,0.881,186,0.404,187,0.452,191,0.411,196,1.014,198,0.461,199,0.428,200,1.257,203,0.444,207,0.662,213,0.384,217,0.83,224,0.452,250,0.47,257,0.434,258,0.397,264,0.36,274,0.511,277,0.34,282,0.476,290,0.613,291,0.363,313,0.741,316,0.955,319,0.65,321,0.918,322,0.405,328,1.633,331,1.597,333,1.877,336,0.376,338,1.112,350,0.285,356,0.332,359,0.425,360,0.407,366,0.449,371,0.67,373,0.808,401,0.47,414,0.395,419,1.482,420,0.569,426,0.869,446,1.142,469,0.437,499,0.487,515,0.757,531,0.455,534,0.905,535,0.69,538,0.511,542,0.626,552,0.402,582,0.499,589,0.615,606,0.499,611,0.932,614,0.604,622,0.875,623,0.844,631,0.549,641,0.918,651,0.413,654,2.326,658,0.437,659,0.507,661,0.521,669,0.516,673,1.722,674,0.864,684,1.242,685,0.892,688,0.562,689,0.516,690,0.507,691,0.521,692,0.796,696,3.972,701,0.521,702,0.464,704,0.899,706,0.918,708,0.694,712,0.784,714,0.421,715,3.404,716,0.452,717,0.626,718,0.615,719,0.615,720,0.585,721,0.626,722,0.526,723,1.055,724,0.69,725,0.577,726,0.839,727,0.585,728,1.388,729,0.626,730,0.549,731,1.096,732,0.395,733,0.626,734,0.577,735,2.743,736,1.639,737,0.939,738,0.562,739,0.859,740,0.499,741,0.639,742,0.311,743,0.99,744,1.699,745,0.639,746,0.639,747,0.562,748,1.214,749,0.526,750,0.543,751,0.859,752,0.886,753,0.577,754,0.639,755,0.615,756,0.639,757,1.055,758,0.577,759,0.626,760,0.639,761,0.48,762,0.516,763,0.639,764,0.742,765,0.604,766,0.626,767,0.781,768,0.639,769,0.594,770,0.585,771,0.604,772,0.654,773,0.577,774,0.781,775,0.604,776,0.713,777,0.67,778,0.713,779,0.99,780,0.781,781,0.594,782,0.742,783,0.742,784,0.626,785,0.781,786,0.69,787,0.516,788,0.531,789,0.639,790,0.639,791,0.594,792,0.639,793,1.031,794,0.639,795,0.639,796,0.577,797,0.543,798,0.543,799,0.549,800,0.577,801,0.543,802,0.549,803,0.577,804,0.43,805,0.626,806,1.214]],["component/56",[2,0.423,3,0.373]],["title/57",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/57",[0,0.605]],["text/57",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,809,1.764,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234]],["component/57",[2,0.423,3,0.373]],["title/58",[826,62.957]],["name/58",[5,1.313]],["text/58",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/58",[2,0.423,3,0.373]],["title/59-1",[0,16.243,336,31.336]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[27,28.215,141,25.463]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[46,38.852]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59-4",[46,30.538,726,36.768]],["name/59-4",[]],["text/59-4",[]],["component/59-4",[]],["title/59-5",[13,24.977,46,25.155,73,23.754]],["name/59-5",[]],["text/59-5",[]],["component/59-5",[]],["title/59-6",[115,28.417]],["name/59-6",[]],["text/59-6",[]],["component/59-6",[]],["title/59-7",[115,22.336,144,35.41]],["name/59-7",[]],["text/59-7",[]],["component/59-7",[]],["title/59-8",[115,22.336,143,26.631]],["name/59-8",[]],["text/59-8",[]],["component/59-8",[]],["title/59-9",[115,22.336,142,25.463]],["name/59-9",[]],["text/59-9",[]],["component/59-9",[]],["title/59-10",[115,22.336,176,24.42]],["name/59-10",[]],["text/59-10",[]],["component/59-10",[]],["title/59-11",[100,28.123]],["name/59-11",[]],["text/59-11",[]],["component/59-11",[]],["title/59-12",[100,22.105,142,25.463]],["name/59-12",[]],["text/59-12",[]],["component/59-12",[]],["title/59",[113,25.725,848,53.218]],["name/59",[113,0.959]],["text/59",[0,2.356,2,1.904,3,1.767,4,2.961,11,1.091,13,2.109,15,1.419,27,1.159,28,2.791,30,1.003,36,1.302,37,1.173,40,2.045,43,1.128,46,3.253,55,1.345,68,1.241,72,1.17,73,2.006,87,2.172,100,2,113,2.74,115,2.379,116,1.241,117,1.652,129,1.112,130,0.989,131,1.263,132,2.544,136,2.777,137,1.519,141,2.712,142,2.712,143,1.853,144,1.454,155,2.869,157,1.312,159,1.469,184,1.35,199,1.462,200,1.245,204,1.082,290,1.868,291,1.241,333,2.634,336,1.287,351,1.228,359,1.454,361,1.03,461,2.912,467,1.665,468,1.528,470,1.799,478,1.405,531,1.555,548,1.546,622,1.575,643,1.585,658,1.493,689,1.765,691,1.781,692,2.427,696,1.232,710,1.575,712,3.112,716,1.546,726,2.558,730,3.179,732,1.35,740,1.705,827,3.925,843,1.899,849,2.141,850,2.002,851,1.836,852,1.817,853,2.186,854,1.836,855,1.922,856,2.102,857,1.64]],["component/59",[2,0.423,3,0.373]],["title/60-1",[37,20.004,40,13.446,277,19.819,361,17.564]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60-2",[188,29.601,189,33.305]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["title/60-3",[858,50.816]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["title/60-4",[55,19.337,859,46.228]],["name/60-4",[]],["text/60-4",[]],["component/60-4",[]],["title/60-5",[40,19.2,694,29.903]],["name/60-5",[]],["text/60-5",[]],["component/60-5",[]],["title/60",[27,28.215,40,19.2]],["name/60",[860,1.252]],["text/60",[0,0.826,2,1.147,3,1.16,4,0.796,11,3.564,13,2.081,17,1.788,28,0.75,30,2.973,40,2.984,42,0.954,43,1.885,55,2.595,65,3.963,73,1.979,74,0.934,79,0.813,83,0.994,87,0.894,90,0.95,100,0.633,109,1.17,111,0.887,122,1.34,125,2.095,128,1.189,130,0.689,141,2.424,153,0.945,167,0.989,175,1.12,190,0.894,191,0.98,196,0.891,207,0.831,210,1.047,216,4.241,217,0.729,254,1.914,259,1.631,267,2.129,277,2.694,291,0.865,296,1.084,309,1.098,316,1.198,351,2.052,354,2.382,356,0.791,361,0.718,372,0.897,397,1.553,439,1.198,478,0.98,552,2.781,656,1.098,693,1.112,694,3.152,702,1.105,712,4.614,765,1.44,804,2.974,859,4.401,860,3.199,861,2.147,862,2.603,863,3.253,864,2.652,865,1.559,866,1.417,867,1.938,868,1.524,869,2.078,870,5.138,871,3.129,872,1.17,873,1.23,874,1.376,875,3.735,876,1.376,877,2.298,878,1.559,879,1.189,880,1.559,881,1.559]],["component/60",[2,0.423,3,0.373]],["title/61-1",[0,11.375,37,20.004,277,19.819,361,17.564]],["name/61-1",[]],["text/61-1",[]],["component/61-1",[]],["title/61-2",[188,29.601,189,33.305]],["name/61-2",[]],["text/61-2",[]],["component/61-2",[]],["title/61-3",[858,50.816]],["name/61-3",[]],["text/61-3",[]],["component/61-3",[]],["title/61-4",[0,16.243,694,29.903]],["name/61-4",[]],["text/61-4",[]],["component/61-4",[]],["title/61-5",[0,16.243,882,51.173]],["name/61-5",[]],["text/61-5",[]],["component/61-5",[]],["title/61",[0,16.243,27,28.215]],["name/61",[0,0.605]],["text/61",[0,2.772,2,1.416,3,1.25,13,1.483,17,1.275,30,1.966,40,0.939,43,1.343,55,0.946,65,3.556,73,1.41,87,1.527,111,1.515,116,1.478,125,3.132,150,3.519,204,1.288,217,1.245,230,2.681,254,3.03,259,1.569,277,2.278,296,3.884,322,1.651,351,1.462,356,2.224,373,1.732,385,3.491,397,1.494,552,3.977,601,2.047,693,1.9,694,3.067,712,5.868,804,2.88,823,4.012,852,2.163,860,3.994,867,1.864,871,3.03,883,2.163,884,3.767,885,2.662,886,2.142,887,2.55,888,5.459,889,2.55,890,2.603,891,2.603,892,2.603,893,2.603,894,2.55,895,2.603,896,2.603,897,2.603,898,2.603,899,2.163,900,2.603,901,2.603]],["component/61",[2,0.423,3,0.373]],["title/62",[13,24.977,73,23.754,100,18.208]],["name/62",[5,1.313]],["text/62",[0,2.544,2,2.022,3,1.85,4,1.814,11,1.012,13,3.075,26,1.124,27,1.075,30,3.425,36,3.215,37,1.089,40,3.158,43,2.786,55,2.206,73,2.925,85,1.164,95,3.766,100,2.749,130,1.572,140,1.418,141,0.97,150,1.932,157,1.218,158,1.33,171,1.371,172,1.148,200,1.156,213,1.218,216,2.605,217,2.18,230,1.269,287,1.534,290,1.023,293,1.172,313,1.238,331,1.227,336,1.194,354,1.323,360,1.292,373,1.35,391,1.491,407,1.569,418,1.317,446,1.336,478,1.304,511,1.638,658,1.386,694,3.977,696,1.144,712,5.528,751,1.435,823,1.491,851,1.704,852,1.686,861,1.609,873,1.638,874,1.831,877,1.722,902,1.987,903,2.075,904,1.762,905,1.95,906,1.831,907,1.95,908,1.741,909,1.917,910,1.807,911,2.075]],["component/62",[2,0.423,3,0.373]],["title/63-1",[350,30.143]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["title/63-2",[16,50.102]],["name/63-2",[]],["text/63-2",[]],["component/63-2",[]],["title/63-3",[1,58.129]],["name/63-3",[]],["text/63-3",[]],["component/63-3",[]],["title/63-4",[2,13.805,3,12.182]],["name/63-4",[]],["text/63-4",[]],["component/63-4",[]],["title/63-5",[40,24.428]],["name/63-5",[]],["text/63-5",[]],["component/63-5",[]],["title/63-6",[113,25.725,692,34.882]],["name/63-6",[]],["text/63-6",[]],["component/63-6",[]],["title/63",[474,40.538,912,53.218]],["name/63",[474,0.845,912,1.11]],["text/63",[0,0.786,1,0.859,2,1.693,3,1.241,4,0.523,10,2.905,11,0.499,16,5.418,17,0.905,19,0.88,27,2.482,28,0.493,30,1.182,37,0.537,38,0.832,40,1.689,42,1.157,43,3.11,46,2.157,47,0.546,53,1.117,55,2.876,64,2.08,68,1.821,73,1.738,76,1.162,84,1.995,87,0.587,88,0.673,89,1.962,90,0.624,92,1.755,95,3.901,97,1.681,98,0.917,100,1.07,104,1.117,106,0.986,111,1.076,113,2.263,115,1.081,121,0.891,129,1.311,130,1.701,135,0.638,136,2.08,140,0.699,141,1.799,142,0.885,149,0.731,150,1.028,154,0.691,156,0.65,157,0.601,158,0.656,176,0.459,181,0.611,183,1.493,184,1.142,185,0.726,199,1.236,201,0.824,204,0.495,217,2.032,250,0.736,264,1.042,277,1.37,290,1.618,305,1.324,306,0.476,311,0.721,314,1.378,336,1.089,342,0.626,350,0.823,354,0.653,356,0.52,358,2.212,360,0.638,401,0.736,403,0.824,417,0.946,418,0.65,446,0.659,468,2.241,474,1.408,537,0.832,541,0.691,544,0.841,545,0.891,641,1.398,651,0.647,668,0.676,669,0.808,673,1.463,679,1.693,681,0.962,692,1.212,696,0.564,705,1.419,708,1.473,714,1.218,715,1.142,732,0.618,739,0.708,747,0.88,769,0.931,771,0.946,779,0.816,784,0.981,799,0.859,800,0.904,815,1.537,822,0.85,833,0.946,858,0.751,863,0.891,872,0.768,883,0.832,905,0.962,912,1.001,913,1.849,914,1.08,915,1.224,916,1.224,917,1.117,918,0.917,919,2.26,920,1.856,921,0.962,922,1.939,923,4.597,924,1.117,925,1.117,926,0.891,927,1.224,928,1.224,929,1.224,930,1.162,931,1.08,932,0.691,933,2.477,934,1.024,935,1.117,936,1.224,937,1.05,938,1.05,939,1.719,940,1.024,941,3.15,942,1.693,943,1.224,944,1.162,945,0.962,946,1.162,947,1.162,948,1.224,949,1.08,950,1.224,951,1.224,952,1.024,953,1.05,954,1.08,955,0.981,956,1.224,957,1.224,958,0.931,959,1.224,960,1.224,961,1.224,962,0.751]],["component/63",[2,0.423,3,0.373]],["title/64",[55,19.337,79,28.389]],["name/64",[5,1.313]],["text/64",[2,1.99,3,1.756,4,2.314,8,3.999,14,3.946,20,3.79,39,3.455,40,1.598,55,3.068,79,4.092,87,2.599,91,4.186,92,3.548,93,4.119,193,2.199,293,2.56,307,2.994,319,2.37,350,2.887,474,3.374,696,2.498,859,3.848,871,3.133,912,4.43,921,4.26,926,3.946,963,4.531,964,5.416,965,4.43,966,4.186,967,5.416,968,5.416,969,5.416,970,4.186,971,5.145,972,5.416,973,4.26,974,5.416]],["component/64",[2,0.423,3,0.373]],["title/65-1",[350,23.693,649,40.538]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["title/65-2",[0,20.666]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["title/65-3",[2,13.805,3,12.182]],["name/65-3",[]],["text/65-3",[]],["component/65-3",[]],["title/65-4",[399,43.374,400,43.374]],["name/65-4",[]],["text/65-4",[]],["component/65-4",[]],["title/65-5",[517,42.583,975,59.374]],["name/65-5",[]],["text/65-5",[]],["component/65-5",[]],["title/65-6",[541,36.768,838,34.545]],["name/65-6",[]],["text/65-6",[]],["component/65-6",[]],["title/65",[921,51.173,926,47.402]],["name/65",[921,1.067,926,0.989]],["text/65",[0,2.653,2,1.323,3,1.168,4,0.685,10,3.2,11,0.654,17,1.159,27,0.695,29,0.784,30,1.086,37,1.27,38,1.09,40,0.854,43,1.221,44,1.031,46,1.358,54,1.763,55,2.021,62,0.832,64,1.91,70,1.415,73,0.711,78,1.635,79,0.699,85,1.855,90,0.817,97,1.058,100,0.545,106,0.699,110,1.83,113,0.634,121,1.168,130,1.463,131,1.368,136,1.583,149,1.727,157,1.941,171,2.675,183,3.196,184,2.445,186,0.828,193,1.174,194,1.184,195,1.184,204,0.649,205,0.896,215,1.059,221,1.616,230,0.821,264,1.334,265,0.868,285,0.832,287,0.991,307,0.886,310,1.616,312,1.184,313,0.8,314,0.977,320,1.261,336,0.772,355,0.951,361,0.618,366,0.922,399,4.158,400,3.727,401,0.964,415,1.168,434,1.201,458,1.09,463,0.977,467,0.999,468,1.654,475,1.861,478,0.843,483,1.031,490,0.999,517,2.587,541,4.12,548,2.799,555,2.275,600,1.239,641,2.992,647,2.564,651,2.089,671,1.04,672,1.126,673,0.744,703,1.845,715,1.462,737,1.014,749,1.947,757,1.139,773,1.184,775,1.239,822,1.113,838,3.871,886,1.079,913,1.311,921,2.275,924,1.463,926,2.879,942,1.201,962,3.432,976,1.415,977,1.375,978,1.375,979,1.603,980,1.603,981,1.261,982,1.375,983,1.523,984,1.523,985,1.285,986,1.523,987,2.748,988,1.603,989,2.893,990,2.64,991,2.893,992,1.603,993,1.375,994,1.375,995,1.415,996,1.603,997,1.603,998,1.603,999,1.415,1000,1.341,1001,1.603,1002,1.523,1003,1.101,1004,1.201,1005,1.219,1006,1.603,1007,1.341,1008,2.553,1009,1.113,1010,1.375,1011,2.64,1012,1.463,1013,1.415,1014,1.415,1015,1.463,1016,1.285]],["component/65",[2,0.423,3,0.373]],["title/66-1",[350,30.143]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["title/66-2",[1,58.129]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["title/66-3",[966,63.984]],["name/66-3",[]],["text/66-3",[]],["component/66-3",[]],["title/66-4",[799,58.129]],["name/66-4",[]],["text/66-4",[]],["component/66-4",[]],["title/66-5",[40,24.428]],["name/66-5",[]],["text/66-5",[]],["component/66-5",[]],["title/66",[965,53.218,966,50.292]],["name/66",[965,1.11,966,1.049]],["text/66",[0,0.99,1,1.608,2,0.986,3,0.87,10,2.636,11,0.507,16,1.386,17,2.101,23,1.287,26,1.038,27,3.066,28,0.922,38,1.557,40,0.941,43,0.524,46,2.181,47,0.554,49,2.022,52,1.133,55,2.302,65,0.454,68,0.576,72,0.543,74,3.134,78,1.294,88,2.181,89,0.773,90,0.633,97,1.919,98,1.716,99,0.605,101,0.798,113,0.491,124,0.552,129,0.517,130,0.848,132,1.287,136,1.277,141,0.896,150,0.565,157,1.125,158,0.665,176,1.744,181,0.619,183,3.465,184,2.651,186,0.641,193,0.504,198,0.732,199,0.679,200,2.165,201,0.835,204,0.503,217,2.448,221,0.694,250,0.746,264,4.487,281,0.872,285,2.057,291,0.576,333,0.722,337,0.882,350,0.452,401,0.746,414,0.627,434,0.93,467,0.773,468,0.71,474,0.773,483,1.473,490,0.773,499,0.773,508,2.667,515,0.633,517,2.596,521,1.038,544,0.853,629,0.904,641,2.873,649,0.773,656,0.732,660,1.542,664,0.805,674,2.308,691,1.527,692,0.665,703,0.792,708,1.491,714,1.234,715,0.627,718,1.801,719,1.801,728,0.812,749,0.835,757,0.882,777,1.965,779,0.827,799,4.392,809,0.785,822,0.862,879,0.792,886,0.835,914,1.096,917,1.133,922,1.965,925,2.09,926,0.904,931,1.096,942,0.93,962,2.435,965,1.873,966,7.752,975,3.619,978,1.065,981,3.654,982,1.065,1005,1.742,1017,3.029,1018,1.241,1019,1.241,1020,2.022,1021,1.096,1022,2.29,1023,1.241,1024,1.241,1025,1.133,1026,1.038,1027,5.101,1028,0.835,1029,1.038,1030,1.096,1031,3.029,1032,1.133,1033,2.29,1034,1.179,1035,1.133,1036,1.241,1037,1.241,1038,1.241,1039,1.241,1040,1.241,1041,1.241,1042,3.966,1043,0.835,1044,1.179,1045,2.29,1046,1.916,1047,1.179,1048,1.096,1049,1.096,1050,0.893,1051,1.241,1052,1.241,1053,1.241,1054,1.179,1055,1.179,1056,0.53,1057,1.241,1058,1.179,1059,1.241,1060,1.038]],["component/66",[2,0.423,3,0.373]],["title/67-1",[142,20.974,832,29.472,932,30.287]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[130,30.633]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67",[]],["name/67",[142,0.369,787,0.622,932,0.532]],["text/67",[2,1.183,3,1.044,28,2.246,38,2.336,44,2.21,55,2.646,72,2.441,78,1.942,88,3.066,92,3.149,97,1.257,100,1.167,113,2.205,115,2.78,124,1.528,129,2.929,130,2.604,137,1.953,142,4.45,150,3.202,169,2.025,171,1.899,178,4.443,191,1.807,192,2.919,196,2.665,198,2.025,258,2.83,290,1.418,296,2,304,1.495,309,2.025,313,1.715,361,1.325,373,1.87,510,2.038,517,4.606,587,2.503,678,3.587,685,3.352,796,2.537,797,2.386,798,2.386,832,3.87,932,5.389,1026,2.874,1085,4.783,1177,2.874,1178,2.441,1179,2.229,1180,2.81,1181,2.753,1182,3.033,1183,2.81,1184,3.135]],["component/67",[2,0.423,3,0.373]],["title/68-1",[161,34.712,1120,54.43]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68-2",[115,18.399,161,28.593,692,28.733]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["title/68-3",[143,21.937,407,33.915,1121,42.152]],["name/68-3",[]],["text/68-3",[]],["component/68-3",[]],["title/68-4",[673,38.442]],["name/68-4",[]],["text/68-4",[]],["component/68-4",[]],["title/68-5",[143,21.937,304,23.313,1122,35.396]],["name/68-5",[]],["text/68-5",[]],["component/68-5",[]],["title/68-6",[429,55.183]],["name/68-6",[]],["text/68-6",[]],["component/68-6",[]],["title/68-7",[192,43.335]],["name/68-7",[]],["text/68-7",[]],["component/68-7",[]],["title/68",[726,36.768,787,42.971]],["name/68",[787,1.601]],["text/68",[2,0.847,3,0.748,21,1.183,35,0.933,43,1.235,55,2.853,65,0.594,68,0.754,87,0.779,88,0.893,106,1.276,107,0.82,115,3.214,116,1.359,124,1.301,129,0.676,143,2.308,161,2.13,171,0.897,190,0.779,191,1.539,192,3.586,196,0.776,203,0.923,204,1.978,207,2.516,210,4.126,213,1.436,216,0.759,217,2.461,258,2.026,290,0.67,304,0.706,319,0.71,326,1.044,331,0.803,350,1.065,359,0.883,361,1.539,368,2.339,372,0.782,373,0.883,375,1.301,397,0.762,407,3.091,411,0.989,419,1.344,426,0.951,429,4.192,463,0.989,486,1.328,510,0.963,511,1.072,552,3.775,596,1.703,656,2.879,668,2.207,673,0.754,692,2.619,695,2.613,702,2.369,706,1.809,726,0.917,732,0.82,766,1.301,779,1.082,787,1.932,801,2.031,802,2.054,804,2.686,857,1.796,871,1.692,933,1.277,1028,1.093,1077,2.447,1082,1.433,1084,2.104,1120,4.086,1121,3.842,1122,2.637,1123,1.542,1124,1.481,1125,1.542,1126,2.67,1127,1.542,1128,1.542,1129,1.542,1130,1.542,1131,1.542,1132,1.301,1133,1.542,1134,1.481,1135,1.542,1136,1.542,1137,1.277,1138,5.877,1139,6.508,1140,1.542,1141,1.759,1142,2.261,1143,1.036,1144,2.779,1145,1.481,1146,1.542,1147,1.542,1148,1.542,1149,1.542,1150,1.542,1151,1.542,1152,1.542,1153,1.542,1154,1.542,1155,1.542,1156,1.542,1157,1.542,1158,1.542,1159,1.542,1160,1.542,1161,1.542,1162,1.542,1163,1.542,1164,1.542,1165,1.542,1166,1.542,1167,1.542,1168,1.542,1169,1.542,1170,1.542,1171,1.542,1172,1.542,1173,1.542,1174,1.542,1175,1.542,1176,1.542]],["component/68",[2,0.423,3,0.373]],["title/69-1",[419,38.044]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[742,32.986]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69",[115,18.399,129,22.306,144,29.168]],["name/69",[115,0.466,144,0.739]],["text/69",[0,2.608,2,0.37,3,0.326,10,1.23,17,1.696,40,1.748,42,0.893,55,1.761,56,1.141,65,1.885,67,1.07,72,0.763,73,0.773,79,0.761,83,0.93,85,0.818,87,0.837,99,0.85,113,0.689,115,1.769,125,1.987,129,0.726,130,0.645,132,0.98,133,0.985,141,0.682,143,1.277,144,3.582,150,0.793,152,0.974,154,2.912,156,0.926,157,2.909,165,0.997,169,1.028,176,2.47,190,2.842,204,1.714,210,2.895,216,1.98,221,0.974,224,1.805,252,1.131,257,2.353,290,0.72,319,0.763,337,1.239,339,1.288,342,0.893,350,0.635,355,1.85,356,2.188,360,0.909,361,0.672,372,2.039,376,1.103,404,1.141,414,0.881,419,3.711,424,1.063,429,2.08,464,1.152,483,1.122,515,0.889,581,1.174,585,3.084,598,1.426,654,1.59,673,2.751,695,1.141,708,1.459,714,0.939,732,2.139,737,1.103,742,2.361,752,1.863,761,1.07,770,1.306,775,1.348,832,1.715,869,1.095,883,1.185,962,1.07,981,1.371,1016,1.397,1029,1.459,1043,1.174,1056,1.808,1078,1.162,1084,1.254,1092,1.348,1094,1.426,1111,1.239,1112,2.373,1122,1.152,1141,2.544,1185,1.539,1186,1.371,1187,1.539,1188,1.539,1189,2.754,1190,2.304,1191,1.306,1192,1.539,1193,1.211,1194,1.086,1195,1.539,1196,1.397,1197,1.254,1198,1.539,1199,1.539,1200,1.539,1201,1.539,1202,2.754,1203,2.754,1204,1.397,1205,1.459,1206,1.371,1207,1.539,1208,1.539,1209,1.539,1210,1.539,1211,1.539,1212,1.539,1213,1.459,1214,1.539,1215,3.462,1216,2.754,1217,1.539,1218,1.539,1219,1.539,1220,1.539,1221,2.562,1222,1.539,1223,1.426,1224,1.426,1225,1.539,1226,1.539]],["component/69",[2,0.423,3,0.373]],["title/70-1",[141,20.974,143,21.937,207,23.907]],["name/70-1",[]],["text/70-1",[]],["component/70-1",[]],["title/70-2",[515,33.16,962,39.942]],["name/70-2",[]],["text/70-2",[]],["component/70-2",[]],["title/70-3",[673,38.442]],["name/70-3",[]],["text/70-3",[]],["component/70-3",[]],["title/70-4",[1056,35.362]],["name/70-4",[]],["text/70-4",[]],["component/70-4",[]],["title/70-5",[1206,51.173,1221,39.381]],["name/70-5",[]],["text/70-5",[]],["component/70-5",[]],["title/70-6",[450,63.984]],["name/70-6",[]],["text/70-6",[]],["component/70-6",[]],["title/70-7",[13,24.977,73,23.754,1227,42.152]],["name/70-7",[]],["text/70-7",[]],["component/70-7",[]],["title/70-8",[13,24.977,73,23.754,851,36.817]],["name/70-8",[]],["text/70-8",[]],["component/70-8",[]],["title/70",[115,18.399,129,22.306,143,21.937]],["name/70",[115,0.466,143,0.555]],["text/70",[0,2.554,2,0.723,3,0.361,4,0.823,17,0.771,28,1.846,40,2.065,42,0.986,47,0.859,55,2.249,65,3.743,68,0.894,71,2.483,72,2.006,77,1.043,90,0.981,92,0.862,111,0.917,113,0.761,115,1.17,116,0.894,124,0.856,127,2.814,129,1.418,130,1.261,133,1.088,134,1.135,140,1.101,141,2.168,143,3.629,165,1.948,169,2.008,172,2.563,178,1.7,187,1.114,192,1.008,203,1.094,204,1.38,206,0.942,207,0.859,216,3.273,217,0.754,228,2.211,258,2.326,290,1.406,304,0.838,305,1.996,306,1.327,336,0.927,342,0.986,356,1.447,397,2.151,407,2.156,423,1.442,424,1.174,441,1.135,462,1.239,463,1.174,475,1.239,494,1.337,500,1.442,596,3.685,651,1.018,673,2.94,685,2.048,686,1.2,695,2.23,708,0.901,710,2.008,801,1.337,802,1.352,814,1.272,860,0.994,869,2.139,872,1.209,879,1.228,1056,0.823,1088,2.516,1194,5.021,1196,1.543,1228,3.433,1229,1.757,1230,1.757,1231,1.757,1232,1.465,1233,1.757,1234,2.948,1235,1.757,1236,1.514,1237,1.757,1238,1.757,1239,3.692,1240,1.465,1241,1.757,1242,1.757,1243,2.731,1244,3.109,1245,3.109,1246,3.109,1247,1.757,1248,3.109,1249,1.757,1250,1.757,1251,1.757,1252,1.757,1253,1.757,1254,1.757]],["component/70",[2,0.423,3,0.373]],["title/71-1",[0,15.604,95,20.108,107,20.023,1061,31.755]],["name/71-1",[]],["text/71-1",[]],["component/71-1",[]],["title/71-2",[130,30.633]],["name/71-2",[]],["text/71-2",[]],["component/71-2",[]],["title/71-3",[673,38.442]],["name/71-3",[]],["text/71-3",[]],["component/71-3",[]],["title/71-4",[178,26.745,258,27.198,685,32.217]],["name/71-4",[]],["text/71-4",[]],["component/71-4",[]],["title/71-5",[686,51.575]],["name/71-5",[]],["text/71-5",[]],["component/71-5",[]],["title/71-6",[129,27.08,1255,44.235]],["name/71-6",[]],["text/71-6",[]],["component/71-6",[]],["title/71-7",[3,10.035,1190,39.578,1255,36.438]],["name/71-7",[]],["text/71-7",[]],["component/71-7",[]],["title/71-8",[10,25.659,515,33.16]],["name/71-8",[]],["text/71-8",[]],["component/71-8",[]],["title/71-9",[42,23.323,65,16.667,152,25.462,654,23.222]],["name/71-9",[]],["text/71-9",[]],["component/71-9",[]],["title/71-10",[162,38.105,176,24.42]],["name/71-10",[]],["text/71-10",[]],["component/71-10",[]],["title/71-11",[726,30.287,1179,34.77,1255,36.438]],["name/71-11",[]],["text/71-11",[]],["component/71-11",[]],["title/71-12",[10,25.659,515,33.16]],["name/71-12",[]],["text/71-12",[]],["component/71-12",[]],["title/71-13",[130,19.833,832,29.472,932,30.287]],["name/71-13",[]],["text/71-13",[]],["component/71-13",[]],["title/71",[115,18.399,129,22.306,142,20.974]],["name/71",[115,0.466,142,0.531]],["text/71",[0,2.823,2,0.8,3,0.939,10,1.191,17,0.866,19,0.838,28,0.87,29,0.57,40,0.891,42,2.268,44,0.75,46,0.547,47,0.52,48,0.756,55,2.227,65,1.379,72,0.946,79,0.943,86,1.414,87,1.037,92,0.522,95,3.265,106,0.509,107,0.589,111,1.029,113,0.461,115,1.521,116,0.541,124,0.518,125,0.547,128,0.744,129,1.257,130,2.653,133,0.659,136,1.21,140,0.666,141,0.456,142,3.653,149,0.696,150,1.374,152,2.476,154,0.659,155,2.159,157,0.572,158,0.625,162,2.208,165,1.235,169,1.274,172,1,173,0.763,176,1.883,178,1.507,187,0.674,190,0.559,191,0.613,192,0.61,196,1.033,204,0.472,207,0.964,213,0.572,216,1.764,217,1.476,248,0.732,250,0.701,258,1.097,265,0.631,290,1.556,291,1.004,293,0.551,304,0.507,305,0.683,311,0.687,313,1.507,318,0.597,319,0.51,321,0.721,326,0.75,331,1.495,336,0.561,350,0.424,351,0.536,356,1.283,361,0.449,368,0.683,397,0.547,401,0.701,414,0.589,424,0.71,437,0.777,439,0.75,441,0.687,457,0.687,458,0.793,465,0.721,478,0.613,510,0.691,515,3.063,552,1.553,611,0.732,641,0.721,643,0.691,651,0.616,654,1.922,655,2.679,663,0.726,672,0.819,685,0.701,696,1.393,706,0.721,708,0.545,710,2.957,720,0.873,725,1.596,726,3.636,739,0.674,740,0.744,750,0.809,751,0.674,762,0.77,768,0.953,798,0.809,801,0.809,802,0.819,804,1.188,827,0.777,832,1.188,836,1.554,854,0.801,855,1.554,857,1.854,860,0.602,867,0.683,871,1.25,872,0.732,908,0.819,932,1.221,937,1,942,2.263,970,0.901,1066,1.064,1078,1.441,1088,2.231,1102,0.887,1103,0.849,1104,0.917,1122,0.77,1141,0.701,1143,0.744,1177,0.975,1179,0.756,1180,0.953,1181,0.934,1190,1.596,1191,0.873,1193,0.809,1255,3.411,1256,0.861,1257,1.107,1258,0.849,1259,0.901,1260,1.107,1261,1.107,1262,1.107,1263,1.107,1264,1.972,1265,0.917,1266,1.064,1267,0.873,1268,1.107,1269,3.582,1270,2.053,1271,2.87,1272,2.053,1273,1.107,1274,1.107,1275,1.107,1276,0.887,1277,1,1278,1]],["component/71",[2,0.423,3,0.373]],["title/72",[11,26.559,518,41.173]],["name/72",[5,1.313]],["text/72",[2,2.4,3,2.118,11,3.738,55,2.722,113,3.621,368,5.363,518,5.795,715,4.628,821,6.763]],["component/72",[2,0.423,3,0.373]],["title/73",[100,18.208,143,21.937,176,20.116]],["name/73",[100,0.461,176,0.509]],["text/73",[0,2.1,28,3.388,72,3.682,90,4.288,100,2.858,107,4.251,115,2.888,141,4.62,143,4.39,176,4.431,708,3.934]],["component/73",[2,0.423,3,0.373]],["title/74",[100,18.208,183,35.396,184,27.082]],["name/74",[100,0.461,184,0.686]],["text/74",[0,2.135,2,1.815,15,4.541,36,4.166,40,2.524,100,2.905,136,4.341,149,5.106,154,4.833,184,4.321,290,3.53,311,5.04,1279,7.154,1280,5.938]],["component/74",[2,0.423,3,0.373]],["title/75-1",[217,32.395]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["title/75-2",[511,42.971,1281,55.815]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["title/75",[100,22.105,135,33.905]],["name/75",[100,0.461,135,0.707]],["textcomponent/75",[2,0.423,3,0.373]],["title/76-1",[130,30.633]],["name/76-1",[]],["text/76-1",[]],["component/76-1",[]],["title/76-2",[1288,66.337]],["name/76-2",[]],["text/76-2",[]],["component/76-2",[]],["title/76-3",[668,35.969,1289,48.74]],["name/76-3",[]],["text/76-3",[]],["component/76-3",[]],["title/76-4",[141,25.463,259,32.076]],["name/76-4",[]],["text/76-4",[]],["component/76-4",[]],["title/76-5",[136,26.064,162,38.105]],["name/76-5",[]],["text/76-5",[]],["component/76-5",[]],["title/76-6",[10,25.659,732,32.878]],["name/76-6",[]],["text/76-6",[]],["component/76-6",[]],["title/76-7",[137,30.46,152,29.951,622,31.587]],["name/76-7",[]],["text/76-7",[]],["component/76-7",[]],["title/76-8",[684,38.105,1290,53.218]],["name/76-8",[]],["text/76-8",[]],["component/76-8",[]],["title/76-9",[176,24.42,515,33.16]],["name/76-9",[]],["text/76-9",[]],["component/76-9",[]],["title/76-10",[130,19.833,832,29.472,932,30.287]],["name/76-10",[]],["text/76-10",[]],["component/76-10",[]],["title/76",[100,22.105,142,25.463]],["name/76",[100,0.461,142,0.531]],["text/76",[0,1.381,2,0.335,3,0.296,10,1.125,11,2.258,17,1.916,23,0.887,28,1.149,30,0.593,40,0.842,47,0.704,55,3.051,65,1.044,72,0.691,77,0.855,78,1.612,79,2.087,80,1.122,86,1.033,90,1.454,100,0.969,106,0.689,109,0.991,113,1.543,116,0.733,124,0.702,126,0.962,130,1.77,131,1.349,136,1.916,137,0.897,141,1.527,142,4.018,150,0.718,152,1.594,154,2.205,157,1.401,161,0.842,162,3.945,173,1.867,176,1.795,184,1.442,192,1.493,193,0.641,196,0.755,204,1.936,205,0.882,207,1.272,213,2.348,216,0.738,230,0.808,248,0.991,257,0.877,259,1.406,290,1.974,291,2.221,293,0.746,303,1.15,305,1.671,309,0.93,313,1.947,318,0.808,319,0.691,331,1.412,350,1.039,356,0.67,360,0.823,372,1.374,390,0.913,391,0.949,414,1.442,419,0.726,478,1.5,515,1.454,544,1.084,596,2.784,622,1.681,654,3.147,666,1.024,668,3.414,673,0.733,684,2.801,696,1.316,702,0.936,704,0.955,708,2.587,715,3.121,726,1.612,732,0.798,738,1.135,739,1.65,743,3.188,814,1.884,832,1.569,854,2.681,857,0.969,860,3.189,872,0.991,879,1.007,932,1.612,1108,1.201,1178,2.027,1197,1.135,1236,1.242,1276,1.201,1278,1.354,1280,2.71,1288,1.265,1289,2.137,1290,3.192,1291,1.441,1292,2.333,1293,1.22,1294,1.321,1295,2.17,1296,1.441,1297,1.441,1298,1.441,1299,1.579,1300,1.441,1301,2.603,1302,1.441,1303,1.441,1304,1.441]],["component/76",[2,0.423,3,0.373]],["title/77-1",[673,38.442]],["name/77-1",[]],["text/77-1",[]],["component/77-1",[]],["title/77-2",[125,25.155,715,27.082,743,35.728]],["name/77-2",[]],["text/77-2",[]],["component/77-2",[]],["title/77",[100,22.105,932,36.768]],["name/77",[100,0.461,1305,1.164]],["text/77",[0,0.82,17,1.315,28,4.141,55,3.163,72,1.437,79,2.344,92,1.469,100,1.115,101,2.112,107,1.659,115,1.127,124,1.46,125,3.7,130,1.215,136,2.152,141,2.103,143,2.792,150,1.494,154,1.855,174,1.96,178,1.638,184,1.659,196,1.569,216,1.535,259,2.649,274,2.149,290,2.815,305,1.923,313,1.638,354,1.752,356,1.394,361,2.071,372,1.581,441,1.935,446,1.769,475,2.112,478,1.727,534,2.001,596,3.97,668,3.771,673,1.525,678,2.112,684,1.923,695,2.149,715,4.717,716,1.899,727,2.459,743,5.796,932,3.854,1056,2.914,1099,2.582,1122,2.168,1141,1.974,1142,4.153,1194,4.25,1280,2.28,1289,4.025,1306,2.898,1307,3.119,1314,3.119,1315,4.609,1316,2.747,1317,3.119]],["component/77",[2,0.423,3,0.373]],["title/78-1",[10,25.659,737,41.173]],["name/78-1",[]],["text/78-1",[]],["component/78-1",[]],["title/78-2",[0,16.243,136,26.064]],["name/78-2",[]],["text/78-2",[]],["component/78-2",[]],["title/78-3",[1318,62.01]],["name/78-3",[]],["text/78-3",[]],["component/78-3",[]],["title/78-4",[654,42.188]],["name/78-4",[]],["text/78-4",[]],["component/78-4",[]],["title/78-5",[130,24.078,136,26.064]],["name/78-5",[]],["text/78-5",[]],["component/78-5",[]],["title/78-6",[1318,62.01]],["name/78-6",[]],["text/78-6",[]],["component/78-6",[]],["title/78-7",[654,42.188]],["name/78-7",[]],["text/78-7",[]],["component/78-7",[]],["title/78-8",[0,13.38,136,21.469,336,25.812]],["name/78-8",[]],["text/78-8",[]],["component/78-8",[]],["title/78-9",[1318,62.01]],["name/78-9",[]],["text/78-9",[]],["component/78-9",[]],["title/78-10",[654,42.188]],["name/78-10",[]],["text/78-10",[]],["component/78-10",[]],["title/78-11",[176,31.069]],["name/78-11",[]],["text/78-11",[]],["component/78-11",[]],["title/78",[100,28.123]],["name/78",[100,0.824]],["text/78",[0,2.77,2,1.686,3,1.401,10,1.252,15,0.502,20,0.452,30,0.355,36,0.461,37,0.415,40,1.873,42,3.073,43,0.399,55,0.281,65,0.346,68,1.474,79,0.776,86,1.164,89,0.589,92,0.423,95,0.902,99,0.866,100,0.321,120,3.055,125,3.513,126,1.534,127,4.742,129,0.394,130,2.941,131,0.447,134,0.558,136,4.024,141,0.37,142,0.37,149,1.062,152,0.529,154,0.535,155,0.461,158,0.507,161,0.949,165,0.541,173,0.619,176,0.355,200,2.004,202,1.332,203,0.538,204,0.72,207,0.422,216,3.116,221,0.994,224,0.547,252,1.632,290,0.39,291,0.439,304,0.411,305,1.473,309,0.558,311,0.558,313,1.256,319,0.414,321,3.483,336,0.456,350,0.344,351,1.156,354,0.505,356,0.755,372,0.856,414,2.173,441,1.871,457,1.048,478,0.498,494,7.414,510,0.561,547,0.758,611,3.282,643,1.055,654,2.664,656,1.048,657,0.614,660,0.637,694,0.435,696,0.82,708,0.442,710,1.048,714,0.51,732,0.478,735,2.84,737,0.599,747,0.68,752,1.062,755,0.744,757,0.672,758,2.781,770,0.709,779,0.631,781,0.719,782,0.899,856,1.979,872,0.594,942,0.709,962,0.581,1007,0.791,1061,0.758,1075,1.945,1078,0.631,1088,1.313,1094,0.774,1101,0.791,1102,0.719,1103,0.689,1112,1.914,1191,1.885,1239,7.168,1267,0.709,1318,3.916,1319,0.863,1320,0.758,1321,0.946,1322,2.516,1323,0.835,1324,2.516,1325,2.802,1326,0.835,1327,2.221,1328,2.516,1329,2.516,1330,2.516,1331,0.946,1332,0.946,1333,0.835,1334,0.811,1335,0.811,1336,0.946,1441,0.637,1472,0.835,1473,0.758]],["component/78",[2,0.423,3,0.373]],["title/79-1",[826,62.957]],["name/79-1",[]],["text/79-1",[]],["component/79-1",[]],["title/79-2",[217,25.463,1141,39.112]],["name/79-2",[]],["text/79-2",[]],["component/79-2",[]],["title/79-3",[1255,56.278]],["name/79-3",[]],["text/79-3",[]],["component/79-3",[]],["title/79-4",[3,12.182,1190,48.048]],["name/79-4",[]],["text/79-4",[]],["component/79-4",[]],["title/79-5",[726,36.768,1179,42.211]],["name/79-5",[]],["text/79-5",[]],["component/79-5",[]],["title/79",[142,25.463,1255,44.235]],["name/79",[27,0.588,142,0.531]],["text/79",[0,2.15,2,1.078,3,0.716,10,0.866,17,2.034,20,1.049,26,0.995,27,0.952,40,1.793,42,3.11,55,1.136,82,1.542,88,1.207,90,1.119,92,1.711,115,0.754,116,1.02,124,0.976,125,2.384,129,2.529,130,0.812,136,1.532,140,1.255,141,0.859,142,3.181,143,0.899,150,0.999,153,1.94,161,2.04,162,1.286,172,1.016,173,1.437,178,1.096,180,1.348,182,1.464,190,2.437,199,1.201,203,1.248,204,0.889,207,0.979,217,3.181,230,1.124,265,1.189,293,1.038,296,1.278,304,1.663,313,1.096,317,1.368,319,0.961,348,1.378,356,0.932,359,1.195,361,0.846,366,1.262,368,1.286,397,1.03,407,1.389,411,1.338,418,1.166,426,1.286,441,1.294,463,1.338,466,2.864,475,1.412,510,1.302,515,1.949,525,1.938,552,2.611,601,1.412,654,1.949,656,2.253,696,1.763,726,2.87,731,1.621,732,1.109,739,1.27,771,1.697,781,3.862,799,1.542,804,2.793,832,1.207,836,1.579,854,1.508,855,1.579,857,1.348,867,1.286,1103,1.6,1143,1.401,1255,6.976,1256,1.621,1277,1.883,1287,1.697,1333,1.938,1334,1.883,1361,1.883,1362,2.086,1363,1.883,1364,2.086,1365,2.086,1366,1.883,1367,2.086,1368,2.086,1369,1.621,1370,2.086,1371,2.003,1372,2.086,1373,2.086,1374,2.086,1375,1.883,1376,2.086,1377,2.086,1378,3.632,1379,3.632,1380,3.632,1381,2.086,1382,2.003,1383,2.086,1384,2.086,1385,1.796]],["component/79",[2,0.423,3,0.373]],["title/80-1",[118,58.129]],["name/80-1",[]],["text/80-1",[]],["component/80-1",[]],["title/80-2",[217,32.395]],["name/80-2",[]],["text/80-2",[]],["component/80-2",[]],["title/80-3",[1193,57.481]],["name/80-3",[]],["text/80-3",[]],["component/80-3",[]],["title/80-4",[165,37.193,318,33.305]],["name/80-4",[]],["text/80-4",[]],["component/80-4",[]],["title/80-5",[1386,71.011]],["name/80-5",[]],["text/80-5",[]],["component/80-5",[]],["title/80-6",[321,40.235,384,41.173]],["name/80-6",[]],["text/80-6",[]],["component/80-6",[]],["title/80-7",[1387,78.635]],["name/80-7",[]],["text/80-7",[]],["component/80-7",[]],["title/80-8",[46,38.852]],["name/80-8",[]],["text/80-8",[]],["component/80-8",[]],["title/80-9",[65,22.864,740,25.278,1104,31.165,1114,26.672]],["name/80-9",[]],["text/80-9",[]],["component/80-9",[]],["title/80-10",[1388,61.807,1389,55.815]],["name/80-10",[]],["text/80-10",[]],["component/80-10",[]],["title/80-11",[136,21.469,692,28.733,702,31.792]],["name/80-11",[]],["text/80-11",[]],["component/80-11",[]],["title/80-12",[136,21.469,692,28.733,1390,44.835]],["name/80-12",[]],["text/80-12",[]],["component/80-12",[]],["title/80",[74,26.856,136,21.469,188,24.383]],["name/80",[27,0.588,1193,0.942]],["text/80",[0,0.976,2,1.415,3,0.566,6,0.486,10,0.285,11,0.806,15,0.384,20,0.659,23,0.774,24,0.393,26,0.328,28,0.555,36,0.671,37,0.317,39,0.461,40,0.407,42,2.887,43,0.582,46,3.021,47,0.322,55,1.491,65,1.431,72,0.603,74,2.826,75,1.017,79,0.601,80,0.513,87,0.661,90,1.776,92,0.323,99,0.671,100,0.245,105,0.647,107,0.365,111,0.94,113,0.286,115,1.833,124,1.344,130,0.267,131,0.651,133,0.408,135,0.377,136,3.767,137,2.448,140,0.413,143,0.296,150,0.627,152,1.409,154,1.708,156,0.731,161,0.735,163,0.534,165,2.462,167,0.731,168,0.457,169,0.426,171,0.399,183,0.477,184,0.365,188,0.329,190,0.347,196,0.944,198,0.426,199,0.395,203,0.411,204,0.799,207,1.124,216,0.644,217,1.363,250,0.828,252,0.894,257,0.766,267,1.621,275,0.558,277,0.314,282,1.536,290,1.04,292,0.77,296,0.802,304,0.314,311,1.164,314,0.44,317,0.858,318,2.002,319,0.316,321,1.559,322,0.375,334,0.496,340,1.292,341,0.541,350,0.719,354,0.735,355,0.429,356,0.307,358,0.507,360,0.377,361,1.343,368,0.807,372,2.074,373,0.393,378,0.526,384,2.725,418,0.384,419,1.158,441,0.426,445,0.541,446,0.389,451,0.991,457,1.164,462,0.465,475,0.465,514,0.437,515,0.368,521,0.604,530,0.579,531,0.421,536,0.62,538,0.473,552,2.58,580,0.52,601,0.465,611,0.865,622,1.486,623,1.122,629,0.526,641,0.447,654,1.993,656,1.164,657,0.469,673,0.336,691,0.482,692,1.62,702,1.495,706,0.852,708,0.923,709,0.894,714,0.389,715,0.696,726,0.408,728,0.473,734,0.534,735,0.91,736,0.558,737,0.457,739,1.748,740,2.223,742,2.359,752,0.431,758,0.534,761,1.212,803,0.534,804,2.368,832,0.397,850,0.541,857,2.139,867,0.423,871,1.458,873,0.477,899,1.714,910,1.004,945,0.568,970,0.558,977,0.62,985,2.422,993,0.62,994,0.62,1030,0.638,1043,0.486,1050,0.52,1056,0.844,1064,1.084,1072,0.502,1077,1.153,1083,0.591,1084,0.991,1092,0.558,1093,1.153,1102,0.55,1104,3.677,1109,1.216,1111,0.513,1114,2.034,1115,0.55,1116,1.104,1122,0.477,1141,0.434,1143,1.26,1178,0.979,1191,1.032,1193,3.707,1221,0.437,1243,0.579,1267,0.541,1276,0.55,1280,1.75,1283,0.541,1287,0.558,1318,2.264,1323,0.638,1325,0.638,1326,0.638,1327,3.802,1338,0.591,1347,0.62,1366,0.62,1386,0.62,1389,0.62,1390,0.604,1391,0.686,1392,0.659,1393,0.638,1394,0.686,1395,0.541,1396,0.686,1397,0.686,1398,0.686,1399,0.604,1400,0.686,1401,0.659,1402,0.496,1403,0.686,1404,0.604,1405,0.568,1406,1.216,1407,0.686,1408,0.659,1409,0.604,1410,1.309,1411,0.579,1412,0.686,1413,0.686,1414,0.686,1415,0.686,1416,0.686,1417,0.686,1418,0.659,1419,0.686,1420,3.93,1421,1.743,1422,0.579,1423,1.802,1424,3.31,1425,0.686,1426,0.686,1427,1.153,1428,1.309,1429,0.686,1430,0.638,1431,0.507,1432,0.686,1433,1.309,1434,2.394,1435,0.686,1436,0.659,1437,0.659,1438,0.591,1439,0.604,1440,0.604,1441,0.927,1442,0.686,1443,0.686,1444,0.659,1445,1.876,1446,1.032,1447,0.62,1448,0.686,1449,0.604,1450,0.686,1451,0.686,1452,0.568,1453,0.686,1454,0.604]],["component/80",[2,0.423,3,0.373]],["title/81-1",[40,24.428]],["name/81-1",[]],["text/81-1",[]],["component/81-1",[]],["title/81-2",[30,20.116,40,15.816,277,23.313]],["name/81-2",[]],["text/81-2",[]],["component/81-2",[]],["title/81-3",[40,19.2,709,42.211]],["name/81-3",[]],["text/81-3",[]],["component/81-3",[]],["title/81-4",[40,19.2,694,29.903]],["name/81-4",[]],["text/81-4",[]],["component/81-4",[]],["title/81-5",[0,20.666]],["name/81-5",[]],["text/81-5",[]],["component/81-5",[]],["title/81-6",[0,13.38,30,20.116,277,23.313]],["name/81-6",[]],["text/81-6",[]],["component/81-6",[]],["title/81-7",[0,16.243,709,42.211]],["name/81-7",[]],["text/81-7",[]],["component/81-7",[]],["title/81-8",[0,16.243,694,29.903]],["name/81-8",[]],["text/81-8",[]],["component/81-8",[]],["title/81-9",[172,24.803,213,26.317,361,20.661]],["name/81-9",[]],["text/81-9",[]],["component/81-9",[]],["title/81-10",[188,29.601,189,33.305]],["name/81-10",[]],["text/81-10",[]],["component/81-10",[]],["title/81-11",[858,50.816]],["name/81-11",[]],["text/81-11",[]],["component/81-11",[]],["title/81-12",[172,24.803,361,20.661,686,33.392]],["name/81-12",[]],["text/81-12",[]],["component/81-12",[]],["title/81-13",[188,29.601,189,33.305]],["name/81-13",[]],["text/81-13",[]],["component/81-13",[]],["title/81-14",[858,50.816]],["name/81-14",[]],["text/81-14",[]],["component/81-14",[]],["title/81-15",[127,24.325,172,18.338,361,15.275,596,23.063,686,24.688]],["name/81-15",[]],["text/81-15",[]],["component/81-15",[]],["title/81-16",[188,29.601,189,33.305]],["name/81-16",[]],["text/81-16",[]],["component/81-16",[]],["title/81-17",[858,50.816]],["name/81-17",[]],["text/81-17",[]],["component/81-17",[]],["title/81-18",[172,18.338,178,19.774,258,20.108,361,15.275,685,23.82]],["name/81-18",[]],["text/81-18",[]],["component/81-18",[]],["title/81-19",[0,13.38,95,27.198,217,20.974]],["name/81-19",[]],["text/81-19",[]],["component/81-19",[]],["title/81-20",[188,29.601,189,33.305]],["name/81-20",[]],["text/81-20",[]],["component/81-20",[]],["title/81-21",[858,50.816]],["name/81-21",[]],["text/81-21",[]],["component/81-21",[]],["title/81-22",[213,31.949,1402,44.696]],["name/81-22",[]],["text/81-22",[]],["component/81-22",[]],["title/81-23",[150,29.601,1402,44.696]],["name/81-23",[]],["text/81-23",[]],["component/81-23",[]],["title/81",[0,13.38,27,23.242,40,15.816]],["name/81",[27,1.051]],["text/81",[0,2.76,2,0.451,3,0.278,11,1.697,16,0.9,17,0.851,20,1.291,24,0.809,27,0.645,28,1.301,29,0.727,30,2.228,34,0.366,37,0.932,40,2.188,42,1.087,44,0.503,46,0.698,47,0.349,55,2.141,65,3.253,68,1.5,74,0.745,77,0.424,78,0.442,79,0.649,83,0.418,85,0.367,90,0.399,95,2.69,99,0.381,106,0.926,111,0.708,115,0.51,116,0.69,120,1.056,124,1.436,125,0.698,126,0.477,127,1.983,128,0.499,129,0.326,130,0.786,131,0.37,141,0.306,143,0.32,150,1.469,153,0.397,156,0.416,157,0.384,158,1.448,161,0.418,164,0.724,172,3.774,176,1.715,177,0.86,186,0.404,196,1.544,198,0.876,199,0.428,204,2.403,205,0.437,207,0.663,213,3.739,216,3.265,217,1.788,250,0.47,254,3.067,257,1.18,264,0.361,265,1.15,277,0.924,290,0.614,291,0.986,292,0.831,304,0.924,309,0.461,313,0.391,318,0.401,322,0.406,326,0.503,331,1.051,335,1.837,350,0.773,351,0.683,356,0.631,358,1.044,361,1.431,368,0.458,372,0.377,390,0.453,397,0.698,403,1.819,418,0.416,424,0.477,439,0.503,457,0.876,510,0.882,518,0.495,541,0.84,545,1.083,552,3.467,582,0.499,587,0.57,596,3.277,606,0.499,643,0.882,651,0.414,673,0.363,674,0.865,686,1.323,693,1.928,694,2.1,701,0.522,710,1.903,711,1.098,732,0.395,739,2.148,752,0.888,804,1.486,842,0.543,857,0.913,860,3.933,866,0.595,867,3.105,871,1.563,879,0.499,886,1.001,904,0.556,908,1.044,918,1.114,1043,0.527,1056,0.334,1070,0.563,1071,1.821,1078,0.522,1088,0.578,1114,0.527,1141,0.47,1143,0.948,1179,1.377,1194,0.488,1204,0.627,1239,0.522,1258,0.57,1259,0.605,1282,0.991,1402,4.275,1427,1.244,1441,0.527,1446,0.586,1455,0.743,1456,2.26,1457,2.125,1458,0.671,1459,0.616,1460,0.616,1461,0.627,1462,0.691,1463,2.721,1464,0.714,1465,3.037,1466,1.357,1467,1.357,1468,0.64,1469,1.641,1470,1.216,1471,0.714]],["component/81",[2,0.423,3,0.373]],["title/82-1",[40,24.428]],["name/82-1",[]],["text/82-1",[]],["component/82-1",[]],["title/82-2",[0,20.666]],["name/82-2",[]],["text/82-2",[]],["component/82-2",[]],["title/82-3",[115,28.417]],["name/82-3",[]],["text/82-3",[]],["component/82-3",[]],["title/82-4",[100,28.123]],["name/82-4",[]],["text/82-4",[]],["component/82-4",[]],["title/82",[94,45.762]],["name/82",[94,1.34]],["text/82",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/82",[2,0.423,3,0.373]],["title/83",[2,13.805,3,12.182]],["name/83",[5,1.313]],["text/83",[0,1.892,2,2.126,3,0.954,4,3.866,6,3.43,10,2.989,27,3.287,36,2.483,54,3.106,65,3.31,72,2.23,97,1.864,98,3.817,115,1.749,129,3.767,135,3.95,136,4.291,141,1.994,149,3.043,167,2.705,168,3.224,169,3.003,170,4.168,171,4.19,172,2.358,173,3.335,175,3.063,179,3.464,180,3.128,181,2.543,182,3.397,183,3.365,184,2.575,185,3.023,186,2.631,187,2.948,690,3.306,1474,4.84]],["component/83",[2,0.423,3,0.373]],["title/84-1",[65,19.606,477,31.388,1475,45.976]],["name/84-1",[]],["text/84-1",[]],["component/84-1",[]],["title/84-2",[548,37.638,647,42.211]],["name/84-2",[]],["text/84-2",[]],["component/84-2",[]],["title/84",[88,35.779,304,28.302]],["name/84",[272,1.534]],["text/84",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245,1475,6.235]],["component/84",[2,0.423,3,0.373]],["title/85-1",[0,16.243,336,31.336]],["name/85-1",[]],["text/85-1",[]],["component/85-1",[]],["title/85-2",[28,26.203,113,25.725]],["name/85-2",[]],["text/85-2",[]],["component/85-2",[]],["title/85-3",[100,18.208,136,21.469,351,24.632]],["name/85-3",[]],["text/85-3",[]],["component/85-3",[]],["title/85-4",[186,33.6,187,37.638]],["name/85-4",[]],["text/85-4",[]],["component/85-4",[]],["title/85",[285,33.752,664,42.211]],["name/85",[285,1.258]],["text/85",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/85",[2,0.423,3,0.373]],["title/86-1",[129,27.08,171,35.969]],["name/86-1",[]],["text/86-1",[]],["component/86-1",[]],["title/86-2",[690,42.211,696,30.006]],["name/86-2",[]],["text/86-2",[]],["component/86-2",[]],["title/86-3",[696,30.006,715,32.878]],["name/86-3",[]],["text/86-3",[]],["component/86-3",[]],["title/86-4",[65,19.606,446,28.876,673,24.889]],["name/86-4",[]],["text/86-4",[]],["component/86-4",[]],["title/86",[10,25.659,664,42.211]],["name/86",[10,0.956]],["text/86",[0,2.238,2,1.796,3,1.174,4,1.056,10,1.231,11,1.009,13,0.432,17,0.99,20,0.443,21,0.676,23,1.754,26,0.42,28,1.257,33,1.123,34,0.434,36,2.512,37,0.407,38,0.63,40,0.921,43,1.044,47,0.778,55,1.652,68,0.431,72,0.764,73,0.411,74,1.239,77,0.502,79,1.079,85,0.435,86,0.607,87,1.186,89,0.578,92,1.895,94,0.513,95,0.471,97,0.339,99,0.452,100,0.315,105,1.74,106,0.405,107,0.469,110,1.104,111,0.442,112,0.644,113,1.865,115,1.454,124,0.776,125,1.16,129,2.863,130,1.567,131,0.438,132,0.521,133,1.764,134,2.78,135,2.458,136,2.511,138,0.483,141,0.363,142,1.222,143,1.278,144,0.505,146,0.602,151,0.55,153,0.471,155,0.452,156,0.492,157,0.857,159,1.359,160,1.716,162,1.022,164,1.204,165,0.998,167,0.492,168,0.587,171,0.513,172,0.808,174,0.554,176,0.655,178,0.463,179,1.186,182,0.618,184,2.605,185,1.035,186,0.479,187,0.536,191,0.488,196,1.182,198,0.547,199,0.507,200,1.455,207,0.778,213,0.455,217,0.967,224,0.536,257,0.515,258,0.471,264,0.428,274,0.607,290,0.72,291,0.431,313,0.871,316,1.123,319,0.406,321,0.573,322,0.481,328,1.89,331,1.545,333,2.157,336,0.447,350,0.338,356,0.394,359,0.505,360,0.483,366,0.533,373,0.505,401,0.557,419,1.435,420,0.676,446,1.332,469,0.518,499,0.578,515,0.889,531,0.54,534,1.064,538,0.607,552,0.477,582,0.592,589,0.729,606,0.592,611,1.096,614,0.717,622,1.029,623,0.527,631,0.651,641,1.079,651,0.49,654,2.627,658,0.518,659,0.602,669,0.612,673,1.967,674,1.016,684,1.448,685,1.049,688,0.667,689,0.612,692,0.936,696,4.133,701,0.618,702,0.55,704,1.056,708,0.434,712,0.922,714,0.5,715,3.743,716,0.536,717,0.743,718,0.729,719,0.729,720,0.695,721,0.743,722,0.624,723,1.24,725,0.685,726,0.986,727,0.695,728,1.618,729,0.743,730,0.651,731,0.685,732,0.469,733,0.743,734,0.685,735,2.062,736,1.911,737,1.104,738,0.667,739,0.536,740,0.592,741,0.758,742,0.37,743,1.163,744,0.743,745,0.758,746,0.758,747,0.667,748,0.758,749,0.624,750,0.644,751,0.536,752,1.042,753,0.685,754,0.758,755,0.729,756,0.758,757,1.24,758,0.685,759,0.743,760,0.758,761,0.569,762,0.612,789,0.758,790,0.758,791,0.705,792,0.758,793,1.212,794,0.758,795,0.758,796,0.685,797,0.644,798,0.644,799,0.651,800,0.685,801,0.644,802,0.651,803,0.685,804,0.51,805,0.743,806,0.758,1476,0.795,1477,0.795,1478,0.795,1479,0.795,1480,0.795,1481,0.927]],["component/86",[2,0.423,3,0.373]],["title/87",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/87",[0,0.605]],["text/87",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234,1482,2.391]],["component/87",[2,0.423,3,0.373]],["title/88",[649,51.575]],["name/88",[5,1.313]],["text/88",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/88",[2,0.423,3,0.373]],["title/89-1",[141,32.395]],["name/89-1",[]],["text/89-1",[]],["component/89-1",[]],["title/89-2",[27,28.215,141,25.463]],["name/89-2",[]],["text/89-2",[]],["component/89-2",[]],["title/89-3",[115,28.417]],["name/89-3",[]],["text/89-3",[]],["component/89-3",[]],["title/89-4",[115,22.336,143,26.631]],["name/89-4",[]],["text/89-4",[]],["component/89-4",[]],["title/89-5",[115,22.336,142,25.463]],["name/89-5",[]],["text/89-5",[]],["component/89-5",[]],["title/89-6",[115,22.336,176,24.42]],["name/89-6",[]],["text/89-6",[]],["component/89-6",[]],["title/89-7",[100,28.123]],["name/89-7",[]],["text/89-7",[]],["component/89-7",[]],["title/89-8",[100,22.105,142,25.463]],["name/89-8",[]],["text/89-8",[]],["component/89-8",[]],["title/89",[113,25.725,848,53.218]],["name/89",[113,0.959]],["text/89",[0,2.262,2,1.922,3,1.696,4,3.076,11,1.451,13,1.656,15,1.887,27,1.541,28,2.9,36,1.732,40,1.691,43,1.501,55,1.703,72,1.556,73,1.575,87,1.705,100,2.446,113,2.847,115,2.472,116,1.65,117,2.198,129,1.479,131,1.68,132,3.22,136,2.885,137,2.02,141,2.818,142,3.233,143,2.346,155,2.792,157,1.745,159,1.954,199,1.944,204,1.439,290,2.365,291,1.65,333,2.069,336,1.712,359,1.934,461,3.686,478,1.869,531,2.069,548,2.056,622,2.095,643,2.108,658,1.986,689,2.347,691,2.369,692,1.905,696,1.639,730,4.024,732,1.796,740,2.267,827,3.82,843,2.525,849,2.848,850,2.662,853,2.907,854,2.441,855,2.556,856,2.795,857,2.182]],["component/89",[2,0.423,3,0.373]],["title/90-1",[261,49.103]],["name/90-1",[]],["text/90-1",[]],["component/90-1",[]],["title/90-2",[262,46.008]],["name/90-2",[]],["text/90-2",[]],["component/90-2",[]],["title/90-3",[]],["name/90-3",[]],["text/90-3",[]],["component/90-3",[]],["title/90",[263,43.795,264,30.006]],["name/90",[264,1.118]],["text/90",[17,4.04,30,3.123,34,3.194,37,1.949,39,2.832,45,3.234,55,1.319,68,2.062,97,2.498,150,2.02,153,2.253,164,2.163,176,2.563,204,1.797,205,2.481,212,2.959,255,3.018,261,4.051,262,4.625,263,2.988,264,4.911,265,2.404,266,3.278,267,2.855,268,3.491,269,3.431,270,3.083,271,3.491,272,2.809,273,3.278,274,2.905,275,3.431,276,6.545,277,3.62,278,3.234,279,3.154,280,3.557,281,3.117,282,2.706,293,2.099,294,3.325,295,2.766,296,2.584,297,3.557,298,2.668,299,2.651,300,3.325,301,3.631,302,3.631,303,3.234]],["component/90",[2,0.423,3,0.373]],["title/91-1",[188,24.383,189,27.434,304,23.313]],["name/91-1",[]],["text/91-1",[]],["component/91-1",[]],["title/91-2",[193,21.758,233,31.004,305,31.388]],["name/91-2",[]],["text/91-2",[]],["component/91-2",[]],["title/91-3",[138,27.929,193,21.758,233,31.004]],["name/91-3",[]],["text/91-3",[]],["component/91-3",[]],["title/91",[193,26.415,308,36.163]],["name/91",[307,1.34]],["text/91",[2,1.587,3,1.4,17,1.507,20,1.798,54,3.655,55,2.536,62,1.951,80,2.672,97,1.376,99,1.832,106,2.616,117,2.326,138,3.125,145,2.399,159,2.068,193,3.036,230,3.828,233,5.392,286,3.37,305,2.203,306,4.452,308,5.181,309,3.534,310,2.102,311,3.534,312,5.523,313,3.732,314,3.655,315,5.882,316,2.419,317,2.343,318,1.925,319,1.646,320,2.958,321,2.326,322,1.951,323,2.705,324,2.44,325,2.531,326,2.419,329,4.905,330,4.635,346,2.399,360,1.96,1114,2.531,1483,3.761,1484,3.761,1485,3.432,1486,3.761]],["component/91",[2,0.423,3,0.373]],["title/92",[193,33.606]],["name/92",[5,1.313]],["text/92",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/92",[2,0.423,3,0.373]],["title/93-1",[306,20.868,345,35.396,346,34.19]],["name/93-1",[]],["text/93-1",[]],["component/93-1",[]],["title/93-2",[347,67.707]],["name/93-2",[]],["text/93-2",[]],["component/93-2",[]],["title/93-3",[348,51.972]],["name/93-3",[]],["text/93-3",[]],["component/93-3",[]],["title/93-4",[97,23.801,306,25.334]],["name/93-4",[]],["text/93-4",[]],["component/93-4",[]],["title/93-5",[190,25.715,304,23.313,306,20.868]],["name/93-5",[]],["text/93-5",[]],["component/93-5",[]],["title/93-6",[77,29.021,306,20.868,349,37.216]],["name/93-6",[]],["text/93-6",[]],["component/93-6",[]],["title/93-7",[298,32.217,328,32.439,351,24.632]],["name/93-7",[]],["text/93-7",[]],["component/93-7",[]],["title/93-8",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/93-8",[]],["text/93-8",[]],["component/93-8",[]],["title/93-9",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/93-9",[]],["text/93-9",[]],["component/93-9",[]],["title/93-10",[55,11.777,206,19.381,227,23.82,258,20.108,259,19.535]],["name/93-10",[]],["text/93-10",[]],["component/93-10",[]],["title/93-11",[97,19.606,306,20.868,354,28.593]],["name/93-11",[]],["text/93-11",[]],["component/93-11",[]],["title/93-12",[355,38.595,356,27.631]],["name/93-12",[]],["text/93-12",[]],["component/93-12",[]],["title/93",[286,36.562,306,25.334]],["name/93",[306,0.944]],["text/93",[2,0.959,3,0.983,4,0.627,24,0.798,26,0.665,28,0.591,30,2.208,34,0.686,42,2.687,43,0.619,46,1.253,55,2.666,65,1.343,68,0.681,77,2.843,78,0.829,79,0.64,85,1.723,88,0.807,90,1.36,97,1.654,105,0.688,111,1.271,115,1.26,124,0.652,130,0.543,135,2.356,138,1.391,142,0.574,143,0.6,145,0.936,154,0.829,155,0.715,156,0.779,161,0.782,176,0.55,181,1.332,184,0.741,185,1.583,190,1.762,192,1.922,193,1.083,196,0.701,197,2.271,200,0.684,206,0.717,207,3.089,210,0.824,216,1.248,217,0.574,258,2.294,259,1.81,261,2.178,262,1.483,264,3.574,277,0.638,285,2.345,286,3.617,292,0.82,293,0.693,295,0.914,298,2.207,299,1.593,306,4.385,308,0.815,310,0.82,318,0.751,319,1.607,322,1.384,342,0.751,344,0.843,345,1.762,346,2.884,350,0.972,351,2.078,352,1.779,353,2.578,354,0.782,356,0.623,359,0.798,360,1.391,361,1.743,362,1.134,363,1.2,364,1.154,365,1.134,366,0.843,372,1.285,373,0.798,379,0.969,380,1.175,381,1.008,382,1.03,384,0.928,385,0.978,386,1.2,387,1.115,388,1.115,389,1.2,390,0.848,391,0.882,392,3.003,393,1.2,394,2.03,395,1.2,396,2.139,397,0.688,398,1.115,403,0.987,404,0.96,405,0.888,407,1.689,410,3.003,411,0.894,432,1.2,435,1.099,436,4.231,437,0.978,438,2.711,439,0.943,441,0.864,443,1.2,446,0.79,447,1.134,448,1.134,449,1.134,461,0.943,464,0.969,465,0.907,466,1.099,467,0.914,468,0.838,469,0.82,470,0.987,471,1.154,472,1.083,473,1.03,510,0.87,1485,3.351,1487,1.295,1488,1.467,1489,2.356,1490,1.295,1491,1.295,1492,1.154,1493,1.295,1494,1.295,1495,1.295]],["component/93",[2,0.423,3,0.373]],["title/94-1",[29,26.213,176,20.116,177,31.004]],["name/94-1",[]],["text/94-1",[]],["component/94-1",[]],["title/94-2",[181,32.468,264,30.006]],["name/94-2",[]],["text/94-2",[]],["component/94-2",[]],["title/94",[188,29.601,189,33.305]],["name/94",[188,0.617,489,1.11]],["text/94",[2,1.458,3,1.566,17,3.351,29,2.19,34,2.094,65,3.433,79,1.954,131,2.117,142,2.69,143,1.833,155,2.181,176,1.681,177,2.59,178,2.234,181,3.43,193,2.791,197,2.769,203,2.545,206,2.19,225,5.228,254,2.59,261,2.656,262,2.489,264,3.17,293,3.25,295,4.283,299,2.674,342,2.292,359,2.437,361,1.726,391,2.692,478,2.355,490,2.79,491,3.662,492,3.354,493,3.354,494,3.109,495,6.58,496,3.405,497,3.405,498,3.662,500,3.354,501,3.662,502,3.662,503,3.662,504,3.662,505,3.662,526,6.843,622,2.639,869,2.811,1496,3.952]],["component/94",[2,0.423,3,0.373]],["title/95-1",[40,24.428]],["name/95-1",[]],["text/95-1",[]],["component/95-1",[]],["title/95-2",[0,20.666]],["name/95-2",[]],["text/95-2",[]],["component/95-2",[]],["title/95-3",[115,28.417]],["name/95-3",[]],["text/95-3",[]],["component/95-3",[]],["title/95-4",[100,28.123]],["name/95-4",[]],["text/95-4",[]],["component/95-4",[]],["title/95",[94,45.762]],["name/95",[94,1.34]],["text/95",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/95",[2,0.423,3,0.373]],["title/96",[2,13.805,3,12.182]],["name/96",[5,1.313]],["text/96",[0,1.892,2,2.126,3,0.954,4,3.866,6,3.43,10,2.989,27,3.287,36,2.483,54,3.106,65,3.31,72,2.23,97,1.864,98,3.817,115,1.749,129,3.767,135,3.95,136,4.291,141,1.994,149,3.043,167,2.705,168,3.224,169,3.003,170,4.168,171,4.19,172,2.358,173,3.335,175,3.063,179,3.464,180,3.128,181,2.543,182,3.397,183,3.365,184,2.575,185,3.023,186,2.631,187,2.948,690,3.306,1474,4.84]],["component/96",[2,0.423,3,0.373]],["title/97-1",[65,19.606,477,31.388,1475,45.976]],["name/97-1",[]],["text/97-1",[]],["component/97-1",[]],["title/97-2",[548,37.638,647,42.211]],["name/97-2",[]],["text/97-2",[]],["component/97-2",[]],["title/97",[88,35.779,304,28.302]],["name/97",[272,1.534]],["text/97",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245,1475,6.235]],["component/97",[2,0.423,3,0.373]],["title/98-1",[0,16.243,336,31.336]],["name/98-1",[]],["text/98-1",[]],["component/98-1",[]],["title/98-2",[28,26.203,113,25.725]],["name/98-2",[]],["text/98-2",[]],["component/98-2",[]],["title/98-3",[100,18.208,136,21.469,351,24.632]],["name/98-3",[]],["text/98-3",[]],["component/98-3",[]],["title/98-4",[186,33.6,187,37.638]],["name/98-4",[]],["text/98-4",[]],["component/98-4",[]],["title/98",[285,33.752,664,42.211]],["name/98",[285,1.258]],["text/98",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/98",[2,0.423,3,0.373]],["title/99-1",[129,27.08,171,35.969]],["name/99-1",[]],["text/99-1",[]],["component/99-1",[]],["title/99-2",[690,42.211,696,30.006]],["name/99-2",[]],["text/99-2",[]],["component/99-2",[]],["title/99-3",[696,30.006,715,32.878]],["name/99-3",[]],["text/99-3",[]],["component/99-3",[]],["title/99-4",[65,19.606,446,28.876,673,24.889]],["name/99-4",[]],["text/99-4",[]],["component/99-4",[]],["title/99",[10,25.659,664,42.211]],["name/99",[10,0.956]],["text/99",[0,2.238,2,1.796,3,1.174,4,1.056,10,1.231,11,1.009,13,0.432,17,0.99,20,0.443,21,0.676,23,1.754,26,0.42,28,1.257,33,1.123,34,0.434,36,2.512,37,0.407,38,0.63,40,0.921,43,1.044,47,0.778,55,1.652,68,0.431,72,0.764,73,0.411,74,1.239,77,0.502,79,1.079,85,0.435,86,0.607,87,1.186,89,0.578,92,1.895,94,0.513,95,0.471,97,0.339,99,0.452,100,0.315,105,1.74,106,0.405,107,0.469,110,1.104,111,0.442,112,0.644,113,1.865,115,1.454,124,0.776,125,1.16,129,2.863,130,1.567,131,0.438,132,0.521,133,1.764,134,2.78,135,2.458,136,2.511,138,0.483,141,0.363,142,1.222,143,1.278,144,0.505,146,0.602,151,0.55,153,0.471,155,0.452,156,0.492,157,0.857,159,1.359,160,1.716,162,1.022,164,1.204,165,0.998,167,0.492,168,0.587,171,0.513,172,0.808,174,0.554,176,0.655,178,0.463,179,1.186,182,0.618,184,2.605,185,1.035,186,0.479,187,0.536,191,0.488,196,1.182,198,0.547,199,0.507,200,1.455,207,0.778,213,0.455,217,0.967,224,0.536,257,0.515,258,0.471,264,0.428,274,0.607,290,0.72,291,0.431,313,0.871,316,1.123,319,0.406,321,0.573,322,0.481,328,1.89,331,1.545,333,2.157,336,0.447,350,0.338,356,0.394,359,0.505,360,0.483,366,0.533,373,0.505,401,0.557,419,1.435,420,0.676,446,1.332,469,0.518,499,0.578,515,0.889,531,0.54,534,1.064,538,0.607,552,0.477,582,0.592,589,0.729,606,0.592,611,1.096,614,0.717,622,1.029,623,0.527,631,0.651,641,1.079,651,0.49,654,2.627,658,0.518,659,0.602,669,0.612,673,1.967,674,1.016,684,1.448,685,1.049,688,0.667,689,0.612,692,0.936,696,4.133,701,0.618,702,0.55,704,1.056,708,0.434,712,0.922,714,0.5,715,3.743,716,0.536,717,0.743,718,0.729,719,0.729,720,0.695,721,0.743,722,0.624,723,1.24,725,0.685,726,0.986,727,0.695,728,1.618,729,0.743,730,0.651,731,0.685,732,0.469,733,0.743,734,0.685,735,2.062,736,1.911,737,1.104,738,0.667,739,0.536,740,0.592,741,0.758,742,0.37,743,1.163,744,0.743,745,0.758,746,0.758,747,0.667,748,0.758,749,0.624,750,0.644,751,0.536,752,1.042,753,0.685,754,0.758,755,0.729,756,0.758,757,1.24,758,0.685,759,0.743,760,0.758,761,0.569,762,0.612,789,0.758,790,0.758,791,0.705,792,0.758,793,1.212,794,0.758,795,0.758,796,0.685,797,0.644,798,0.644,799,0.651,800,0.685,801,0.644,802,0.651,803,0.685,804,0.51,805,0.743,806,0.758,1476,0.795,1477,0.795,1478,0.795,1479,0.795,1480,0.795,1481,0.927]],["component/99",[2,0.423,3,0.373]],["title/100",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/100",[0,0.605]],["text/100",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234,1482,2.391]],["component/100",[2,0.423,3,0.373]],["title/101",[649,51.575]],["name/101",[5,1.313]],["text/101",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/101",[2,0.423,3,0.373]],["title/102-1",[141,32.395]],["name/102-1",[]],["text/102-1",[]],["component/102-1",[]],["title/102-2",[27,28.215,141,25.463]],["name/102-2",[]],["text/102-2",[]],["component/102-2",[]],["title/102-3",[115,28.417]],["name/102-3",[]],["text/102-3",[]],["component/102-3",[]],["title/102-4",[115,22.336,143,26.631]],["name/102-4",[]],["text/102-4",[]],["component/102-4",[]],["title/102-5",[115,22.336,142,25.463]],["name/102-5",[]],["text/102-5",[]],["component/102-5",[]],["title/102-6",[115,22.336,176,24.42]],["name/102-6",[]],["text/102-6",[]],["component/102-6",[]],["title/102-7",[100,28.123]],["name/102-7",[]],["text/102-7",[]],["component/102-7",[]],["title/102-8",[100,22.105,142,25.463]],["name/102-8",[]],["text/102-8",[]],["component/102-8",[]],["title/102",[113,25.725,848,53.218]],["name/102",[113,0.959]],["text/102",[0,2.262,2,1.922,3,1.696,4,3.076,11,1.451,13,1.656,15,1.887,27,1.541,28,2.9,36,1.732,40,1.691,43,1.501,55,1.703,72,1.556,73,1.575,87,1.705,100,2.446,113,2.847,115,2.472,116,1.65,117,2.198,129,1.479,131,1.68,132,3.22,136,2.885,137,2.02,141,2.818,142,3.233,143,2.346,155,2.792,157,1.745,159,1.954,199,1.944,204,1.439,290,2.365,291,1.65,333,2.069,336,1.712,359,1.934,461,3.686,478,1.869,531,2.069,548,2.056,622,2.095,643,2.108,658,1.986,689,2.347,691,2.369,692,1.905,696,1.639,730,4.024,732,1.796,740,2.267,827,3.82,843,2.525,849,2.848,850,2.662,853,2.907,854,2.441,855,2.556,856,2.795,857,2.182]],["component/102",[2,0.423,3,0.373]],["title/103-1",[37,20.004,40,13.446,277,19.819,361,17.564]],["name/103-1",[]],["text/103-1",[]],["component/103-1",[]],["title/103-2",[188,29.601,189,33.305]],["name/103-2",[]],["text/103-2",[]],["component/103-2",[]],["title/103-3",[858,50.816]],["name/103-3",[]],["text/103-3",[]],["component/103-3",[]],["title/103-4",[55,19.337,859,46.228]],["name/103-4",[]],["text/103-4",[]],["component/103-4",[]],["title/103-5",[40,19.2,694,29.903]],["name/103-5",[]],["text/103-5",[]],["component/103-5",[]],["title/103",[27,28.215,40,19.2]],["name/103",[860,1.252]],["text/103",[0,0.826,2,1.147,3,1.16,4,0.796,11,3.564,13,2.081,17,1.788,28,0.75,30,2.973,40,2.984,42,0.954,43,1.885,55,2.595,65,3.963,73,1.979,74,0.934,79,0.813,83,0.994,87,0.894,90,0.95,100,0.633,109,1.17,111,0.887,122,1.34,125,2.095,128,1.189,130,0.689,141,2.424,153,0.945,167,0.989,175,1.12,190,0.894,191,0.98,196,0.891,207,0.831,210,1.047,216,4.241,217,0.729,254,1.914,259,1.631,267,2.129,277,2.694,291,0.865,296,1.084,309,1.098,316,1.198,351,2.052,354,2.382,356,0.791,361,0.718,372,0.897,397,1.553,439,1.198,478,0.98,552,2.781,656,1.098,693,1.112,694,3.152,702,1.105,712,4.614,765,1.44,804,2.974,859,4.401,860,3.199,861,2.147,862,2.603,863,3.253,864,2.652,865,1.559,866,1.417,867,1.938,868,1.524,869,2.078,870,5.138,871,3.129,872,1.17,873,1.23,874,1.376,875,3.735,876,1.376,877,2.298,878,1.559,879,1.189,880,1.559,881,1.559]],["component/103",[2,0.423,3,0.373]],["title/104-1",[0,11.375,37,20.004,277,19.819,361,17.564]],["name/104-1",[]],["text/104-1",[]],["component/104-1",[]],["title/104-2",[188,29.601,189,33.305]],["name/104-2",[]],["text/104-2",[]],["component/104-2",[]],["title/104-3",[858,50.816]],["name/104-3",[]],["text/104-3",[]],["component/104-3",[]],["title/104-4",[0,16.243,694,29.903]],["name/104-4",[]],["text/104-4",[]],["component/104-4",[]],["title/104-5",[0,16.243,882,51.173]],["name/104-5",[]],["text/104-5",[]],["component/104-5",[]],["title/104",[0,16.243,27,28.215]],["name/104",[0,0.605]],["text/104",[0,2.772,2,1.416,3,1.25,13,1.483,17,1.275,30,1.966,40,0.939,43,1.343,55,0.946,65,3.556,73,1.41,87,1.527,111,1.515,116,1.478,125,3.132,150,3.519,204,1.288,217,1.245,230,2.681,254,3.03,259,1.569,277,2.278,296,3.884,322,1.651,351,1.462,356,2.224,373,1.732,385,3.491,397,1.494,552,3.977,601,2.047,693,1.9,694,3.067,712,5.868,804,2.88,823,4.012,852,2.163,860,3.994,867,1.864,871,3.03,883,2.163,884,3.767,885,2.662,886,2.142,887,2.55,888,5.459,889,2.55,890,2.603,891,2.603,892,2.603,893,2.603,894,2.55,895,2.603,896,2.603,897,2.603,898,2.603,899,2.163,900,2.603,901,2.603]],["component/104",[2,0.423,3,0.373]],["title/105",[13,24.977,73,23.754,100,18.208]],["name/105",[5,1.313]],["text/105",[0,2.544,2,2.022,3,1.85,4,1.814,11,1.012,13,3.075,26,1.124,27,1.075,30,3.425,36,3.215,37,1.089,40,3.158,43,2.786,55,2.206,73,2.925,85,1.164,95,3.766,100,2.749,130,1.572,140,1.418,141,0.97,150,1.932,157,1.218,158,1.33,171,1.371,172,1.148,200,1.156,213,1.218,216,2.605,217,2.18,230,1.269,287,1.534,290,1.023,293,1.172,313,1.238,331,1.227,336,1.194,354,1.323,360,1.292,373,1.35,391,1.491,407,1.569,418,1.317,446,1.336,478,1.304,511,1.638,658,1.386,694,3.977,696,1.144,712,5.528,751,1.435,823,1.491,851,1.704,852,1.686,861,1.609,873,1.638,874,1.831,877,1.722,902,1.987,903,2.075,904,1.762,905,1.95,906,1.831,907,1.95,908,1.741,909,1.917,910,1.807,911,2.075]],["component/105",[2,0.423,3,0.373]],["title/106-1",[261,49.103]],["name/106-1",[]],["text/106-1",[]],["component/106-1",[]],["title/106-2",[262,46.008]],["name/106-2",[]],["text/106-2",[]],["component/106-2",[]],["title/106-3",[]],["name/106-3",[]],["text/106-3",[]],["component/106-3",[]],["title/106",[263,43.795,264,30.006]],["name/106",[264,1.118]],["text/106",[17,4.04,30,3.123,34,3.194,37,1.949,39,2.832,45,3.234,55,1.319,68,2.062,97,2.498,150,2.02,153,2.253,164,2.163,176,2.563,204,1.797,205,2.481,212,2.959,255,3.018,261,4.051,262,4.625,263,2.988,264,4.911,265,2.404,266,3.278,267,2.855,268,3.491,269,3.431,270,3.083,271,3.491,272,2.809,273,3.278,274,2.905,275,3.431,276,6.545,277,3.62,278,3.234,279,3.154,280,3.557,281,3.117,282,2.706,293,2.099,294,3.325,295,2.766,296,2.584,297,3.557,298,2.668,299,2.651,300,3.325,301,3.631,302,3.631,303,3.234]],["component/106",[2,0.423,3,0.373]],["title/107-1",[188,24.383,189,27.434,304,23.313]],["name/107-1",[]],["text/107-1",[]],["component/107-1",[]],["title/107-2",[193,21.758,233,31.004,305,31.388]],["name/107-2",[]],["text/107-2",[]],["component/107-2",[]],["title/107-3",[138,27.929,193,21.758,233,31.004]],["name/107-3",[]],["text/107-3",[]],["component/107-3",[]],["title/107",[193,26.415,308,36.163]],["name/107",[307,1.34]],["text/107",[2,1.587,3,1.4,17,1.507,20,1.798,54,3.655,55,2.536,62,1.951,80,2.672,97,1.376,99,1.832,106,2.616,117,2.326,138,3.125,145,2.399,159,2.068,193,3.036,230,3.828,233,5.392,286,3.37,305,2.203,306,4.452,308,5.181,309,3.534,310,2.102,311,3.534,312,5.523,313,3.732,314,3.655,315,5.882,316,2.419,317,2.343,318,1.925,319,1.646,320,2.958,321,2.326,322,1.951,323,2.705,324,2.44,325,2.531,326,2.419,329,4.905,330,4.635,346,2.399,360,1.96,1114,2.531,1483,3.761,1484,3.761,1485,3.432,1486,3.761]],["component/107",[2,0.423,3,0.373]],["title/108",[193,33.606]],["name/108",[5,1.313]],["text/108",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/108",[2,0.423,3,0.373]],["title/109-1",[306,20.868,345,35.396,346,34.19]],["name/109-1",[]],["text/109-1",[]],["component/109-1",[]],["title/109-2",[347,67.707]],["name/109-2",[]],["text/109-2",[]],["component/109-2",[]],["title/109-3",[348,51.972]],["name/109-3",[]],["text/109-3",[]],["component/109-3",[]],["title/109-4",[97,23.801,306,25.334]],["name/109-4",[]],["text/109-4",[]],["component/109-4",[]],["title/109-5",[190,25.715,304,23.313,306,20.868]],["name/109-5",[]],["text/109-5",[]],["component/109-5",[]],["title/109-6",[77,29.021,306,20.868,349,37.216]],["name/109-6",[]],["text/109-6",[]],["component/109-6",[]],["title/109-7",[298,32.217,328,32.439,351,24.632]],["name/109-7",[]],["text/109-7",[]],["component/109-7",[]],["title/109-8",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/109-8",[]],["text/109-8",[]],["component/109-8",[]],["title/109-9",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/109-9",[]],["text/109-9",[]],["component/109-9",[]],["title/109-10",[55,11.777,206,19.381,227,23.82,258,20.108,259,19.535]],["name/109-10",[]],["text/109-10",[]],["component/109-10",[]],["title/109-11",[97,19.606,306,20.868,354,28.593]],["name/109-11",[]],["text/109-11",[]],["component/109-11",[]],["title/109-12",[355,38.595,356,27.631]],["name/109-12",[]],["text/109-12",[]],["component/109-12",[]],["title/109",[286,36.562,306,25.334]],["name/109",[306,0.944]],["text/109",[2,0.959,3,0.983,4,0.627,24,0.798,26,0.665,28,0.591,30,2.208,34,0.686,42,2.687,43,0.619,46,1.253,55,2.666,65,1.343,68,0.681,77,2.843,78,0.829,79,0.64,85,1.723,88,0.807,90,1.36,97,1.654,105,0.688,111,1.271,115,1.26,124,0.652,130,0.543,135,2.356,138,1.391,142,0.574,143,0.6,145,0.936,154,0.829,155,0.715,156,0.779,161,0.782,176,0.55,181,1.332,184,0.741,185,1.583,190,1.762,192,1.922,193,1.083,196,0.701,197,2.271,200,0.684,206,0.717,207,3.089,210,0.824,216,1.248,217,0.574,258,2.294,259,1.81,261,2.178,262,1.483,264,3.574,277,0.638,285,2.345,286,3.617,292,0.82,293,0.693,295,0.914,298,2.207,299,1.593,306,4.385,308,0.815,310,0.82,318,0.751,319,1.607,322,1.384,342,0.751,344,0.843,345,1.762,346,2.884,350,0.972,351,2.078,352,1.779,353,2.578,354,0.782,356,0.623,359,0.798,360,1.391,361,1.743,362,1.134,363,1.2,364,1.154,365,1.134,366,0.843,372,1.285,373,0.798,379,0.969,380,1.175,381,1.008,382,1.03,384,0.928,385,0.978,386,1.2,387,1.115,388,1.115,389,1.2,390,0.848,391,0.882,392,3.003,393,1.2,394,2.03,395,1.2,396,2.139,397,0.688,398,1.115,403,0.987,404,0.96,405,0.888,407,1.689,410,3.003,411,0.894,432,1.2,435,1.099,436,4.231,437,0.978,438,2.711,439,0.943,441,0.864,443,1.2,446,0.79,447,1.134,448,1.134,449,1.134,461,0.943,464,0.969,465,0.907,466,1.099,467,0.914,468,0.838,469,0.82,470,0.987,471,1.154,472,1.083,473,1.03,510,0.87,1485,3.351,1487,1.295,1488,1.467,1489,2.356,1490,1.295,1491,1.295,1492,1.154,1493,1.295,1494,1.295,1495,1.295]],["component/109",[2,0.423,3,0.373]],["title/110-1",[29,26.213,176,20.116,177,31.004]],["name/110-1",[]],["text/110-1",[]],["component/110-1",[]],["title/110-2",[181,32.468,264,30.006]],["name/110-2",[]],["text/110-2",[]],["component/110-2",[]],["title/110",[188,29.601,189,33.305]],["name/110",[188,0.617,489,1.11]],["text/110",[2,1.458,3,1.566,17,3.351,29,2.19,34,2.094,65,3.433,79,1.954,131,2.117,142,2.69,143,1.833,155,2.181,176,1.681,177,2.59,178,2.234,181,3.43,193,2.791,197,2.769,203,2.545,206,2.19,225,5.228,254,2.59,261,2.656,262,2.489,264,3.17,293,3.25,295,4.283,299,2.674,342,2.292,359,2.437,361,1.726,391,2.692,478,2.355,490,2.79,491,3.662,492,3.354,493,3.354,494,3.109,495,6.58,496,3.405,497,3.405,498,3.662,500,3.354,501,3.662,502,3.662,503,3.662,504,3.662,505,3.662,526,6.843,622,2.639,869,2.811,1496,3.952]],["component/110",[2,0.423,3,0.373]],["title/111-1",[40,24.428]],["name/111-1",[]],["text/111-1",[]],["component/111-1",[]],["title/111-2",[0,20.666]],["name/111-2",[]],["text/111-2",[]],["component/111-2",[]],["title/111-3",[115,28.417]],["name/111-3",[]],["text/111-3",[]],["component/111-3",[]],["title/111-4",[100,28.123]],["name/111-4",[]],["text/111-4",[]],["component/111-4",[]],["title/111",[94,45.762]],["name/111",[94,1.34]],["text/111",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/111",[2,0.423,3,0.373]],["title/112",[2,13.805,3,12.182]],["name/112",[5,1.313]],["text/112",[0,1.892,2,2.126,3,0.954,4,3.866,6,3.43,10,2.989,27,3.287,36,2.483,54,3.106,65,3.31,72,2.23,97,1.864,98,3.817,115,1.749,129,3.767,135,3.95,136,4.291,141,1.994,149,3.043,167,2.705,168,3.224,169,3.003,170,4.168,171,4.19,172,2.358,173,3.335,175,3.063,179,3.464,180,3.128,181,2.543,182,3.397,183,3.365,184,2.575,185,3.023,186,2.631,187,2.948,690,3.306,1474,4.84]],["component/112",[2,0.423,3,0.373]],["title/113-1",[65,19.606,477,31.388,1475,45.976]],["name/113-1",[]],["text/113-1",[]],["component/113-1",[]],["title/113-2",[548,37.638,647,42.211]],["name/113-2",[]],["text/113-2",[]],["component/113-2",[]],["title/113",[88,35.779,304,28.302]],["name/113",[272,1.534]],["text/113",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245,1475,6.235]],["component/113",[2,0.423,3,0.373]],["title/114-1",[0,16.243,336,31.336]],["name/114-1",[]],["text/114-1",[]],["component/114-1",[]],["title/114-2",[28,26.203,113,25.725]],["name/114-2",[]],["text/114-2",[]],["component/114-2",[]],["title/114-3",[100,18.208,136,21.469,351,24.632]],["name/114-3",[]],["text/114-3",[]],["component/114-3",[]],["title/114-4",[186,33.6,187,37.638]],["name/114-4",[]],["text/114-4",[]],["component/114-4",[]],["title/114",[285,33.752,664,42.211]],["name/114",[285,1.258]],["text/114",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/114",[2,0.423,3,0.373]],["title/115-1",[129,27.08,171,35.969]],["name/115-1",[]],["text/115-1",[]],["component/115-1",[]],["title/115-2",[690,42.211,696,30.006]],["name/115-2",[]],["text/115-2",[]],["component/115-2",[]],["title/115-3",[696,30.006,715,32.878]],["name/115-3",[]],["text/115-3",[]],["component/115-3",[]],["title/115-4",[65,19.606,446,28.876,673,24.889]],["name/115-4",[]],["text/115-4",[]],["component/115-4",[]],["title/115",[10,25.659,664,42.211]],["name/115",[10,0.956]],["text/115",[0,2.238,2,1.796,3,1.174,4,1.056,10,1.231,11,1.009,13,0.432,17,0.99,20,0.443,21,0.676,23,1.754,26,0.42,28,1.257,33,1.123,34,0.434,36,2.512,37,0.407,38,0.63,40,0.921,43,1.044,47,0.778,55,1.652,68,0.431,72,0.764,73,0.411,74,1.239,77,0.502,79,1.079,85,0.435,86,0.607,87,1.186,89,0.578,92,1.895,94,0.513,95,0.471,97,0.339,99,0.452,100,0.315,105,1.74,106,0.405,107,0.469,110,1.104,111,0.442,112,0.644,113,1.865,115,1.454,124,0.776,125,1.16,129,2.863,130,1.567,131,0.438,132,0.521,133,1.764,134,2.78,135,2.458,136,2.511,138,0.483,141,0.363,142,1.222,143,1.278,144,0.505,146,0.602,151,0.55,153,0.471,155,0.452,156,0.492,157,0.857,159,1.359,160,1.716,162,1.022,164,1.204,165,0.998,167,0.492,168,0.587,171,0.513,172,0.808,174,0.554,176,0.655,178,0.463,179,1.186,182,0.618,184,2.605,185,1.035,186,0.479,187,0.536,191,0.488,196,1.182,198,0.547,199,0.507,200,1.455,207,0.778,213,0.455,217,0.967,224,0.536,257,0.515,258,0.471,264,0.428,274,0.607,290,0.72,291,0.431,313,0.871,316,1.123,319,0.406,321,0.573,322,0.481,328,1.89,331,1.545,333,2.157,336,0.447,350,0.338,356,0.394,359,0.505,360,0.483,366,0.533,373,0.505,401,0.557,419,1.435,420,0.676,446,1.332,469,0.518,499,0.578,515,0.889,531,0.54,534,1.064,538,0.607,552,0.477,582,0.592,589,0.729,606,0.592,611,1.096,614,0.717,622,1.029,623,0.527,631,0.651,641,1.079,651,0.49,654,2.627,658,0.518,659,0.602,669,0.612,673,1.967,674,1.016,684,1.448,685,1.049,688,0.667,689,0.612,692,0.936,696,4.133,701,0.618,702,0.55,704,1.056,708,0.434,712,0.922,714,0.5,715,3.743,716,0.536,717,0.743,718,0.729,719,0.729,720,0.695,721,0.743,722,0.624,723,1.24,725,0.685,726,0.986,727,0.695,728,1.618,729,0.743,730,0.651,731,0.685,732,0.469,733,0.743,734,0.685,735,2.062,736,1.911,737,1.104,738,0.667,739,0.536,740,0.592,741,0.758,742,0.37,743,1.163,744,0.743,745,0.758,746,0.758,747,0.667,748,0.758,749,0.624,750,0.644,751,0.536,752,1.042,753,0.685,754,0.758,755,0.729,756,0.758,757,1.24,758,0.685,759,0.743,760,0.758,761,0.569,762,0.612,789,0.758,790,0.758,791,0.705,792,0.758,793,1.212,794,0.758,795,0.758,796,0.685,797,0.644,798,0.644,799,0.651,800,0.685,801,0.644,802,0.651,803,0.685,804,0.51,805,0.743,806,1.427,1476,0.795,1477,0.795,1478,0.795,1479,0.795,1480,0.795]],["component/115",[2,0.423,3,0.373]],["title/116",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/116",[0,0.605]],["text/116",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234,1482,2.391]],["component/116",[2,0.423,3,0.373]],["title/117",[649,51.575]],["name/117",[5,1.313]],["text/117",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/117",[2,0.423,3,0.373]],["title/118-1",[141,32.395]],["name/118-1",[]],["text/118-1",[]],["component/118-1",[]],["title/118-2",[27,28.215,141,25.463]],["name/118-2",[]],["text/118-2",[]],["component/118-2",[]],["title/118-3",[115,28.417]],["name/118-3",[]],["text/118-3",[]],["component/118-3",[]],["title/118-4",[115,22.336,143,26.631]],["name/118-4",[]],["text/118-4",[]],["component/118-4",[]],["title/118-5",[115,22.336,142,25.463]],["name/118-5",[]],["text/118-5",[]],["component/118-5",[]],["title/118-6",[115,22.336,176,24.42]],["name/118-6",[]],["text/118-6",[]],["component/118-6",[]],["title/118-7",[100,28.123]],["name/118-7",[]],["text/118-7",[]],["component/118-7",[]],["title/118-8",[100,22.105,142,25.463]],["name/118-8",[]],["text/118-8",[]],["component/118-8",[]],["title/118",[113,25.725,848,53.218]],["name/118",[113,0.959]],["text/118",[0,2.262,2,1.922,3,1.696,4,3.076,11,1.451,13,1.656,15,1.887,27,1.541,28,2.9,36,1.732,40,1.691,43,1.501,55,1.703,72,1.556,73,1.575,87,1.705,100,2.446,113,2.847,115,2.472,116,1.65,117,2.198,129,1.479,131,1.68,132,3.22,136,2.885,137,2.02,141,2.818,142,3.233,143,2.346,155,2.792,157,1.745,159,1.954,199,1.944,204,1.439,290,2.365,291,1.65,333,2.069,336,1.712,359,1.934,461,3.686,478,1.869,531,2.069,548,2.056,622,2.095,643,2.108,658,1.986,689,2.347,691,2.369,692,1.905,696,1.639,730,4.024,732,1.796,740,2.267,827,3.82,843,2.525,849,2.848,850,2.662,853,2.907,854,2.441,855,2.556,856,2.795,857,2.182]],["component/118",[2,0.423,3,0.373]],["title/119-1",[261,49.103]],["name/119-1",[]],["text/119-1",[]],["component/119-1",[]],["title/119-2",[262,46.008]],["name/119-2",[]],["text/119-2",[]],["component/119-2",[]],["title/119-3",[]],["name/119-3",[]],["text/119-3",[]],["component/119-3",[]],["title/119",[263,43.795,264,30.006]],["name/119",[264,1.118]],["text/119",[17,3.948,26,1.489,30,2.56,34,2.513,37,1.441,39,2.094,45,2.392,55,2.584,68,3.167,97,1.966,150,1.494,153,1.666,164,1.6,167,1.743,168,2.078,176,2.56,181,1.638,193,3.2,204,1.329,205,1.835,212,2.189,217,1.285,228,2.13,229,2.078,255,2.232,261,3.187,262,4.381,263,2.21,264,4.305,265,1.778,266,2.425,267,2.112,268,2.582,269,2.538,270,2.28,271,2.582,272,2.078,273,6.42,274,2.149,275,2.538,276,5.364,277,2.967,278,2.392,279,2.333,280,2.631,281,2.306,282,2.001,283,2.816,284,2.816,285,4.089,286,1.845,287,2.03,288,2.816,289,2.747,290,1.355,291,1.525,292,1.835,293,2.54,294,2.459,295,2.046,296,1.911,297,2.631,298,1.974,299,3.208,300,4.025,301,2.685,302,2.685,303,2.392]],["component/119",[2,0.423,3,0.373]],["title/120-1",[188,24.383,189,27.434,304,23.313]],["name/120-1",[]],["text/120-1",[]],["component/120-1",[]],["title/120-2",[193,21.758,233,31.004,305,31.388]],["name/120-2",[]],["text/120-2",[]],["component/120-2",[]],["title/120-3",[138,27.929,193,21.758,233,31.004]],["name/120-3",[]],["text/120-3",[]],["component/120-3",[]],["title/120-4",[55,13.541,286,25.604,306,17.741,307,25.188]],["name/120-4",[]],["text/120-4",[]],["component/120-4",[]],["title/120",[193,26.415,308,36.163]],["name/120",[307,1.34]],["text/120",[2,1.341,3,1.183,17,1.18,20,1.408,54,2.995,55,2.925,62,1.528,80,2.093,82,2.069,92,2.199,97,1.078,99,2.394,106,3.218,138,2.56,145,1.88,159,1.62,176,1.844,193,3.814,204,1.193,205,1.647,207,1.314,230,4.196,233,5.434,257,1.638,286,2.761,305,1.726,306,4.541,308,4.556,309,2.896,310,1.647,311,1.736,312,5.447,313,1.47,314,3.852,315,6.965,316,1.895,317,3.061,318,1.508,319,1.29,320,3.865,321,1.822,322,1.528,323,2.119,324,1.911,325,1.983,326,1.895,327,4.019,328,1.783,329,4.019,330,3.798,331,1.458,332,2.361,333,1.715,334,2.024,335,2.003,336,2.366,337,2.093,338,2.207,339,2.176]],["component/120",[2,0.423,3,0.373]],["title/121",[193,33.606]],["name/121",[5,1.313]],["text/121",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/121",[2,0.423,3,0.373]],["title/122-1",[306,20.868,345,35.396,346,34.19]],["name/122-1",[]],["text/122-1",[]],["component/122-1",[]],["title/122-2",[347,67.707]],["name/122-2",[]],["text/122-2",[]],["component/122-2",[]],["title/122-3",[348,51.972]],["name/122-3",[]],["text/122-3",[]],["component/122-3",[]],["title/122-4",[97,23.801,306,25.334]],["name/122-4",[]],["text/122-4",[]],["component/122-4",[]],["title/122-5",[190,25.715,304,23.313,306,20.868]],["name/122-5",[]],["text/122-5",[]],["component/122-5",[]],["title/122-6",[77,29.021,306,20.868,349,37.216]],["name/122-6",[]],["text/122-6",[]],["component/122-6",[]],["title/122-7",[298,32.217,328,32.439,351,24.632]],["name/122-7",[]],["text/122-7",[]],["component/122-7",[]],["title/122-8",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/122-8",[]],["text/122-8",[]],["component/122-8",[]],["title/122-9",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/122-9",[]],["text/122-9",[]],["component/122-9",[]],["title/122-10",[55,11.777,206,19.381,227,23.82,258,20.108,259,19.535]],["name/122-10",[]],["text/122-10",[]],["component/122-10",[]],["title/122-11",[97,19.606,306,20.868,354,28.593]],["name/122-11",[]],["text/122-11",[]],["component/122-11",[]],["title/122-12",[355,38.595,356,27.631]],["name/122-12",[]],["text/122-12",[]],["component/122-12",[]],["title/122",[286,36.562,306,25.334]],["name/122",[306,0.944]],["text/122",[2,0.835,3,0.976,4,0.97,24,0.669,26,0.557,28,0.914,30,1.956,34,0.575,40,0.363,42,2.667,43,0.519,46,1.066,47,0.548,55,2.458,65,1.157,68,0.571,77,2.821,78,0.695,79,0.536,85,1.484,88,0.676,90,1.157,97,1.44,105,0.577,111,1.081,115,1.086,124,0.547,130,0.455,135,2.051,138,1.183,142,0.481,143,0.503,145,0.784,150,0.559,154,0.695,155,0.599,156,0.653,161,0.656,176,0.852,181,1.578,184,0.621,185,1.347,190,1.517,192,1.656,193,2.331,196,0.588,197,2.434,199,0.673,200,0.573,204,0.498,206,0.601,207,3.137,210,0.691,216,1.479,217,0.481,227,0.739,258,1.997,259,1.559,261,2.335,262,1.758,264,3.554,277,0.535,285,2.042,286,3.227,290,0.507,292,0.687,293,0.581,295,0.766,298,2.366,299,1.888,304,1.376,306,4.247,308,0.683,310,0.687,318,0.629,319,1.384,322,1.178,328,0.744,335,0.836,342,0.629,344,0.707,345,1.499,346,2.511,350,0.827,351,2.12,352,2.108,353,2.221,354,0.656,356,0.522,357,1.425,359,1.235,360,1.183,361,1.778,362,0.95,363,1.006,364,0.967,365,0.95,366,0.707,372,1.896,373,0.669,379,0.812,380,0.985,381,0.845,382,0.863,383,1.055,384,0.778,385,0.82,386,1.006,387,0.935,388,0.935,389,1.006,390,0.711,391,0.739,392,2.587,393,1.006,394,1.727,395,1.006,396,1.819,397,0.577,398,0.935,402,2.534,403,0.828,404,0.805,405,0.744,406,0.985,407,1.437,408,0.985,409,1.055,410,3.219,411,1.384,412,0.908,413,0.985,414,0.621,415,0.896,416,1.028,417,0.95,418,0.653,419,0.565,420,0.896,421,1.028,422,1.899,423,0.921,424,0.749,425,1.028,426,0.72,427,1.055,431,1.028,432,1.857,435,0.921,436,3.748,437,0.82,438,2.335,439,0.791,441,0.725,443,1.006,446,0.662,447,0.95,448,0.95,449,0.95,461,0.791,464,0.812,465,0.76,466,0.921,467,0.766,468,0.703,469,0.687,470,0.828,471,0.967,472,0.908,473,0.863,510,0.729,1487,1.085,1489,2.004,1490,1.085,1491,1.085,1492,0.967,1493,1.085,1494,1.085,1495,1.085]],["component/122",[2,0.423,3,0.373]],["title/123-1",[29,26.213,176,20.116,177,31.004]],["name/123-1",[]],["text/123-1",[]],["component/123-1",[]],["title/123-2",[181,32.468,264,30.006]],["name/123-2",[]],["text/123-2",[]],["component/123-2",[]],["title/123",[188,29.601,189,33.305]],["name/123",[188,0.617,489,1.11]],["text/123",[2,1.421,3,1.533,17,3.281,29,2.117,34,2.024,65,3.647,79,1.888,131,2.046,142,2.62,143,1.771,155,2.108,176,1.624,177,2.503,178,2.16,181,3.341,193,2.718,197,2.676,203,2.46,206,2.117,225,5.092,254,2.503,261,2.567,262,2.405,264,3.088,293,3.165,295,4.172,299,2.584,342,2.215,357,4.204,359,2.355,361,1.668,391,2.601,478,2.276,490,2.696,491,3.54,492,3.242,493,3.242,494,3.005,495,6.441,496,3.291,497,5.092,498,3.54,500,3.242,501,3.54,502,3.54,503,3.54,504,3.54,505,3.54,526,6.698,622,2.551,869,2.717,1496,3.82]],["component/123",[2,0.423,3,0.373]],["title/124-1",[37,20.004,40,13.446,277,19.819,361,17.564]],["name/124-1",[]],["text/124-1",[]],["component/124-1",[]],["title/124-2",[188,29.601,189,33.305]],["name/124-2",[]],["text/124-2",[]],["component/124-2",[]],["title/124-3",[858,50.816]],["name/124-3",[]],["text/124-3",[]],["component/124-3",[]],["title/124-4",[55,19.337,859,46.228]],["name/124-4",[]],["text/124-4",[]],["component/124-4",[]],["title/124-5",[40,19.2,694,29.903]],["name/124-5",[]],["text/124-5",[]],["component/124-5",[]],["title/124",[27,28.215,40,19.2]],["name/124",[860,1.252]],["text/124",[0,0.826,2,1.147,3,1.16,4,0.796,11,3.564,13,2.081,17,1.788,28,0.75,30,2.973,40,2.984,42,0.954,43,1.885,55,2.595,65,3.963,73,1.979,74,0.934,79,0.813,83,0.994,87,0.894,90,0.95,100,0.633,109,1.17,111,0.887,122,1.34,125,2.095,128,1.189,130,0.689,141,2.424,153,0.945,167,0.989,175,1.12,190,0.894,191,0.98,196,0.891,207,0.831,210,1.047,216,4.241,217,0.729,254,1.914,259,1.631,267,2.129,277,2.694,291,0.865,296,1.084,309,1.098,316,1.198,351,2.052,354,2.382,356,0.791,361,0.718,372,0.897,397,1.553,439,1.198,478,0.98,552,2.781,656,1.098,693,1.112,694,3.152,702,1.105,712,4.614,765,1.44,804,2.974,859,4.401,860,3.199,861,2.147,862,2.603,863,3.253,864,2.652,865,1.559,866,1.417,867,1.938,868,1.524,869,2.078,870,5.138,871,3.129,872,1.17,873,1.23,874,1.376,875,3.735,876,1.376,877,2.298,878,1.559,879,1.189,880,1.559,881,1.559]],["component/124",[2,0.423,3,0.373]],["title/125-1",[0,11.375,37,20.004,277,19.819,361,17.564]],["name/125-1",[]],["text/125-1",[]],["component/125-1",[]],["title/125-2",[188,29.601,189,33.305]],["name/125-2",[]],["text/125-2",[]],["component/125-2",[]],["title/125-3",[858,50.816]],["name/125-3",[]],["text/125-3",[]],["component/125-3",[]],["title/125-4",[0,16.243,694,29.903]],["name/125-4",[]],["text/125-4",[]],["component/125-4",[]],["title/125-5",[0,16.243,882,51.173]],["name/125-5",[]],["text/125-5",[]],["component/125-5",[]],["title/125",[0,16.243,27,28.215]],["name/125",[0,0.605]],["text/125",[0,2.772,2,1.416,3,1.25,13,1.483,17,1.275,30,1.966,40,0.939,43,1.343,55,0.946,65,3.556,73,1.41,87,1.527,111,1.515,116,1.478,125,3.132,150,3.519,204,1.288,217,1.245,230,2.681,254,3.03,259,1.569,277,2.278,296,3.884,322,1.651,351,1.462,356,2.224,373,1.732,385,3.491,397,1.494,552,3.977,601,2.047,693,1.9,694,3.067,712,5.868,804,2.88,823,4.012,852,2.163,860,3.994,867,1.864,871,3.03,883,2.163,884,3.767,885,2.662,886,2.142,887,2.55,888,5.459,889,2.55,890,2.603,891,2.603,892,2.603,893,2.603,894,2.55,895,2.603,896,2.603,897,2.603,898,2.603,899,2.163,900,2.603,901,2.603]],["component/125",[2,0.423,3,0.373]],["title/126",[13,24.977,73,23.754,100,18.208]],["name/126",[5,1.313]],["text/126",[0,2.544,2,2.022,3,1.85,4,1.814,11,1.012,13,3.075,26,1.124,27,1.075,30,3.425,36,3.215,37,1.089,40,3.158,43,2.786,55,2.206,73,2.925,85,1.164,95,3.766,100,2.749,130,1.572,140,1.418,141,0.97,150,1.932,157,1.218,158,1.33,171,1.371,172,1.148,200,1.156,213,1.218,216,2.605,217,2.18,230,1.269,287,1.534,290,1.023,293,1.172,313,1.238,331,1.227,336,1.194,354,1.323,360,1.292,373,1.35,391,1.491,407,1.569,418,1.317,446,1.336,478,1.304,511,1.638,658,1.386,694,3.977,696,1.144,712,5.528,751,1.435,823,1.491,851,1.704,852,1.686,861,1.609,873,1.638,874,1.831,877,1.722,902,1.987,903,2.075,904,1.762,905,1.95,906,1.831,907,1.95,908,1.741,909,1.917,910,1.807,911,2.075]],["component/126",[2,0.423,3,0.373]],["title/127-1",[40,24.428]],["name/127-1",[]],["text/127-1",[]],["component/127-1",[]],["title/127-2",[0,20.666]],["name/127-2",[]],["text/127-2",[]],["component/127-2",[]],["title/127-3",[115,28.417]],["name/127-3",[]],["text/127-3",[]],["component/127-3",[]],["title/127-4",[100,28.123]],["name/127-4",[]],["text/127-4",[]],["component/127-4",[]],["title/127",[94,45.762]],["name/127",[94,1.34]],["text/127",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/127",[2,0.423,3,0.373]],["title/128",[2,13.805,3,12.182]],["name/128",[5,1.313]],["text/128",[0,1.838,2,2.236,3,0.918,4,3.778,6,3.3,10,1.933,27,3.193,36,3.587,40,1.447,54,2.988,65,2.694,72,2.146,97,1.793,98,3.672,100,1.665,115,1.683,129,3.681,135,2.555,136,3.938,141,2.882,149,2.927,158,2.628,167,2.603,168,3.102,169,2.889,170,4.01,171,4.071,172,2.269,173,3.208,174,2.927,175,2.947,176,1.84,177,2.836,178,2.446,179,3.333,180,3.009,181,2.446,182,3.268,183,3.238,184,2.477,185,2.908,186,2.532,187,2.836]],["component/128",[2,0.423,3,0.373]],["title/129-1",[261,49.103]],["name/129-1",[]],["text/129-1",[]],["component/129-1",[]],["title/129-2",[262,46.008]],["name/129-2",[]],["text/129-2",[]],["component/129-2",[]],["title/129-3",[]],["name/129-3",[]],["text/129-3",[]],["component/129-3",[]],["title/129",[263,43.795,264,30.006]],["name/129",[264,1.118]],["text/129",[17,3.948,26,1.489,30,2.56,34,2.513,37,1.441,39,2.094,45,2.392,55,2.584,68,3.167,97,1.966,150,1.494,153,1.666,164,1.6,167,1.743,168,2.078,176,2.56,181,1.638,193,3.2,204,1.329,205,1.835,212,2.189,217,1.285,228,2.13,229,2.078,255,2.232,261,3.187,262,4.381,263,2.21,264,4.305,265,1.778,266,2.425,267,2.112,268,2.582,269,2.538,270,2.28,271,2.582,272,2.078,273,6.42,274,2.149,275,2.538,276,5.364,277,2.967,278,2.392,279,2.333,280,2.631,281,2.306,282,2.001,283,2.816,284,2.816,285,4.089,286,1.845,287,2.03,288,2.816,289,2.747,290,1.355,291,1.525,292,1.835,293,2.54,294,2.459,295,2.046,296,1.911,297,2.631,298,1.974,299,3.208,300,4.025,301,2.685,302,2.685,303,2.392]],["component/129",[2,0.423,3,0.373]],["title/130-1",[188,24.383,189,27.434,304,23.313]],["name/130-1",[]],["text/130-1",[]],["component/130-1",[]],["title/130-2",[193,21.758,233,31.004,305,31.388]],["name/130-2",[]],["text/130-2",[]],["component/130-2",[]],["title/130-3",[138,27.929,193,21.758,233,31.004]],["name/130-3",[]],["text/130-3",[]],["component/130-3",[]],["title/130-4",[55,13.541,286,25.604,306,17.741,307,25.188]],["name/130-4",[]],["text/130-4",[]],["component/130-4",[]],["title/130",[193,26.415,308,36.163]],["name/130",[307,1.34]],["text/130",[2,1.341,3,1.183,17,1.18,20,1.408,54,2.995,55,2.925,62,1.528,80,2.093,82,2.069,92,2.199,97,1.078,99,2.394,106,3.218,138,2.56,145,1.88,159,1.62,176,1.844,193,3.814,204,1.193,205,1.647,207,1.314,230,4.196,233,5.434,257,1.638,286,2.761,305,1.726,306,4.541,308,4.556,309,2.896,310,1.647,311,1.736,312,5.447,313,1.47,314,3.852,315,6.965,316,1.895,317,3.061,318,1.508,319,1.29,320,3.865,321,1.822,322,1.528,323,2.119,324,1.911,325,1.983,326,1.895,327,4.019,328,1.783,329,4.019,330,3.798,331,1.458,332,2.361,333,1.715,334,2.024,335,2.003,336,2.366,337,2.093,338,2.207,339,2.176]],["component/130",[2,0.423,3,0.373]],["title/131",[193,33.606]],["name/131",[5,1.313]],["text/131",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/131",[2,0.423,3,0.373]],["title/132-1",[306,20.868,345,35.396,346,34.19]],["name/132-1",[]],["text/132-1",[]],["component/132-1",[]],["title/132-2",[347,67.707]],["name/132-2",[]],["text/132-2",[]],["component/132-2",[]],["title/132-3",[348,51.972]],["name/132-3",[]],["text/132-3",[]],["component/132-3",[]],["title/132-4",[97,23.801,306,25.334]],["name/132-4",[]],["text/132-4",[]],["component/132-4",[]],["title/132-5",[190,25.715,304,23.313,306,20.868]],["name/132-5",[]],["text/132-5",[]],["component/132-5",[]],["title/132-6",[77,29.021,306,20.868,349,37.216]],["name/132-6",[]],["text/132-6",[]],["component/132-6",[]],["title/132-7",[298,32.217,328,32.439,351,24.632]],["name/132-7",[]],["text/132-7",[]],["component/132-7",[]],["title/132-8",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/132-8",[]],["text/132-8",[]],["component/132-8",[]],["title/132-9",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/132-9",[]],["text/132-9",[]],["component/132-9",[]],["title/132-10",[55,11.777,206,19.381,227,23.82,258,20.108,259,19.535]],["name/132-10",[]],["text/132-10",[]],["component/132-10",[]],["title/132-11",[97,19.606,306,20.868,354,28.593]],["name/132-11",[]],["text/132-11",[]],["component/132-11",[]],["title/132-12",[355,38.595,356,27.631]],["name/132-12",[]],["text/132-12",[]],["component/132-12",[]],["title/132",[286,36.562,306,25.334]],["name/132",[306,0.944]],["text/132",[2,0.835,3,0.976,4,0.97,24,0.669,26,0.557,28,0.914,30,1.956,34,0.575,40,0.363,42,2.667,43,0.519,46,1.066,47,0.548,55,2.458,65,1.157,68,0.571,77,2.821,78,0.695,79,0.536,85,1.484,88,0.676,90,1.157,97,1.44,105,0.577,111,1.081,115,1.086,124,0.547,130,0.455,135,2.051,138,1.183,142,0.481,143,0.503,145,0.784,150,0.559,154,0.695,155,0.599,156,0.653,161,0.656,176,0.852,181,1.578,184,0.621,185,1.347,190,1.517,192,1.656,193,2.331,196,0.588,197,2.434,199,0.673,200,0.573,204,0.498,206,0.601,207,3.137,210,0.691,216,1.479,217,0.481,227,0.739,258,1.997,259,1.559,261,2.335,262,1.758,264,3.554,277,0.535,285,2.042,286,3.227,290,0.507,292,0.687,293,0.581,295,0.766,298,2.366,299,1.888,304,1.376,306,4.247,308,0.683,310,0.687,318,0.629,319,1.384,322,1.178,328,0.744,335,0.836,342,0.629,344,0.707,345,1.499,346,2.511,350,0.827,351,2.12,352,2.108,353,2.221,354,0.656,356,0.522,357,1.425,359,1.235,360,1.183,361,1.778,362,0.95,363,1.006,364,0.967,365,0.95,366,0.707,372,1.896,373,0.669,379,0.812,380,0.985,381,0.845,382,0.863,383,1.055,384,0.778,385,0.82,386,1.006,387,0.935,388,0.935,389,1.006,390,0.711,391,0.739,392,2.587,393,1.006,394,1.727,395,1.006,396,1.819,397,0.577,398,0.935,402,2.534,403,0.828,404,0.805,405,0.744,406,0.985,407,1.437,408,0.985,409,1.055,410,3.219,411,1.384,412,0.908,413,0.985,414,0.621,415,0.896,416,1.028,417,0.95,418,0.653,419,0.565,420,0.896,421,1.028,422,1.899,423,0.921,424,0.749,425,1.028,426,0.72,427,1.055,431,1.028,432,1.857,435,0.921,436,3.748,437,0.82,438,2.335,439,0.791,441,0.725,443,1.006,446,0.662,447,0.95,448,0.95,449,0.95,461,0.791,464,0.812,465,0.76,466,0.921,467,0.766,468,0.703,469,0.687,470,0.828,471,0.967,472,0.908,473,0.863,510,0.729,1487,1.085,1489,2.004,1490,1.085,1491,1.085,1492,0.967,1493,1.085,1494,1.085,1495,1.085]],["component/132",[2,0.423,3,0.373]],["title/133-1",[29,26.213,176,20.116,177,31.004]],["name/133-1",[]],["text/133-1",[]],["component/133-1",[]],["title/133-2",[181,32.468,264,30.006]],["name/133-2",[]],["text/133-2",[]],["component/133-2",[]],["title/133",[188,29.601,189,33.305]],["name/133",[188,0.617,489,1.11]],["text/133",[2,1.421,3,1.533,17,3.281,29,2.117,34,2.024,65,3.647,79,1.888,131,2.046,142,2.62,143,1.771,155,2.108,176,1.624,177,2.503,178,2.16,181,3.341,193,2.718,197,2.676,203,2.46,206,2.117,225,5.092,254,2.503,261,2.567,262,2.405,264,3.088,293,3.165,295,4.172,299,2.584,342,2.215,357,4.204,359,2.355,361,1.668,391,2.601,478,2.276,490,2.696,491,3.54,492,3.242,493,3.242,494,3.005,495,6.441,496,3.291,497,5.092,498,3.54,500,3.242,501,3.54,502,3.54,503,3.54,504,3.54,505,3.54,526,6.698,622,2.551,869,2.717,1496,3.82]],["component/133",[2,0.423,3,0.373]],["title/134-1",[65,19.606,477,31.388,646,36.438]],["name/134-1",[]],["text/134-1",[]],["component/134-1",[]],["title/134-2",[548,37.638,647,42.211]],["name/134-2",[]],["text/134-2",[]],["component/134-2",[]],["title/134",[88,35.779,304,28.302]],["name/134",[272,1.534]],["text/134",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,646,4.941,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245]],["component/134",[2,0.423,3,0.373]],["title/135-1",[0,16.243,336,31.336]],["name/135-1",[]],["text/135-1",[]],["component/135-1",[]],["title/135-2",[28,26.203,113,25.725]],["name/135-2",[]],["text/135-2",[]],["component/135-2",[]],["title/135-3",[100,18.208,136,21.469,351,24.632]],["name/135-3",[]],["text/135-3",[]],["component/135-3",[]],["title/135-4",[186,33.6,187,37.638]],["name/135-4",[]],["text/135-4",[]],["component/135-4",[]],["title/135",[285,33.752,664,42.211]],["name/135",[285,1.258]],["text/135",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/135",[2,0.423,3,0.373]],["title/136-1",[129,27.08,171,35.969]],["name/136-1",[]],["text/136-1",[]],["component/136-1",[]],["title/136-2",[690,42.211,696,30.006]],["name/136-2",[]],["text/136-2",[]],["component/136-2",[]],["title/136-3",[696,30.006,715,32.878]],["name/136-3",[]],["text/136-3",[]],["component/136-3",[]],["title/136-4",[65,19.606,446,28.876,673,24.889]],["name/136-4",[]],["text/136-4",[]],["component/136-4",[]],["title/136",[10,25.659,664,42.211]],["name/136",[10,0.956]],["text/136",[0,2.238,2,1.796,3,1.174,4,1.056,10,1.231,11,1.009,13,0.432,17,0.99,20,0.443,21,0.676,23,1.754,26,0.42,28,1.257,33,1.123,34,0.434,36,2.512,37,0.407,38,0.63,40,0.921,43,1.044,47,0.778,55,1.652,68,0.431,72,0.764,73,0.411,74,1.239,77,0.502,79,1.079,85,0.435,86,0.607,87,1.186,89,0.578,92,1.895,94,0.513,95,0.471,97,0.339,99,0.452,100,0.315,105,1.74,106,0.405,107,0.469,110,1.104,111,0.442,112,0.644,113,1.865,115,1.454,124,0.776,125,1.16,129,2.863,130,1.567,131,0.438,132,0.521,133,1.764,134,2.78,135,2.458,136,2.511,138,0.483,141,0.363,142,1.222,143,1.278,144,0.505,146,0.602,151,0.55,153,0.471,155,0.452,156,0.492,157,0.857,159,1.359,160,1.716,162,1.022,164,1.204,165,0.998,167,0.492,168,0.587,171,0.513,172,0.808,174,0.554,176,0.655,178,0.463,179,1.186,182,0.618,184,2.605,185,1.035,186,0.479,187,0.536,191,0.488,196,1.182,198,0.547,199,0.507,200,1.455,207,0.778,213,0.455,217,0.967,224,0.536,257,0.515,258,0.471,264,0.428,274,0.607,290,0.72,291,0.431,313,0.871,316,1.123,319,0.406,321,0.573,322,0.481,328,1.89,331,1.545,333,2.157,336,0.447,350,0.338,356,0.394,359,0.505,360,0.483,366,0.533,373,0.505,401,0.557,419,1.435,420,0.676,446,1.332,469,0.518,499,0.578,515,0.889,531,0.54,534,1.064,538,0.607,552,0.477,582,0.592,589,0.729,606,0.592,611,1.096,614,0.717,622,1.029,623,0.527,631,0.651,641,1.079,651,0.49,654,2.627,658,0.518,659,0.602,669,0.612,673,1.967,674,1.016,684,1.448,685,1.049,688,0.667,689,0.612,692,0.936,696,4.133,701,0.618,702,0.55,704,1.056,708,0.434,712,0.922,714,0.5,715,3.743,716,0.536,717,0.743,718,0.729,719,0.729,720,0.695,721,0.743,722,0.624,723,1.24,725,0.685,726,0.986,727,0.695,728,1.618,729,0.743,730,0.651,731,0.685,732,0.469,733,0.743,734,0.685,735,2.062,736,1.911,737,1.104,738,0.667,739,0.536,740,0.592,741,0.758,742,0.37,743,1.163,744,0.743,745,0.758,746,0.758,747,0.667,748,0.758,749,0.624,750,0.644,751,0.536,752,1.042,753,0.685,754,0.758,755,0.729,756,0.758,757,1.24,758,0.685,759,0.743,760,0.758,761,0.569,762,0.612,789,0.758,790,0.758,791,0.705,792,0.758,793,1.212,794,0.758,795,0.758,796,0.685,797,0.644,798,0.644,799,0.651,800,0.685,801,0.644,802,0.651,803,0.685,804,0.51,805,0.743,806,1.427,1476,0.795,1477,0.795,1478,0.795,1479,0.795,1480,0.795]],["component/136",[2,0.423,3,0.373]],["title/137",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/137",[0,0.605]],["text/137",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234,1482,2.391]],["component/137",[2,0.423,3,0.373]],["title/138",[826,62.957]],["name/138",[5,1.313]],["text/138",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/138",[2,0.423,3,0.373]],["title/139-1",[0,16.243,336,31.336]],["name/139-1",[]],["text/139-1",[]],["component/139-1",[]],["title/139-2",[27,28.215,141,25.463]],["name/139-2",[]],["text/139-2",[]],["component/139-2",[]],["title/139-3",[46,38.852]],["name/139-3",[]],["text/139-3",[]],["component/139-3",[]],["title/139-4",[46,30.538,726,36.768]],["name/139-4",[]],["text/139-4",[]],["component/139-4",[]],["title/139-5",[13,24.977,46,25.155,73,23.754]],["name/139-5",[]],["text/139-5",[]],["component/139-5",[]],["title/139-6",[115,28.417]],["name/139-6",[]],["text/139-6",[]],["component/139-6",[]],["title/139-7",[115,22.336,144,35.41]],["name/139-7",[]],["text/139-7",[]],["component/139-7",[]],["title/139-8",[115,22.336,143,26.631]],["name/139-8",[]],["text/139-8",[]],["component/139-8",[]],["title/139-9",[115,22.336,142,25.463]],["name/139-9",[]],["text/139-9",[]],["component/139-9",[]],["title/139-10",[115,22.336,176,24.42]],["name/139-10",[]],["text/139-10",[]],["component/139-10",[]],["title/139-11",[100,28.123]],["name/139-11",[]],["text/139-11",[]],["component/139-11",[]],["title/139-12",[100,22.105,142,25.463]],["name/139-12",[]],["text/139-12",[]],["component/139-12",[]],["title/139",[113,25.725,848,53.218]],["name/139",[113,0.959]],["text/139",[0,2.356,2,1.904,3,1.767,4,2.961,11,1.091,13,2.109,15,1.419,27,1.159,28,2.791,30,1.003,36,1.302,37,1.173,40,2.045,43,1.128,46,3.253,55,1.345,68,1.241,72,1.17,73,2.006,87,2.172,100,2,113,2.74,115,2.379,116,1.241,117,1.652,129,1.112,130,0.989,131,1.263,132,2.544,136,2.777,137,1.519,141,2.712,142,2.712,143,1.853,144,1.454,155,2.869,157,1.312,159,1.469,184,1.35,199,1.462,200,1.245,204,1.082,290,1.868,291,1.241,333,2.634,336,1.287,351,1.228,359,1.454,361,1.03,461,2.912,467,1.665,468,1.528,470,1.799,478,1.405,531,1.555,548,1.546,622,1.575,643,1.585,658,1.493,689,1.765,691,1.781,692,2.427,696,1.232,710,1.575,712,3.112,716,1.546,726,2.558,730,3.179,732,1.35,740,1.705,827,3.925,843,1.899,849,2.141,850,2.002,851,1.836,852,1.817,853,2.186,854,1.836,855,1.922,856,2.102,857,1.64]],["component/139",[2,0.423,3,0.373]],["title/140-1",[37,20.004,40,13.446,277,19.819,361,17.564]],["name/140-1",[]],["text/140-1",[]],["component/140-1",[]],["title/140-2",[188,29.601,189,33.305]],["name/140-2",[]],["text/140-2",[]],["component/140-2",[]],["title/140-3",[858,50.816]],["name/140-3",[]],["text/140-3",[]],["component/140-3",[]],["title/140-4",[55,19.337,859,46.228]],["name/140-4",[]],["text/140-4",[]],["component/140-4",[]],["title/140-5",[40,19.2,694,29.903]],["name/140-5",[]],["text/140-5",[]],["component/140-5",[]],["title/140",[27,28.215,40,19.2]],["name/140",[860,1.252]],["text/140",[0,0.826,2,1.147,3,1.16,4,0.796,11,3.564,13,2.081,17,1.788,28,0.75,30,2.973,40,2.984,42,0.954,43,1.885,55,2.595,65,3.963,73,1.979,74,0.934,79,0.813,83,0.994,87,0.894,90,0.95,100,0.633,109,1.17,111,0.887,122,1.34,125,2.095,128,1.189,130,0.689,141,2.424,153,0.945,167,0.989,175,1.12,190,0.894,191,0.98,196,0.891,207,0.831,210,1.047,216,4.241,217,0.729,254,1.914,259,1.631,267,2.129,277,2.694,291,0.865,296,1.084,309,1.098,316,1.198,351,2.052,354,2.382,356,0.791,361,0.718,372,0.897,397,1.553,439,1.198,478,0.98,552,2.781,656,1.098,693,1.112,694,3.152,702,1.105,712,4.614,765,1.44,804,2.974,859,4.401,860,3.199,861,2.147,862,2.603,863,3.253,864,2.652,865,1.559,866,1.417,867,1.938,868,1.524,869,2.078,870,5.138,871,3.129,872,1.17,873,1.23,874,1.376,875,3.735,876,1.376,877,2.298,878,1.559,879,1.189,880,1.559,881,1.559]],["component/140",[2,0.423,3,0.373]],["title/141-1",[0,11.375,37,20.004,277,19.819,361,17.564]],["name/141-1",[]],["text/141-1",[]],["component/141-1",[]],["title/141-2",[188,29.601,189,33.305]],["name/141-2",[]],["text/141-2",[]],["component/141-2",[]],["title/141-3",[858,50.816]],["name/141-3",[]],["text/141-3",[]],["component/141-3",[]],["title/141-4",[0,16.243,694,29.903]],["name/141-4",[]],["text/141-4",[]],["component/141-4",[]],["title/141-5",[0,16.243,882,51.173]],["name/141-5",[]],["text/141-5",[]],["component/141-5",[]],["title/141",[0,16.243,27,28.215]],["name/141",[0,0.605]],["text/141",[0,2.772,2,1.416,3,1.25,13,1.483,17,1.275,30,1.966,40,0.939,43,1.343,55,0.946,65,3.556,73,1.41,87,1.527,111,1.515,116,1.478,125,3.132,150,3.519,204,1.288,217,1.245,230,2.681,254,3.03,259,1.569,277,2.278,296,3.884,322,1.651,351,1.462,356,2.224,373,1.732,385,3.491,397,1.494,552,3.977,601,2.047,693,1.9,694,3.067,712,5.868,804,2.88,823,4.012,852,2.163,860,3.994,867,1.864,871,3.03,883,2.163,884,3.767,885,2.662,886,2.142,887,2.55,888,5.459,889,2.55,890,2.603,891,2.603,892,2.603,893,2.603,894,2.55,895,2.603,896,2.603,897,2.603,898,2.603,899,2.163,900,2.603,901,2.603]],["component/141",[2,0.423,3,0.373]],["title/142",[13,24.977,73,23.754,100,18.208]],["name/142",[5,1.313]],["text/142",[0,2.544,2,2.022,3,1.85,4,1.814,11,1.012,13,3.075,26,1.124,27,1.075,30,3.425,36,3.215,37,1.089,40,3.158,43,2.786,55,2.206,73,2.925,85,1.164,95,3.766,100,2.749,130,1.572,140,1.418,141,0.97,150,1.932,157,1.218,158,1.33,171,1.371,172,1.148,200,1.156,213,1.218,216,2.605,217,2.18,230,1.269,287,1.534,290,1.023,293,1.172,313,1.238,331,1.227,336,1.194,354,1.323,360,1.292,373,1.35,391,1.491,407,1.569,418,1.317,446,1.336,478,1.304,511,1.638,658,1.386,694,3.977,696,1.144,712,5.528,751,1.435,823,1.491,851,1.704,852,1.686,861,1.609,873,1.638,874,1.831,877,1.722,902,1.987,903,2.075,904,1.762,905,1.95,906,1.831,907,1.95,908,1.741,909,1.917,910,1.807,911,2.075]],["component/142",[2,0.423,3,0.373]],["title/143-1",[419,38.044]],["name/143-1",[]],["text/143-1",[]],["component/143-1",[]],["title/143-2",[742,32.986]],["name/143-2",[]],["text/143-2",[]],["component/143-2",[]],["title/143",[115,18.399,129,22.306,144,29.168]],["name/143",[115,0.466,144,0.739]],["text/143",[0,2.608,2,0.37,3,0.326,10,1.23,17,1.696,40,1.748,42,0.893,55,1.761,56,1.141,65,1.885,67,1.07,72,0.763,73,0.773,79,0.761,83,0.93,85,0.818,87,0.837,99,0.85,113,0.689,115,1.769,125,1.987,129,0.726,130,0.645,132,0.98,133,0.985,141,0.682,143,1.277,144,3.582,150,0.793,152,0.974,154,2.912,156,0.926,157,2.909,165,0.997,169,1.028,176,2.47,190,2.842,204,1.714,210,2.895,216,1.98,221,0.974,224,1.805,252,1.131,257,2.353,290,0.72,319,0.763,337,1.239,339,1.288,342,0.893,350,0.635,355,1.85,356,2.188,360,0.909,361,0.672,372,2.039,376,1.103,404,1.141,414,0.881,419,3.711,424,1.063,429,2.08,464,1.152,483,1.122,515,0.889,581,1.174,585,3.084,598,1.426,654,1.59,673,2.751,695,1.141,708,1.459,714,0.939,732,2.139,737,1.103,742,2.361,752,1.863,761,1.07,770,1.306,775,1.348,832,1.715,869,1.095,883,1.185,962,1.07,981,1.371,1016,1.397,1029,1.459,1043,1.174,1056,1.808,1078,1.162,1084,1.254,1092,1.348,1094,1.426,1111,1.239,1112,2.373,1122,1.152,1141,2.544,1185,1.539,1186,1.371,1187,1.539,1188,1.539,1189,2.754,1190,2.304,1191,1.306,1192,1.539,1193,1.211,1194,1.086,1195,1.539,1196,1.397,1197,1.254,1198,1.539,1199,1.539,1200,1.539,1201,1.539,1202,2.754,1203,2.754,1204,1.397,1205,1.459,1206,1.371,1207,1.539,1208,1.539,1209,1.539,1210,1.539,1211,1.539,1212,1.539,1213,1.459,1214,1.539,1215,3.462,1216,2.754,1217,1.539,1218,1.539,1219,1.539,1220,1.539,1221,2.562,1222,1.539,1223,1.426,1224,1.426,1225,1.539,1226,1.539]],["component/143",[2,0.423,3,0.373]],["title/144-1",[107,27.082,141,20.974,143,21.937]],["name/144-1",[]],["text/144-1",[]],["component/144-1",[]],["title/144-2",[13,24.977,73,23.754,1227,42.152]],["name/144-2",[]],["text/144-2",[]],["component/144-2",[]],["title/144-3",[13,24.977,73,23.754,851,36.817]],["name/144-3",[]],["text/144-3",[]],["component/144-3",[]],["title/144",[115,18.399,129,22.306,143,21.937]],["name/144",[115,0.466,143,0.555]],["text/144",[0,2.208,55,2.629,72,3.871,92,3.958,113,3.497,115,3.036,129,3.681,130,3.273,133,4.998,141,3.461,143,4.531,169,5.213]],["component/144",[2,0.423,3,0.373]],["title/145",[115,18.399,129,22.306,142,20.974]],["name/145",[115,0.466,142,0.531]],["text/145",[0,2.135,55,2.542,72,3.743,107,4.321,113,3.381,115,2.936,129,4.51,130,3.165,133,4.833,142,4.241,169,5.04,854,5.875,855,6.151]],["component/145",[2,0.423,3,0.373]],["title/146",[11,26.559,518,41.173]],["name/146",[5,1.313]],["text/146",[2,2.4,3,2.118,11,3.738,55,2.722,113,3.621,368,5.363,518,5.795,715,4.628,821,6.763]],["component/146",[2,0.423,3,0.373]],["title/147",[100,18.208,143,21.937,176,20.116]],["name/147",[100,0.461,176,0.509]],["text/147",[0,2.286,28,3.688,72,4.008,100,3.111,107,4.628,141,3.584,143,4.63,176,4.245,708,4.283]],["component/147",[2,0.423,3,0.373]],["title/148",[100,18.208,183,35.396,184,27.082]],["name/148",[100,0.461,184,0.686]],["text/148",[0,2.135,2,1.815,15,4.541,36,4.166,40,2.524,100,2.905,136,4.341,149,5.106,154,4.833,184,4.321,290,3.53,311,5.04,1279,7.154,1497,9.202]],["component/148",[2,0.423,3,0.373]],["title/149",[100,22.105,142,25.463]],["name/149",[100,0.461,142,0.531]],["text/149",[0,2.677,55,2.5,72,3.682,100,2.858,136,4.296,141,3.292,142,4.197,154,4.754,176,3.158,290,3.472,708,3.934,715,4.251,1280,5.842]],["component/149",[2,0.423,3,0.373]],["title/150",[100,22.105,932,36.768]],["name/150",[100,0.461,1305,1.164]],["text/150",[0,2.208,55,2.629,72,3.871,100,3.005,107,4.469,136,3.543,154,4.998,290,3.65,715,4.469,932,6.255,1280,6.142,1306,7.807]],["component/150",[2,0.423,3,0.373]],["title/151-1",[40,24.428]],["name/151-1",[]],["text/151-1",[]],["component/151-1",[]],["title/151-2",[30,20.116,40,15.816,277,23.313]],["name/151-2",[]],["text/151-2",[]],["component/151-2",[]],["title/151-3",[40,19.2,709,42.211]],["name/151-3",[]],["text/151-3",[]],["component/151-3",[]],["title/151-4",[40,19.2,694,29.903]],["name/151-4",[]],["text/151-4",[]],["component/151-4",[]],["title/151-5",[0,20.666]],["name/151-5",[]],["text/151-5",[]],["component/151-5",[]],["title/151-6",[0,13.38,30,20.116,277,23.313]],["name/151-6",[]],["text/151-6",[]],["component/151-6",[]],["title/151-7",[0,16.243,709,42.211]],["name/151-7",[]],["text/151-7",[]],["component/151-7",[]],["title/151-8",[0,16.243,694,29.903]],["name/151-8",[]],["text/151-8",[]],["component/151-8",[]],["title/151-9",[172,24.803,213,26.317,361,20.661]],["name/151-9",[]],["text/151-9",[]],["component/151-9",[]],["title/151-10",[172,18.338,178,19.774,258,20.108,361,15.275,685,23.82]],["name/151-10",[]],["text/151-10",[]],["component/151-10",[]],["title/151-11",[0,13.38,95,27.198,217,20.974]],["name/151-11",[]],["text/151-11",[]],["component/151-11",[]],["title/151",[0,13.38,27,23.242,40,15.816]],["name/151",[27,1.051]],["text/151",[0,2.668,2,0.624,3,0.551,11,0.667,17,0.654,27,1.276,28,1.185,29,1.439,30,2.766,34,0.764,37,1.292,40,2.961,46,1.381,55,2.434,65,0.598,68,2.631,74,1.474,78,0.923,79,0.713,90,0.833,95,0.829,99,0.796,106,1.284,111,1.401,116,1.366,120,2.09,127,1.003,128,1.042,141,0.639,153,0.829,157,0.802,158,1.577,161,0.871,164,1.433,172,1.857,176,2.766,177,1.702,186,0.844,196,0.781,198,1.734,199,0.894,204,3.16,205,0.913,207,1.312,216,1.877,217,1.151,250,0.982,254,4.738,257,0.908,264,0.753,265,2.173,277,1.746,290,1.214,291,0.759,292,1.644,304,0.711,313,0.815,331,0.809,335,3.337,350,1.071,351,1.352,356,0.694,361,1.134,390,0.945,418,0.867,439,1.051,457,1.734,518,1.034,541,1.663,545,2.143,552,2.912,582,1.042,587,1.19,606,1.042,674,1.712,693,3.382,694,3.387,711,2.173,732,0.825,752,1.757,842,1.134,857,1.806,860,5.363,867,2.874,886,1.1,908,2.066,918,2.204,1043,1.1,1070,1.175,1071,3.443,1114,1.1,1141,0.982,1143,1.042,1239,1.089,1282,1.961,1441,1.1,1456,4.105,1457,3.86,1458,1.401,1459,1.285,1460,1.285,1461,1.309,1462,1.442]],["component/151",[2,0.423,3,0.373]],["title/152-1",[40,24.428]],["name/152-1",[]],["text/152-1",[]],["component/152-1",[]],["title/152-2",[0,20.666]],["name/152-2",[]],["text/152-2",[]],["component/152-2",[]],["title/152-3",[115,28.417]],["name/152-3",[]],["text/152-3",[]],["component/152-3",[]],["title/152-4",[100,28.123]],["name/152-4",[]],["text/152-4",[]],["component/152-4",[]],["title/152",[94,45.762]],["name/152",[94,1.34]],["text/152",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/152",[2,0.423,3,0.373]],["title/153",[2,13.805,3,12.182]],["name/153",[5,1.313]],["text/153",[0,1.838,2,2.236,3,0.918,4,3.778,6,3.3,10,1.933,27,3.193,36,3.587,40,1.447,54,2.988,65,2.694,72,2.146,97,1.793,98,3.672,100,1.665,115,1.683,129,3.681,135,2.555,136,3.938,141,2.882,149,2.927,158,2.628,167,2.603,168,3.102,169,2.889,170,4.01,171,4.071,172,2.269,173,3.208,174,2.927,175,2.947,176,1.84,177,2.836,178,2.446,179,3.333,180,3.009,181,2.446,182,3.268,183,3.238,184,2.477,185,2.908,186,2.532,187,2.836]],["component/153",[2,0.423,3,0.373]],["title/154-1",[188,29.601,189,33.305]],["name/154-1",[]],["text/154-1",[]],["component/154-1",[]],["title/154-2",[34,21.309,188,20.729,189,23.323,190,21.861]],["name/154-2",[]],["text/154-2",[]],["component/154-2",[]],["title/154-3",[97,30.281]],["name/154-3",[]],["text/154-3",[]],["component/154-3",[]],["title/154-4",[191,34.22,192,34.061]],["name/154-4",[]],["text/154-4",[]],["component/154-4",[]],["title/154",[193,21.758,194,39.578,195,39.578]],["name/154",[194,1.002,195,1.002]],["text/154",[2,1.396,3,1.705,11,1.727,17,1.695,20,1.18,24,1.343,28,0.994,30,0.926,34,1.978,39,1.574,55,1.65,68,1.146,77,1.336,83,1.317,97,3.331,99,2.061,106,2.87,113,2.601,115,0.847,129,1.027,130,0.913,131,2,137,2.404,153,1.252,178,2.111,181,1.232,184,3.324,185,3.902,186,1.275,190,1.184,191,2.225,192,1.292,193,1.002,196,1.18,197,4.068,198,4.361,199,1.35,200,1.971,201,2.847,202,1.849,203,1.403,204,1.713,205,2.364,206,2.069,207,1.101,208,2.179,209,2.252,210,1.387,211,2.065,212,4.385,213,2.077,214,3.86,215,4.345,216,1.154,217,0.966,218,2.252,219,2.065,220,2.252,221,1.379,222,2.179,223,1.63,224,1.428,225,1.877,226,2.019,227,1.484,228,1.601,229,4.163,230,1.263,231,2.252,232,2.179,233,3.211,234,2.252,235,2.252,236,2.252,237,2.252,238,2.252,239,2.252,240,2.252,241,2.252,242,2.252,243,2.252,244,2.252,245,2.252,246,2.252,247,2.252,248,1.55,250,1.484,251,2.252,252,1.601,253,2.117,254,2.447,255,1.678,256,2.252,257,1.372,258,1.252,259,2.085,260,1.849,1498,2.656]],["component/154",[2,0.423,3,0.373]],["title/155-1",[261,49.103]],["name/155-1",[]],["text/155-1",[]],["component/155-1",[]],["title/155-2",[262,46.008]],["name/155-2",[]],["text/155-2",[]],["component/155-2",[]],["title/155-3",[]],["name/155-3",[]],["text/155-3",[]],["component/155-3",[]],["title/155",[263,43.795,264,30.006]],["name/155",[264,1.118]],["text/155",[17,3.948,26,1.489,30,2.56,34,2.513,37,1.441,39,2.094,45,2.392,55,2.584,68,3.167,97,1.966,150,1.494,153,1.666,164,1.6,167,1.743,168,2.078,176,2.56,181,1.638,193,3.2,204,1.329,205,1.835,212,2.189,217,1.285,228,2.13,229,2.078,255,2.232,261,3.187,262,4.381,263,2.21,264,4.305,265,1.778,266,2.425,267,2.112,268,2.582,269,2.538,270,2.28,271,2.582,272,2.078,273,6.42,274,2.149,275,2.538,276,5.364,277,2.967,278,2.392,279,2.333,280,2.631,281,2.306,282,2.001,283,2.816,284,2.816,285,4.089,286,1.845,287,2.03,288,2.816,289,2.747,290,1.355,291,1.525,292,1.835,293,2.54,294,2.459,295,2.046,296,1.911,297,2.631,298,1.974,299,3.208,300,4.025,301,2.685,302,2.685,303,2.392]],["component/155",[2,0.423,3,0.373]],["title/156-1",[188,24.383,189,27.434,304,23.313]],["name/156-1",[]],["text/156-1",[]],["component/156-1",[]],["title/156-2",[193,21.758,233,31.004,305,31.388]],["name/156-2",[]],["text/156-2",[]],["component/156-2",[]],["title/156-3",[138,27.929,193,21.758,233,31.004]],["name/156-3",[]],["text/156-3",[]],["component/156-3",[]],["title/156-4",[55,13.541,286,25.604,306,17.741,307,25.188]],["name/156-4",[]],["text/156-4",[]],["component/156-4",[]],["title/156",[193,26.415,308,36.163]],["name/156",[307,1.34]],["text/156",[2,1.341,3,1.183,17,1.18,20,1.408,54,2.995,55,2.925,62,1.528,80,2.093,82,2.069,92,2.199,97,1.078,99,2.394,106,3.218,138,2.56,145,1.88,159,1.62,176,1.844,193,3.814,204,1.193,205,1.647,207,1.314,230,4.196,233,5.434,257,1.638,286,2.761,305,1.726,306,4.541,308,4.556,309,2.896,310,1.647,311,1.736,312,5.447,313,1.47,314,3.852,315,6.965,316,1.895,317,3.061,318,1.508,319,1.29,320,3.865,321,1.822,322,1.528,323,2.119,324,1.911,325,1.983,326,1.895,327,4.019,328,1.783,329,4.019,330,3.798,331,1.458,332,2.361,333,1.715,334,2.024,335,2.003,336,2.366,337,2.093,338,2.207,339,2.176]],["component/156",[2,0.423,3,0.373]],["title/157",[193,33.606]],["name/157",[5,1.313]],["text/157",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/157",[2,0.423,3,0.373]],["title/158-1",[306,20.868,345,35.396,346,34.19]],["name/158-1",[]],["text/158-1",[]],["component/158-1",[]],["title/158-2",[347,67.707]],["name/158-2",[]],["text/158-2",[]],["component/158-2",[]],["title/158-3",[348,51.972]],["name/158-3",[]],["text/158-3",[]],["component/158-3",[]],["title/158-4",[97,23.801,306,25.334]],["name/158-4",[]],["text/158-4",[]],["component/158-4",[]],["title/158-5",[190,25.715,304,23.313,306,20.868]],["name/158-5",[]],["text/158-5",[]],["component/158-5",[]],["title/158-6",[77,29.021,306,20.868,349,37.216]],["name/158-6",[]],["text/158-6",[]],["component/158-6",[]],["title/158-7",[298,32.217,328,32.439,351,24.632]],["name/158-7",[]],["text/158-7",[]],["component/158-7",[]],["title/158-8",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/158-8",[]],["text/158-8",[]],["component/158-8",[]],["title/158-9",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/158-9",[]],["text/158-9",[]],["component/158-9",[]],["title/158-10",[55,11.777,206,19.381,227,23.82,258,20.108,259,19.535]],["name/158-10",[]],["text/158-10",[]],["component/158-10",[]],["title/158-11",[97,19.606,306,20.868,354,28.593]],["name/158-11",[]],["text/158-11",[]],["component/158-11",[]],["title/158-12",[355,38.595,356,27.631]],["name/158-12",[]],["text/158-12",[]],["component/158-12",[]],["title/158",[286,36.562,306,25.334]],["name/158",[306,0.944]],["text/158",[2,0.835,3,0.976,4,0.97,24,0.669,26,0.557,28,0.914,30,1.956,34,0.575,40,0.363,42,2.667,43,0.519,46,1.066,47,0.548,55,2.458,65,1.157,68,0.571,77,2.821,78,0.695,79,0.536,85,1.484,88,0.676,90,1.157,97,1.44,105,0.577,111,1.081,115,1.086,124,0.547,130,0.455,135,2.051,138,1.183,142,0.481,143,0.503,145,0.784,150,0.559,154,0.695,155,0.599,156,0.653,161,0.656,176,0.852,181,1.578,184,0.621,185,1.347,190,1.517,192,1.656,193,2.331,196,0.588,197,2.434,199,0.673,200,0.573,204,0.498,206,0.601,207,3.137,210,0.691,216,1.479,217,0.481,227,0.739,258,1.997,259,1.559,261,2.335,262,1.758,264,3.554,277,0.535,285,2.042,286,3.227,290,0.507,292,0.687,293,0.581,295,0.766,298,2.366,299,1.888,304,1.376,306,4.247,308,0.683,310,0.687,318,0.629,319,1.384,322,1.178,328,0.744,335,0.836,342,0.629,344,0.707,345,1.499,346,2.511,350,0.827,351,2.12,352,2.108,353,2.221,354,0.656,356,0.522,357,1.425,359,1.235,360,1.183,361,1.778,362,0.95,363,1.006,364,0.967,365,0.95,366,0.707,372,1.896,373,0.669,379,0.812,380,0.985,381,0.845,382,0.863,383,1.055,384,0.778,385,0.82,386,1.006,387,0.935,388,0.935,389,1.006,390,0.711,391,0.739,392,2.587,393,1.006,394,1.727,395,1.006,396,1.819,397,0.577,398,0.935,402,2.534,403,0.828,404,0.805,405,0.744,406,0.985,407,1.437,408,0.985,409,1.055,410,3.219,411,1.384,412,0.908,413,0.985,414,0.621,415,0.896,416,1.028,417,0.95,418,0.653,419,0.565,420,0.896,421,1.028,422,1.899,423,0.921,424,0.749,425,1.028,426,0.72,427,1.055,431,1.028,432,1.857,435,0.921,436,3.748,437,0.82,438,2.335,439,0.791,441,0.725,443,1.006,446,0.662,447,0.95,448,0.95,449,0.95,461,0.791,464,0.812,465,0.76,466,0.921,467,0.766,468,0.703,469,0.687,470,0.828,471,0.967,472,0.908,473,0.863,510,0.729,1487,1.085,1489,2.004,1490,1.085,1491,1.085,1492,0.967,1493,1.085,1494,1.085,1495,1.085]],["component/158",[2,0.423,3,0.373]],["title/159-1",[29,26.213,176,20.116,177,31.004]],["name/159-1",[]],["text/159-1",[]],["component/159-1",[]],["title/159-2",[181,32.468,264,30.006]],["name/159-2",[]],["text/159-2",[]],["component/159-2",[]],["title/159",[188,29.601,189,33.305]],["name/159",[188,0.617,489,1.11]],["text/159",[2,1.359,3,1.479,17,3.164,29,1.999,34,1.912,65,3.551,79,1.784,83,2.181,97,1.495,131,1.933,142,2.507,143,1.673,155,1.992,176,1.534,177,2.365,178,2.04,181,3.941,193,3.206,194,3.019,195,3.019,197,2.528,203,2.323,206,1.999,225,4.872,254,2.365,261,2.425,262,2.272,264,2.954,293,3.028,295,3.991,299,2.441,342,2.093,357,4.022,359,2.225,361,1.576,391,2.457,478,2.15,490,2.547,491,3.344,492,3.062,493,3.062,494,2.839,495,6.211,496,3.109,497,4.872,498,3.344,499,2.547,500,3.062,501,3.344,502,3.344,503,3.344,504,3.344,505,3.344,526,6.46,622,2.409,869,2.567,1496,3.609]],["component/159",[2,0.423,3,0.373]],["title/160-1",[65,19.606,477,31.388,646,36.438]],["name/160-1",[]],["text/160-1",[]],["component/160-1",[]],["title/160-2",[548,37.638,647,42.211]],["name/160-2",[]],["text/160-2",[]],["component/160-2",[]],["title/160",[88,35.779,304,28.302]],["name/160",[272,1.534]],["text/160",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,646,4.941,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245]],["component/160",[2,0.423,3,0.373]],["title/161-1",[0,16.243,336,31.336]],["name/161-1",[]],["text/161-1",[]],["component/161-1",[]],["title/161-2",[28,26.203,113,25.725]],["name/161-2",[]],["text/161-2",[]],["component/161-2",[]],["title/161-3",[100,18.208,136,21.469,351,24.632]],["name/161-3",[]],["text/161-3",[]],["component/161-3",[]],["title/161-4",[186,33.6,187,37.638]],["name/161-4",[]],["text/161-4",[]],["component/161-4",[]],["title/161",[285,33.752,664,42.211]],["name/161",[285,1.258]],["text/161",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/161",[2,0.423,3,0.373]],["title/162-1",[129,27.08,171,35.969]],["name/162-1",[]],["text/162-1",[]],["component/162-1",[]],["title/162-2",[690,42.211,696,30.006]],["name/162-2",[]],["text/162-2",[]],["component/162-2",[]],["title/162-3",[696,30.006,715,32.878]],["name/162-3",[]],["text/162-3",[]],["component/162-3",[]],["title/162-4",[65,19.606,446,28.876,673,24.889]],["name/162-4",[]],["text/162-4",[]],["component/162-4",[]],["title/162",[10,25.659,664,42.211]],["name/162",[10,0.956]],["text/162",[0,2.238,2,1.796,3,1.174,4,1.056,10,1.231,11,1.009,13,0.432,17,0.99,20,0.443,21,0.676,23,1.754,26,0.42,28,1.257,33,1.123,34,0.434,36,2.512,37,0.407,38,0.63,40,0.921,43,1.044,47,0.778,55,1.652,68,0.431,72,0.764,73,0.411,74,1.239,77,0.502,79,1.079,85,0.435,86,0.607,87,1.186,89,0.578,92,1.895,94,0.513,95,0.471,97,0.339,99,0.452,100,0.315,105,1.74,106,0.405,107,0.469,110,1.104,111,0.442,112,0.644,113,1.865,115,1.454,124,0.776,125,1.16,129,2.863,130,1.567,131,0.438,132,0.521,133,1.764,134,2.78,135,2.458,136,2.511,138,0.483,141,0.363,142,1.222,143,1.278,144,0.505,146,0.602,151,0.55,153,0.471,155,0.452,156,0.492,157,0.857,159,1.359,160,1.716,162,1.022,164,1.204,165,0.998,167,0.492,168,0.587,171,0.513,172,0.808,174,0.554,176,0.655,178,0.463,179,1.186,182,0.618,184,2.605,185,1.035,186,0.479,187,0.536,191,0.488,196,1.182,198,0.547,199,0.507,200,1.455,207,0.778,213,0.455,217,0.967,224,0.536,257,0.515,258,0.471,264,0.428,274,0.607,290,0.72,291,0.431,313,0.871,316,1.123,319,0.406,321,0.573,322,0.481,328,1.89,331,1.545,333,2.157,336,0.447,350,0.338,356,0.394,359,0.505,360,0.483,366,0.533,373,0.505,401,0.557,419,1.435,420,0.676,446,1.332,469,0.518,499,0.578,515,0.889,531,0.54,534,1.064,538,0.607,552,0.477,582,0.592,589,0.729,606,0.592,611,1.096,614,0.717,622,1.029,623,0.527,631,0.651,641,1.079,651,0.49,654,2.627,658,0.518,659,0.602,669,0.612,673,1.967,674,1.016,684,1.448,685,1.049,688,0.667,689,0.612,692,0.936,696,4.133,701,0.618,702,0.55,704,1.056,708,0.434,712,0.922,714,0.5,715,3.743,716,0.536,717,0.743,718,0.729,719,0.729,720,0.695,721,0.743,722,0.624,723,1.24,725,0.685,726,0.986,727,0.695,728,1.618,729,0.743,730,0.651,731,0.685,732,0.469,733,0.743,734,0.685,735,2.062,736,1.911,737,1.104,738,0.667,739,0.536,740,0.592,741,0.758,742,0.37,743,1.163,744,0.743,745,0.758,746,0.758,747,0.667,748,0.758,749,0.624,750,0.644,751,0.536,752,1.042,753,0.685,754,0.758,755,0.729,756,0.758,757,1.24,758,0.685,759,0.743,760,0.758,761,0.569,762,0.612,789,0.758,790,0.758,791,0.705,792,0.758,793,1.212,794,0.758,795,0.758,796,0.685,797,0.644,798,0.644,799,0.651,800,0.685,801,0.644,802,0.651,803,0.685,804,0.51,805,0.743,806,1.427,1476,0.795,1477,0.795,1478,0.795,1479,0.795,1480,0.795]],["component/162",[2,0.423,3,0.373]],["title/163",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/163",[0,0.605]],["text/163",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234,1482,2.391]],["component/163",[2,0.423,3,0.373]],["title/164",[826,62.957]],["name/164",[5,1.313]],["text/164",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/164",[2,0.423,3,0.373]],["title/165-1",[0,16.243,336,31.336]],["name/165-1",[]],["text/165-1",[]],["component/165-1",[]],["title/165-2",[27,28.215,141,25.463]],["name/165-2",[]],["text/165-2",[]],["component/165-2",[]],["title/165-3",[46,38.852]],["name/165-3",[]],["text/165-3",[]],["component/165-3",[]],["title/165-4",[46,30.538,726,36.768]],["name/165-4",[]],["text/165-4",[]],["component/165-4",[]],["title/165-5",[13,24.977,46,25.155,73,23.754]],["name/165-5",[]],["text/165-5",[]],["component/165-5",[]],["title/165-6",[115,28.417]],["name/165-6",[]],["text/165-6",[]],["component/165-6",[]],["title/165-7",[115,22.336,144,35.41]],["name/165-7",[]],["text/165-7",[]],["component/165-7",[]],["title/165-8",[115,22.336,143,26.631]],["name/165-8",[]],["text/165-8",[]],["component/165-8",[]],["title/165-9",[115,22.336,142,25.463]],["name/165-9",[]],["text/165-9",[]],["component/165-9",[]],["title/165-10",[115,22.336,176,24.42]],["name/165-10",[]],["text/165-10",[]],["component/165-10",[]],["title/165-11",[100,28.123]],["name/165-11",[]],["text/165-11",[]],["component/165-11",[]],["title/165-12",[100,22.105,142,25.463]],["name/165-12",[]],["text/165-12",[]],["component/165-12",[]],["title/165",[113,25.725,848,53.218]],["name/165",[113,0.959]],["text/165",[0,2.356,2,1.904,3,1.767,4,2.961,11,1.091,13,2.109,15,1.419,27,1.159,28,2.791,30,1.003,36,1.302,37,1.173,40,2.045,43,1.128,46,3.253,55,1.345,68,1.241,72,1.17,73,2.006,87,2.172,100,2,113,2.74,115,2.379,116,1.241,117,1.652,129,1.112,130,0.989,131,1.263,132,2.544,136,2.777,137,1.519,141,2.712,142,2.712,143,1.853,144,1.454,155,2.869,157,1.312,159,1.469,184,1.35,199,1.462,200,1.245,204,1.082,290,1.868,291,1.241,333,2.634,336,1.287,351,1.228,359,1.454,361,1.03,461,2.912,467,1.665,468,1.528,470,1.799,478,1.405,531,1.555,548,1.546,622,1.575,643,1.585,658,1.493,689,1.765,691,1.781,692,2.427,696,1.232,710,1.575,712,3.112,716,1.546,726,2.558,730,3.179,732,1.35,740,1.705,827,3.925,843,1.899,849,2.141,850,2.002,851,1.836,852,1.817,853,2.186,854,1.836,855,1.922,856,2.102,857,1.64]],["component/165",[2,0.423,3,0.373]],["title/166-1",[37,20.004,40,13.446,277,19.819,361,17.564]],["name/166-1",[]],["text/166-1",[]],["component/166-1",[]],["title/166-2",[188,29.601,189,33.305]],["name/166-2",[]],["text/166-2",[]],["component/166-2",[]],["title/166-3",[858,50.816]],["name/166-3",[]],["text/166-3",[]],["component/166-3",[]],["title/166-4",[55,19.337,859,46.228]],["name/166-4",[]],["text/166-4",[]],["component/166-4",[]],["title/166-5",[40,19.2,694,29.903]],["name/166-5",[]],["text/166-5",[]],["component/166-5",[]],["title/166",[27,28.215,40,19.2]],["name/166",[860,1.252]],["text/166",[0,0.826,2,1.147,3,1.16,4,0.796,11,3.564,13,2.081,17,1.788,28,0.75,30,2.973,40,2.984,42,0.954,43,1.885,55,2.595,65,3.963,73,1.979,74,0.934,79,0.813,83,0.994,87,0.894,90,0.95,100,0.633,109,1.17,111,0.887,122,1.34,125,2.095,128,1.189,130,0.689,141,2.424,153,0.945,167,0.989,175,1.12,190,0.894,191,0.98,196,0.891,207,0.831,210,1.047,216,4.241,217,0.729,254,1.914,259,1.631,267,2.129,277,2.694,291,0.865,296,1.084,309,1.098,316,1.198,351,2.052,354,2.382,356,0.791,361,0.718,372,0.897,397,1.553,439,1.198,478,0.98,552,2.781,656,1.098,693,1.112,694,3.152,702,1.105,712,4.614,765,1.44,804,2.974,859,4.401,860,3.199,861,2.147,862,2.603,863,3.253,864,2.652,865,1.559,866,1.417,867,1.938,868,1.524,869,2.078,870,5.138,871,3.129,872,1.17,873,1.23,874,1.376,875,3.735,876,1.376,877,2.298,878,1.559,879,1.189,880,1.559,881,1.559]],["component/166",[2,0.423,3,0.373]],["title/167-1",[0,11.375,37,20.004,277,19.819,361,17.564]],["name/167-1",[]],["text/167-1",[]],["component/167-1",[]],["title/167-2",[188,29.601,189,33.305]],["name/167-2",[]],["text/167-2",[]],["component/167-2",[]],["title/167-3",[858,50.816]],["name/167-3",[]],["text/167-3",[]],["component/167-3",[]],["title/167-4",[0,16.243,694,29.903]],["name/167-4",[]],["text/167-4",[]],["component/167-4",[]],["title/167-5",[0,16.243,882,51.173]],["name/167-5",[]],["text/167-5",[]],["component/167-5",[]],["title/167",[0,16.243,27,28.215]],["name/167",[0,0.605]],["text/167",[0,2.772,2,1.416,3,1.25,13,1.483,17,1.275,30,1.966,40,0.939,43,1.343,55,0.946,65,3.556,73,1.41,87,1.527,111,1.515,116,1.478,125,3.132,150,3.519,204,1.288,217,1.245,230,2.681,254,3.03,259,1.569,277,2.278,296,3.884,322,1.651,351,1.462,356,2.224,373,1.732,385,3.491,397,1.494,552,3.977,601,2.047,693,1.9,694,3.067,712,5.868,804,2.88,823,4.012,852,2.163,860,3.994,867,1.864,871,3.03,883,2.163,884,3.767,885,2.662,886,2.142,887,2.55,888,5.459,889,2.55,890,2.603,891,2.603,892,2.603,893,2.603,894,2.55,895,2.603,896,2.603,897,2.603,898,2.603,899,2.163,900,2.603,901,2.603]],["component/167",[2,0.423,3,0.373]],["title/168",[13,24.977,73,23.754,100,18.208]],["name/168",[5,1.313]],["text/168",[0,2.544,2,2.022,3,1.85,4,1.814,11,1.012,13,3.075,26,1.124,27,1.075,30,3.425,36,3.215,37,1.089,40,3.158,43,2.786,55,2.206,73,2.925,85,1.164,95,3.766,100,2.749,130,1.572,140,1.418,141,0.97,150,1.932,157,1.218,158,1.33,171,1.371,172,1.148,200,1.156,213,1.218,216,2.605,217,2.18,230,1.269,287,1.534,290,1.023,293,1.172,313,1.238,331,1.227,336,1.194,354,1.323,360,1.292,373,1.35,391,1.491,407,1.569,418,1.317,446,1.336,478,1.304,511,1.638,658,1.386,694,3.977,696,1.144,712,5.528,751,1.435,823,1.491,851,1.704,852,1.686,861,1.609,873,1.638,874,1.831,877,1.722,902,1.987,903,2.075,904,1.762,905,1.95,906,1.831,907,1.95,908,1.741,909,1.917,910,1.807,911,2.075]],["component/168",[2,0.423,3,0.373]],["title/169-1",[419,38.044]],["name/169-1",[]],["text/169-1",[]],["component/169-1",[]],["title/169-2",[742,32.986]],["name/169-2",[]],["text/169-2",[]],["component/169-2",[]],["title/169",[115,18.399,129,22.306,144,29.168]],["name/169",[115,0.466,144,0.739]],["text/169",[0,2.608,2,0.37,3,0.326,10,1.23,17,1.696,40,1.748,42,0.893,55,1.761,56,1.141,65,1.885,67,1.07,72,0.763,73,0.773,79,0.761,83,0.93,85,0.818,87,0.837,99,0.85,113,0.689,115,1.769,125,1.987,129,0.726,130,0.645,132,0.98,133,0.985,141,0.682,143,1.277,144,3.582,150,0.793,152,0.974,154,2.912,156,0.926,157,2.909,165,0.997,169,1.028,176,2.47,190,2.842,204,1.714,210,2.895,216,1.98,221,0.974,224,1.805,252,1.131,257,2.353,290,0.72,319,0.763,337,1.239,339,1.288,342,0.893,350,0.635,355,1.85,356,2.188,360,0.909,361,0.672,372,2.039,376,1.103,404,1.141,414,0.881,419,3.711,424,1.063,429,2.08,464,1.152,483,1.122,515,0.889,581,1.174,585,3.084,598,1.426,654,1.59,673,2.751,695,1.141,708,1.459,714,0.939,732,2.139,737,1.103,742,2.361,752,1.863,761,1.07,770,1.306,775,1.348,832,1.715,869,1.095,883,1.185,962,1.07,981,1.371,1016,1.397,1029,1.459,1043,1.174,1056,1.808,1078,1.162,1084,1.254,1092,1.348,1094,1.426,1111,1.239,1112,2.373,1122,1.152,1141,2.544,1185,1.539,1186,1.371,1187,1.539,1188,1.539,1189,2.754,1190,2.304,1191,1.306,1192,1.539,1193,1.211,1194,1.086,1195,1.539,1196,1.397,1197,1.254,1198,1.539,1199,1.539,1200,1.539,1201,1.539,1202,2.754,1203,2.754,1204,1.397,1205,1.459,1206,1.371,1207,1.539,1208,1.539,1209,1.539,1210,1.539,1211,1.539,1212,1.539,1213,1.459,1214,1.539,1215,3.462,1216,2.754,1217,1.539,1218,1.539,1219,1.539,1220,1.539,1221,2.562,1222,1.539,1223,1.426,1224,1.426,1225,1.539,1226,1.539]],["component/169",[2,0.423,3,0.373]],["title/170-1",[141,20.974,143,21.937,207,23.907]],["name/170-1",[]],["text/170-1",[]],["component/170-1",[]],["title/170-2",[515,33.16,962,39.942]],["name/170-2",[]],["text/170-2",[]],["component/170-2",[]],["title/170-3",[673,38.442]],["name/170-3",[]],["text/170-3",[]],["component/170-3",[]],["title/170-4",[1056,35.362]],["name/170-4",[]],["text/170-4",[]],["component/170-4",[]],["title/170-5",[1206,51.173,1221,39.381]],["name/170-5",[]],["text/170-5",[]],["component/170-5",[]],["title/170-6",[450,63.984]],["name/170-6",[]],["text/170-6",[]],["component/170-6",[]],["title/170-7",[13,24.977,73,23.754,1227,42.152]],["name/170-7",[]],["text/170-7",[]],["component/170-7",[]],["title/170-8",[13,24.977,73,23.754,851,36.817]],["name/170-8",[]],["text/170-8",[]],["component/170-8",[]],["title/170",[115,18.399,129,22.306,143,21.937]],["name/170",[115,0.466,143,0.555]],["text/170",[0,2.554,2,0.723,3,0.361,4,0.823,17,0.771,28,1.846,40,2.065,42,0.986,47,0.859,55,2.249,65,3.743,68,0.894,71,2.483,72,2.006,77,1.043,90,0.981,92,0.862,111,0.917,113,0.761,115,1.17,116,0.894,124,0.856,127,2.814,129,1.418,130,1.261,133,1.088,134,1.135,140,1.101,141,2.168,143,3.629,165,1.948,169,2.008,172,2.563,178,1.7,187,1.114,192,1.008,203,1.094,204,1.38,206,0.942,207,0.859,216,3.273,217,0.754,228,2.211,258,2.326,290,1.406,304,0.838,305,1.996,306,1.327,336,0.927,342,0.986,356,1.447,397,2.151,407,2.156,423,1.442,424,1.174,441,1.135,462,1.239,463,1.174,475,1.239,494,1.337,500,1.442,596,3.685,651,1.018,673,2.94,685,2.048,686,1.2,695,2.23,708,0.901,710,2.008,801,1.337,802,1.352,814,1.272,860,0.994,869,2.139,872,1.209,879,1.228,1056,0.823,1088,2.516,1194,5.021,1196,1.543,1228,3.433,1229,1.757,1230,1.757,1231,1.757,1232,1.465,1233,1.757,1234,2.948,1235,1.757,1236,1.514,1237,1.757,1238,1.757,1239,3.692,1240,1.465,1241,1.757,1242,1.757,1243,2.731,1244,3.109,1245,3.109,1246,3.109,1247,1.757,1248,3.109,1249,1.757,1250,1.757,1251,1.757,1252,1.757,1253,1.757,1254,1.757]],["component/170",[2,0.423,3,0.373]],["title/171-1",[130,30.633]],["name/171-1",[]],["text/171-1",[]],["component/171-1",[]],["title/171-2",[673,38.442]],["name/171-2",[]],["text/171-2",[]],["component/171-2",[]],["title/171-3",[0,16.243,107,32.878]],["name/171-3",[]],["text/171-3",[]],["component/171-3",[]],["title/171-4",[10,25.659,515,33.16]],["name/171-4",[]],["text/171-4",[]],["component/171-4",[]],["title/171-5",[162,38.105,176,24.42]],["name/171-5",[]],["text/171-5",[]],["component/171-5",[]],["title/171-6",[0,16.243,95,33.018]],["name/171-6",[]],["text/171-6",[]],["component/171-6",[]],["title/171-7",[10,25.659,515,33.16]],["name/171-7",[]],["text/171-7",[]],["component/171-7",[]],["title/171-8",[162,38.105,176,24.42]],["name/171-8",[]],["text/171-8",[]],["component/171-8",[]],["title/171",[115,18.399,129,22.306,142,20.974]],["name/171",[115,0.466,142,0.531]],["text/171",[0,1.396,2,1.186,3,1.047,28,2.252,29,2.735,48,3.628,55,2.412,72,3.552,87,2.683,107,2.826,111,2.663,113,2.211,115,2.786,129,3.975,130,2.069,133,3.16,141,2.188,142,4.8,155,2.724,169,3.296,178,2.79,258,2.838,291,2.597,510,3.317,685,3.361,686,3.484,706,3.458,827,3.728,836,5.837,854,3.841,855,4.022,908,3.927,1181,4.481,1256,4.129]],["component/171",[2,0.423,3,0.373]],["title/172",[11,26.559,518,41.173]],["name/172",[5,1.313]],["text/172",[2,2.4,3,2.118,11,3.738,55,2.722,113,3.621,368,5.363,518,5.795,715,4.628,821,6.763]],["component/172",[2,0.423,3,0.373]],["title/173",[100,18.208,143,21.937,176,20.116]],["name/173",[100,0.461,176,0.509]],["text/173",[0,2.286,28,3.688,72,4.008,100,3.111,107,4.628,141,3.584,143,4.63,176,4.245,708,4.283]],["component/173",[2,0.423,3,0.373]],["title/174",[100,18.208,183,35.396,184,27.082]],["name/174",[100,0.461,184,0.686]],["text/174",[0,2.135,2,1.815,15,4.541,36,4.166,40,2.524,100,2.905,136,4.341,149,5.106,154,4.833,184,4.321,290,3.53,311,5.04,1279,7.154,1280,5.938]],["component/174",[2,0.423,3,0.373]],["title/175-1",[130,30.633]],["name/175-1",[]],["text/175-1",[]],["component/175-1",[]],["title/175-2",[1288,66.337]],["name/175-2",[]],["text/175-2",[]],["component/175-2",[]],["title/175-3",[668,35.969,1289,48.74]],["name/175-3",[]],["text/175-3",[]],["component/175-3",[]],["title/175-4",[141,25.463,259,32.076]],["name/175-4",[]],["text/175-4",[]],["component/175-4",[]],["title/175-5",[136,26.064,162,38.105]],["name/175-5",[]],["text/175-5",[]],["component/175-5",[]],["title/175-6",[10,25.659,732,32.878]],["name/175-6",[]],["text/175-6",[]],["component/175-6",[]],["title/175-7",[137,30.46,152,29.951,622,31.587]],["name/175-7",[]],["text/175-7",[]],["component/175-7",[]],["title/175-8",[684,38.105,1290,53.218]],["name/175-8",[]],["text/175-8",[]],["component/175-8",[]],["title/175-9",[176,24.42,515,33.16]],["name/175-9",[]],["text/175-9",[]],["component/175-9",[]],["title/175",[100,22.105,142,25.463]],["name/175",[100,0.461,142,0.531]],["text/175",[0,1.446,10,1.194,11,2.364,17,2.014,23,0.948,28,1.22,30,0.633,40,0.894,55,3.12,65,1.108,72,0.738,77,0.913,78,1.711,79,2.193,80,1.198,86,1.104,90,1.543,100,1.029,106,0.736,109,1.059,113,1.629,124,0.75,126,1.028,130,1.525,131,1.432,136,2.014,137,0.959,141,1.613,142,3.896,150,0.767,152,1.692,154,2.328,157,1.487,161,0.9,162,4.105,173,1.982,176,1.887,184,1.53,192,1.585,193,0.685,196,0.806,204,2.035,205,0.943,207,1.351,213,2.468,216,0.789,230,0.863,257,0.938,259,1.493,290,1.701,291,2.334,303,1.229,305,0.988,309,0.994,313,1.511,331,1.499,350,1.103,356,0.716,360,0.879,372,1.458,390,0.976,391,1.014,414,1.53,419,0.775,478,1.593,515,1.543,544,1.159,596,2.926,622,1.785,654,3.285,666,1.094,668,3.563,673,0.783,684,2.944,696,1.397,702,1.001,704,1.021,708,2.709,715,3.257,726,1.711,732,0.852,738,1.213,739,1.752,743,3.351,814,2,854,2.831,857,1.036,860,3.328,879,1.076,1108,1.283,1178,2.152,1197,1.213,1236,1.327,1276,1.283,1280,2.861,1288,1.352,1289,2.268,1290,3.37,1291,1.539,1292,2.477,1293,1.304,1294,1.411,1295,2.303,1296,1.539,1297,1.539,1298,1.539,1300,1.539,1301,2.763,1302,1.539,1303,1.539,1304,1.539,1499,1.687]],["component/175",[2,0.423,3,0.373]],["title/176",[100,22.105,932,36.768]],["name/176",[100,0.461,1305,1.164]],["text/176",[0,2.208,55,2.629,72,3.871,100,3.005,107,4.469,136,3.543,154,4.998,290,3.65,715,4.469,932,6.255,1280,6.142,1306,7.807]],["component/176",[2,0.423,3,0.373]],["title/177-1",[40,24.428]],["name/177-1",[]],["text/177-1",[]],["component/177-1",[]],["title/177-2",[30,20.116,40,15.816,277,23.313]],["name/177-2",[]],["text/177-2",[]],["component/177-2",[]],["title/177-3",[40,19.2,709,42.211]],["name/177-3",[]],["text/177-3",[]],["component/177-3",[]],["title/177-4",[40,19.2,694,29.903]],["name/177-4",[]],["text/177-4",[]],["component/177-4",[]],["title/177-5",[0,20.666]],["name/177-5",[]],["text/177-5",[]],["component/177-5",[]],["title/177-6",[0,13.38,30,20.116,277,23.313]],["name/177-6",[]],["text/177-6",[]],["component/177-6",[]],["title/177-7",[0,16.243,709,42.211]],["name/177-7",[]],["text/177-7",[]],["component/177-7",[]],["title/177-8",[0,16.243,694,29.903]],["name/177-8",[]],["text/177-8",[]],["component/177-8",[]],["title/177-9",[172,24.803,213,26.317,361,20.661]],["name/177-9",[]],["text/177-9",[]],["component/177-9",[]],["title/177-10",[188,29.601,189,33.305]],["name/177-10",[]],["text/177-10",[]],["component/177-10",[]],["title/177-11",[858,50.816]],["name/177-11",[]],["text/177-11",[]],["component/177-11",[]],["title/177-12",[172,24.803,361,20.661,686,33.392]],["name/177-12",[]],["text/177-12",[]],["component/177-12",[]],["title/177-13",[188,29.601,189,33.305]],["name/177-13",[]],["text/177-13",[]],["component/177-13",[]],["title/177-14",[858,50.816]],["name/177-14",[]],["text/177-14",[]],["component/177-14",[]],["title/177-15",[127,24.325,172,18.338,361,15.275,596,23.063,686,24.688]],["name/177-15",[]],["text/177-15",[]],["component/177-15",[]],["title/177-16",[188,29.601,189,33.305]],["name/177-16",[]],["text/177-16",[]],["component/177-16",[]],["title/177-17",[858,50.816]],["name/177-17",[]],["text/177-17",[]],["component/177-17",[]],["title/177-18",[172,18.338,178,19.774,258,20.108,361,15.275,685,23.82]],["name/177-18",[]],["text/177-18",[]],["component/177-18",[]],["title/177-19",[0,13.38,95,27.198,217,20.974]],["name/177-19",[]],["text/177-19",[]],["component/177-19",[]],["title/177-20",[188,29.601,189,33.305]],["name/177-20",[]],["text/177-20",[]],["component/177-20",[]],["title/177-21",[858,50.816]],["name/177-21",[]],["text/177-21",[]],["component/177-21",[]],["title/177-22",[213,31.949,1402,44.696]],["name/177-22",[]],["text/177-22",[]],["component/177-22",[]],["title/177-23",[150,29.601,1402,44.696]],["name/177-23",[]],["text/177-23",[]],["component/177-23",[]],["title/177",[0,13.38,27,23.242,40,15.816]],["name/177",[27,1.051]],["text/177",[0,2.773,2,0.451,3,0.278,11,1.697,16,0.9,17,0.851,20,1.291,24,0.809,27,0.645,28,1.301,29,0.727,30,2.228,34,0.366,37,0.932,40,2.188,42,1.087,44,0.503,46,0.698,47,0.349,55,2.141,65,3.253,68,1.5,74,0.745,77,0.424,78,0.442,79,0.649,83,0.418,85,0.367,90,0.399,95,2.69,99,0.381,106,0.926,111,0.708,115,0.51,116,0.69,120,1.056,124,1.436,125,0.698,126,0.477,127,1.983,128,0.499,129,0.326,130,0.786,131,0.37,141,0.306,143,0.32,150,1.469,153,0.397,156,0.416,157,0.384,158,1.448,161,0.418,164,0.724,172,3.774,176,1.715,177,0.86,186,0.404,196,1.544,198,0.876,199,0.428,204,2.403,205,0.437,207,0.663,213,3.739,216,3.265,217,1.788,250,0.47,254,3.067,257,1.18,264,0.361,265,1.15,277,0.924,290,0.614,291,0.986,292,0.831,304,0.924,309,0.461,313,0.391,318,0.401,322,0.406,326,0.503,331,1.051,335,1.837,350,0.773,351,0.683,356,0.631,358,1.044,361,1.431,368,0.458,372,0.377,390,0.453,397,0.698,403,1.819,418,0.416,424,0.477,439,0.503,457,0.876,510,0.882,518,0.495,541,0.84,545,1.083,552,3.467,582,0.499,587,0.57,596,3.277,606,0.499,643,0.882,651,0.414,673,0.363,674,0.865,686,1.323,693,1.928,694,2.1,701,0.522,710,1.903,711,1.098,732,0.395,739,2.148,752,0.888,804,1.486,842,0.543,857,0.913,860,3.933,866,0.595,867,3.105,871,1.563,879,0.499,886,1.001,904,0.556,908,1.044,918,1.114,1043,0.527,1056,0.334,1070,0.563,1071,1.821,1078,0.522,1088,0.578,1114,0.527,1141,0.47,1143,0.948,1179,1.377,1194,0.488,1204,0.627,1239,0.522,1258,0.57,1259,0.605,1282,0.991,1402,4.275,1427,1.244,1441,0.527,1446,0.586,1456,2.26,1457,2.125,1458,0.671,1459,0.616,1460,0.616,1461,0.627,1462,0.691,1463,2.721,1464,0.714,1465,3.037,1466,1.357,1467,1.357,1468,0.64,1469,1.641,1470,1.216,1471,0.714]],["component/177",[2,0.423,3,0.373]],["title/178-1",[40,24.428]],["name/178-1",[]],["text/178-1",[]],["component/178-1",[]],["title/178-2",[0,20.666]],["name/178-2",[]],["text/178-2",[]],["component/178-2",[]],["title/178-3",[115,28.417]],["name/178-3",[]],["text/178-3",[]],["component/178-3",[]],["title/178-4",[100,28.123]],["name/178-4",[]],["text/178-4",[]],["component/178-4",[]],["title/178",[94,45.762]],["name/178",[94,1.34]],["text/178",[0,2.389,2,1.817,3,1.128,4,1.986,9,2.097,10,1.833,20,2.222,28,1.111,36,2.936,40,2.33,43,1.963,47,1.23,55,0.82,72,1.207,78,2.627,79,2.028,82,3.264,87,1.323,92,2.08,94,1.525,100,2.909,105,1.294,111,1.313,115,2.711,116,1.281,117,1.705,118,3.264,119,2.036,120,1.959,121,2.009,122,1.983,123,2.256,124,2.067,125,2.182,126,1.681,127,1.693,128,1.759,129,3.792,130,1.72,131,1.304,132,3.975,133,2.627,134,1.625,135,1.437,136,3.43,137,1.567,138,1.437,139,2.21,140,1.576,141,1.079,142,1.819,143,1.903,144,1.501,145,2.965,146,1.789,147,2.256,148,4.739,149,1.647,150,1.255,151,1.636,152,1.541,153,1.399,154,1.558,155,1.344,156,1.464,157,1.354,158,2.492,159,3.89,160,3.228,161,1.471,162,2.722,163,2.036,164,1.344,165,1.576,166,2.256]],["component/178",[2,0.423,3,0.373]],["title/179",[2,13.805,3,12.182]],["name/179",[5,1.313]],["text/179",[0,1.838,2,2.236,3,0.918,4,3.778,6,3.3,10,1.933,27,3.193,36,3.587,40,1.447,54,2.988,65,2.694,72,2.146,97,1.793,98,3.672,100,1.665,115,1.683,129,3.681,135,2.555,136,3.938,141,2.882,149,2.927,158,2.628,167,2.603,168,3.102,169,2.889,170,4.01,171,4.071,172,2.269,173,3.208,174,2.927,175,2.947,176,1.84,177,2.836,178,2.446,179,3.333,180,3.009,181,2.446,182,3.268,183,3.238,184,2.477,185,2.908,186,2.532,187,2.836]],["component/179",[2,0.423,3,0.373]],["title/180-1",[188,29.601,189,33.305]],["name/180-1",[]],["text/180-1",[]],["component/180-1",[]],["title/180-2",[34,21.309,188,20.729,189,23.323,190,21.861]],["name/180-2",[]],["text/180-2",[]],["component/180-2",[]],["title/180-3",[97,30.281]],["name/180-3",[]],["text/180-3",[]],["component/180-3",[]],["title/180-4",[191,34.22,192,34.061]],["name/180-4",[]],["text/180-4",[]],["component/180-4",[]],["title/180",[193,21.758,194,39.578,195,39.578]],["name/180",[194,1.002,195,1.002]],["text/180",[2,1.391,3,1.701,11,1.72,17,1.688,20,1.174,24,1.337,28,0.989,30,0.922,34,1.97,39,1.567,55,1.644,68,1.141,77,1.33,83,1.31,97,3.472,99,2.052,106,2.861,113,2.593,115,0.843,129,1.022,130,0.909,131,1.992,137,2.394,153,1.246,178,2.102,181,1.226,184,3.314,185,3.89,186,1.268,190,1.179,191,2.216,192,1.286,193,0.997,196,1.174,197,4.055,198,4.349,199,1.344,200,1.963,201,2.836,202,1.84,203,1.396,204,1.706,205,2.354,206,2.06,207,1.096,208,2.168,209,2.242,210,1.38,211,2.055,212,4.371,213,2.069,214,3.844,215,4.331,216,1.149,217,0.961,218,2.242,219,2.055,220,2.242,221,1.373,222,2.168,223,1.622,224,1.421,225,1.868,226,2.009,227,1.477,228,1.594,229,4.15,230,1.257,231,2.242,232,2.168,233,3.2,234,2.242,235,2.242,236,2.242,237,2.242,238,2.242,239,2.242,240,2.242,241,2.242,242,2.242,243,2.242,244,2.242,245,2.242,246,2.242,247,2.242,248,1.542,249,2.242,250,1.477,251,2.242,252,1.594,253,2.107,254,2.437,255,1.67,256,2.242,257,1.365,258,1.246,259,2.077,260,1.84]],["component/180",[2,0.423,3,0.373]],["title/181-1",[261,49.103]],["name/181-1",[]],["text/181-1",[]],["component/181-1",[]],["title/181-2",[262,46.008]],["name/181-2",[]],["text/181-2",[]],["component/181-2",[]],["title/181-3",[]],["name/181-3",[]],["text/181-3",[]],["component/181-3",[]],["title/181",[263,43.795,264,30.006]],["name/181",[264,1.118]],["text/181",[17,3.948,26,1.489,30,2.56,34,2.513,37,1.441,39,2.094,45,2.392,55,2.584,68,3.167,97,1.966,150,1.494,153,1.666,164,1.6,167,1.743,168,2.078,176,2.56,181,1.638,193,3.2,204,1.329,205,1.835,212,2.189,217,1.285,228,2.13,229,2.078,255,2.232,261,3.187,262,4.381,263,2.21,264,4.305,265,1.778,266,2.425,267,2.112,268,2.582,269,2.538,270,2.28,271,2.582,272,2.078,273,6.42,274,2.149,275,2.538,276,5.364,277,2.967,278,2.392,279,2.333,280,2.631,281,2.306,282,2.001,283,2.816,284,2.816,285,4.089,286,1.845,287,2.03,288,2.816,289,2.747,290,1.355,291,1.525,292,1.835,293,2.54,294,2.459,295,2.046,296,1.911,297,2.631,298,1.974,299,3.208,300,4.025,301,2.685,302,2.685,303,2.392]],["component/181",[2,0.423,3,0.373]],["title/182-1",[188,24.383,189,27.434,304,23.313]],["name/182-1",[]],["text/182-1",[]],["component/182-1",[]],["title/182-2",[193,21.758,233,31.004,305,31.388]],["name/182-2",[]],["text/182-2",[]],["component/182-2",[]],["title/182-3",[138,27.929,193,21.758,233,31.004]],["name/182-3",[]],["text/182-3",[]],["component/182-3",[]],["title/182-4",[55,13.541,286,25.604,306,17.741,307,25.188]],["name/182-4",[]],["text/182-4",[]],["component/182-4",[]],["title/182",[193,26.415,308,36.163]],["name/182",[307,1.34]],["text/182",[2,1.341,3,1.183,17,1.18,20,1.408,54,2.995,55,2.925,62,1.528,80,2.093,82,2.069,92,2.199,97,1.078,99,2.394,106,3.218,138,2.56,145,1.88,159,1.62,176,1.844,193,3.814,204,1.193,205,1.647,207,1.314,230,4.196,233,5.434,257,1.638,286,2.761,305,1.726,306,4.541,308,4.556,309,2.896,310,1.647,311,1.736,312,5.447,313,1.47,314,3.852,315,6.965,316,1.895,317,3.061,318,1.508,319,1.29,320,3.865,321,1.822,322,1.528,323,2.119,324,1.911,325,1.983,326,1.895,327,4.019,328,1.783,329,4.019,330,3.798,331,1.458,332,2.361,333,1.715,334,2.024,335,2.003,336,2.366,337,2.093,338,2.207,339,2.176]],["component/182",[2,0.423,3,0.373]],["title/183",[193,33.606]],["name/183",[5,1.313]],["text/183",[2,1.557,3,1.374,24,3.994,33,4.72,68,3.408,74,3.677,105,4.604,106,3.202,107,3.708,116,3.408,138,3.824,158,3.934,190,3.521,193,2.979,196,3.508,204,2.971,206,3.589,306,3.819,340,4.803,341,5.497,342,3.756,343,5.771,344,4.219]],["component/183",[2,0.423,3,0.373]],["title/184-1",[306,20.868,345,35.396,346,34.19]],["name/184-1",[]],["text/184-1",[]],["component/184-1",[]],["title/184-2",[347,67.707]],["name/184-2",[]],["text/184-2",[]],["component/184-2",[]],["title/184-3",[348,51.972]],["name/184-3",[]],["text/184-3",[]],["component/184-3",[]],["title/184-4",[97,23.801,306,25.334]],["name/184-4",[]],["text/184-4",[]],["component/184-4",[]],["title/184-5",[190,25.715,304,23.313,306,20.868]],["name/184-5",[]],["text/184-5",[]],["component/184-5",[]],["title/184-6",[77,29.021,306,20.868,349,37.216]],["name/184-6",[]],["text/184-6",[]],["component/184-6",[]],["title/184-7",[304,23.313,306,20.868,350,19.516]],["name/184-7",[]],["text/184-7",[]],["component/184-7",[]],["title/184-8",[298,32.217,328,32.439,351,24.632]],["name/184-8",[]],["text/184-8",[]],["component/184-8",[]],["title/184-9",[28,18.349,138,23.743,192,23.853,258,23.122]],["name/184-9",[]],["text/184-9",[]],["component/184-9",[]],["title/184-10",[30,17.101,192,23.853,352,30.374,353,31.996]],["name/184-10",[]],["text/184-10",[]],["component/184-10",[]],["title/184-11",[97,19.606,306,20.868,354,28.593]],["name/184-11",[]],["text/184-11",[]],["component/184-11",[]],["title/184-12",[355,38.595,356,27.631]],["name/184-12",[]],["text/184-12",[]],["component/184-12",[]],["title/184",[286,36.562,306,25.334]],["name/184",[306,0.944]],["text/184",[2,0.766,3,1.263,4,2.151,24,0.488,26,0.407,28,0.361,30,2.04,34,0.419,40,0.499,42,2.113,43,0.379,44,1.088,46,0.794,47,0.4,55,2.299,65,1.51,68,0.416,77,2.492,78,0.507,79,0.391,85,1.126,88,0.93,90,0.457,97,1.32,105,0.421,111,0.805,115,1.58,117,0.555,124,0.399,130,0.332,135,1.581,138,0.881,142,0.662,143,0.692,144,0.92,145,0.572,150,0.408,155,0.437,156,0.476,161,0.478,176,0.9,181,1.197,184,0.453,185,1.423,190,1.151,192,3.037,193,2.621,196,0.429,197,1.046,199,0.491,200,0.418,204,0.363,206,0.439,207,2.879,210,0.504,216,1.122,217,0.662,221,0.501,227,0.539,258,1.54,259,1.779,260,1.797,261,1.8,262,2.295,264,2.977,277,0.39,285,1.245,286,3.054,290,0.37,292,0.501,293,0.424,295,2.868,298,1.824,299,1.433,304,1.044,306,4.233,308,0.498,310,0.501,318,0.459,319,1.05,322,0.877,323,1.216,328,0.543,335,2.807,342,0.459,344,0.516,345,1.117,346,1.936,349,0.623,350,1.834,351,1.658,352,1.599,353,2.899,354,0.478,356,0.381,357,1.905,358,0.63,359,0.92,360,0.881,361,1.17,362,0.693,363,0.733,364,0.705,365,0.693,366,0.516,372,1.462,373,0.488,379,0.592,380,0.719,381,0.616,382,0.63,383,0.769,384,0.567,385,0.598,386,0.733,387,0.682,388,0.682,389,0.733,390,0.519,391,0.539,392,2.482,393,0.733,394,1.286,395,0.733,396,1.355,397,0.421,398,1.286,399,2.023,400,2.023,401,1.824,402,2.892,403,0.604,404,0.587,405,0.543,406,2.432,407,1.07,408,0.719,409,2.058,410,1.962,411,1.462,412,0.662,413,0.719,414,0.453,415,1.232,416,1.415,417,0.693,418,0.476,419,0.412,420,0.653,421,0.75,422,1.415,423,0.672,424,1.031,425,0.75,426,0.525,427,0.769,428,2.007,429,0.598,430,0.852,431,3.85,432,1.383,433,2.058,434,0.672,435,0.672,436,2.183,437,0.598,438,1.249,439,0.577,440,0.792,441,0.529,442,0.852,443,0.733,444,0.535,445,0.672,446,0.483,447,0.693,448,0.693,449,0.693,450,0.693,451,0.645,452,2.279,453,2.279,454,2.279,455,2.279,456,2.118,457,1.414,458,1.631,459,1.962,460,0.852,461,0.577,462,0.577,463,0.547,464,0.592,465,0.555,466,0.672,467,0.559,468,0.513,469,0.501,470,0.604,471,0.705,472,0.662,473,0.63]],["component/184",[2,0.423,3,0.373]],["title/185-1",[193,33.606]],["name/185-1",[]],["text/185-1",[]],["component/185-1",[]],["title/185-2",[55,24.602]],["name/185-2",[]],["text/185-2",[]],["component/185-2",[]],["title/185-3",[217,32.395]],["name/185-3",[]],["text/185-3",[]],["component/185-3",[]],["title/185",[193,26.415,474,40.538]],["name/185",[474,1.511]],["text/185",[2,0.918,3,0.81,55,1.286,65,2.449,74,2.169,92,1.937,97,1.583,106,1.888,131,2.046,172,2.003,193,4.047,204,1.752,207,1.93,210,2.432,213,2.125,217,2.62,255,2.942,286,2.432,290,1.786,291,2.01,306,3.189,307,2.392,319,1.894,332,3.468,350,2.438,351,1.989,357,2.717,361,1.668,369,3.005,372,2.084,402,5.366,408,3.468,412,3.196,415,6.715,424,2.638,434,5.016,438,4.945,444,4.89,464,2.858,474,2.696,475,4.307,476,4.111,477,4.796,478,2.276,479,3.82,480,2.913,481,4.111,482,3.468,483,2.784,484,4.111,485,3.949,486,3.54,487,3.153,488,4.111]],["component/185",[2,0.423,3,0.373]],["title/186-1",[29,26.213,176,20.116,177,31.004]],["name/186-1",[]],["text/186-1",[]],["component/186-1",[]],["title/186-2",[181,32.468,264,30.006]],["name/186-2",[]],["text/186-2",[]],["component/186-2",[]],["title/186",[188,29.601,189,33.305]],["name/186",[188,0.617,489,1.11]],["text/186",[2,1.478,3,1.583,17,2.791,29,2.229,34,2.131,65,3.465,79,1.988,83,2.431,97,1.667,131,2.154,142,2.726,143,1.865,155,2.22,176,1.71,177,2.636,178,2.274,181,4.22,193,3.434,194,3.365,195,3.365,197,2.818,203,2.59,206,2.229,254,2.636,261,2.703,262,2.533,264,3.213,293,2.154,295,4.34,299,2.721,342,2.332,357,4.374,359,2.48,391,2.739,490,2.839,491,3.727,492,3.413,493,3.413,494,3.164,495,6.652,496,3.465,497,5.298,498,3.727,499,2.839,500,3.413,501,3.727,502,3.727,503,3.727,504,3.727,505,3.727]],["component/186",[2,0.423,3,0.373]],["title/187-1",[357,40.85,369,45.18]],["name/187-1",[]],["text/187-1",[]],["component/187-1",[]],["title/187",[506,65.105]],["name/187",[506,1.907]],["text/187",[2,1.651,3,1.457,55,2.312,191,5.362,193,3.158,207,3.47,357,4.884,361,2.999,369,5.402,372,3.747,475,5.004,506,8.944,507,9.685,508,6.508,509,7.39,510,4.615,511,5.138]],["component/187",[2,0.423,3,0.373]],["title/188-1",[65,19.606,477,31.388,646,36.438]],["name/188-1",[]],["text/188-1",[]],["component/188-1",[]],["title/188-2",[548,37.638,647,42.211]],["name/188-2",[]],["text/188-2",[]],["component/188-2",[]],["title/188",[88,35.779,304,28.302]],["name/188",[272,1.534]],["text/188",[2,2.174,3,1.825,11,1.471,20,1.723,26,1.634,33,2.318,37,1.582,40,1.063,55,1.071,67,4.462,85,1.691,90,2.953,97,1.318,99,2.823,100,1.969,105,1.691,113,2.291,126,2.196,136,1.444,140,2.06,153,1.829,193,3.38,200,3.387,207,1.607,264,1.662,272,2.28,287,2.228,290,1.487,293,1.704,298,2.166,304,1.567,308,2.003,319,1.577,350,2.11,361,1.389,377,3.532,378,2.625,399,2.402,400,2.402,444,3.46,457,2.124,477,4.257,499,2.245,531,3.373,548,3.352,577,2.699,580,2.592,646,4.941,647,4.715,648,2.888,649,2.245,650,2.358,651,1.904,652,2.531,653,2.888,654,1.837,655,2.56,656,2.124,657,2.338,658,2.014,659,2.338,660,2.426,661,2.402,662,2.947,663,2.245]],["component/188",[2,0.423,3,0.373]],["title/189-1",[0,16.243,336,31.336]],["name/189-1",[]],["text/189-1",[]],["component/189-1",[]],["title/189-2",[28,26.203,113,25.725]],["name/189-2",[]],["text/189-2",[]],["component/189-2",[]],["title/189-3",[100,18.208,136,21.469,351,24.632]],["name/189-3",[]],["text/189-3",[]],["component/189-3",[]],["title/189-4",[186,33.6,187,37.638]],["name/189-4",[]],["text/189-4",[]],["component/189-4",[]],["title/189",[285,33.752,664,42.211]],["name/189",[285,1.258]],["text/189",[0,2.489,2,0.716,3,0.456,10,1.331,11,2.838,13,0.619,15,1.792,23,1.369,26,0.602,27,2.118,28,0.535,29,0.649,30,0.914,35,1.401,36,0.647,40,2.167,43,2.062,46,1.143,47,0.592,54,0.809,55,2.382,67,2.072,72,0.581,73,0.588,85,0.623,87,0.637,88,0.73,89,0.827,92,0.594,94,0.734,100,0.451,105,1.143,106,0.579,107,0.671,110,0.84,112,0.922,113,3.488,115,0.836,116,0.616,124,0.59,125,1.143,129,1.014,130,1.249,131,0.627,133,1.377,134,1.436,135,0.692,136,1.352,141,1.911,142,0.519,143,0.543,144,0.722,151,0.787,153,0.674,155,0.647,164,0.647,172,1.127,174,0.793,178,1.685,180,0.815,185,0.787,186,1.743,187,1.953,188,0.604,196,1.164,200,0.619,201,0.893,207,0.592,213,0.652,215,2.763,217,1.321,229,0.84,250,0.798,258,1.236,259,0.654,285,1.264,290,2.269,291,3.229,293,1.977,304,1.06,318,1.728,319,0.581,333,3.199,336,2.647,350,1.523,351,1.12,356,1.776,360,0.692,366,0.763,399,0.885,400,0.885,404,0.869,418,2.221,419,1.12,444,0.793,446,1.819,467,0.827,468,0.759,469,0.742,470,0.893,477,0.777,483,0.854,499,0.827,515,0.676,516,0.955,517,0.869,531,0.773,534,0.809,538,0.869,544,0.912,548,0.768,631,2.371,647,0.861,651,1.784,658,0.742,665,1.064,666,0.861,667,1.883,668,0.734,669,0.877,670,1.916,671,0.861,672,0.932,673,2.268,674,1.418,675,1.044,676,1.086,677,0.955,678,0.854,679,1.825,680,1.044,681,1.044,682,0.902,683,1.086,684,0.777,685,1.464,686,0.827,687,0.967,688,0.955,689,0.877,690,0.861,691,0.885,692,1.306,693,0.793,694,0.61,695,2.209,696,1.123,697,1.026,698,1.567,699,1.992,700,1.992,701,0.885,702,0.787,703,0.847,704,0.803,705,0.833,706,1.506,707,1.086,708,0.621,709,0.861,710,0.782,711,0.98,712,1.784,713,0.967,714,0.715,715,0.671,716,0.768]],["component/189",[2,0.423,3,0.373]],["title/190-1",[129,27.08,171,35.969]],["name/190-1",[]],["text/190-1",[]],["component/190-1",[]],["title/190-2",[690,42.211,696,30.006]],["name/190-2",[]],["text/190-2",[]],["component/190-2",[]],["title/190-3",[696,30.006,715,32.878]],["name/190-3",[]],["text/190-3",[]],["component/190-3",[]],["title/190-4",[65,19.606,446,28.876,673,24.889]],["name/190-4",[]],["text/190-4",[]],["component/190-4",[]],["title/190",[10,25.659,664,42.211]],["name/190",[10,0.956]],["text/190",[0,2.238,2,1.796,3,1.174,4,1.056,10,1.231,11,1.009,13,0.432,17,0.99,20,0.443,21,0.676,23,1.754,26,0.42,28,1.257,33,1.123,34,0.434,36,2.512,37,0.407,38,0.63,40,0.921,43,1.044,47,0.778,55,1.652,68,0.431,72,0.764,73,0.411,74,1.239,77,0.502,79,1.079,85,0.435,86,0.607,87,1.186,89,0.578,92,1.895,94,0.513,95,0.471,97,0.339,99,0.452,100,0.315,105,1.74,106,0.405,107,0.469,110,1.104,111,0.442,112,0.644,113,1.865,115,1.454,124,0.776,125,1.16,129,2.863,130,1.567,131,0.438,132,0.521,133,1.764,134,2.78,135,2.458,136,2.511,138,0.483,141,0.363,142,1.222,143,1.278,144,0.505,146,0.602,151,0.55,153,0.471,155,0.452,156,0.492,157,0.857,159,1.359,160,1.716,162,1.022,164,1.204,165,0.998,167,0.492,168,0.587,171,0.513,172,0.808,174,0.554,176,0.655,178,0.463,179,1.186,182,0.618,184,2.605,185,1.035,186,0.479,187,0.536,191,0.488,196,1.182,198,0.547,199,0.507,200,1.455,207,0.778,213,0.455,217,0.967,224,0.536,257,0.515,258,0.471,264,0.428,274,0.607,290,0.72,291,0.431,313,0.871,316,1.123,319,0.406,321,0.573,322,0.481,328,1.89,331,1.545,333,2.157,336,0.447,350,0.338,356,0.394,359,0.505,360,0.483,366,0.533,373,0.505,401,0.557,419,1.435,420,0.676,446,1.332,469,0.518,499,0.578,515,0.889,531,0.54,534,1.064,538,0.607,552,0.477,582,0.592,589,0.729,606,0.592,611,1.096,614,0.717,622,1.029,623,0.527,631,0.651,641,1.079,651,0.49,654,2.627,658,0.518,659,0.602,669,0.612,673,1.967,674,1.016,684,1.448,685,1.049,688,0.667,689,0.612,692,0.936,696,4.133,701,0.618,702,0.55,704,1.056,708,0.434,712,0.922,714,0.5,715,3.743,716,0.536,717,0.743,718,0.729,719,0.729,720,0.695,721,0.743,722,0.624,723,1.24,725,0.685,726,0.986,727,0.695,728,1.618,729,0.743,730,0.651,731,0.685,732,0.469,733,0.743,734,0.685,735,2.062,736,1.911,737,1.104,738,0.667,739,0.536,740,0.592,741,0.758,742,0.37,743,1.163,744,0.743,745,0.758,746,0.758,747,0.667,748,0.758,749,0.624,750,0.644,751,0.536,752,1.042,753,0.685,754,0.758,755,0.729,756,0.758,757,1.24,758,0.685,759,0.743,760,0.758,761,0.569,762,0.612,789,0.758,790,0.758,791,0.705,792,0.758,793,1.212,794,0.758,795,0.758,796,0.685,797,0.644,798,0.644,799,0.651,800,0.685,801,0.644,802,0.651,803,0.685,804,0.51,805,0.743,806,1.427,1476,0.795,1477,0.795,1478,0.795,1479,0.795,1480,0.795]],["component/190",[2,0.423,3,0.373]],["title/191",[0,11.375,65,16.667,95,23.122,113,18.015]],["name/191",[0,0.605]],["text/191",[0,2.979,1,1.957,2,2.193,3,1.873,13,1.299,26,1.264,35,1.603,40,0.823,43,1.177,46,1.308,47,1.243,48,1.808,71,2.031,72,1.22,73,2.079,79,1.216,81,3.374,95,4.879,97,1.02,113,3.62,129,1.16,130,3.702,132,1.566,156,1.48,186,1.439,191,1.466,206,1.363,221,2.621,262,1.549,290,1.15,304,1.212,311,3.579,331,3.006,350,1.015,478,1.466,490,1.737,519,1.858,534,1.699,537,1.895,582,1.778,611,1.75,660,1.876,682,1.895,696,1.286,705,1.75,710,3.579,712,3.209,714,1.502,716,2.713,728,1.824,751,1.612,793,1.936,807,2.031,808,2.192,810,2.031,811,2.28,812,2.28,813,4.776,814,1.841,815,1.895,816,2.058,817,2.155,818,1.98,819,2.234,820,2.234,821,2.058,822,1.936,823,1.676,824,2.234,825,2.234,1482,2.391]],["component/191",[2,0.423,3,0.373]],["title/192",[826,62.957]],["name/192",[5,1.313]],["text/192",[0,2.34,2,2.073,3,1.894,4,1.909,8,1.943,10,1.038,11,2.801,14,1.917,16,1.593,22,1.827,26,2.026,28,2.345,29,1.287,30,1.677,35,1.513,37,2.556,40,2.629,43,1.886,47,2.597,55,1.73,95,2.267,100,1.518,101,2.874,105,1.235,106,1.949,107,2.258,109,1.652,111,2.128,113,2.302,116,2.704,117,1.627,124,1.17,130,2.154,142,1.03,186,1.359,196,1.258,200,2.082,204,2.357,285,3.02,290,1.844,306,1.025,314,1.604,331,1.302,340,1.722,344,1.513,356,2.472,361,1.722,405,1.593,469,1.47,474,1.639,487,1.917,514,1.593,519,1.754,649,2.784,659,1.707,664,2.898,684,1.541,714,1.418,722,1.771,723,1.87,751,1.522,769,2.001,827,1.754,828,2.001,829,2.034,830,2.152,831,2.109,832,1.447,833,2.034,834,2.152,835,1.893,836,1.893,837,2.109,838,1.397,839,2.152,840,2.152,841,1.917,842,1.827,843,1.87,844,2.109,845,2.152,846,2.152,847,2.07]],["component/192",[2,0.423,3,0.373]],["title/193-1",[0,16.243,336,31.336]],["name/193-1",[]],["text/193-1",[]],["component/193-1",[]],["title/193-2",[27,28.215,141,25.463]],["name/193-2",[]],["text/193-2",[]],["component/193-2",[]],["title/193-3",[46,38.852]],["name/193-3",[]],["text/193-3",[]],["component/193-3",[]],["title/193-4",[46,30.538,726,36.768]],["name/193-4",[]],["text/193-4",[]],["component/193-4",[]],["title/193-5",[13,24.977,46,25.155,73,23.754]],["name/193-5",[]],["text/193-5",[]],["component/193-5",[]],["title/193-6",[115,28.417]],["name/193-6",[]],["text/193-6",[]],["component/193-6",[]],["title/193-7",[115,22.336,144,35.41]],["name/193-7",[]],["text/193-7",[]],["component/193-7",[]],["title/193-8",[115,22.336,143,26.631]],["name/193-8",[]],["text/193-8",[]],["component/193-8",[]],["title/193-9",[115,22.336,142,25.463]],["name/193-9",[]],["text/193-9",[]],["component/193-9",[]],["title/193-10",[115,22.336,176,24.42]],["name/193-10",[]],["text/193-10",[]],["component/193-10",[]],["title/193-11",[100,28.123]],["name/193-11",[]],["text/193-11",[]],["component/193-11",[]],["title/193-12",[100,22.105,142,25.463]],["name/193-12",[]],["text/193-12",[]],["component/193-12",[]],["title/193",[113,25.725,848,53.218]],["name/193",[113,0.959]],["text/193",[0,2.356,2,1.904,3,1.767,4,2.961,11,1.091,13,2.109,15,1.419,27,1.159,28,2.791,30,1.003,36,1.302,37,1.173,40,2.045,43,1.128,46,3.253,55,1.345,68,1.241,72,1.17,73,2.006,87,2.172,100,2,113,2.74,115,2.379,116,1.241,117,1.652,129,1.112,130,0.989,131,1.263,132,2.544,136,2.777,137,1.519,141,2.712,142,2.712,143,1.853,144,1.454,155,2.869,157,1.312,159,1.469,184,1.35,199,1.462,200,1.245,204,1.082,290,1.868,291,1.241,333,2.634,336,1.287,351,1.228,359,1.454,361,1.03,461,2.912,467,1.665,468,1.528,470,1.799,478,1.405,531,1.555,548,1.546,622,1.575,643,1.585,658,1.493,689,1.765,691,1.781,692,2.427,696,1.232,710,1.575,712,3.112,716,1.546,726,2.558,730,3.179,732,1.35,740,1.705,827,3.925,843,1.899,849,2.141,850,2.002,851,1.836,852,1.817,853,2.186,854,1.836,855,1.922,856,2.102,857,1.64]],["component/193",[2,0.423,3,0.373]],["title/194-1",[37,20.004,40,13.446,277,19.819,361,17.564]],["name/194-1",[]],["text/194-1",[]],["component/194-1",[]],["title/194-2",[188,29.601,189,33.305]],["name/194-2",[]],["text/194-2",[]],["component/194-2",[]],["title/194-3",[858,50.816]],["name/194-3",[]],["text/194-3",[]],["component/194-3",[]],["title/194-4",[55,19.337,859,46.228]],["name/194-4",[]],["text/194-4",[]],["component/194-4",[]],["title/194-5",[40,19.2,694,29.903]],["name/194-5",[]],["text/194-5",[]],["component/194-5",[]],["title/194",[27,28.215,40,19.2]],["name/194",[860,1.252]],["text/194",[0,0.826,2,1.147,3,1.16,4,0.796,11,3.564,13,2.081,17,1.788,28,0.75,30,2.973,40,2.984,42,0.954,43,1.885,55,2.595,65,3.963,73,1.979,74,0.934,79,0.813,83,0.994,87,0.894,90,0.95,100,0.633,109,1.17,111,0.887,122,1.34,125,2.095,128,1.189,130,0.689,141,2.424,153,0.945,167,0.989,175,1.12,190,0.894,191,0.98,196,0.891,207,0.831,210,1.047,216,4.241,217,0.729,254,1.914,259,1.631,267,2.129,277,2.694,291,0.865,296,1.084,309,1.098,316,1.198,351,2.052,354,2.382,356,0.791,361,0.718,372,0.897,397,1.553,439,1.198,478,0.98,552,2.781,656,1.098,693,1.112,694,3.152,702,1.105,712,4.614,765,1.44,804,2.974,859,4.401,860,3.199,861,2.147,862,2.603,863,3.253,864,2.652,865,1.559,866,1.417,867,1.938,868,1.524,869,2.078,870,5.138,871,3.129,872,1.17,873,1.23,874,1.376,875,3.735,876,1.376,877,2.298,878,1.559,879,1.189,880,1.559,881,1.559]],["component/194",[2,0.423,3,0.373]],["title/195-1",[0,11.375,37,20.004,277,19.819,361,17.564]],["name/195-1",[]],["text/195-1",[]],["component/195-1",[]],["title/195-2",[188,29.601,189,33.305]],["name/195-2",[]],["text/195-2",[]],["component/195-2",[]],["title/195-3",[858,50.816]],["name/195-3",[]],["text/195-3",[]],["component/195-3",[]],["title/195-4",[0,16.243,694,29.903]],["name/195-4",[]],["text/195-4",[]],["component/195-4",[]],["title/195-5",[0,16.243,882,51.173]],["name/195-5",[]],["text/195-5",[]],["component/195-5",[]],["title/195",[0,16.243,27,28.215]],["name/195",[0,0.605]],["text/195",[0,2.772,2,1.416,3,1.25,13,1.483,17,1.275,30,1.966,40,0.939,43,1.343,55,0.946,65,3.556,73,1.41,87,1.527,111,1.515,116,1.478,125,3.132,150,3.519,204,1.288,217,1.245,230,2.681,254,3.03,259,1.569,277,2.278,296,3.884,322,1.651,351,1.462,356,2.224,373,1.732,385,3.491,397,1.494,552,3.977,601,2.047,693,1.9,694,3.067,712,5.868,804,2.88,823,4.012,852,2.163,860,3.994,867,1.864,871,3.03,883,2.163,884,3.767,885,2.662,886,2.142,887,2.55,888,5.459,889,2.55,890,2.603,891,2.603,892,2.603,893,2.603,894,2.55,895,2.603,896,2.603,897,2.603,898,2.603,899,2.163,900,2.603,901,2.603]],["component/195",[2,0.423,3,0.373]],["title/196",[13,24.977,73,23.754,100,18.208]],["name/196",[5,1.313]],["text/196",[0,2.544,2,2.022,3,1.85,4,1.814,11,1.012,13,3.075,26,1.124,27,1.075,30,3.425,36,3.215,37,1.089,40,3.158,43,2.786,55,2.206,73,2.925,85,1.164,95,3.766,100,2.749,130,1.572,140,1.418,141,0.97,150,1.932,157,1.218,158,1.33,171,1.371,172,1.148,200,1.156,213,1.218,216,2.605,217,2.18,230,1.269,287,1.534,290,1.023,293,1.172,313,1.238,331,1.227,336,1.194,354,1.323,360,1.292,373,1.35,391,1.491,407,1.569,418,1.317,446,1.336,478,1.304,511,1.638,658,1.386,694,3.977,696,1.144,712,5.528,751,1.435,823,1.491,851,1.704,852,1.686,861,1.609,873,1.638,874,1.831,877,1.722,902,1.987,903,2.075,904,1.762,905,1.95,906,1.831,907,1.95,908,1.741,909,1.917,910,1.807,911,2.075]],["component/196",[2,0.423,3,0.373]],["title/197-1",[142,20.974,832,29.472,932,30.287]],["name/197-1",[]],["text/197-1",[]],["component/197-1",[]],["title/197-2",[130,30.633]],["name/197-2",[]],["text/197-2",[]],["component/197-2",[]],["title/197",[]],["name/197",[142,0.369,787,0.622,932,0.532]],["text/197",[2,1.183,3,1.044,28,2.246,38,2.336,44,2.21,55,2.646,72,2.441,78,1.942,88,3.066,92,3.149,97,1.257,100,1.167,113,2.205,115,2.78,124,1.528,129,2.929,130,2.604,137,1.953,142,4.45,150,3.202,169,2.025,171,1.899,178,4.443,191,1.807,192,2.919,196,2.665,198,2.025,258,2.83,290,1.418,296,2,304,1.495,309,2.025,313,1.715,361,1.325,373,1.87,510,2.038,517,4.606,587,2.503,678,3.587,685,3.352,796,2.537,797,2.386,798,2.386,832,3.87,932,5.389,1026,2.874,1085,4.783,1177,2.874,1178,2.441,1179,2.229,1180,2.81,1181,2.753,1182,3.033,1183,2.81,1184,3.135]],["component/197",[2,0.423,3,0.373]],["title/198-1",[161,34.712,1120,54.43]],["name/198-1",[]],["text/198-1",[]],["component/198-1",[]],["title/198-2",[115,18.399,161,28.593,692,28.733]],["name/198-2",[]],["text/198-2",[]],["component/198-2",[]],["title/198-3",[143,21.937,407,33.915,1121,42.152]],["name/198-3",[]],["text/198-3",[]],["component/198-3",[]],["title/198-4",[673,38.442]],["name/198-4",[]],["text/198-4",[]],["component/198-4",[]],["title/198-5",[143,21.937,304,23.313,1122,35.396]],["name/198-5",[]],["text/198-5",[]],["component/198-5",[]],["title/198-6",[429,55.183]],["name/198-6",[]],["text/198-6",[]],["component/198-6",[]],["title/198-7",[192,43.335]],["name/198-7",[]],["text/198-7",[]],["component/198-7",[]],["title/198",[726,36.768,787,42.971]],["name/198",[787,1.601]],["text/198",[2,0.847,3,0.748,21,1.183,35,0.933,43,1.235,55,2.853,65,0.594,68,0.754,87,0.779,88,0.893,106,1.276,107,0.82,115,3.214,116,1.359,124,1.301,129,0.676,143,2.308,161,2.13,171,0.897,190,0.779,191,1.539,192,3.586,196,0.776,203,0.923,204,1.978,207,2.516,210,4.126,213,1.436,216,0.759,217,2.461,258,2.026,290,0.67,304,0.706,319,0.71,326,1.044,331,0.803,350,1.065,359,0.883,361,1.539,368,2.339,372,0.782,373,0.883,375,1.301,397,0.762,407,3.091,411,0.989,419,1.344,426,0.951,429,4.192,463,0.989,486,1.328,510,0.963,511,1.072,552,3.775,596,1.703,656,2.879,668,2.207,673,0.754,692,2.619,695,2.613,702,2.369,706,1.809,726,0.917,732,0.82,766,1.301,779,1.082,787,1.932,801,2.031,802,2.054,804,2.686,857,1.796,871,1.692,933,1.277,1028,1.093,1077,2.447,1082,1.433,1084,2.104,1120,4.086,1121,3.842,1122,2.637,1123,1.542,1124,1.481,1125,1.542,1126,2.67,1127,1.542,1128,1.542,1129,1.542,1130,1.542,1131,1.542,1132,1.301,1133,1.542,1134,1.481,1135,1.542,1136,1.542,1137,1.277,1138,5.877,1139,6.508,1140,1.542,1141,1.759,1142,2.261,1143,1.036,1144,2.779,1145,1.481,1146,1.542,1147,1.542,1148,1.542,1149,1.542,1150,1.542,1151,1.542,1152,1.542,1153,1.542,1154,1.542,1155,1.542,1156,1.542,1157,1.542,1158,1.542,1159,1.542,1160,1.542,1161,1.542,1162,1.542,1163,1.542,1164,1.542,1165,1.542,1166,1.542,1167,1.542,1168,1.542,1169,1.542,1170,1.542,1171,1.542,1172,1.542,1173,1.542,1174,1.542,1175,1.542,1176,1.542]],["component/198",[2,0.423,3,0.373]],["title/199-1",[419,38.044]],["name/199-1",[]],["text/199-1",[]],["component/199-1",[]],["title/199-2",[742,32.986]],["name/199-2",[]],["text/199-2",[]],["component/199-2",[]],["title/199",[115,18.399,129,22.306,144,29.168]],["name/199",[115,0.466,144,0.739]],["text/199",[0,2.608,2,0.37,3,0.326,10,1.23,17,1.696,40,1.748,42,0.893,55,1.761,56,1.141,65,1.885,67,1.07,72,0.763,73,0.773,79,0.761,83,0.93,85,0.818,87,0.837,99,0.85,113,0.689,115,1.769,125,1.987,129,0.726,130,0.645,132,0.98,133,0.985,141,0.682,143,1.277,144,3.582,150,0.793,152,0.974,154,2.912,156,0.926,157,2.909,165,0.997,169,1.028,176,2.47,190,2.842,204,1.714,210,2.895,216,1.98,221,0.974,224,1.805,252,1.131,257,2.353,290,0.72,319,0.763,337,1.239,339,1.288,342,0.893,350,0.635,355,1.85,356,2.188,360,0.909,361,0.672,372,2.039,376,1.103,404,1.141,414,0.881,419,3.711,424,1.063,429,2.08,464,1.152,483,1.122,515,0.889,581,1.174,585,3.084,598,1.426,654,1.59,673,2.751,695,1.141,708,1.459,714,0.939,732,2.139,737,1.103,742,2.361,752,1.863,761,1.07,770,1.306,775,1.348,832,1.715,869,1.095,883,1.185,962,1.07,981,1.371,1016,1.397,1029,1.459,1043,1.174,1056,1.808,1078,1.162,1084,1.254,1092,1.348,1094,1.426,1111,1.239,1112,2.373,1122,1.152,1141,2.544,1185,1.539,1186,1.371,1187,1.539,1188,1.539,1189,2.754,1190,2.304,1191,1.306,1192,1.539,1193,1.211,1194,1.086,1195,1.539,1196,1.397,1197,1.254,1198,1.539,1199,1.539,1200,1.539,1201,1.539,1202,2.754,1203,2.754,1204,1.397,1205,1.459,1206,1.371,1207,1.539,1208,1.539,1209,1.539,1210,1.539,1211,1.539,1212,1.539,1213,1.459,1214,1.539,1215,3.462,1216,2.754,1217,1.539,1218,1.539,1219,1.539,1220,1.539,1221,2.562,1222,1.539,1223,1.426,1224,1.426,1225,1.539,1226,1.539]],["component/199",[2,0.423,3,0.373]],["title/200-1",[141,20.974,143,21.937,207,23.907]],["name/200-1",[]],["text/200-1",[]],["component/200-1",[]],["title/200-2",[515,33.16,962,39.942]],["name/200-2",[]],["text/200-2",[]],["component/200-2",[]],["title/200-3",[673,38.442]],["name/200-3",[]],["text/200-3",[]],["component/200-3",[]],["title/200-4",[1056,35.362]],["name/200-4",[]],["text/200-4",[]],["component/200-4",[]],["title/200-5",[1206,51.173,1221,39.381]],["name/200-5",[]],["text/200-5",[]],["component/200-5",[]],["title/200-6",[450,63.984]],["name/200-6",[]],["text/200-6",[]],["component/200-6",[]],["title/200-7",[13,24.977,73,23.754,1227,42.152]],["name/200-7",[]],["text/200-7",[]],["component/200-7",[]],["title/200-8",[13,24.977,73,23.754,851,36.817]],["name/200-8",[]],["text/200-8",[]],["component/200-8",[]],["title/200",[115,18.399,129,22.306,143,21.937]],["name/200",[115,0.466,143,0.555]],["text/200",[0,2.554,2,0.723,3,0.361,4,0.823,17,0.771,28,1.846,40,2.065,42,0.986,47,0.859,55,2.249,65,3.743,68,0.894,71,2.483,72,2.006,77,1.043,90,0.981,92,0.862,111,0.917,113,0.761,115,1.17,116,0.894,124,0.856,127,2.814,129,1.418,130,1.261,133,1.088,134,1.135,140,1.101,141,2.168,143,3.629,165,1.948,169,2.008,172,2.563,178,1.7,187,1.114,192,1.008,203,1.094,204,1.38,206,0.942,207,0.859,216,3.273,217,0.754,228,2.211,258,2.326,290,1.406,304,0.838,305,1.996,306,1.327,336,0.927,342,0.986,356,1.447,397,2.151,407,2.156,423,1.442,424,1.174,441,1.135,462,1.239,463,1.174,475,1.239,494,1.337,500,1.442,596,3.685,651,1.018,673,2.94,685,2.048,686,1.2,695,2.23,708,0.901,710,2.008,801,1.337,802,1.352,814,1.272,860,0.994,869,2.139,872,1.209,879,1.228,1056,0.823,1088,2.516,1194,5.021,1196,1.543,1228,3.433,1229,1.757,1230,1.757,1231,1.757,1232,1.465,1233,1.757,1234,2.948,1235,1.757,1236,1.514,1237,1.757,1238,1.757,1239,3.692,1240,1.465,1241,1.757,1242,1.757,1243,2.731,1244,3.109,1245,3.109,1246,3.109,1247,1.757,1248,3.109,1249,1.757,1250,1.757,1251,1.757,1252,1.757,1253,1.757,1254,1.757]],["component/200",[2,0.423,3,0.373]],["title/201-1",[0,15.604,95,20.108,107,20.023,1061,31.755]],["name/201-1",[]],["text/201-1",[]],["component/201-1",[]],["title/201-2",[130,30.633]],["name/201-2",[]],["text/201-2",[]],["component/201-2",[]],["title/201-3",[673,38.442]],["name/201-3",[]],["text/201-3",[]],["component/201-3",[]],["title/201-4",[178,26.745,258,27.198,685,32.217]],["name/201-4",[]],["text/201-4",[]],["component/201-4",[]],["title/201-5",[686,51.575]],["name/201-5",[]],["text/201-5",[]],["component/201-5",[]],["title/201-6",[129,27.08,1255,44.235]],["name/201-6",[]],["text/201-6",[]],["component/201-6",[]],["title/201-7",[3,10.035,1190,39.578,1255,36.438]],["name/201-7",[]],["text/201-7",[]],["component/201-7",[]],["title/201-8",[10,25.659,515,33.16]],["name/201-8",[]],["text/201-8",[]],["component/201-8",[]],["title/201-9",[42,23.323,65,16.667,152,25.462,654,23.222]],["name/201-9",[]],["text/201-9",[]],["component/201-9",[]],["title/201-10",[162,38.105,176,24.42]],["name/201-10",[]],["text/201-10",[]],["component/201-10",[]],["title/201-11",[726,30.287,1179,34.77,1255,36.438]],["name/201-11",[]],["text/201-11",[]],["component/201-11",[]],["title/201-12",[10,25.659,515,33.16]],["name/201-12",[]],["text/201-12",[]],["component/201-12",[]],["title/201-13",[130,19.833,832,29.472,932,30.287]],["name/201-13",[]],["text/201-13",[]],["component/201-13",[]],["title/201",[115,18.399,129,22.306,142,20.974]],["name/201",[115,0.466,142,0.531]],["text/201",[0,2.823,2,0.8,3,0.939,10,1.191,17,0.866,19,0.838,28,0.87,29,0.57,40,0.891,42,2.268,44,0.75,46,0.547,47,0.52,48,0.756,55,2.227,65,1.379,72,0.946,79,0.943,86,1.414,87,1.037,92,0.522,95,3.265,106,0.509,107,0.589,111,1.029,113,0.461,115,1.521,116,0.541,124,0.518,125,0.547,128,0.744,129,1.257,130,2.653,133,0.659,136,1.21,140,0.666,141,0.456,142,3.653,149,0.696,150,1.374,152,2.476,154,0.659,155,2.159,157,0.572,158,0.625,162,2.208,165,1.235,169,1.274,172,1,173,0.763,176,1.883,178,1.507,187,0.674,190,0.559,191,0.613,192,0.61,196,1.033,204,0.472,207,0.964,213,0.572,216,1.764,217,1.476,248,0.732,250,0.701,258,1.097,265,0.631,290,1.556,291,1.004,293,0.551,304,0.507,305,0.683,311,0.687,313,1.507,318,0.597,319,0.51,321,0.721,326,0.75,331,1.495,336,0.561,350,0.424,351,0.536,356,1.283,361,0.449,368,0.683,397,0.547,401,0.701,414,0.589,424,0.71,437,0.777,439,0.75,441,0.687,457,0.687,458,0.793,465,0.721,478,0.613,510,0.691,515,3.063,552,1.553,611,0.732,641,0.721,643,0.691,651,0.616,654,1.922,655,2.679,663,0.726,672,0.819,685,0.701,696,1.393,706,0.721,708,0.545,710,2.957,720,0.873,725,1.596,726,3.636,739,0.674,740,0.744,750,0.809,751,0.674,762,0.77,768,0.953,798,0.809,801,0.809,802,0.819,804,1.188,827,0.777,832,1.188,836,1.554,854,0.801,855,1.554,857,1.854,860,0.602,867,0.683,871,1.25,872,0.732,908,0.819,932,1.221,937,1,942,2.263,970,0.901,1066,1.064,1078,1.441,1088,2.231,1102,0.887,1103,0.849,1104,0.917,1122,0.77,1141,0.701,1143,0.744,1177,0.975,1179,0.756,1180,0.953,1181,0.934,1190,1.596,1191,0.873,1193,0.809,1255,3.411,1256,0.861,1257,1.107,1258,0.849,1259,0.901,1260,1.107,1261,1.107,1262,1.107,1263,1.107,1264,1.972,1265,0.917,1266,1.064,1267,0.873,1268,1.107,1269,3.582,1270,2.053,1271,2.87,1272,2.053,1273,1.107,1274,1.107,1275,1.107,1276,0.887,1277,1,1278,1]],["component/201",[2,0.423,3,0.373]],["title/202",[11,26.559,518,41.173]],["name/202",[5,1.313]],["text/202",[2,2.4,3,2.118,11,3.738,55,2.722,113,3.621,368,5.363,518,5.795,715,4.628,821,6.763]],["component/202",[2,0.423,3,0.373]],["title/203",[100,18.208,143,21.937,176,20.116]],["name/203",[100,0.461,176,0.509]],["text/203",[0,2.286,28,3.688,72,4.008,100,3.111,107,4.628,141,3.584,143,4.63,176,4.245,708,4.283]],["component/203",[2,0.423,3,0.373]],["title/204",[100,18.208,183,35.396,184,27.082]],["name/204",[100,0.461,184,0.686]],["text/204",[0,2.135,2,1.815,15,4.541,36,4.166,40,2.524,100,2.905,136,4.341,149,5.106,154,4.833,184,4.321,290,3.53,311,5.04,1279,7.154,1280,5.938]],["component/204",[2,0.423,3,0.373]],["title/205-1",[217,32.395]],["name/205-1",[]],["text/205-1",[]],["component/205-1",[]],["title/205-2",[511,42.971,1281,55.815]],["name/205-2",[]],["text/205-2",[]],["component/205-2",[]],["title/205",[100,22.105,135,33.905]],["name/205",[100,0.461,135,0.707]],["textcomponent/205",[2,0.423,3,0.373]],["title/206-1",[130,30.633]],["name/206-1",[]],["text/206-1",[]],["component/206-1",[]],["title/206-2",[1288,66.337]],["name/206-2",[]],["text/206-2",[]],["component/206-2",[]],["title/206-3",[668,35.969,1289,48.74]],["name/206-3",[]],["text/206-3",[]],["component/206-3",[]],["title/206-4",[141,25.463,259,32.076]],["name/206-4",[]],["text/206-4",[]],["component/206-4",[]],["title/206-5",[136,26.064,162,38.105]],["name/206-5",[]],["text/206-5",[]],["component/206-5",[]],["title/206-6",[10,25.659,732,32.878]],["name/206-6",[]],["text/206-6",[]],["component/206-6",[]],["title/206-7",[137,30.46,152,29.951,622,31.587]],["name/206-7",[]],["text/206-7",[]],["component/206-7",[]],["title/206-8",[684,38.105,1290,53.218]],["name/206-8",[]],["text/206-8",[]],["component/206-8",[]],["title/206-9",[176,24.42,515,33.16]],["name/206-9",[]],["text/206-9",[]],["component/206-9",[]],["title/206-10",[130,19.833,832,29.472,932,30.287]],["name/206-10",[]],["text/206-10",[]],["component/206-10",[]],["title/206",[100,22.105,142,25.463]],["name/206",[100,0.461,142,0.531]],["text/206",[0,1.381,2,0.335,3,0.296,10,1.125,11,2.258,17,1.916,23,0.887,28,1.149,30,0.593,40,0.842,47,0.704,55,3.051,65,1.044,72,0.691,77,0.855,78,1.612,79,2.087,80,1.122,86,1.033,90,1.454,100,0.969,106,0.689,109,0.991,113,1.543,116,0.733,124,0.702,126,0.962,130,1.77,131,1.349,136,1.916,137,0.897,141,1.527,142,4.018,150,0.718,152,1.594,154,2.205,157,1.401,161,0.842,162,3.945,173,1.867,176,1.795,184,1.442,192,1.493,193,0.641,196,0.755,204,1.936,205,0.882,207,1.272,213,2.348,216,0.738,230,0.808,248,0.991,257,0.877,259,1.406,290,1.974,291,2.221,293,0.746,303,1.15,305,1.671,309,0.93,313,1.947,318,0.808,319,0.691,331,1.412,350,1.039,356,0.67,360,0.823,372,1.374,390,0.913,391,0.949,414,1.442,419,0.726,478,1.5,515,1.454,544,1.084,596,2.784,622,1.681,654,3.147,666,1.024,668,3.414,673,0.733,684,2.801,696,1.316,702,0.936,704,0.955,708,2.587,715,3.121,726,1.612,732,0.798,738,1.135,739,1.65,743,3.188,814,1.884,832,1.569,854,2.681,857,0.969,860,3.189,872,0.991,879,1.007,932,1.612,1108,1.201,1178,2.027,1197,1.135,1236,1.242,1276,1.201,1278,1.354,1280,2.71,1288,1.265,1289,2.137,1290,3.192,1291,1.441,1292,2.333,1293,1.22,1294,1.321,1295,2.17,1296,1.441,1297,1.441,1298,1.441,1300,1.441,1301,2.603,1302,1.441,1303,1.441,1304,1.441,1499,1.579]],["component/206",[2,0.423,3,0.373]],["title/207-1",[673,38.442]],["name/207-1",[]],["text/207-1",[]],["component/207-1",[]],["title/207-2",[125,25.155,715,27.082,743,35.728]],["name/207-2",[]],["text/207-2",[]],["component/207-2",[]],["title/207",[100,22.105,932,36.768]],["name/207",[100,0.461,1305,1.164]],["text/207",[0,0.82,17,1.315,28,4.141,55,3.163,72,1.437,79,2.344,92,1.469,100,1.115,101,2.112,107,1.659,115,1.127,124,1.46,125,3.7,130,1.215,136,2.152,141,2.103,143,2.792,150,1.494,154,1.855,174,1.96,178,1.638,184,1.659,196,1.569,216,1.535,259,2.649,274,2.149,290,2.815,305,1.923,313,1.638,354,1.752,356,1.394,361,2.071,372,1.581,441,1.935,446,1.769,475,2.112,478,1.727,534,2.001,596,3.97,668,3.771,673,1.525,678,2.112,684,1.923,695,2.149,715,4.717,716,1.899,727,2.459,743,5.796,932,3.854,1056,2.914,1099,2.582,1122,2.168,1141,1.974,1142,4.153,1194,4.25,1280,2.28,1289,4.025,1306,2.898,1307,3.119,1314,3.119,1315,4.609,1316,2.747,1317,3.119]],["component/207",[2,0.423,3,0.373]],["title/208-1",[826,62.957]],["name/208-1",[]],["text/208-1",[]],["component/208-1",[]],["title/208-2",[217,25.463,1141,39.112]],["name/208-2",[]],["text/208-2",[]],["component/208-2",[]],["title/208-3",[1255,56.278]],["name/208-3",[]],["text/208-3",[]],["component/208-3",[]],["title/208-4",[3,12.182,1190,48.048]],["name/208-4",[]],["text/208-4",[]],["component/208-4",[]],["title/208-5",[726,36.768,1179,42.211]],["name/208-5",[]],["text/208-5",[]],["component/208-5",[]],["title/208",[142,25.463,1255,44.235]],["name/208",[27,0.588,142,0.531]],["text/208",[0,2.15,2,1.078,3,0.716,10,0.866,17,2.034,20,1.049,26,0.995,27,0.952,40,1.793,42,3.11,55,1.136,82,1.542,88,1.207,90,1.119,92,1.711,115,0.754,116,1.02,125,2.384,129,2.529,130,0.812,136,1.532,140,1.255,141,0.859,142,3.181,143,0.899,150,0.999,153,1.94,161,2.04,162,1.286,172,1.016,173,1.437,178,1.096,180,1.348,182,1.464,190,2.437,199,1.201,203,1.248,204,0.889,207,0.979,217,3.181,230,1.124,265,1.189,293,1.038,296,1.278,304,1.663,313,1.096,317,1.368,319,0.961,348,1.378,356,0.932,359,1.195,361,0.846,366,1.262,368,1.286,397,1.03,407,1.389,411,1.338,418,1.166,426,1.286,441,1.294,463,1.338,466,2.864,475,1.412,510,1.302,515,1.949,525,1.938,552,2.611,601,1.412,654,1.949,656,2.253,696,1.763,726,2.87,731,1.621,732,1.109,739,1.27,771,1.697,781,3.862,799,1.542,804,2.793,832,1.207,836,1.579,854,1.508,855,1.579,857,1.348,867,1.286,1103,1.6,1143,1.401,1255,6.976,1256,1.621,1277,1.883,1287,1.697,1333,1.938,1334,1.883,1361,1.883,1362,2.086,1363,1.883,1364,2.086,1365,2.086,1366,1.883,1367,2.086,1368,2.086,1369,1.621,1370,2.086,1371,2.003,1372,2.086,1373,2.086,1374,2.086,1375,1.883,1376,2.086,1377,2.086,1378,3.632,1379,3.632,1380,3.632,1381,2.086,1382,2.003,1383,2.086,1384,2.086,1385,1.796,1500,2.362]],["component/208",[2,0.423,3,0.373]],["title/209-1",[118,58.129]],["name/209-1",[]],["text/209-1",[]],["component/209-1",[]],["title/209-2",[217,32.395]],["name/209-2",[]],["text/209-2",[]],["component/209-2",[]],["title/209-3",[1193,57.481]],["name/209-3",[]],["text/209-3",[]],["component/209-3",[]],["title/209-4",[165,37.193,318,33.305]],["name/209-4",[]],["text/209-4",[]],["component/209-4",[]],["title/209-5",[1386,71.011]],["name/209-5",[]],["text/209-5",[]],["component/209-5",[]],["title/209-6",[321,40.235,384,41.173]],["name/209-6",[]],["text/209-6",[]],["component/209-6",[]],["title/209-7",[1387,78.635]],["name/209-7",[]],["text/209-7",[]],["component/209-7",[]],["title/209-8",[46,38.852]],["name/209-8",[]],["text/209-8",[]],["component/209-8",[]],["title/209-9",[65,22.864,740,25.278,1104,31.165,1114,26.672]],["name/209-9",[]],["text/209-9",[]],["component/209-9",[]],["title/209-10",[1388,61.807,1389,55.815]],["name/209-10",[]],["text/209-10",[]],["component/209-10",[]],["title/209-11",[136,21.469,692,28.733,702,31.792]],["name/209-11",[]],["text/209-11",[]],["component/209-11",[]],["title/209-12",[136,21.469,692,28.733,1390,44.835]],["name/209-12",[]],["text/209-12",[]],["component/209-12",[]],["title/209",[74,26.856,136,21.469,188,24.383]],["name/209",[27,0.588,1193,0.942]],["text/209",[0,0.976,2,1.415,3,0.566,6,0.486,10,0.285,11,0.806,15,0.384,20,0.659,23,0.774,24,0.393,26,0.328,28,0.555,36,0.671,37,0.317,39,0.461,40,0.407,42,2.887,43,0.582,46,3.021,47,0.322,55,1.491,65,1.431,72,0.603,74,2.826,75,1.017,79,0.601,80,0.513,87,0.661,90,1.776,92,0.323,99,0.671,100,0.245,105,0.647,107,0.365,111,0.94,113,0.286,115,1.833,124,1.344,130,0.267,131,0.651,133,0.408,135,0.377,136,3.767,137,2.448,140,0.413,143,0.296,150,0.627,152,1.409,154,1.708,156,0.731,161,0.735,163,0.534,165,2.462,167,0.731,168,0.457,169,0.426,171,0.399,183,0.477,184,0.365,188,0.329,190,0.347,196,0.944,198,0.426,199,0.395,203,0.411,204,0.799,207,1.124,216,0.644,217,1.363,250,0.828,252,0.894,257,0.766,267,1.621,275,0.558,277,0.314,282,1.536,290,1.04,292,0.77,296,0.802,304,0.314,311,1.164,314,0.44,317,0.858,318,2.002,319,0.316,321,1.559,322,0.375,334,0.496,340,1.292,341,0.541,350,0.719,354,0.735,355,0.429,356,0.307,358,0.507,360,0.377,361,1.343,368,0.807,372,2.074,373,0.393,378,0.526,384,2.725,418,0.384,419,1.158,441,0.426,445,0.541,446,0.389,451,0.991,457,1.164,462,0.465,475,0.465,514,0.437,515,0.368,521,0.604,530,0.579,531,0.421,536,0.62,538,0.473,552,2.58,580,0.52,601,0.465,611,0.865,622,1.486,623,1.122,629,0.526,641,0.447,654,1.993,656,1.164,657,0.469,673,0.336,691,0.482,692,1.62,702,1.495,706,0.852,708,0.923,709,0.894,714,0.389,715,0.696,726,0.408,728,0.473,734,0.534,735,0.91,736,0.558,737,0.457,739,1.748,740,2.223,742,2.359,752,0.431,758,0.534,761,1.212,803,0.534,804,2.368,832,0.397,850,0.541,857,2.139,867,0.423,871,1.458,873,0.477,899,1.714,910,1.004,945,0.568,970,0.558,977,0.62,985,2.422,993,0.62,994,0.62,1030,0.638,1043,0.486,1050,0.52,1056,0.844,1064,1.084,1072,0.502,1077,1.153,1083,0.591,1084,0.991,1092,0.558,1093,1.153,1102,0.55,1104,3.677,1109,1.216,1111,0.513,1114,2.034,1115,0.55,1116,1.104,1122,0.477,1141,0.434,1143,1.26,1178,0.979,1191,1.032,1193,3.707,1221,0.437,1243,0.579,1267,0.541,1276,0.55,1280,1.75,1283,0.541,1287,0.558,1318,2.264,1323,0.638,1325,0.638,1326,0.638,1327,3.802,1338,0.591,1347,0.62,1366,0.62,1386,0.62,1389,0.62,1390,0.604,1391,0.686,1392,0.659,1393,0.638,1394,0.686,1395,0.541,1396,0.686,1397,0.686,1398,0.686,1399,0.604,1400,0.686,1401,0.659,1402,0.496,1403,0.686,1404,0.604,1405,0.568,1406,1.216,1407,0.686,1408,0.659,1409,0.604,1410,1.309,1411,0.579,1412,0.686,1413,0.686,1414,0.686,1415,0.686,1416,0.686,1417,0.686,1418,0.659,1419,0.686,1420,3.93,1421,1.743,1422,0.579,1423,1.802,1424,3.31,1425,0.686,1426,0.686,1427,1.153,1428,1.309,1429,0.686,1430,0.638,1431,0.507,1432,0.686,1433,1.309,1434,2.394,1435,0.686,1436,0.659,1437,0.659,1438,0.591,1439,0.604,1440,0.604,1441,0.927,1442,0.686,1443,0.686,1444,0.659,1445,1.876,1446,1.032,1447,0.62,1448,0.686,1449,0.604,1450,0.686,1451,0.686,1452,0.568,1453,0.686,1454,0.604]],["component/209",[2,0.423,3,0.373]],["title/210-1",[40,24.428]],["name/210-1",[]],["text/210-1",[]],["component/210-1",[]],["title/210-2",[30,20.116,40,15.816,277,23.313]],["name/210-2",[]],["text/210-2",[]],["component/210-2",[]],["title/210-3",[40,19.2,709,42.211]],["name/210-3",[]],["text/210-3",[]],["component/210-3",[]],["title/210-4",[40,19.2,694,29.903]],["name/210-4",[]],["text/210-4",[]],["component/210-4",[]],["title/210-5",[0,20.666]],["name/210-5",[]],["text/210-5",[]],["component/210-5",[]],["title/210-6",[0,13.38,30,20.116,277,23.313]],["name/210-6",[]],["text/210-6",[]],["component/210-6",[]],["title/210-7",[0,16.243,709,42.211]],["name/210-7",[]],["text/210-7",[]],["component/210-7",[]],["title/210-8",[0,16.243,694,29.903]],["name/210-8",[]],["text/210-8",[]],["component/210-8",[]],["title/210-9",[172,24.803,213,26.317,361,20.661]],["name/210-9",[]],["text/210-9",[]],["component/210-9",[]],["title/210-10",[188,29.601,189,33.305]],["name/210-10",[]],["text/210-10",[]],["component/210-10",[]],["title/210-11",[858,50.816]],["name/210-11",[]],["text/210-11",[]],["component/210-11",[]],["title/210-12",[172,24.803,361,20.661,686,33.392]],["name/210-12",[]],["text/210-12",[]],["component/210-12",[]],["title/210-13",[188,29.601,189,33.305]],["name/210-13",[]],["text/210-13",[]],["component/210-13",[]],["title/210-14",[858,50.816]],["name/210-14",[]],["text/210-14",[]],["component/210-14",[]],["title/210-15",[127,24.325,172,18.338,361,15.275,596,23.063,686,24.688]],["name/210-15",[]],["text/210-15",[]],["component/210-15",[]],["title/210-16",[188,29.601,189,33.305]],["name/210-16",[]],["text/210-16",[]],["component/210-16",[]],["title/210-17",[858,50.816]],["name/210-17",[]],["text/210-17",[]],["component/210-17",[]],["title/210-18",[172,18.338,178,19.774,258,20.108,361,15.275,685,23.82]],["name/210-18",[]],["text/210-18",[]],["component/210-18",[]],["title/210-19",[0,13.38,95,27.198,217,20.974]],["name/210-19",[]],["text/210-19",[]],["component/210-19",[]],["title/210-20",[188,29.601,189,33.305]],["name/210-20",[]],["text/210-20",[]],["component/210-20",[]],["title/210-21",[858,50.816]],["name/210-21",[]],["text/210-21",[]],["component/210-21",[]],["title/210-22",[213,31.949,1402,44.696]],["name/210-22",[]],["text/210-22",[]],["component/210-22",[]],["title/210-23",[150,29.601,1402,44.696]],["name/210-23",[]],["text/210-23",[]],["component/210-23",[]],["title/210",[0,13.38,27,23.242,40,15.816]],["name/210",[27,1.051]],["text/210",[0,2.76,2,0.451,3,0.278,11,1.697,16,0.9,17,0.851,20,1.291,24,0.809,27,0.645,28,1.301,29,0.727,30,2.228,34,0.366,37,0.932,40,2.188,42,1.087,44,0.503,46,0.698,47,0.349,55,2.141,65,3.253,68,1.5,74,0.392,77,0.424,78,0.442,79,0.649,83,0.418,85,0.367,90,0.399,95,2.69,99,0.381,106,0.926,111,0.708,115,0.51,116,0.69,120,1.056,124,1.436,125,0.698,126,0.477,127,1.983,128,0.499,129,0.326,130,0.786,131,0.37,141,0.306,143,0.32,150,1.469,153,0.397,156,0.416,157,0.384,158,1.448,161,0.418,164,0.381,172,3.774,176,1.715,177,0.86,186,0.404,196,1.544,198,0.876,199,0.428,204,2.403,205,0.437,207,0.663,213,3.739,216,3.265,217,1.788,250,0.47,254,3.067,257,1.18,264,0.361,265,1.15,277,0.924,290,0.614,291,0.986,292,0.831,304,0.924,309,0.461,313,0.391,318,0.401,322,0.406,326,0.503,331,1.051,335,1.444,350,0.773,351,0.683,356,0.631,358,1.044,361,1.431,368,0.458,372,0.377,390,0.453,397,0.698,403,1.819,418,0.416,424,0.477,439,0.503,457,0.876,510,0.882,518,0.495,541,0.84,545,1.083,552,3.467,582,0.499,587,0.57,596,3.277,606,0.499,643,0.882,651,0.414,673,0.363,674,0.865,686,1.323,693,1.928,694,2.1,701,0.522,710,1.903,711,1.098,732,0.395,739,2.148,752,0.888,804,1.486,842,0.543,857,0.913,860,3.933,866,0.595,867,3.105,871,1.563,879,0.499,886,1.001,904,0.556,908,1.044,918,1.114,1043,0.527,1056,0.334,1070,0.563,1071,1.821,1078,0.522,1088,0.578,1114,0.527,1141,0.47,1143,0.948,1179,1.377,1194,0.488,1204,0.627,1239,0.522,1258,0.57,1259,0.605,1282,0.991,1402,4.275,1427,1.244,1441,0.527,1446,0.586,1455,0.743,1456,2.26,1457,2.125,1458,0.671,1459,0.616,1460,0.616,1461,0.627,1462,0.691,1463,2.721,1464,0.714,1465,3.037,1466,1.357,1467,1.357,1468,0.64,1469,1.641,1470,1.216,1471,0.714,1501,0.842,1502,0.842,1503,0.842]],["component/210",[2,0.423,3,0.373]],["title/211",[99,26.111,233,31.004,732,27.082]],["name/211",[233,0.785,732,0.686]],["text/211",[0,1.51,3,1.133,19,4.351,55,1.798,65,3.141,83,3.228,99,4.863,156,4.559,204,2.449,227,5.162,230,3.097,233,4.967,270,4.201,336,2.914,350,2.203,580,4.351,585,4.408,735,5.671,739,3.5,838,5.3,1009,4.201,1013,5.34,1504,6.51,1505,9.239,1506,7.023,1507,6.51,1508,6.51,1509,6.05,1510,6.51]],["component/211",[3,0.373,1009,1.384]],["title/212-1",[1511,75.54]],["name/212-1",[]],["text/212-1",[]],["component/212-1",[]],["title/212-2",[838,34.545,1512,55.815]],["name/212-2",[]],["text/212-2",[]],["component/212-2",[]],["title/212-3",[62,33.752,838,34.545]],["name/212-3",[]],["text/212-3",[]],["component/212-3",[]],["title/212",[3,12.182,1009,45.18]],["name/212",[5,1.313]],["text/212",[0,2.309,2,1.122,3,1.654,4,1.709,27,1.003,28,1.611,54,1.41,55,1.189,62,5.148,72,1.013,88,3.912,92,1.035,97,0.846,99,1.949,106,1.009,113,0.915,129,3.241,130,0.856,141,0.905,142,0.905,143,0.947,144,1.259,150,2.405,159,1.272,161,1.234,169,1.363,175,1.391,180,1.42,181,1.154,182,4.198,190,1.11,193,0.939,205,1.293,206,1.131,226,1.892,233,1.338,264,1.067,269,1.788,290,1.651,308,1.286,314,2.439,319,1.013,336,1.927,348,1.452,355,1.372,416,1.935,478,1.217,541,4.401,548,1.338,627,1.985,629,1.685,651,2.793,673,1.074,675,1.819,679,1.733,705,1.452,706,2.474,715,1.169,732,1.169,735,1.528,779,2.667,804,1.272,816,1.708,838,5.872,873,1.528,876,1.708,905,1.819,913,1.892,934,1.935,985,1.854,993,3.432,1008,3.532,1009,4.94,1010,1.985,1013,2.042,1015,2.111,1049,5.559,1282,1.542,1285,1.935,1512,7.166,1513,2.489,1514,2.489,1515,2.489,1516,2.313,1517,2.489,1518,2.489,1519,2.313,1520,2.313,1521,2.313,1522,2.489,1523,2.313]],["component/212",[3,0.373,1009,1.384]],["title/213-1",[306,32.232]],["name/213-1",[]],["text/213-1",[]],["component/213-1",[]],["title/213-2",[223,54.67]],["name/213-2",[]],["text/213-2",[]],["component/213-2",[]],["title/213-3",[227,32.217,306,20.868,345,35.396]],["name/213-3",[]],["text/213-3",[]],["component/213-3",[]],["title/213-4",[838,34.545,1512,55.815]],["name/213-4",[]],["text/213-4",[]],["component/213-4",[]],["title/213-5",[62,33.752,838,34.545]],["name/213-5",[]],["text/213-5",[]],["component/213-5",[]],["title/213-6",[175,49.76]],["name/213-6",[]],["text/213-6",[]],["component/213-6",[]],["title/213",[212,43.374,518,41.173]],["name/213",[306,0.944]],["text/213",[2,1.269,3,1.594,17,1.265,24,0.962,28,0.712,29,0.865,30,2.704,55,2.288,62,1.638,65,2.428,77,0.957,88,2.353,97,1.155,99,4.148,100,0.601,111,0.842,113,0.699,124,0.786,125,1.482,131,1.493,141,2.34,153,0.897,155,2.085,175,3.128,176,1.185,177,1.023,178,1.576,181,2.136,190,1.515,191,1.661,193,2.695,198,1.861,200,0.824,203,1.005,205,0.988,210,3.36,227,1.063,228,1.147,233,1.827,253,3.671,254,2.476,264,0.815,273,3.843,281,2.217,291,1.987,292,0.988,295,4.136,304,0.769,306,2.806,308,0.982,310,0.988,313,0.882,319,0.774,324,1.147,325,1.19,336,3.197,350,0.644,351,0.812,353,2.217,359,0.962,360,0.921,361,1.217,372,1.521,377,1.077,379,1.167,387,1.344,388,2.402,426,1.035,435,1.324,458,3.538,459,4.257,518,1.998,548,1.023,583,1.56,594,1.178,651,1.669,656,1.042,668,2.366,673,0.821,692,2.79,693,1.055,714,0.952,757,1.256,788,1.202,797,2.193,835,1.271,838,3.524,906,1.305,1004,1.324,1008,2.787,1009,2.972,1010,1.516,1049,2.787,1232,2.402,1282,1.178,1308,1.613,1350,1.344,1460,1.39,1506,1.446,1512,1.516,1524,1.613,1525,1.56,1526,1.902,1527,1.479,1528,1.902,1529,3.398,1530,1.902,1531,1.902,1532,1.902,1533,1.902,1534,1.768,1535,1.902,1536,1.902,1537,1.902,1538,1.902,1539,1.902,1540,1.902,1541,1.902,1542,1.902]],["component/213",[3,0.373,1009,1.384]],["title/214",[129,27.08,541,36.768]],["name/214",[129,1.009]],["text/214",[0,2.416,2,0.26,3,0.861,10,0.891,17,0.905,19,0.88,23,1.77,24,0.666,27,0.531,28,0.91,35,0.704,40,0.361,46,1.061,55,1.366,65,4.079,85,1.061,89,0.762,95,0.621,97,0.448,106,0.534,125,0.574,126,0.746,129,1.632,132,0.688,136,0.905,137,1.285,138,0.638,140,0.699,154,0.691,157,3.044,164,0.596,165,1.292,176,2.326,178,0.611,190,1.881,193,0.497,198,2.311,199,0.669,204,1.861,221,0.684,224,0.708,228,0.794,230,4.086,248,0.768,270,2.187,277,1.37,279,0.869,290,0.505,292,1.263,293,0.578,318,2.353,319,0.536,326,0.787,336,0.589,348,0.768,350,0.823,355,2.326,356,0.52,360,2.395,361,0.472,397,1.061,398,0.931,413,0.981,414,1.592,419,0.562,441,0.721,457,0.721,458,0.832,463,0.746,467,2.864,469,2.569,475,0.787,515,0.624,541,3.744,552,1.162,606,0.781,623,1.79,654,1.605,656,0.721,657,0.794,659,0.794,669,0.808,675,0.962,690,0.794,696,1.453,703,2.009,708,1.057,751,0.708,752,2.745,761,2.822,766,0.981,800,0.904,827,0.816,831,0.981,838,4.515,902,3.142,909,4.424,938,1.05,985,0.981,986,1.162,990,1.117,1009,2.723,1015,1.117,1016,0.981,1034,1.162,1070,0.88,1072,0.85,1081,1.117,1101,1.024,1103,0.891,1197,1.626,1205,1.024,1265,0.962,1276,0.931,1294,1.024,1342,1.05,1343,2.78,1345,3.69,1360,0.88,1408,1.117,1458,1.05,1468,1.001,1473,1.811,1509,1.224,1519,2.26,1543,3.364,1544,2.432,1545,1.317,1546,1.317,1547,1.162,1548,3.389,1549,2.432,1550,1.317,1551,2.432,1552,3.389,1553,3.389,1554,1.162,1555,3.725,1556,2.432,1557,3.389,1558,4.057,1559,1.317,1560,1.162,1561,1.317,1562,2.702,1563,1.317,1564,1.317,1565,0.946,1566,1.08,1567,2.063,1568,1.317,1569,1.317]],["component/214",[3,0.373,1009,1.384]],["title/215-1",[223,54.67]],["name/215-1",[]],["text/215-1",[]],["component/215-1",[]],["title/215-2",[191,28.188,838,28.456,1512,45.976]],["name/215-2",[]],["text/215-2",[]],["component/215-2",[]],["title/215-3",[99,31.699,336,31.336]],["name/215-3",[]],["text/215-3",[]],["component/215-3",[]],["title/215-4",[548,37.638,1010,55.815]],["name/215-4",[]],["text/215-4",[]],["component/215-4",[]],["title/215-5",[62,27.802,191,28.188,838,28.456]],["name/215-5",[]],["text/215-5",[]],["component/215-5",[]],["title/215-6",[62,33.752,873,42.971]],["name/215-6",[]],["text/215-6",[]],["component/215-6",[]],["title/215",[11,26.559,518,41.173]],["name/215",[55,0.721]],["text/215",[0,2.395,2,0.913,3,1.633,6,2.898,30,0.517,40,0.743,42,0.705,54,0.839,55,1.675,62,3.208,65,2.74,68,1.17,83,1.344,85,0.646,88,0.757,94,0.761,99,3.821,106,2.189,111,0.656,113,0.996,116,0.639,130,0.51,141,1.363,153,0.699,155,0.671,159,0.757,175,1.514,176,0.517,177,0.796,191,1.831,198,2.052,204,2.031,205,0.769,206,0.673,210,1.416,212,0.918,216,0.644,217,1.685,227,0.828,233,4.722,248,2.703,254,2.902,257,1.4,264,0.635,277,1.096,285,1.806,292,0.769,306,0.981,308,1.4,313,0.687,314,0.839,318,0.705,324,2.259,335,0.936,336,2.715,338,1.031,348,0.864,350,0.501,355,1.494,360,0.717,377,0.839,387,1.047,390,1.457,397,0.646,414,0.696,418,0.731,428,2.107,446,1.357,462,1.62,494,1.749,515,0.702,518,0.871,541,1.968,548,1.457,552,2.213,558,1.947,668,2.38,693,3.366,695,1.649,709,0.893,714,0.742,732,0.696,735,0.909,757,1.79,838,4.76,860,2.911,867,2.521,873,1.664,1008,2.224,1009,5.202,1010,3.693,1013,2.224,1014,1.215,1049,2.224,1056,0.588,1142,1.947,1194,0.858,1223,2.06,1234,0.886,1282,0.918,1285,3.601,1342,1.181,1512,1.181,1570,2.711,1571,2.711,1572,4.303,1573,1.377,1574,1.083,1575,1.481,1576,1.481,1577,1.481,1578,3.747,1579,1.481,1580,2.711,1581,1.481,1582,1.481,1583,1.481,1584,1.481,1585,1.481,1586,1.481,1587,1.481,1588,1.017,1589,2.711,1590,2.393,1591,2.299,1592,2.711,1593,2.711,1594,2.711,1595,1.481]],["component/215",[3,0.373,1009,1.384]],["title/216-1",[314,50.454]],["name/216-1",[]],["text/216-1",[]],["component/216-1",[]],["title/216-2",[56,42.583,1596,54.43]],["name/216-2",[]],["text/216-2",[]],["component/216-2",[]],["title/216-3",[784,52.141,1043,43.795]],["name/216-3",[]],["text/216-3",[]],["component/216-3",[]],["title/216-4",[161,34.712,1597,49.485]],["name/216-4",[]],["text/216-4",[]],["component/216-4",[]],["title/216-5",[75,48.048,1598,65.064]],["name/216-5",[]],["text/216-5",[]],["component/216-5",[]],["title/216-6",[40,19.2,314,39.657]],["name/216-6",[]],["text/216-6",[]],["component/216-6",[]],["title/216-7",[1599,73.068]],["name/216-7",[]],["text/216-7",[]],["component/216-7",[]],["title/216",[40,19.2,1141,39.112]],["name/216",[1600,2.609]],["text/216",[0,0.467,3,0.35,9,0.99,13,0.317,17,0.958,20,0.622,28,0.274,30,0.488,34,0.318,37,0.299,39,0.83,40,1.215,42,2.776,43,0.287,55,1.772,56,0.852,65,4.296,68,0.604,75,3.306,78,0.735,79,0.297,85,0.319,93,0.518,97,0.249,99,0.332,107,0.945,110,1.819,124,0.579,131,0.322,134,1.694,136,1.33,145,0.83,150,1.088,151,0.404,153,0.345,156,0.691,157,0.334,158,0.698,161,2.389,164,0.634,167,0.361,200,0.871,204,0.527,216,0.609,224,0.753,226,0.557,257,0.378,265,0.705,278,0.496,279,0.925,291,0.316,292,0.727,293,0.322,304,0.296,307,0.376,311,0.401,314,2.023,318,0.348,319,0.298,325,0.458,326,1.849,335,0.463,338,0.51,346,0.83,348,0.817,350,0.474,355,0.404,359,0.37,361,0.922,366,0.391,368,0.399,373,0.37,384,1.183,401,0.409,405,0.412,415,1.362,426,0.399,429,1.595,459,0.557,461,1.203,463,0.415,465,0.421,467,0.424,468,1.368,473,0.478,475,0.438,482,0.545,494,1.298,510,0.404,541,0.735,552,0.35,582,0.434,586,0.601,606,0.83,614,1.006,641,0.421,661,0.868,663,2.068,669,0.45,687,0.496,696,1.531,704,0.412,706,1.479,708,0.318,722,0.458,737,0.431,747,0.49,750,0.473,761,1.148,784,0.545,833,0.526,835,0.49,876,0.503,883,0.463,920,2.427,945,0.535,955,1.498,963,1.089,984,0.647,1003,0.468,1004,0.51,1021,2.112,1026,0.569,1043,0.458,1048,1.149,1056,0.556,1072,0.473,1101,1.089,1121,1.024,1141,1.124,1143,0.83,1178,2.653,1223,0.557,1224,0.557,1228,2.487,1256,0.503,1265,2.26,1287,1.445,1293,0.526,1315,0.584,1318,0.51,1335,0.584,1342,1.116,1343,0.601,1351,1.65,1360,1.345,1361,1.116,1369,0.503,1411,1.043,1430,1.65,1431,0.478,1463,1.224,1468,0.557,1473,0.545,1554,0.647,1596,0.569,1597,6.559,1598,8.085,1601,0.681,1602,0.503,1603,0.732,1604,5.517,1605,0.732,1606,3.419,1607,3.32,1608,2.905,1609,2.574,1610,0.681,1611,1.87,1612,0.732,1613,0.601,1614,0.601,1615,1.301,1616,0.732,1617,0.732,1618,0.732,1619,0.647,1620,1.4,1621,0.584,1622,0.732,1623,0.647,1624,0.45,1625,0.732,1626,0.732,1627,2.623,1628,0.732,1629,1.043,1630,0.732,1631,0.51,1632,1.149,1633,0.681,1634,3.572,1635,1.776,1636,1.4,1637,2.183,1638,0.732,1639,0.681,1640,0.681,1641,0.732,1642,0.732,1643,0.732,1644,2.012,1645,2.566,1646,0.681,1647,4.086,1648,1.87,1649,0.681,1650,1.61,1651,0.732,1652,0.732,1653,2.183,1654,0.732,1655,0.732,1656,0.732,1657,4.431,1658,0.732,1659,3.093,1660,0.732,1661,1.301,1662,0.557,1663,0.621,1664,0.732,1665,2.574,1666,0.732,1667,1.4,1668,1.87,1669,0.732,1670,0.732,1671,2.574,1672,0.732,1673,2.012,1674,0.732,1675,0.732,1676,0.732,1677,0.681,1678,0.732,1679,0.732,1680,0.732,1681,0.732,1682,0.732,1683,1.4,1684,0.732,1685,0.732,1686,0.732,1687,0.732,1688,2.574,1689,0.732,1690,0.732,1691,1.4,1692,0.732,1693,0.732,1694,0.732,1695,1.4,1696,0.732,1697,0.647,1698,1.4,1699,0.681,1700,0.732,1701,0.732,1702,0.732,1703,1.4,1704,0.732,1705,1.4,1706,0.732,1707,0.732,1708,0.681,1709,0.681,1710,1.301,1711,2.848,1712,1.87,1713,0.681,1714,0.535,1715,0.732,1716,0.732,1717,0.545,1718,0.681]],["component/216",[0,0.498,3,0.373]],["title/217",[150,24.383,346,34.19,920,31.587]],["name/217",[1713,2.425]],["text/217",[55,3.321,106,3.569,150,3.721,161,3.016,216,4.495,346,5.218,384,3.577,545,5.959,607,4.729,659,3.667,704,3.421,787,3.733,807,4.118,876,4.174,899,3.843,920,7.081,1004,4.235,1079,4.369,1221,3.421,1554,5.37,1663,5.158,1711,7.016,1719,4.53,1720,9.129,1721,4.369,1722,5.653,1723,6.082]],["component/217",[0,0.498,3,0.373]],["title/218-1",[3,10.035,641,33.143,1597,40.762]],["name/218-1",[]],["text/218-1",[]],["component/218-1",[]],["title/218-2",[1645,63.984]],["name/218-2",[]],["text/218-2",[]],["component/218-2",[]],["title/218-3",[696,38.175]],["name/218-3",[]],["text/218-3",[]],["component/218-3",[]],["title/218-4",[1228,62.01]],["name/218-4",[]],["text/218-4",[]],["component/218-4",[]],["title/218-5",[1724,89.07]],["name/218-5",[]],["text/218-5",[]],["component/218-5",[]],["title/218-6",[208,73.068]],["name/218-6",[]],["text/218-6",[]],["component/218-6",[]],["title/218-7",[346,52.807]],["name/218-7",[]],["text/218-7",[]],["component/218-7",[]],["title/218-8",[1345,46.228,1597,49.485]],["name/218-8",[]],["text/218-8",[]],["component/218-8",[]],["title/218",[1597,62.957]],["name/218",[94,1.34]],["text/218",[3,0.205,11,0.447,20,0.523,28,1.7,34,0.953,35,0.629,40,0.601,41,0.966,42,2.161,43,2.023,44,0.704,47,0.488,53,1.859,55,1.576,56,1.334,65,4.095,68,0.946,72,0.479,74,2.401,75,0.808,78,4.258,79,0.477,87,0.525,88,1.12,97,0.4,106,0.889,108,0.729,110,1.289,121,0.797,127,0.672,131,0.517,132,1.607,134,2.488,136,1.435,141,0.428,150,0.927,155,0.533,156,0.581,157,0.537,158,1.092,164,0.993,165,1.634,186,1.85,199,0.599,200,0.95,204,0.443,205,0.611,217,0.428,228,0.71,257,1.589,290,1.478,291,0.946,294,2.683,338,0.82,340,1.334,346,1.3,360,0.57,384,1.289,398,0.832,414,0.553,415,4.785,418,0.581,424,0.667,461,0.704,467,0.682,468,1.634,473,0.768,475,0.704,508,1.704,530,0.877,545,0.797,576,1.039,577,0.82,586,1.798,606,0.698,623,0.622,651,0.578,657,0.71,658,0.611,661,0.729,671,1.322,696,3.029,706,0.677,708,1.337,727,0.82,742,0.812,752,0.653,758,0.808,766,0.877,770,0.82,772,0.915,775,0.846,783,1.039,814,0.723,835,0.787,852,0.744,876,0.808,902,0.877,909,1.575,913,0.895,940,1.704,944,1.039,946,1.936,955,1.633,985,0.877,1021,1.798,1070,0.787,1078,1.358,1084,0.787,1091,0.82,1101,0.915,1116,0.877,1121,1.602,1213,0.915,1221,0.662,1223,2.929,1228,4.32,1318,1.526,1320,0.877,1338,0.895,1342,1.748,1343,0.966,1345,0.777,1463,0.716,1597,8.404,1614,0.966,1619,1.039,1627,1.859,1631,0.82,1632,1.798,1633,1.094,1635,2.716,1637,1.859,1645,4.781,1646,1.094,1647,2.609,1648,4.221,1653,3.852,1661,1.094,1663,0.998,1699,2.038,1708,1.094,1710,1.094,1712,2.859,1719,2.291,1721,0.846,1725,1.177,1726,1.094,1727,2.192,1728,0.966,1729,0.998,1730,3.268,1731,1.094,1732,1.177,1733,1.177,1734,1.094,1735,1.177,1736,1.177,1737,1.177,1738,1.177,1739,2.038,1740,1.177,1741,1.094,1742,1.094,1743,1.177,1744,1.094,1745,2.192,1746,2.859,1747,1.039,1748,1.094,1749,1.039,1750,3.077,1751,1.094,1752,3.077,1753,1.177,1754,1.177,1755,2.192,1756,2.192,1757,2.192,1758,2.192,1759,2.192,1760,2.192,1761,2.192,1762,1.039,1763,1.177,1764,1.177,1765,0.915]],["component/218",[0,0.498,3,0.373]],["title/219-1",[1345,38.079,1631,40.148,1645,41.427]],["name/219-1",[]],["text/219-1",[]],["component/219-1",[]],["title/219-2",[1345,38.079,1645,41.427,1653,48.908]],["name/219-2",[]],["text/219-2",[]],["component/219-2",[]],["title/219-3",[1345,38.079,1631,40.148,1645,41.427]],["name/219-3",[]],["text/219-3",[]],["component/219-3",[]],["title/219",[1631,62.01]],["name/219",[1631,1.816]],["text/219",[0,0.519,17,0.833,20,0.995,30,0.781,35,1.196,40,1.076,42,4.042,47,0.928,55,1.739,56,3.188,65,4.312,83,1.946,92,0.931,106,0.908,116,0.966,124,0.925,134,3.923,150,0.947,155,1.014,161,1.946,167,1.105,191,1.094,196,0.995,204,1.477,216,0.973,228,1.35,277,1.587,290,0.859,361,0.802,372,3.206,401,2.928,415,4.264,424,2.223,545,1.516,552,1.07,661,4.438,666,1.35,672,1.461,747,1.496,786,1.837,787,2.409,825,1.667,909,1.608,955,5.873,963,1.741,1078,1.387,1124,1.899,1221,2.948,1345,4.158,1411,1.667,1431,1.461,1437,1.899,1473,1.667,1565,1.608,1596,3.052,1613,1.837,1614,1.837,1619,1.976,1631,5.916,1632,3.22,1635,5.559,1637,5.34,1645,6.482,1647,5.34,1653,8.039,1663,1.899,1746,3.648,1749,1.976,1751,3.648,1765,3.052,1766,2.239,1767,2.239,1768,2.081,1769,2.239,1770,2.239,1771,5.241,1772,3.925,1773,3.925,1774,3.925,1775,3.925,1776,5.241,1777,3.925,1778,2.239,1779,6.297,1780,3.129,1781,2.239,1782,2.239]],["component/219",[0,0.498,3,0.373]],["title/220-1",[350,23.693,1141,39.112]],["name/220-1",[]],["text/220-1",[]],["component/220-1",[]],["title/220-2",[130,19.833,350,19.516,1783,39.047]],["name/220-2",[]],["text/220-2",[]],["component/220-2",[]],["title/220-3",[130,19.833,350,19.516,705,33.649]],["name/220-3",[]],["text/220-3",[]],["component/220-3",[]],["title/220-4",[130,19.833,350,19.516,818,38.079]],["name/220-4",[]],["text/220-4",[]],["component/220-4",[]],["title/220-5",[2,9.667,3,8.531,130,16.861,350,16.592]],["name/220-5",[]],["text/220-5",[]],["component/220-5",[]],["title/220-6",[350,23.693,1784,57.432]],["name/220-6",[]],["text/220-6",[]],["component/220-6",[]],["title/220-7",[350,23.693,1785,59.374]],["name/220-7",[]],["text/220-7",[]],["component/220-7",[]],["title/220-8",[350,30.143]],["name/220-8",[]],["text/220-8",[]],["component/220-8",[]],["title/220",[350,30.143]],["name/220",[350,0.883]],["text/220",[0,0.558,2,0.474,3,0.727,4,1.332,10,1.23,11,0.494,13,1.453,16,1.887,29,0.591,37,0.982,40,0.357,44,0.778,47,0.539,55,2.358,57,0.935,62,0.627,65,3.464,67,0.742,68,2.392,73,3.087,78,0.683,79,0.528,81,0.87,83,0.645,92,0.541,93,0.92,97,1.667,113,0.884,120,0.859,124,0.538,130,1.906,140,0.691,142,0.875,143,1.59,146,3.991,167,0.642,172,1.443,176,0.454,180,0.742,186,0.625,199,0.662,206,1.525,213,1.098,217,0.875,227,1.344,259,1.537,282,0.737,286,0.68,293,0.572,296,0.704,304,1.69,306,0.471,344,0.695,348,0.759,350,3.509,361,0.862,372,1.502,379,6.653,424,0.737,433,1.037,451,0.87,475,0.778,541,0.683,544,0.831,578,1.874,594,0.806,596,0.704,621,3.177,651,0.639,673,1.038,692,0.648,703,1.426,705,2.439,708,0.566,714,0.652,743,0.806,815,2.12,816,0.893,817,0.935,818,2.215,823,0.727,832,1.229,838,1.187,860,1.155,884,1.608,920,3.626,933,0.951,939,2.371,954,1.067,962,0.742,982,1.918,983,2.124,999,1.067,1000,1.012,1012,1.104,1072,0.84,1107,1.104,1141,0.727,1227,1.758,1308,1.104,1454,1.87,1460,0.951,1506,0.989,1525,1.067,1543,1.037,1624,1.477,1629,2.499,1711,1.037,1714,1.758,1717,2.499,1783,4.793,1784,1.974,1785,1.104,1786,2.272,1787,5.013,1788,1.301,1789,0.68,1790,1.87,1791,0.906,1792,2.236,1793,1.149,1794,1.149,1795,1.104,1796,1.209,1797,1.149,1798,1.037,1799,0.989,1800,0.935,1801,0.814,1802,1.012,1803,0.951,1804,1.067,1805,2.752,1806,4.101,1807,2.83,1808,2.124,1809,3.002,1810,1.037,1811,3.177,1812,1.974,1813,3.249,1814,1.87,1815,1.149,1816,1.918,1817,1.149,1818,1.067,1819,1.974,1820,1.104,1821,2.752,1822,1.067,1823,1.012,1824,1.149,1825,1.301,1826,1.301,1827,2.794,1828,2.04]],["component/220",[0,0.498,3,0.373]],["title/221",[]],["name/221",[1829,2.609]],["text/221",[4,3.594,379,7.797,920,4.958,1802,7.038,1803,6.617,1804,7.426,1805,10.421,1806,7.149,1807,6.129,1808,7.992,1809,6.503]],["component/221",[0,0.498,3,0.373]],["title/222",[]],["name/222",[1830,2.609]],["text/222",[16,4.505,350,4.319,379,7.834,815,6.732,818,7.036,939,8.463,1543,6.385,1714,7.788,1819,6.57,1820,6.793,1821,8.741,1822,6.57]],["component/222",[0,0.498,3,0.373]],["title/223",[]],["name/223",[1831,2.609]],["text/223",[0,1.528,2,1.299,3,1.621,4,2.615,10,3.415,16,3.705,55,2.573,65,3.675,142,2.396,146,6.518,350,3.153,379,7.213,703,3.905,708,2.863,920,3.608,962,3.758,1227,4.814,1454,5.121,1629,4.906,1717,4.906,1783,6.308,1806,4.081,1809,4.732,1811,7.082,1812,5.403,1813,5.121]],["component/223",[0,0.498,3,0.373]],["title/224",[]],["name/224",[1832,2.609]],["text/224",[379,6.27,433,8.145,1107,8.664,1784,8.381,1806,6.329,1807,6.917,1808,9.019,1823,7.943,1824,9.019]],["component/224",[0,0.498,3,0.373]],["title/225",[]],["name/225",[1833,2.609]],["text/225",[13,4.712,55,1.841,73,4.482,81,4.456,130,3.742,146,4.019,176,2.325,379,7.645,541,3.501,705,6.349,823,3.724,838,4.636,920,3.651,1806,6.741,1807,6.361,1809,4.788,1814,7.304,1815,5.885,1816,7.49,1817,5.885]],["component/225",[0,0.498,3,0.373]],["title/226",[]],["name/226",[1834,2.609]],["text/226",[379,8.018,920,6.069,1629,6.33,1717,6.33,1786,7.502,1813,8.614,1819,6.972,1821,6.972,1827,8.732,1828,9.397]],["component/226",[0,0.498,3,0.373]],["title/227",[]],["name/227",[1835,2.609]],["text/227",[]],["component/227",[0,0.498,3,0.373]],["title/228",[]],["name/228",[1836,2.609]],["text/228",[4,2.927,10,2.702,16,4.147,55,2.783,65,3.903,142,2.681,146,6.921,350,2.495,379,7.046,703,4.371,920,4.038,1227,5.389,1454,5.732,1629,5.491,1717,5.491,1783,6.822,1806,4.568,1809,5.296,1811,7.659,1812,6.048,1813,5.732]],["component/228",[0,0.498,3,0.373]],["title/229-1",[350,19.516,920,31.587,1441,36.075]],["name/229-1",[]],["text/229-1",[]],["component/229-1",[]],["title/229-2",[1837,49.485,1838,48.048]],["name/229-2",[]],["text/229-2",[]],["component/229-2",[]],["title/229-3",[1806,43.374,1838,48.048]],["name/229-3",[]],["text/229-3",[]],["component/229-3",[]],["title/229-4",[1838,48.048,1839,70.009]],["name/229-4",[]],["text/229-4",[]],["component/229-4",[]],["title/229-5",[97,23.801,350,23.693]],["name/229-5",[]],["text/229-5",[]],["component/229-5",[]],["title/229-6",[6,43.795,30,24.42]],["name/229-6",[]],["text/229-6",[]],["component/229-6",[]],["title/229-7",[623,36.978,1840,65.064]],["name/229-7",[]],["text/229-7",[]],["component/229-7",[]],["title/229",[34,30.429,1441,43.795]],["name/229",[1841,2.609]],["text/229",[0,1.398,2,0.415,3,0.868,4,1.475,6,2.324,17,1.858,20,0.934,26,1.566,29,1.689,30,1.296,34,1.615,35,1.124,37,0.858,40,1.019,41,3.048,47,0.872,55,1.9,56,4.184,72,1.511,77,2.511,81,2.484,91,1.511,97,2.791,105,0.917,124,1.535,130,0.723,150,1.571,175,1.175,176,1.296,197,1.209,204,1.398,221,1.092,224,1.997,263,1.316,265,1.87,278,1.424,285,1.014,292,1.93,306,0.761,307,2.564,308,1.919,310,2.592,322,1.014,324,1.268,325,3.768,350,2.958,359,1.064,361,1.331,379,1.291,381,1.343,382,1.373,387,2.626,390,1.997,397,0.917,405,1.183,411,2.105,424,1.191,436,1.406,465,1.209,539,1.291,578,2.788,594,1.303,627,3.979,674,1.138,677,1.406,787,1.291,809,2.185,816,2.55,818,1.389,820,1.566,823,2.076,838,1.038,879,1.247,920,3.3,963,1.635,1004,1.464,1005,1.487,1221,1.183,1227,1.537,1236,1.537,1345,2.453,1363,1.677,1527,1.635,1588,1.444,1596,1.635,1597,1.487,1624,1.291,1629,1.566,1631,1.464,1645,2.669,1714,1.537,1717,1.566,1719,1.566,1783,1.424,1789,1.098,1802,1.635,1803,1.537,1804,1.725,1806,2.302,1807,2.516,1809,3.585,1814,1.635,1818,1.725,1822,3.048,1828,1.784,1838,4.134,1842,1.464,1843,2.103,1844,1.857,1845,1.784,1846,1.857,1847,2.103,1848,1.955,1849,2.103,1850,2.103,1851,2.103,1852,3.715,1853,3.715,1854,2.103,1855,1.955,1856,2.103,1857,2.103,1858,2.103,1859,1.677,1860,2.103,1861,2.103,1862,1.857,1863,3.715,1864,1.725,1865,2.103,1866,1.955,1867,2.103,1868,2.103,1869,2.103,1870,2.103,1871,2.103,1872,1.955]],["component/229",[0,0.498,3,0.373]],["title/230-1",[1873,89.07]],["name/230-1",[]],["text/230-1",[]],["component/230-1",[]],["title/230-2",[32,69.249]],["name/230-2",[]],["text/230-2",[]],["component/230-2",[]],["title/230-3",[1874,82.779]],["name/230-3",[]],["text/230-3",[]],["component/230-3",[]],["title/230-4",[4,27.794,698,41.852]],["name/230-4",[]],["text/230-4",[]],["component/230-4",[]],["title/230-5",[674,37.869,1282,43.374]],["name/230-5",[]],["text/230-5",[]],["component/230-5",[]],["title/230",[0,16.243,3,12.182]],["name/230",[5,1.313]],["text/230",[0,1.591,2,0.632,3,1.193,6,2.006,14,2.171,16,1.804,27,1.292,28,1.998,29,1.458,31,4.527,32,5.331,35,4.744,38,2.026,40,2.192,43,2.094,44,1.917,45,4.643,46,1.399,47,1.329,48,3.218,49,2.631,50,2.98,51,2.98,52,2.72,55,2.208,56,3.247,57,5.742,58,2.631,62,2.573,64,3.276,68,1.384,72,2.171,75,2.201,91,2.304,92,1.334,93,2.267,106,1.3,151,1.768,183,1.968,205,2.772,226,4.058,265,1.614,277,1.296,307,1.648,313,1.487,319,1.304,322,1.546,350,2.32,358,2.093,414,1.506,418,1.582,583,2.631,641,3.068,670,2.344,674,1.735,677,2.144,698,3.191,705,1.871,706,3.068,717,2.388,735,1.968,788,2.026,818,2.117,835,2.144,842,2.069,920,1.757,938,2.557,940,2.493,1221,1.804,1282,1.987,1345,2.117,1597,4.846,1631,2.233,1645,3.834,1719,2.388,1783,2.171,1801,2.006,1874,2.98,1875,3.207,1876,3.207,1877,4.961,1878,2.493,1879,5.338,1880,2.831,1881,3.207,1882,3.207,1883,3.207]],["component/230",[0,0.498,3,0.373]],["title/231-1",[1645,63.984]],["name/231-1",[]],["text/231-1",[]],["component/231-1",[]],["title/231-2",[1597,62.957]],["name/231-2",[]],["text/231-2",[]],["component/231-2",[]],["title/231-3",[835,38.548,1061,42.95,1597,40.762]],["name/231-3",[]],["text/231-3",[]],["component/231-3",[]],["title/231",[826,62.957]],["name/231",[826,1.844]],["text/231",[0,0.726,3,0.302,20,1.39,35,1.673,40,1.435,43,0.681,44,2.555,45,2.119,46,2.939,47,1.298,55,1.669,56,3.675,57,4.34,58,3.507,62,0.837,64,1.921,67,0.99,68,1.351,72,0.706,74,2.436,75,1.191,78,0.912,86,1.904,90,0.822,92,1.302,94,1.608,97,0.59,101,1.038,106,1.269,110,2.514,114,1.532,121,1.175,124,1.293,132,0.906,134,1.714,136,0.646,139,1.293,145,2.534,150,2.212,155,0.786,158,0.865,165,0.922,167,0.856,190,0.774,197,0.998,199,2.173,205,0.901,224,0.933,226,2.379,250,1.749,257,0.897,270,2.02,282,1.773,290,0.666,293,1.375,307,0.892,317,1.005,318,1.489,322,1.509,338,1.208,340,1.056,351,0.741,414,0.815,419,0.741,420,1.175,465,1.799,468,1.663,533,1.472,543,1.424,545,1.175,592,1.532,603,1.472,657,1.047,661,3.743,669,1.921,670,2.288,677,1.16,687,1.175,696,2.59,698,1.038,706,1.799,708,0.754,714,2.619,751,1.683,753,1.191,763,1.319,809,1.021,814,1.921,816,1.191,822,1.12,827,1.075,835,2.092,879,1.856,909,4.841,922,1.384,940,4.698,1005,1.227,1021,1.424,1032,1.472,1068,1.613,1078,1.075,1116,1.293,1143,1.029,1221,1.761,1228,1.208,1308,1.472,1319,1.472,1334,1.384,1345,2.067,1473,1.293,1520,1.613,1534,1.613,1555,1.532,1573,1.613,1597,5.896,1645,6.801,1711,1.384,1718,1.613,1719,1.293,1722,1.613,1730,3.625,1739,1.613,1744,2.909,1762,1.532,1780,2.495,1806,1.075,1818,2.568,1837,1.227,1845,1.472,1877,2.909,1884,1.736,1885,1.736,1886,1.736,1887,5.231,1888,1.736,1889,1.736,1890,1.736,1891,1.736,1892,1.736,1893,1.532,1894,3.13,1895,1.736,1896,1.613,1897,1.532,1898,1.736,1899,1.613,1900,1.736,1901,1.532,1902,1.736,1903,1.736,1904,1.736,1905,1.736,1906,1.736,1907,1.384,1908,1.613,1909,1.736,1910,1.424,1911,1.736,1912,1.736]],["component/231",[0,0.498,3,0.373]],["title/232-1",[217,32.395]],["name/232-1",[]],["text/232-1",[]],["component/232-1",[]],["title/232",[0,13.38,3,10.035,350,19.516]],["name/232",[1913,1.601]],["text/232",[11,1.196,29,1.433,55,1.871,57,2.264,62,1.52,65,4.196,67,1.798,68,2.271,73,1.298,78,1.656,79,1.278,83,1.563,93,2.228,97,2.689,140,1.675,143,3.008,167,1.555,172,2.913,180,1.798,199,1.603,200,1.365,206,1.433,213,2.401,217,1.914,227,2.94,259,3.103,282,1.786,286,1.646,293,1.385,296,1.705,306,1.141,348,1.839,350,2.976,372,3.032,424,1.786,451,2.107,475,1.884,578,3.784,594,1.953,596,1.705,621,6.012,651,1.548,673,2.271,743,1.953,832,2.689,860,2.525,884,3.517,920,2.882,1000,2.451,1012,2.673,1072,2.034,1460,2.304,1472,4.317,1506,2.396,1624,3.23,1697,2.783,1714,2.304,1783,5.954,1786,3.563,1789,1.646,1790,4.091,1791,2.195,1792,4.89,1793,2.783,1794,2.783,1795,2.673,1796,2.93,1797,2.783,1798,2.513,1799,2.396,1800,2.264,1810,2.513,1811,2.396,1846,4.646,1848,2.93,1914,3.152]],["component/232",[0,0.498,3,0.373]],["title/233-1",[2,9.667,3,8.531,350,16.592,1845,41.579]],["name/233-1",[]],["text/233-1",[]],["component/233-1",[]],["title/233-2",[223,54.67]],["name/233-2",[]],["text/233-2",[]],["component/233-2",[]],["title/233-3",[64,54.67]],["name/233-3",[]],["text/233-3",[]],["component/233-3",[]],["title/233-4",[217,32.395]],["name/233-4",[]],["text/233-4",[]],["component/233-4",[]],["title/233-5",[97,30.281]],["name/233-5",[]],["text/233-5",[]],["component/233-5",[]],["title/233",[]],["name/233",[1913,1.601]],["text/233",[0,1.236,2,2.096,3,1.981,4,3.168,15,2.628,17,1.983,40,1.46,55,2.204,56,3.239,62,2.567,65,3.614,68,2.298,97,3.614,113,1.957,143,3.64,150,2.252,192,2.591,202,3.707,213,2.43,305,2.899,310,2.766,328,2.996,350,3.239,377,3.017,397,2.323,539,3.269,575,4.701,578,2.975,596,2.881,651,2.615,673,2.298,686,3.084,696,2.282,708,2.315,962,3.038,1463,3.239,1787,4.369,1791,3.707,1862,4.701,1915,4.701]],["component/233",[0,0.498,3,0.373]],["title/234-1",[350,19.516,1811,43.837,1845,48.908]],["name/234-1",[]],["text/234-1",[]],["component/234-1",[]],["title/234-2",[223,54.67]],["name/234-2",[]],["text/234-2",[]],["component/234-2",[]],["title/234-3",[1801,55.718]],["name/234-3",[]],["text/234-3",[]],["component/234-3",[]],["title/234-4",[64,54.67]],["name/234-4",[]],["text/234-4",[]],["component/234-4",[]],["title/234-5",[217,32.395]],["name/234-5",[]],["text/234-5",[]],["component/234-5",[]],["title/234-6",[97,19.606,1179,34.77,1916,45.976]],["name/234-6",[]],["text/234-6",[]],["component/234-6",[]],["title/234-7",[97,23.801,192,34.061]],["name/234-7",[]],["text/234-7",[]],["component/234-7",[]],["title/234",[]],["name/234",[1913,1.601]],["text/234",[0,0.865,2,1.502,3,1.325,4,2.398,15,1.839,17,1.388,23,1.103,28,1.395,34,0.918,35,1.128,40,1.891,55,2.103,62,1.018,65,3.134,68,2.16,71,1.43,73,0.87,84,3.058,97,2.589,108,2.31,113,0.776,130,1.282,131,1.638,136,0.786,143,2.897,157,0.963,164,1.688,172,0.908,176,0.736,191,1.032,192,2.435,198,2.742,200,0.914,202,1.47,206,2.275,213,1.701,217,1.356,229,1.242,230,1.004,279,2.462,291,1.609,305,1.149,310,1.936,319,0.859,342,1.773,350,2.044,377,2.112,382,1.378,397,0.921,401,1.179,412,1.449,461,2.992,514,1.188,539,1.296,558,1.517,578,2.083,596,1.142,600,2.678,642,1.791,651,1.037,654,1,673,0.911,686,1.222,693,1.172,696,1.598,708,1.62,761,2.127,788,1.334,809,2.192,810,1.43,838,2.981,1454,5.361,1463,2.267,1473,1.572,1596,1.641,1608,2.248,1631,1.47,1783,4.669,1787,1.732,1789,1.103,1791,2.595,1798,1.683,1810,5.498,1811,5.789,1812,4.106,1818,1.732,1915,1.864,1916,1.683,1917,6.896,1918,4.419,1919,1.962,1920,2.111,1921,3.291,1922,1.864,1923,1.962,1924,1.864,1925,1.864,1926,2.111,1927,1.962,1928,6.01,1929,3.728,1930,1.962,1931,1.962]],["component/234",[0,0.498,3,0.373]],["title/235-1",[0,11.375,3,8.531,350,16.592,1814,38.116]],["name/235-1",[]],["text/235-1",[]],["component/235-1",[]],["title/235-2",[223,54.67]],["name/235-2",[]],["text/235-2",[]],["component/235-2",[]],["title/235-3",[1801,55.718]],["name/235-3",[]],["text/235-3",[]],["component/235-3",[]],["title/235-4",[64,54.67]],["name/235-4",[]],["text/235-4",[]],["component/235-4",[]],["title/235-5",[217,32.395]],["name/235-5",[]],["text/235-5",[]],["component/235-5",[]],["title/235-6",[62,42.941]],["name/235-6",[]],["text/235-6",[]],["component/235-6",[]],["title/235",[]],["name/235",[1913,1.601]],["text/235",[0,1.063,15,2.26,17,1.705,29,2.082,40,1.951,55,2.408,62,4.204,65,3.83,97,3.342,130,1.575,132,2.392,150,1.936,172,1.97,176,1.598,203,2.419,230,2.179,259,2.098,306,1.657,310,3.694,319,1.863,322,2.208,350,2.407,518,2.693,519,2.837,539,2.811,547,3.411,578,4.871,673,1.977,788,2.894,832,2.341,838,3.51,860,3.414,884,4.754,1463,2.786,1621,3.651,1624,4.366,1631,3.188,1785,3.884,1789,3.714,1790,3.561,1791,3.188,1799,3.481,1800,3.29,1810,5.67,1814,5.53,1818,3.757,1862,6.279,1918,4.043,1932,4.58,1933,4.58,1934,4.256]],["component/235",[0,0.498,3,0.373]],["title/236-1",[350,19.516,823,32.217,1809,41.427]],["name/236-1",[]],["text/236-1",[]],["component/236-1",[]],["title/236-2",[223,54.67]],["name/236-2",[]],["text/236-2",[]],["component/236-2",[]],["title/236-3",[1801,55.718]],["name/236-3",[]],["text/236-3",[]],["component/236-3",[]],["title/236-4",[64,54.67]],["name/236-4",[]],["text/236-4",[]],["component/236-4",[]],["title/236-5",[217,32.395]],["name/236-5",[]],["text/236-5",[]],["component/236-5",[]],["title/236-6",[62,42.941]],["name/236-6",[]],["text/236-6",[]],["component/236-6",[]],["title/236-7",[1789,46.516]],["name/236-7",[]],["text/236-7",[]],["component/236-7",[]],["title/236-8",[671,53.703]],["name/236-8",[]],["text/236-8",[]],["component/236-8",[]],["title/236-9",[1606,58.814]],["name/236-9",[]],["text/236-9",[]],["component/236-9",[]],["title/236",[]],["name/236",[1913,1.601]],["text/236",[0,1.381,11,1.003,15,1.304,17,0.984,29,1.201,34,1.149,37,1.078,40,0.725,55,1.949,57,1.899,62,3.402,65,3.15,73,2.452,97,2.945,101,1.58,105,1.153,130,1.559,158,1.317,164,3.195,172,1.137,175,2.532,176,0.922,203,1.396,204,0.995,206,1.201,259,1.211,267,1.58,285,2.185,306,0.956,307,1.358,310,3.091,319,1.075,322,1.274,333,1.43,342,1.257,344,1.412,350,1.534,355,1.457,361,0.947,372,1.183,397,1.153,401,1.477,414,1.241,445,3.156,480,1.653,517,1.608,518,1.554,539,1.622,547,1.968,578,3.942,581,1.653,673,1.141,674,1.43,696,2.551,705,1.542,708,1.97,788,1.67,809,1.554,823,3.325,832,1.351,838,2.937,860,2.176,871,1.421,884,3.03,920,3.26,973,3.313,1183,2.009,1463,1.608,1588,1.814,1606,1.745,1608,2.733,1621,2.107,1624,5.317,1650,2.836,1789,4.146,1790,2.055,1791,1.84,1799,2.009,1800,1.899,1806,2.808,1809,3.256,1838,4.085,1928,1.814,1935,2.168,1936,2.333,1937,2.333,1938,2.333,1939,2.009,1940,1.932,1941,1.899,1942,1.899,1943,1.899,1944,3.204,1945,2.333,1946,2.333,1947,1.899,1948,2.055,1949,2.055,1950,2.055,1951,2.055,1952,2.055,1953,2.242,1954,2.456]],["component/236",[0,0.498,3,0.373]],["title/237-1",[350,23.693,1814,54.43]],["name/237-1",[]],["text/237-1",[]],["component/237-1",[]],["title/237-2",[223,54.67]],["name/237-2",[]],["text/237-2",[]],["component/237-2",[]],["title/237-3",[1801,55.718]],["name/237-3",[]],["text/237-3",[]],["component/237-3",[]],["title/237-4",[64,54.67]],["name/237-4",[]],["text/237-4",[]],["component/237-4",[]],["title/237-5",[217,32.395]],["name/237-5",[]],["text/237-5",[]],["component/237-5",[]],["title/237-6",[62,42.941]],["name/237-6",[]],["text/237-6",[]],["component/237-6",[]],["title/237-7",[1789,46.516]],["name/237-7",[]],["text/237-7",[]],["component/237-7",[]],["title/237-8",[671,53.703]],["name/237-8",[]],["text/237-8",[]],["component/237-8",[]],["title/237",[]],["name/237",[1913,1.601]],["text/237",[0,1.406,10,0.992,11,1.027,15,1.336,17,1.008,29,1.231,40,0.742,55,1.98,62,2.921,65,3.188,72,1.101,73,1.906,81,1.81,92,1.126,97,2.984,101,1.618,105,1.181,130,1.591,150,1.145,155,2.095,164,2.744,172,1.164,175,2.585,176,0.944,203,1.43,204,1.019,206,1.231,259,1.24,306,0.98,310,3.147,319,1.882,322,1.305,350,2.051,361,0.97,372,1.212,397,1.181,480,1.694,517,1.647,518,1.592,539,1.662,547,2.016,577,1.885,578,4.005,581,2.895,673,1.168,674,1.464,696,1.16,705,1.58,706,1.556,708,2.011,749,1.694,788,1.711,809,1.592,832,1.384,838,2.283,860,2.221,884,3.093,886,1.694,894,2.016,907,3.382,920,4.412,973,1.979,981,1.979,1028,1.694,1183,2.058,1243,2.016,1335,2.158,1369,1.858,1463,1.647,1588,1.858,1606,1.788,1611,2.516,1621,2.158,1624,5.387,1711,2.158,1786,3.133,1789,4.206,1790,2.105,1791,1.885,1799,2.058,1800,1.945,1814,5.574,1815,4.085,1846,2.39,1938,2.39,1939,2.058,1940,1.979,1941,1.945,1942,1.945,1943,1.945,1955,2.707,1956,2.707,1957,2.707,1958,2.516,1959,2.707,1960,2.707,1961,2.707,1962,2.707,1963,2.707,1964,2.707,1965,2.707,1966,2.707,1967,2.516,1968,2.707]],["component/237",[0,0.498,3,0.373]],["title/238-1",[671,53.703]],["name/238-1",[]],["text/238-1",[]],["component/238-1",[]],["title/238",[692,18.794,886,23.597,1789,19.699,1827,25.214,1837,26.662,1969,33.302]],["name/238",[1913,1.601]],["text/238",[55,2.629,310,4.943,578,5.317,722,5.953,1719,7.088,1786,6.444,1789,6.789,1827,7.961,1970,8.071,1971,8.845]],["component/238",[0,0.498,3,0.373]],["title/239-1",[223,54.67]],["name/239-1",[]],["text/239-1",[]],["component/239-1",[]],["title/239-2",[1801,55.718]],["name/239-2",[]],["text/239-2",[]],["component/239-2",[]],["title/239-3",[64,54.67]],["name/239-3",[]],["text/239-3",[]],["component/239-3",[]],["title/239-4",[671,53.703]],["name/239-4",[]],["text/239-4",[]],["component/239-4",[]],["title/239-5",[85,25.155,361,20.661,1972,45.976]],["name/239-5",[]],["text/239-5",[]],["component/239-5",[]],["title/239-6",[1789,36.562,1827,46.797]],["name/239-6",[]],["text/239-6",[]],["component/239-6",[]],["title/239-7",[1789,30.117,1837,40.762,1973,44.835]],["name/239-7",[]],["text/239-7",[]],["component/239-7",[]],["title/239-8",[40,19.2,1789,36.562]],["name/239-8",[]],["text/239-8",[]],["component/239-8",[]],["title/239-9",[1974,69.249]],["name/239-9",[]],["text/239-9",[]],["component/239-9",[]],["title/239",[350,12.765,815,23.834,939,26.662,1819,30.944,1820,31.991,1821,30.944]],["name/239",[1913,1.601]],["text/239",[0,1.703,16,3.252,29,1.606,34,2.513,40,0.969,65,1.201,87,1.575,97,2.495,106,1.433,129,1.366,161,1.752,164,1.6,191,1.727,203,1.866,224,1.899,230,2.75,248,2.061,306,2.092,310,3.003,312,2.425,319,1.437,345,3.549,350,3.166,382,2.306,397,1.541,462,2.112,497,5.188,539,2.168,578,5.226,594,2.189,650,2.149,703,2.094,732,1.659,771,2.538,788,2.232,815,2.232,818,2.333,920,1.935,939,4.087,1492,2.582,1506,2.685,1606,3.818,1624,5.206,1786,5.743,1789,4.429,1819,4.743,1820,4.903,1821,4.743,1822,2.898,1837,2.497,1842,2.459,1944,2.497,1948,2.747,1971,7.882,1972,2.816,1973,4.495,1974,4.495,1975,3.283,1976,6.479,1977,3.119,1978,3.119,1979,3.119,1980,2.996,1981,3.119,1982,3.283,1983,2.996,1984,2.996,1985,3.283,1986,3.283,1987,3.283,1988,3.283]],["component/239",[0,0.498,3,0.373]],["title/240-1",[1345,58.814]],["name/240-1",[]],["text/240-1",[]],["component/240-1",[]],["title/240",[]],["name/240",[1913,1.601]],["text/240",[]],["component/240",[0,0.498,3,0.373]],["title/241-1",[223,54.67]],["name/241-1",[]],["text/241-1",[]],["component/241-1",[]],["title/241-2",[1801,55.718]],["name/241-2",[]],["text/241-2",[]],["component/241-2",[]],["title/241-3",[64,54.67]],["name/241-3",[]],["text/241-3",[]],["component/241-3",[]],["title/241-4",[97,30.281]],["name/241-4",[]],["text/241-4",[]],["component/241-4",[]],["title/241-5",[85,25.155,361,20.661,1972,45.976]],["name/241-5",[]],["text/241-5",[]],["component/241-5",[]],["title/241-6",[1789,30.117,1837,40.762,1973,44.835]],["name/241-6",[]],["text/241-6",[]],["component/241-6",[]],["title/241-7",[1789,36.562,1827,46.797]],["name/241-7",[]],["text/241-7",[]],["component/241-7",[]],["title/241-8",[40,19.2,1789,36.562]],["name/241-8",[]],["text/241-8",[]],["component/241-8",[]],["title/241-9",[55,10.419,277,15.249,541,19.81,838,18.613,1014,30.944,1789,19.699]],["name/241-9",[]],["text/241-9",[]],["component/241-9",[]],["title/241",[350,14.429,815,26.94,816,29.262,817,30.629,1714,31.165]],["name/241",[1913,1.601]],["text/241",[0,1.608,17,0.792,23,1.111,29,3.15,34,1.631,37,0.868,40,1.029,55,2.113,65,1.276,74,2.345,87,0.949,97,2.065,106,0.863,113,1.379,124,0.879,126,2.126,129,0.823,137,1.124,155,1.699,161,1.055,164,0.963,167,1.05,176,0.742,197,2.894,203,1.124,217,0.774,221,1.105,224,1.144,227,3.393,230,3.639,248,1.241,257,1.099,265,1.071,277,1.517,306,1.358,310,2.615,312,1.46,319,0.865,345,2.304,348,1.241,350,2.345,351,0.909,361,0.762,436,2.509,456,1.745,462,1.272,482,1.584,492,1.481,497,3.559,539,1.306,541,3.64,578,4.274,594,2.325,703,1.261,709,1.283,732,0.999,739,2.018,757,1.405,761,1.214,768,1.617,771,1.528,788,1.344,815,1.344,816,1.46,817,1.528,818,4.576,832,1.087,838,3.42,994,1.696,1004,1.481,1014,3.079,1020,1.745,1028,1.331,1228,1.481,1459,1.555,1469,1.528,1492,1.555,1506,1.617,1543,2.992,1567,1.804,1606,2.478,1607,3.488,1624,3.728,1629,2.795,1714,1.555,1717,2.795,1786,4.112,1789,3.619,1837,1.504,1842,1.481,1972,1.696,1973,2.918,1976,4.446,1977,1.878,1978,1.878,1979,1.878,1980,1.804,1981,1.878,1983,1.804,1984,1.804,1989,1.977,1990,5.362,1991,2.127,1992,2.127,1993,1.977,1994,7.65,1995,2.127,1996,2.127,1997,3.753,1998,2.127,1999,2.127,2000,3.753,2001,1.977,2002,2.127,2003,1.878,2004,2.127,2005,2.127,2006,2.127,2007,2.127,2008,2.127,2009,1.528,2010,2.127]],["component/241",[0,0.498,3,0.373]],["title/242-1",[671,53.703]],["name/242-1",[]],["text/242-1",[]],["component/242-1",[]],["title/242",[692,21.244,886,26.672,1789,22.267,1827,28.5,1837,30.137]],["name/242",[1913,1.601]],["text/242",[55,2.629,310,4.943,578,5.317,722,5.953,1719,7.088,1786,6.444,1789,6.789,1827,7.961,1970,8.071,1990,8.402]],["component/242",[0,0.498,3,0.373]],["title/243-1",[223,54.67]],["name/243-1",[]],["text/243-1",[]],["component/243-1",[]],["title/243-2",[1801,55.718]],["name/243-2",[]],["text/243-2",[]],["component/243-2",[]],["title/243-3",[64,54.67]],["name/243-3",[]],["text/243-3",[]],["component/243-3",[]],["title/243-4",[671,53.703]],["name/243-4",[]],["text/243-4",[]],["component/243-4",[]],["title/243-5",[85,25.155,361,20.661,1972,45.976]],["name/243-5",[]],["text/243-5",[]],["component/243-5",[]],["title/243-6",[1789,30.117,1837,40.762,1973,44.835]],["name/243-6",[]],["text/243-6",[]],["component/243-6",[]],["title/243-7",[40,19.2,1789,36.562]],["name/243-7",[]],["text/243-7",[]],["component/243-7",[]],["title/243-8",[1974,69.249]],["name/243-8",[]],["text/243-8",[]],["component/243-8",[]],["title/243",[350,16.592,815,30.977,939,34.653,1714,35.835]],["name/243",[1913,1.601]],["text/243",[0,1.757,16,3.375,29,1.681,34,3.291,40,1.014,65,1.257,87,1.649,97,2.574,106,1.499,129,1.43,161,1.833,203,1.953,224,1.988,230,2.854,248,2.157,306,2.171,310,1.92,312,2.537,318,1.759,319,1.504,345,3.683,350,3.242,382,2.413,397,1.613,494,2.386,497,5.352,539,2.269,578,4.868,594,2.291,650,2.249,703,2.192,732,1.736,771,2.656,788,2.336,815,2.336,818,2.441,920,2.025,939,4.241,1028,3.753,1070,2.471,1178,3.962,1227,2.702,1492,2.702,1624,5.348,1629,4.469,1717,4.469,1786,5.127,1789,3.955,1822,3.033,1837,2.613,1842,2.574,1972,2.947,1973,4.665,1974,2.874,1975,3.436,1976,6.685,1977,3.264,1978,3.264,1979,3.264,1981,3.264,1982,3.436,1983,3.135,1984,5.089,1985,3.436,1986,3.436,1987,3.436,1988,3.436,1990,6.685]],["component/243",[0,0.498,3,0.373]],["title/244-1",[0,9.892,3,7.419,350,14.429,1714,31.165,1811,32.411]],["name/244-1",[]],["text/244-1",[]],["component/244-1",[]],["title/244-2",[223,54.67]],["name/244-2",[]],["text/244-2",[]],["component/244-2",[]],["title/244-3",[1801,55.718]],["name/244-3",[]],["text/244-3",[]],["component/244-3",[]],["title/244-4",[217,25.463,1720,61.807]],["name/244-4",[]],["text/244-4",[]],["component/244-4",[]],["title/244-5",[64,54.67]],["name/244-5",[]],["text/244-5",[]],["component/244-5",[]],["title/244-6",[217,32.395]],["name/244-6",[]],["text/244-6",[]],["component/244-6",[]],["title/244-7",[97,30.281]],["name/244-7",[]],["text/244-7",[]],["component/244-7",[]],["title/244-8",[2011,66.337]],["name/244-8",[]],["text/244-8",[]],["component/244-8",[]],["title/244",[]],["name/244",[1913,1.601]],["text/244",[0,1.517,2,1.725,3,1.138,4,0.938,15,1.166,17,1.532,30,0.824,36,1.863,40,1.128,55,1.509,62,1.139,65,2.519,68,1.02,73,1.695,97,3.304,100,0.746,101,1.412,105,1.03,115,0.754,132,1.234,142,1.496,162,1.286,164,1.863,172,1.016,176,1.435,179,2.599,191,2.011,192,1.149,204,0.889,206,1.074,213,1.078,230,1.124,285,1.983,286,2.148,306,1.489,310,2.137,313,1.096,319,0.961,342,1.124,348,2.4,350,2.753,361,0.846,372,1.057,377,3.095,390,1.27,397,1.03,480,1.478,482,1.759,515,1.119,539,1.45,578,3.053,615,2.086,642,2.003,696,2.342,706,1.358,708,1.788,747,1.579,788,1.493,809,2.419,838,2.696,920,2.253,973,1.727,1111,1.56,1294,1.837,1361,1.883,1463,1.437,1468,1.796,1588,1.621,1608,1.424,1623,2.086,1624,4.013,1629,5.519,1650,1.478,1714,1.727,1717,3.064,1783,4.426,1785,4.634,1789,2.854,1791,1.645,1798,1.883,1810,4.357,1811,5.633,1918,2.086,1919,2.195,1924,2.086,1928,2.823,1941,1.697,1942,1.697,1943,1.697,1989,3.823,2012,2.362,2013,2.362,2014,2.362,2015,2.362,2016,2.362,2017,2.362,2018,2.362,2019,2.362,2020,2.362,2021,4.114,2022,2.362,2023,3.823,2024,3.823,2025,2.362,2026,2.362,2027,2.362,2028,1.938,2029,2.362]],["component/244",[0,0.498,3,0.373]],["title/245-1",[350,14.429,815,26.94,939,30.137,1837,30.137,1969,37.642]],["name/245-1",[]],["text/245-1",[]],["component/245-1",[]],["title/245-2",[815,36.438,1802,44.835,1803,42.152]],["name/245-2",[]],["text/245-2",[]],["component/245-2",[]],["title/245-3",[111,18.871,265,21.456,352,26.416,1421,34.977,2030,42.637]],["name/245-3",[]],["text/245-3",[]],["component/245-3",[]],["title/245-4",[55,11.777,939,30.137,1803,31.165,2031,42.637,2032,37.642]],["name/245-4",[]],["text/245-4",[]],["component/245-4",[]],["title/245-5",[920,48.787]],["name/245-5",[]],["text/245-5",[]],["component/245-5",[]],["title/245-6",[337,58.814]],["name/245-6",[]],["text/245-6",[]],["component/245-6",[]],["title/245-7",[1974,69.249]],["name/245-7",[]],["text/245-7",[]],["component/245-7",[]],["title/245-8",[97,16.667,939,34.653,1803,35.835,2032,43.283]],["name/245-8",[]],["text/245-8",[]],["component/245-8",[]],["title/245-9",[2033,82.779]],["name/245-9",[]],["text/245-9",[]],["component/245-9",[]],["title/245-10",[465,40.235,466,48.74]],["name/245-10",[]],["text/245-10",[]],["component/245-10",[]],["title/245",[]],["name/245",[1913,1.601]],["text/245",[11,0.505,17,0.496,19,0.891,23,1.788,30,1.741,34,1.488,36,0.603,37,0.544,39,0.79,42,0.634,47,0.552,55,0.946,56,0.81,65,3.036,68,0.575,72,1,74,0.62,81,2.289,83,0.661,85,0.581,89,0.772,97,1.697,105,1.073,108,0.825,113,0.49,116,0.575,124,0.551,140,0.708,153,0.628,164,1.113,167,0.657,176,1.194,177,1.322,191,0.651,204,0.501,205,0.692,217,0.485,221,0.692,227,1.913,230,2.026,277,0.539,279,0.88,293,1.08,306,1.541,310,1.778,322,0.642,326,0.797,328,2.396,330,1.766,334,0.851,337,0.88,342,1.629,346,2.03,350,0.832,355,0.735,359,0.674,361,0.477,390,0.716,391,0.744,397,1.493,403,2.665,411,0.755,413,0.992,417,0.957,426,0.725,428,1.036,439,1.47,462,0.797,469,1.277,511,0.818,519,0.825,538,0.81,541,1.291,556,4.232,557,1.13,560,1.176,578,1.374,580,1.644,601,0.797,621,1.013,643,0.735,663,1.424,668,0.685,680,0.974,698,0.797,703,0.79,729,0.992,742,0.911,753,0.914,761,0.76,762,0.818,776,2.085,791,0.942,797,0.86,813,2.503,814,0.818,815,1.554,818,0.88,860,0.639,872,0.777,899,0.842,920,2.333,939,5.883,953,1.062,966,0.957,1004,0.928,1007,1.036,1028,0.833,1031,1.176,1043,0.833,1047,2.171,1093,1.036,1099,0.974,1109,1.093,1117,3.182,1228,1.712,1320,0.992,1369,0.914,1421,1.093,1441,0.833,1460,4.537,1588,0.914,1601,1.238,1613,1.093,1624,1.509,1720,3.76,1726,1.238,1768,1.238,1789,1.284,1797,2.171,1803,0.974,1837,2.42,1901,1.176,1928,1.688,1939,2.603,1940,2.503,1969,1.176,1973,1.912,1974,4.826,2001,4.638,2003,1.176,2032,6.34,2033,1.238,2034,1.332,2035,1.332,2036,1.332,2037,1.332,2038,1.332,2039,2.459,2040,2.459,2041,4.26,2042,1.332,2043,1.013,2044,1.332,2045,3.424,2046,1.332,2047,2.459,2048,1.332,2049,1.332,2050,1.332,2051,1.332,2052,1.332,2053,2.285,2054,1.332,2055,1.332,2056,1.332,2057,1.332,2058,2.459,2059,1.332,2060,1.332,2061,1.332,2062,1.332,2063,1.332,2064,2.459,2065,1.332,2066,1.332,2067,1.176,2068,1.332,2069,1.332,2070,1.332,2071,1.332,2072,1.332,2073,3.424,2074,1.332,2075,1.332,2076,1.332,2077,1.176,2078,2.459,2079,1.332,2080,2.459,2081,4.26,2082,1.238,2083,1.238,2084,2.459,2085,4.26,2086,1.176,2087,1.13,2088,1.332,2089,1.176,2090,1.093,2091,1.332,2092,1.96,2093,4.26,2094,2.459,2095,1.332,2096,1.332,2097,1.332,2098,1.332,2099,1.238,2100,1.332,2101,1.176,2102,1.332,2103,1.238,2104,0.902]],["component/245",[0,0.498,3,0.373]],["title/246-1",[350,14.429,1802,33.149,1803,31.165,1804,34.977,1805,34.977]],["name/246-1",[]],["text/246-1",[]],["component/246-1",[]],["title/246-2",[223,54.67]],["name/246-2",[]],["text/246-2",[]],["component/246-2",[]],["title/246-3",[1801,55.718]],["name/246-3",[]],["text/246-3",[]],["component/246-3",[]],["title/246-4",[64,54.67]],["name/246-4",[]],["text/246-4",[]],["component/246-4",[]],["title/246-5",[62,42.941]],["name/246-5",[]],["text/246-5",[]],["component/246-5",[]],["title/246-6",[1789,46.516]],["name/246-6",[]],["text/246-6",[]],["component/246-6",[]],["title/246",[]],["name/246",[1913,1.601]],["text/246",[0,1.923,29,1.923,37,1.727,40,1.16,54,2.397,55,1.169,62,4.539,77,2.129,97,2.817,108,4.142,137,2.235,150,1.789,204,1.592,265,2.129,310,2.198,319,1.721,348,2.469,350,1.432,445,2.946,447,3.04,462,2.53,493,2.946,539,2.597,578,2.364,585,2.865,732,3.139,788,2.674,800,4.588,809,2.489,810,2.865,838,4.089,1048,3.471,1221,2.38,1608,2.551,1624,2.597,1789,3.491,1802,5.197,1803,4.886,1804,9.361,1812,3.471,1827,2.828,2105,8.287,2106,5.33,2107,4.231,2108,4.231,2109,4.231,2110,2.622,2111,6.685,2112,4.231,2113,4.231,2114,3.933,2115,3.152,2116,4.231,2117,8.287,2118,3.093,2119,4.231,2120,4.231,2121,4.231,2122,4.231]],["component/246",[0,0.498,3,0.373]],["title/247-1",[0,8.752,3,6.564,350,12.765,1807,25.54,2123,30.073,2124,37.721]],["name/247-1",[]],["text/247-1",[]],["component/247-1",[]],["title/247-2",[223,54.67]],["name/247-2",[]],["text/247-2",[]],["component/247-2",[]],["title/247-3",[1801,55.718]],["name/247-3",[]],["text/247-3",[]],["component/247-3",[]],["title/247-4",[64,54.67]],["name/247-4",[]],["text/247-4",[]],["component/247-4",[]],["title/247-5",[97,30.281]],["name/247-5",[]],["text/247-5",[]],["component/247-5",[]],["title/247-6",[2011,66.337]],["name/247-6",[]],["text/247-6",[]],["component/247-6",[]],["title/247",[]],["name/247",[1913,1.601]],["text/247",[0,2.013,11,1.723,17,2.631,40,1.246,62,2.19,65,1.544,83,2.252,92,1.889,97,3.817,101,2.716,105,1.981,159,2.321,164,3.2,265,2.286,279,2.999,306,2.557,307,3.631,310,4.505,319,1.848,350,2.936,361,1.627,372,2.033,480,2.842,539,2.788,578,4.846,788,2.87,809,2.671,838,2.241,920,2.488,1320,3.383,1588,3.118,1606,2.999,1608,5.23,1610,4.222,1624,6.007,1650,2.842,1789,3.691,1806,4.379,1807,4.785,1838,4.85,1928,3.118,1941,3.263,1942,3.263,1943,3.263,1944,3.211,1984,3.852,2123,5.634,2125,3.852,2126,3.621,2127,4.222]],["component/247",[0,0.498,3,0.373]],["title/248-1",[0,8.752,3,6.564,350,12.765,1807,25.54,2123,30.073,2128,37.721]],["name/248-1",[]],["text/248-1",[]],["component/248-1",[]],["title/248-2",[223,54.67]],["name/248-2",[]],["text/248-2",[]],["component/248-2",[]],["title/248-3",[1801,55.718]],["name/248-3",[]],["text/248-3",[]],["component/248-3",[]],["title/248-4",[64,54.67]],["name/248-4",[]],["text/248-4",[]],["component/248-4",[]],["title/248-5",[97,30.281]],["name/248-5",[]],["text/248-5",[]],["component/248-5",[]],["title/248-6",[2011,66.337]],["name/248-6",[]],["text/248-6",[]],["component/248-6",[]],["title/248",[]],["name/248",[1913,1.601]],["text/248",[0,1.858,11,1.524,17,2.388,40,1.102,62,1.937,65,1.366,78,2.11,83,1.992,92,1.671,97,3.622,101,2.402,105,1.752,108,2.489,159,3.279,164,2.905,265,2.022,306,2.321,307,3.296,310,3.332,344,2.147,350,2.71,361,1.439,372,1.798,433,5.115,480,2.513,539,2.466,541,2.11,578,4.474,598,3.054,809,2.363,838,1.982,920,2.201,1107,5.441,1320,4.778,1469,4.608,1588,2.757,1608,4.828,1624,5.612,1650,2.513,1784,6.57,1789,3.35,1806,3.975,1807,4.344,1823,4.988,1824,5.664,1838,4.403,1928,2.757,1941,2.886,1942,2.886,1943,2.886,1944,2.84,2123,5.115,2125,3.407,2126,3.203,2129,6.415,2130,6.415]],["component/248",[0,0.498,3,0.373]],["title/249-1",[0,8.752,3,6.564,350,12.765,1805,30.944,1807,25.54,2123,30.073]],["name/249-1",[]],["text/249-1",[]],["component/249-1",[]],["title/249-2",[223,54.67]],["name/249-2",[]],["text/249-2",[]],["component/249-2",[]],["title/249-3",[1801,55.718]],["name/249-3",[]],["text/249-3",[]],["component/249-3",[]],["title/249-4",[64,54.67]],["name/249-4",[]],["text/249-4",[]],["component/249-4",[]],["title/249-5",[217,32.395]],["name/249-5",[]],["text/249-5",[]],["component/249-5",[]],["title/249-6",[97,30.281]],["name/249-6",[]],["text/249-6",[]],["component/249-6",[]],["title/249-7",[2011,66.337]],["name/249-7",[]],["text/249-7",[]],["component/249-7",[]],["title/249",[]],["name/249",[1913,1.601]],["text/249",[0,1.749,11,1.393,15,1.812,17,2.222,23,1.918,40,1.007,56,3.63,62,1.771,65,3.246,83,1.821,92,1.527,97,3.478,101,2.196,105,1.602,106,1.489,143,2.867,150,1.553,159,1.877,164,2.702,213,1.676,248,2.143,265,1.848,306,2.16,307,3.066,310,3.099,319,1.494,328,3.357,350,2.551,361,1.316,372,1.644,426,1.999,469,1.907,480,2.297,539,2.254,578,4.211,596,1.987,649,2.127,673,1.585,771,2.638,788,2.321,809,2.16,838,1.812,920,2.012,1320,2.735,1463,2.234,1547,3.242,1588,2.521,1596,5.861,1606,2.425,1608,3.598,1624,5.328,1650,2.297,1789,3.117,1791,2.557,1806,3.697,1807,4.041,1838,4.096,1928,2.521,1941,2.638,1942,2.638,1943,2.638,1944,2.596,1948,2.855,1950,2.855,2115,2.735,2123,4.758,2125,3.115,2126,2.928,2131,3.673,2132,3.673,2133,3.673]],["component/249",[0,0.498,3,0.373]],["title/250-1",[671,53.703]],["name/250-1",[]],["text/250-1",[]],["component/250-1",[]],["title/250",[1806,43.374,1827,46.797]],["name/250",[1913,1.601]],["text/250",[55,2.584,310,4.86,401,5.227,578,5.227,722,5.853,1719,6.969,1786,6.335,1789,6.736,1827,7.877,1970,7.935,2134,8.696]],["component/250",[0,0.498,3,0.373]],["title/251-1",[350,19.516,1806,35.728,1813,44.835]],["name/251-1",[]],["text/251-1",[]],["component/251-1",[]],["title/251-2",[223,54.67]],["name/251-2",[]],["text/251-2",[]],["component/251-2",[]],["title/251-3",[1801,55.718]],["name/251-3",[]],["text/251-3",[]],["component/251-3",[]],["title/251-4",[64,54.67]],["name/251-4",[]],["text/251-4",[]],["component/251-4",[]],["title/251-5",[217,32.395]],["name/251-5",[]],["text/251-5",[]],["component/251-5",[]],["title/251-6",[97,19.606,1179,34.77,1916,45.976]],["name/251-6",[]],["text/251-6",[]],["component/251-6",[]],["title/251-7",[97,23.801,192,34.061]],["name/251-7",[]],["text/251-7",[]],["component/251-7",[]],["title/251-8",[191,23.964,541,25.748,838,24.192,886,30.669]],["name/251-8",[]],["text/251-8",[]],["component/251-8",[]],["title/251-9",[1789,36.562,1827,46.797]],["name/251-9",[]],["text/251-9",[]],["component/251-9",[]],["title/251-10",[40,19.2,97,23.801]],["name/251-10",[]],["text/251-10",[]],["component/251-10",[]],["title/251-11",[2011,66.337]],["name/251-11",[]],["text/251-11",[]],["component/251-11",[]],["title/251",[]],["name/251",[1913,1.601]],["text/251",[0,0.89,2,1.462,3,1.29,10,0.429,15,1.075,16,0.658,17,1.427,20,0.52,23,0.611,24,0.592,34,0.508,40,1.051,46,0.951,55,2.458,62,0.564,65,3.381,68,0.505,71,0.792,73,1.862,83,0.58,97,2.847,101,0.699,105,0.51,115,0.373,130,0.402,136,0.436,137,0.618,143,2.522,157,0.534,164,1.385,172,0.503,176,0.408,188,0.495,191,2.509,192,1.865,197,0.672,198,1.194,199,1.108,200,1.325,202,0.814,204,0.82,206,1.391,207,1.589,213,1.75,217,1.113,221,0.608,227,0.654,229,1.282,259,0.536,289,1.694,304,0.473,306,0.789,307,1.12,309,0.641,310,1.991,319,0.887,323,0.782,342,0.557,350,2.382,360,0.567,361,1.096,372,0.524,376,0.688,377,2.56,382,0.763,390,0.629,397,0.51,401,4.143,412,0.803,414,1.024,436,0.782,461,0.699,462,0.699,465,0.672,469,1.132,480,0.732,482,0.871,514,0.658,539,0.718,541,2.013,542,0.871,558,0.84,578,3.174,594,1.35,596,1.179,650,0.712,651,0.575,654,0.554,671,0.705,673,0.505,684,0.637,686,0.677,693,0.649,696,0.934,698,0.699,708,0.947,714,1.091,749,0.732,788,0.739,809,0.688,838,2.533,842,0.755,872,0.683,886,0.732,920,3.384,973,1.593,1043,1.914,1097,1.788,1111,0.772,1112,0.827,1179,0.705,1232,0.827,1294,1.694,1316,0.91,1342,3.056,1345,1.439,1406,0.96,1463,1.326,1472,0.96,1506,0.889,1527,0.91,1543,2.439,1555,1.033,1572,0.933,1588,0.803,1608,0.705,1623,1.033,1624,3.15,1650,0.732,1711,0.933,1783,5.021,1786,3.475,1789,3.227,1791,1.517,1798,2.439,1806,1.35,1813,4.418,1827,1.457,1838,2.1,1864,2.51,1915,1.033,1916,0.933,1921,1.924,1922,1.033,1923,1.087,1924,1.033,1925,1.033,1927,1.087,1928,1.496,1930,4.201,1931,1.087,1935,2.51,1941,0.84,1942,0.84,1943,0.84,1980,0.992,2115,0.871,2135,1.17,2136,1.087,2137,0.96,2138,1.087,2139,0.58,2140,1.087,2141,2.844,2142,1.17,2143,2.179,2144,1.17,2145,1.17,2146,1.087,2147,1.17,2148,1.17,2149,3.06,2150,1.17,2151,1.17,2152,1.17,2153,1.17,2154,1.17,2155,1.087,2156,1.087,2157,2.026,2158,1.087,2159,1.087,2160,1.17,2161,1.17,2162,1.087]],["component/251",[0,0.498,3,0.373]],["title/252-1",[0,8.752,3,6.564,350,12.765,1805,30.944,2163,35.057,2164,35.057]],["name/252-1",[]],["text/252-1",[]],["component/252-1",[]],["title/252-2",[223,54.67]],["name/252-2",[]],["text/252-2",[]],["component/252-2",[]],["title/252-3",[1801,55.718]],["name/252-3",[]],["text/252-3",[]],["component/252-3",[]],["title/252-4",[64,54.67]],["name/252-4",[]],["text/252-4",[]],["component/252-4",[]],["title/252-5",[97,30.281]],["name/252-5",[]],["text/252-5",[]],["component/252-5",[]],["title/252-6",[2011,66.337]],["name/252-6",[]],["text/252-6",[]],["component/252-6",[]],["title/252",[]],["name/252",[1913,1.601]],["text/252",[0,2.023,11,1.737,17,2.648,23,2.392,40,1.256,62,2.208,65,1.557,83,2.271,92,1.905,97,3.83,101,2.738,105,1.998,159,2.341,164,3.22,265,2.305,306,2.574,307,3.654,310,3.694,319,1.863,350,2.951,361,1.641,372,2.05,469,2.379,480,2.865,539,2.811,578,4.871,788,2.894,809,2.693,838,2.26,920,2.509,1320,3.411,1547,4.043,1588,3.143,1606,3.024,1608,4.288,1624,6.034,1650,2.865,1789,3.714,1806,2.837,1838,4.881,1928,3.143,1941,3.29,1942,3.29,1943,3.29,1944,5.027,1948,3.561,1950,3.561,2125,3.884,2126,3.651,2163,4.256,2164,6.61,2165,4.58]],["component/252",[0,0.498,3,0.373]],["title/253-1",[671,53.703]],["name/253-1",[]],["text/253-1",[]],["component/253-1",[]],["title/253",[1806,43.374,1827,46.797]],["name/253",[1913,1.601]],["text/253",[55,2.584,310,4.86,401,5.227,578,5.227,722,5.853,1719,6.969,1786,6.335,1789,6.736,1827,7.877,1970,7.935,2134,8.696]],["component/253",[0,0.498,3,0.373]],["title/254-1",[350,16.592,1806,30.374,1807,33.195,1816,39.086]],["name/254-1",[]],["text/254-1",[]],["component/254-1",[]],["title/254-2",[223,54.67]],["name/254-2",[]],["text/254-2",[]],["component/254-2",[]],["title/254-3",[1801,55.718]],["name/254-3",[]],["text/254-3",[]],["component/254-3",[]],["title/254-4",[64,54.67]],["name/254-4",[]],["text/254-4",[]],["component/254-4",[]],["title/254-5",[217,32.395]],["name/254-5",[]],["text/254-5",[]],["component/254-5",[]],["title/254-6",[62,42.941]],["name/254-6",[]],["text/254-6",[]],["component/254-6",[]],["title/254-7",[97,30.281]],["name/254-7",[]],["text/254-7",[]],["component/254-7",[]],["title/254-8",[671,53.703]],["name/254-8",[]],["text/254-8",[]],["component/254-8",[]],["title/254-9",[1606,58.814]],["name/254-9",[]],["text/254-9",[]],["component/254-9",[]],["title/254-10",[2011,66.337]],["name/254-10",[]],["text/254-10",[]],["component/254-10",[]],["title/254",[]],["name/254",[1913,1.601]],["text/254",[0,1.386,11,1.007,15,1.31,17,0.989,29,1.207,34,1.154,37,1.084,40,0.728,55,1.955,57,1.908,62,3.412,65,3.158,73,2.46,97,2.953,101,1.588,105,1.158,130,1.565,158,1.323,164,3.205,172,1.142,175,2.543,176,0.926,203,1.403,204,0.999,206,1.207,259,1.217,285,2.194,306,0.961,307,1.364,310,3.102,319,1.08,322,1.28,333,1.436,342,1.263,344,1.419,350,1.54,355,1.464,361,0.951,372,1.189,397,1.158,401,1.484,414,1.247,445,3.169,480,1.661,517,1.615,518,1.562,539,1.63,547,1.978,578,3.954,581,1.661,673,1.146,674,1.436,696,2.56,705,1.55,708,1.978,788,1.678,809,1.562,823,1.484,832,1.357,838,2.947,860,2.184,871,2.447,884,3.042,920,3.272,973,3.327,1183,2.019,1463,1.615,1588,1.823,1606,1.754,1608,2.744,1621,2.117,1624,5.331,1650,2.847,1789,4.158,1790,2.065,1791,1.849,1799,2.019,1800,1.908,1806,2.82,1807,4.044,1816,2.117,1838,3.124,1864,2.179,1928,1.823,1938,2.344,1939,2.019,1940,1.941,1941,1.908,1942,1.908,1943,1.908,1944,1.877,1945,2.344,1946,2.344,1947,1.908,1948,2.065,1949,2.065,1950,2.065,1951,2.065,1952,2.065,1953,2.252,1954,2.468,2166,4.23,2167,2.468]],["component/254",[0,0.498,3,0.373]],["title/255-1",[350,16.592,1806,30.374,1807,33.195,1816,39.086]],["name/255-1",[]],["text/255-1",[]],["component/255-1",[]],["title/255-2",[223,54.67]],["name/255-2",[]],["text/255-2",[]],["component/255-2",[]],["title/255-3",[1801,55.718]],["name/255-3",[]],["text/255-3",[]],["component/255-3",[]],["title/255-4",[64,54.67]],["name/255-4",[]],["text/255-4",[]],["component/255-4",[]],["title/255-5",[217,32.395]],["name/255-5",[]],["text/255-5",[]],["component/255-5",[]],["title/255-6",[97,30.281]],["name/255-6",[]],["text/255-6",[]],["component/255-6",[]],["title/255-7",[671,53.703]],["name/255-7",[]],["text/255-7",[]],["component/255-7",[]],["title/255-8",[1606,58.814]],["name/255-8",[]],["text/255-8",[]],["component/255-8",[]],["title/255-9",[2011,66.337]],["name/255-9",[]],["text/255-9",[]],["component/255-9",[]],["title/255",[]],["name/255",[1913,1.601]],["text/255",[0,1.074,11,1.027,15,1.336,17,1.008,29,1.231,34,1.177,37,1.105,40,1.269,55,1.674,57,1.945,62,1.305,65,3.188,73,2.496,97,2.984,101,1.618,105,1.181,130,0.931,157,1.235,164,3.246,172,1.164,203,1.43,206,1.231,207,1.122,259,1.24,265,1.362,285,1.305,306,0.98,307,1.391,310,3.147,319,1.101,322,1.305,333,1.464,342,1.288,344,1.447,350,1.566,355,1.493,361,0.97,372,1.212,401,2.585,414,1.271,445,4.219,462,1.618,480,1.694,518,1.592,539,1.662,541,1.422,547,2.016,578,4.005,581,1.694,623,1.43,673,1.168,696,3.073,705,1.58,708,2.011,761,1.545,788,1.711,809,1.592,823,1.512,832,1.384,838,1.336,860,2.221,871,2.488,884,3.093,920,3.319,973,3.382,1056,1.075,1463,1.647,1506,2.058,1543,2.158,1588,1.858,1606,1.788,1608,2.79,1621,2.158,1624,4.401,1650,2.895,1786,1.833,1789,4.206,1790,2.105,1791,1.885,1799,2.058,1800,1.945,1806,2.867,1807,4.103,1816,2.158,1817,2.39,1827,1.81,1838,3.176,1864,2.221,1910,2.221,1928,1.858,1941,1.945,1942,1.945,1943,1.945,1944,1.914,1945,2.39,1946,2.39,1947,1.945,1948,2.105,1949,2.105,1950,2.105,1951,3.598,1952,2.105,1980,2.296,2166,4.3,2167,2.516,2168,2.707]],["component/255",[0,0.498,3,0.373]],["title/256-1",[43,22.628,46,25.155,150,24.383]],["name/256-1",[]],["text/256-1",[]],["component/256-1",[]],["title/256-2",[2,9.667,3,8.531,4,19.464,230,23.323]],["name/256-2",[]],["text/256-2",[]],["component/256-2",[]],["title/256-3",[2169,82.779]],["name/256-3",[]],["text/256-3",[]],["component/256-3",[]],["title/256",[826,62.957]],["name/256",[5,1.313]],["text/256",[2,1.38,3,1.218,4,2.779,8,2.266,15,1.629,17,2.036,20,1.467,21,2.236,24,1.67,34,1.435,43,1.296,46,1.44,47,1.369,55,1.511,65,1.859,68,1.425,79,2.218,87,3.122,91,2.372,92,1.373,97,1.859,114,2.915,116,1.425,117,1.898,124,1.364,132,1.724,150,1.396,152,1.715,158,2.725,160,2.131,199,1.679,200,2.369,221,1.715,230,3.33,263,2.066,265,1.662,277,2.211,293,2.403,308,1.706,310,1.715,319,1.343,321,3.143,339,2.266,342,3.33,343,3.998,360,1.599,377,3.098,391,1.845,403,2.066,414,2.568,419,1.41,500,2.299,513,2.334,514,3.076,519,2.046,530,2.459,543,2.709,554,2.709,648,2.459,658,1.715,661,2.046,715,1.551,777,2.633,796,2.266,835,2.207,945,2.414,955,2.459,1005,2.334,1011,2.8,1112,2.334,1116,2.459,1141,1.845,1360,2.207,1363,2.633,1369,2.266,1441,2.066,1662,2.51,1910,2.709,2077,2.915,2090,2.709,2104,2.236,2139,4.473,2169,5.083,2170,2.567,2171,3.302,2172,3.069,2173,5.469,2174,2.8,2175,3.069,2176,3.302,2177,3.302]],["component/256",[3,0.373,2139,1.063]],["title/257",[779,52.447,962,32.901]],["name/257",[962,0.833,2178,1.357]],["text/257",[2,1.269,3,1.12,4,4.237,6,5.732,10,3.358,36,2.913,41,5.278,55,1.777,74,4.267,83,3.19,90,3.048,152,3.342,167,3.175,183,3.949,184,3.022,344,3.438,346,6.895,350,2.177,368,3.502,548,3.459,713,4.357,779,7.205,838,3.175,876,4.416,962,5.228,2178,5.98,2179,6.434,2180,4.792,2181,6.434]],["component/257",[3,0.373,2139,1.063]],["title/258-1",[188,29.601,189,33.305]],["name/258-1",[]],["text/258-1",[]],["component/258-1",[]],["title/258-2",[206,31.823,810,47.402]],["name/258-2",[]],["text/258-2",[]],["component/258-2",[]],["title/258-3",[2,8.407,3,7.419,4,16.927,200,18.466,291,18.402]],["name/258-3",[]],["text/258-3",[]],["component/258-3",[]],["title/258-4",[176,17.101,177,26.358,178,22.737,306,17.741]],["name/258-4",[]],["text/258-4",[]],["component/258-4",[]],["title/258-5",[55,15.928,306,20.868,578,32.217]],["name/258-5",[]],["text/258-5",[]],["component/258-5",[]],["title/258-6",[137,25.895,188,20.729,345,30.092,594,30.374]],["name/258-6",[]],["text/258-6",[]],["component/258-6",[]],["title/258-7",[2,8.407,3,7.419,4,16.927,30,14.872,861,25.707]],["name/258-7",[]],["text/258-7",[]],["component/258-7",[]],["title/258-8",[254,37.638,390,37.638]],["name/258-8",[]],["text/258-8",[]],["component/258-8",[]],["title/258-9",[27,28.215,294,48.74]],["name/258-9",[]],["text/258-9",[]],["component/258-9",[]],["title/258-10",[30,20.116,40,15.816,277,23.313]],["name/258-10",[]],["text/258-10",[]],["component/258-10",[]],["title/258-11",[0,13.38,30,20.116,277,23.313]],["name/258-11",[]],["text/258-11",[]],["component/258-11",[]],["title/258-12",[418,28.456,483,34.475,693,32.002]],["name/258-12",[]],["text/258-12",[]],["component/258-12",[]],["title/258-13",[85,25.155,468,30.637,483,34.475]],["name/258-13",[]],["text/258-13",[]],["component/258-13",[]],["title/258-14",[418,34.545,693,38.85]],["name/258-14",[]],["text/258-14",[]],["component/258-14",[]],["title/258-15",[418,34.545,694,29.903]],["name/258-15",[]],["text/258-15",[]],["component/258-15",[]],["title/258",[34,30.429,1441,43.795]],["name/258",[5,1.313]],["text/258",[0,2.028,2,1.31,3,1.086,4,1.667,8,0.731,10,1.032,11,0.404,12,0.989,17,1.98,20,0.887,22,0.687,23,0.556,26,0.449,28,1.327,29,0.907,30,2.318,34,0.867,36,0.482,37,0.814,40,2.261,43,0.783,47,0.441,55,1.835,56,0.648,65,1.206,67,0.607,68,0.861,77,0.536,79,0.809,83,0.528,84,1.637,85,0.464,88,0.544,90,0.945,92,0.443,94,0.547,97,0.678,99,0.904,105,0.464,106,0.809,112,0.687,118,0.695,124,0.44,127,1.607,130,0.686,131,0.468,132,0.556,137,0.562,141,0.387,143,0.405,155,0.482,156,0.525,157,0.486,164,0.904,169,0.583,171,0.547,172,0.858,174,0.591,175,0.595,176,0.983,177,1.073,179,0.673,181,1.306,187,0.572,188,0.45,196,0.887,200,2.703,204,0.401,205,0.553,206,2.637,210,0.556,213,0.486,216,2.311,217,0.726,219,0.828,221,1.036,254,4.571,255,2.653,261,0.587,262,0.55,264,0.855,265,0.536,266,0.731,274,0.648,277,2.15,281,0.695,282,2.009,287,0.612,291,2.066,292,1.463,293,0.877,294,2.923,296,0.576,304,0.43,306,1.52,308,0.55,310,0.553,313,0.926,314,0.603,317,0.616,319,0.812,322,0.962,326,0.636,339,0.731,345,0.653,348,0.621,350,0.36,354,0.528,355,0.587,356,0.788,360,0.516,361,1.009,368,0.579,373,1.425,377,2.009,379,1.225,381,0.68,390,0.572,397,1.229,411,1.13,418,1.75,451,0.712,464,1.225,468,0.566,472,1.37,482,1.486,483,0.636,490,1.631,513,1.411,514,1.585,519,0.66,541,0.559,543,0.873,558,0.765,578,1.115,585,0.721,594,0.66,623,0.562,636,0.94,641,0.612,643,1.1,651,1.383,663,1.156,668,1.822,674,1.079,678,1.193,679,0.741,692,0.994,693,1.563,694,2.271,722,0.666,725,0.731,739,0.572,763,0.809,768,0.809,770,0.741,776,0.903,793,0.687,810,1.907,837,0.793,857,1.139,860,3.532,861,0.642,918,0.741,952,0.828,955,1.486,999,0.873,1032,0.903,1062,1.637,1072,0.687,1075,0.765,1078,0.66,1114,0.666,1141,0.595,1143,0.631,1256,0.731,1265,0.778,1283,1.389,1289,0.741,1292,0.809,1293,0.765,1348,0.903,1350,0.753,1360,0.712,1430,0.873,1457,1.459,1459,0.778,1469,0.765,1521,0.989,1574,0.778,1602,0.731,1842,0.741,1866,0.989,1928,0.731,2043,0.809,2118,0.778,2139,2.082,2172,0.989,2180,0.793,2182,1.065,2183,1.065,2184,1.065,2185,0.903,2186,1.065,2187,1.065,2188,0.903,2189,1.065,2190,0.731,2191,0.989,2192,0.989,2193,1.065,2194,0.94,2195,0.903,2196,1.065,2197,1.065,2198,0.989,2199,0.873,2200,0.903,2201,0.94,2202,1.065,2203,0.793,2204,1.065,2205,1.065,2206,1.065,2207,1.065,2208,1.065,2209,1.065,2210,1.065,2211,1.065,2212,1.065,2213,1.065,2214,0.873,2215,1.065,2216,1.065,2217,0.94,2218,1.065]],["component/258",[3,0.373,2139,1.063]],["title/259-1",[30,14.872,55,11.777,62,20.555,357,24.878,2219,31.165]],["name/259-1",[]],["text/259-1",[]],["component/259-1",[]],["title/259-2",[1993,82.779]],["name/259-2",[]],["text/259-2",[]],["component/259-2",[]],["title/259-3",[2,13.805,125,30.538]],["name/259-3",[]],["text/259-3",[]],["component/259-3",[]],["title/259-4",[698,41.852,1441,43.795]],["name/259-4",[]],["text/259-4",[]],["component/259-4",[]],["title/259-5",[62,33.752,265,35.231]],["name/259-5",[]],["text/259-5",[]],["component/259-5",[]],["title/259-6",[791,62.957]],["name/259-6",[]],["text/259-6",[]],["component/259-6",[]],["title/259-7",[623,36.978,2220,50.292]],["name/259-7",[]],["text/259-7",[]],["component/259-7",[]],["title/259",[2,13.805,1765,54.43]],["name/259",[2,0.514]],["text/259",[0,0.269,2,1.3,3,0.376,10,1.113,13,0.502,17,0.432,24,1.536,30,1.566,34,2.866,36,0.979,37,1.554,40,1.232,47,1.259,48,1.831,54,0.657,55,1.409,62,4.778,65,0.735,68,0.501,73,0.478,74,1.414,77,0.584,79,0.877,83,0.575,85,0.506,91,0.833,97,1.294,99,0.525,100,1.202,105,0.506,106,0.47,115,0.69,124,0.894,125,2.68,142,1.855,149,1.686,152,0.603,156,1.067,159,1.946,163,0.796,164,2.558,167,1.499,169,1.185,171,0.596,174,1.2,176,0.405,177,0.624,188,0.49,193,2.318,197,0.667,200,1.316,203,1.142,204,0.814,206,2.319,207,0.481,210,1.586,221,0.603,230,1.445,233,1.633,264,1.302,265,1.529,272,0.682,277,2.983,279,0.766,287,1.243,291,0.933,292,0.603,295,0.672,297,1.611,298,1.208,299,1.686,300,0.808,304,0.874,306,1.099,307,2.307,308,2.918,309,0.635,313,1.409,317,0.672,319,1.235,322,0.559,324,3.406,325,0.726,330,0.833,331,0.995,333,0.628,334,1.381,336,0.519,344,1.623,349,0.749,350,0.393,351,0.924,354,0.575,356,0.458,357,2.222,361,1.364,362,0.833,366,0.62,369,1.96,372,0.519,373,0.587,375,0.864,376,1.272,377,1.225,390,0.624,405,0.653,465,0.667,468,0.616,469,0.603,472,0.796,475,0.694,490,1.252,514,0.653,516,0.775,534,1.225,537,2.406,548,0.624,552,1.033,554,0.952,594,0.719,606,0.688,609,4.503,611,0.677,622,0.635,623,1.142,643,0.64,663,0.672,674,1.17,678,1.293,687,0.785,698,0.694,706,0.667,709,0.699,711,0.796,726,0.609,731,0.796,749,0.726,797,0.749,821,0.796,822,0.749,861,0.699,863,0.785,873,3.467,876,0.796,930,1.024,933,0.848,945,0.848,953,0.925,1043,0.726,1054,1.024,1076,0.984,1081,0.984,1082,0.952,1132,0.864,1221,0.653,1282,0.719,1283,0.808,1335,0.925,1348,0.984,1349,0.925,1360,2.03,1459,0.848,1516,2.823,1523,2.01,1560,1.024,1602,0.796,1608,0.699,1649,1.078,1765,0.902,1800,1.553,1910,1.774,1925,1.024,1947,2.735,2090,0.952,2104,1.464,2118,0.848,2139,0.575,2174,0.984,2180,0.864,2190,1.484,2219,3.282,2221,1.16,2222,1.16,2223,2.163,2224,1.16,2225,1.16,2226,1.16,2227,1.774,2228,0.902,2229,1.078,2230,1.16,2231,1.16,2232,1.16,2233,1.16,2234,1.078,2235,1.16,2236,1.16,2237,3.808,2238,1.16,2239,1.078,2240,0.925,2241,0.984,2242,2.163,2243,1.774,2244,1.16,2245,1.078,2246,1.16,2247,0.984,2248,0.82]],["component/259",[3,0.373,2139,1.063]],["title/260-1",[188,29.601,189,33.305]],["name/260-1",[]],["text/260-1",[]],["component/260-1",[]],["title/260-2",[206,26.213,307,29.629,405,32.439]],["name/260-2",[]],["text/260-2",[]],["component/260-2",[]],["title/260-3",[181,32.468,193,26.415]],["name/260-3",[]],["text/260-3",[]],["component/260-3",[]],["title/260-4",[55,13.541,181,22.737,193,18.498,357,28.607]],["name/260-4",[]],["text/260-4",[]],["component/260-4",[]],["title/260",[100,15.479,142,17.831,2219,35.835,2228,38.116]],["name/260",[5,1.313]],["text/260",[2,1.491,3,1.119,4,1.166,10,3.096,15,1.449,17,3.631,22,4.152,36,1.329,37,2.023,40,0.805,44,1.755,47,1.217,55,2.333,74,1.367,79,1.191,97,2.187,100,0.927,111,1.299,125,1.281,137,2.618,141,1.068,142,1.068,149,1.629,151,1.619,167,1.449,174,3.57,176,1.024,181,2.984,188,1.241,189,1.397,193,1.87,198,1.608,200,2.147,206,2.924,228,1.77,230,1.397,261,2.733,262,2.561,264,3.24,281,1.916,290,1.126,295,1.7,299,1.629,304,1.187,305,1.598,306,1.062,307,2.547,309,1.608,317,1.7,322,1.415,323,1.963,342,1.397,354,1.456,357,2.893,361,1.776,368,1.598,376,3.784,377,5.19,390,1.578,405,1.651,444,1.629,464,3.043,483,1.755,490,1.7,514,2.788,537,1.855,678,2.963,715,2.328,763,2.232,945,2.146,962,1.675,1011,2.49,1072,1.895,1221,2.788,1285,2.283,1457,2.146,1897,2.592,1934,2.729,2104,3.356,2139,3.19,2170,2.283,2185,2.49,2228,2.283,2249,4.204,2250,2.729,2251,2.936,2252,2.409]],["component/260",[3,0.373,2139,1.063]],["title/261-1",[136,26.064,157,31.949]],["name/261-1",[]],["text/261-1",[]],["component/261-1",[]],["title/261-2",[136,26.064,142,25.463]],["name/261-2",[]],["text/261-2",[]],["component/261-2",[]],["title/261-3",[2,11.372,74,26.856,136,21.469]],["name/261-3",[]],["text/261-3",[]],["component/261-3",[]],["title/261-4",[136,21.469,2253,50.912,2254,53.595]],["name/261-4",[]],["text/261-4",[]],["component/261-4",[]],["title/261-5",[165,30.637,704,32.439,1256,39.578]],["name/261-5",[]],["text/261-5",[]],["component/261-5",[]],["title/261-6",[136,26.064,715,32.878]],["name/261-6",[]],["text/261-6",[]],["component/261-6",[]],["title/261-7",[85,30.538,468,37.193]],["name/261-7",[]],["text/261-7",[]],["component/261-7",[]],["title/261-8",[136,21.469,149,32.002,2247,48.908]],["name/261-8",[]],["text/261-8",[]],["component/261-8",[]],["title/261-9",[623,36.978,2220,50.292]],["name/261-9",[]],["text/261-9",[]],["component/261-9",[]],["title/261",[293,39.134]],["name/261",[333,1.411]],["text/261",[0,0.329,2,0.883,3,0.545,4,0.564,10,0.52,11,0.539,15,0.367,17,0.971,23,0.742,26,0.313,28,0.976,30,0.259,34,0.617,40,1.114,42,0.676,43,0.557,46,0.324,47,0.845,48,0.856,55,1.445,65,3.771,67,0.424,68,0.613,74,1.458,75,0.975,79,1.27,83,1.011,86,0.864,87,0.331,88,0.726,92,0.309,94,0.382,97,0.253,100,0.448,106,0.576,109,1.19,110,0.835,111,0.329,112,0.48,115,0.237,116,1.125,124,0.587,130,1.397,131,0.327,136,3.742,142,2.143,152,0.386,153,0.35,154,0.39,155,0.336,156,0.367,157,2.825,158,0.707,161,0.368,162,0.773,165,3.13,167,1.006,174,1.131,176,0.259,178,1.452,179,1.288,182,0.46,196,0.33,198,0.407,200,0.322,204,0.534,205,0.386,206,0.338,216,0.886,217,1.139,224,0.4,227,0.415,229,0.835,248,0.434,267,1.559,274,0.452,277,1.054,291,0.321,292,0.737,293,0.624,303,0.503,308,0.384,311,0.407,317,0.822,319,1.061,322,0.358,324,0.448,325,0.465,326,0.444,328,0.418,331,1.44,333,2.423,340,0.864,343,1.038,344,0.759,348,0.434,350,0.69,351,0.317,354,0.704,356,0.56,360,0.688,366,0.397,373,0.718,375,0.553,376,2.863,380,0.553,381,0.474,388,1.441,394,0.525,397,0.324,411,0.421,444,0.788,457,0.778,463,0.421,465,0.427,468,1.083,478,0.363,508,0.578,514,0.799,516,1.363,531,0.402,536,0.592,537,0.47,552,3.093,582,1.209,587,0.503,601,0.444,623,0.393,651,0.365,654,2.306,657,0.856,672,0.927,696,1.92,704,1.761,708,1.361,709,0.448,715,0.667,726,1.369,728,0.452,732,1.698,737,0.835,739,0.4,752,0.412,803,0.51,804,3.308,836,0.497,857,0.424,862,1.038,871,2.813,904,0.491,932,0.39,938,0.592,953,0.592,962,1.163,1003,0.474,1005,0.525,1016,1.058,1043,0.465,1064,0.543,1072,0.48,1085,0.592,1091,0.517,1121,1.906,1177,0.578,1178,0.938,1181,2.692,1215,0.565,1221,1.761,1266,0.63,1282,0.46,1338,0.565,1350,0.525,1360,0.497,1363,0.592,1431,2.043,1446,0.989,1447,1.132,1457,0.543,1461,0.553,1511,0.63,1562,2.496,1565,0.534,1602,0.51,1615,0.691,1650,0.465,1878,2.027,1893,1.254,1921,0.656,2043,2.38,2082,1.32,2083,0.691,2086,0.656,2104,1.381,2106,0.592,2227,0.61,2228,0.578,2241,0.63,2248,0.525,2249,0.63,2252,0.61,2254,2.423,2255,0.743,2256,0.743,2257,0.743,2258,2.039,2259,0.743,2260,0.743,2261,2.91,2262,0.743,2263,0.743,2264,4.869,2265,2.38,2266,0.691,2267,3.587,2268,0.743,2269,0.743,2270,0.743,2271,0.743,2272,0.743,2273,0.743,2274,0.743,2275,0.743,2276,0.743,2277,0.743,2278,0.743,2279,0.63,2280,0.743,2281,0.743,2282,0.743,2283,0.743,2284,0.743,2285,0.743,2286,0.743,2287,2.039,2288,1.42,2289,0.691,2290,0.743,2291,0.743,2292,0.743,2293,1.254,2294,0.743,2295,1.32,2296,1.32,2297,0.743,2298,0.743,2299,0.656,2300,0.743,2301,0.743,2302,1.42,2303,2.039,2304,2.039,2305,1.42,2306,3.131,2307,0.743,2308,2.039,2309,0.743,2310,1.42,2311,0.743,2312,0.743,2313,0.743,2314,0.743,2315,0.592,2316,0.743,2317,0.743,2318,0.743,2319,0.743,2320,1.42,2321,0.743,2322,0.743,2323,1.42,2324,0.743,2325,1.42,2326,0.743,2327,0.743,2328,0.743,2329,0.743,2330,0.743,2331,0.743,2332,0.743,2333,0.743,2334,0.743,2335,0.656,2336,0.743,2337,0.743,2338,0.656,2339,0.743,2340,0.63,2341,0.63,2342,0.656]],["component/261",[3,0.373,2139,1.063]],["title/262-1",[30,24.42,99,31.699]],["name/262-1",[]],["text/262-1",[]],["component/262-1",[]],["title/262-2",[159,35.779,233,37.638]],["name/262-2",[]],["text/262-2",[]],["component/262-2",[]],["title/262-3",[40,19.2,193,26.415]],["name/262-3",[]],["text/262-3",[]],["component/262-3",[]],["title/262-4",[299,49.427]],["name/262-4",[]],["text/262-4",[]],["component/262-4",[]],["title/262-5",[55,13.541,299,27.206,307,25.188,377,27.771]],["name/262-5",[]],["text/262-5",[]],["component/262-5",[]],["title/262-6",[113,21.191,181,26.745,2343,53.595]],["name/262-6",[]],["text/262-6",[]],["component/262-6",[]],["title/262-7",[30,24.42,264,30.006]],["name/262-7",[]],["text/262-7",[]],["component/262-7",[]],["title/262-8",[40,19.2,193,26.415]],["name/262-8",[]],["text/262-8",[]],["component/262-8",[]],["title/262-9",[70,47.308,273,39.578,300,40.148]],["name/262-9",[]],["text/262-9",[]],["component/262-9",[]],["title/262-10",[37,28.566,908,45.69]],["name/262-10",[]],["text/262-10",[]],["component/262-10",[]],["title/262-11",[181,41.308]],["name/262-11",[]],["text/262-11",[]],["component/262-11",[]],["title/262-12",[623,36.978,2220,50.292]],["name/262-12",[]],["text/262-12",[]],["component/262-12",[]],["title/262",[181,32.468,193,26.415]],["name/262",[181,1.21]],["text/262",[2,0.17,10,0.316,11,0.885,17,1.861,20,0.383,22,1.055,24,1.18,28,0.323,30,2.021,33,0.515,34,1.014,37,1.21,40,1.249,44,0.515,49,0.707,55,1.257,62,1.43,65,1.97,70,0.707,74,0.761,79,0.946,81,1.093,87,0.384,89,1.351,92,0.68,97,1.008,99,2.263,100,1.578,106,0.946,107,0.405,109,0.503,113,1.301,115,0.275,121,0.583,130,0.296,131,0.718,142,3.35,143,1.548,153,0.771,155,0.39,159,1.192,171,0.443,172,0.371,174,1.965,175,0.481,176,1.887,181,2.111,191,0.421,193,2.562,203,0.455,204,2.036,206,1.06,210,0.45,216,3.411,217,0.313,222,0.707,225,2.096,227,0.913,229,0.962,230,0.778,233,2.909,259,0.395,261,0.475,262,1.532,264,2.91,265,1.174,272,0.962,273,2.035,277,0.661,278,0.583,282,0.926,285,0.415,287,0.495,291,0.372,292,0.448,293,0.379,295,3.133,298,1.657,299,0.907,300,1.138,306,0.312,307,0.443,311,0.472,313,0.4,315,0.63,318,0.41,319,0.665,321,0.495,322,1.125,331,0.396,336,0.732,342,0.778,344,0.874,346,0.511,350,1.003,351,0.996,352,0.534,354,0.427,355,0.475,356,0.34,358,0.562,360,0.792,371,0.687,373,0.827,377,0.488,379,0.529,387,0.609,397,1.017,405,0.485,411,0.488,418,2.246,422,1.271,423,0.6,428,0.67,431,1.813,437,0.534,447,0.619,456,0.707,458,2.238,459,3.093,462,1.394,463,0.488,473,0.562,480,0.539,482,1.218,490,0.499,514,1.668,516,1.982,526,0.655,552,2.175,555,0.63,587,0.583,597,1.443,611,0.503,623,0.455,658,0.448,669,0.529,694,0.996,698,0.515,704,0.485,713,1.107,716,0.463,739,0.879,743,2.821,749,1.459,761,0.492,807,1.107,849,0.642,861,1.406,867,1.27,906,0.591,908,1.935,1003,1.489,1050,0.576,1072,0.556,1084,1.093,1085,0.687,1091,0.6,1116,0.642,1137,0.63,1193,0.556,1194,0.499,1232,0.609,1243,0.642,1256,0.591,1346,0.801,1348,0.731,1405,1.195,1409,0.67,1459,0.63,1560,0.761,1565,0.619,1566,0.707,1940,0.63,1948,0.67,2053,1.519,2090,0.707,2104,0.583,2115,0.642,2170,0.67,2185,0.731,2214,0.707,2219,6.611,2227,0.707,2228,6.604,2243,0.707,2252,0.707,2265,0.655,2338,0.761,2343,2.168,2344,0.862,2345,0.862,2346,1.635,2347,1.635,2348,1.635,2349,1.635,2350,1.519,2351,0.862,2352,0.761,2353,0.801,2354,0.862,2355,0.862,2356,0.862,2357,0.862,2358,1.635,2359,1.635,2360,0.862,2361,0.731,2362,0.801,2363,0.862,2364,4.069,2365,0.731,2366,0.862,2367,0.862,2368,1.635,2369,0.862,2370,0.862,2371,0.862,2372,0.862,2373,2.965,2374,0.862,2375,0.862,2376,0.862,2377,0.801,2378,0.862,2379,0.862,2380,0.862,2381,0.862,2382,0.862,2383,0.862,2384,0.862,2385,0.862,2386,0.862,2387,0.862,2388,0.862,2389,0.687,2390,0.862,2391,0.862,2392,0.862,2393,0.862,2394,1.635,2395,0.862,2396,0.862,2397,0.862,2398,0.862,2399,0.801,2400,0.761,2401,0.801]],["component/262",[3,0.373,2139,1.063]],["title/263-1",[1221,32.439,1282,35.728,1441,36.075]],["name/263-1",[]],["text/263-1",[]],["component/263-1",[]],["title/263-2",[55,19.337,2402,70.009]],["name/263-2",[]],["text/263-2",[]],["component/263-2",[]],["title/263-3",[34,30.429,206,31.823]],["name/263-3",[]],["text/263-3",[]],["component/263-3",[]],["title/263-4",[24,24.797,65,16.667,124,20.259,938,39.086]],["name/263-4",[]],["text/263-4",[]],["component/263-4",[]],["title/263-5",[623,36.978,2220,50.292]],["name/263-5",[]],["text/263-5",[]],["component/263-5",[]],["title/263",[97,23.801,206,31.823]],["name/263",[206,1.186]],["text/263",[2,0.172,3,0.411,9,0.618,17,0.325,24,0.838,26,0.368,27,0.352,29,0.753,30,0.824,34,0.72,37,0.357,40,0.648,46,0.381,55,0.99,62,0.421,65,3.035,68,0.377,85,0.723,88,0.447,90,0.414,92,0.363,97,0.563,100,0.948,105,0.381,106,0.958,115,0.279,116,0.377,125,0.723,130,1.582,136,0.617,137,0.462,142,1.673,143,0.332,146,0.527,151,0.482,157,0.756,159,0.447,162,0.902,165,0.88,167,0.431,176,1.605,177,1.926,182,0.541,197,0.502,198,0.479,204,1.129,206,1.364,211,1.288,216,0.72,248,0.51,262,0.451,265,0.834,282,0.495,290,0.636,292,1.227,293,0.384,308,1.851,309,0.479,313,0.405,314,3.095,319,0.355,321,0.502,324,0.999,325,1.478,344,0.467,350,0.296,351,0.708,356,0.345,376,1.389,377,0.495,379,0.536,381,0.558,390,0.47,391,0.488,397,1.03,403,0.547,414,0.41,419,0.708,444,0.485,449,1.19,450,0.628,462,0.522,463,0.495,465,0.952,471,0.639,473,0.57,490,0.959,514,0.492,517,0.532,542,0.651,581,0.547,593,0.772,594,1.026,606,0.518,611,0.51,622,0.479,623,1.248,634,0.741,650,1.437,654,0.414,663,0.506,671,0.527,678,0.522,696,1.012,698,0.522,713,0.592,732,0.41,737,0.514,739,0.47,762,1.017,779,0.541,809,0.514,882,0.639,940,5.96,1004,1.153,1044,1.463,1064,0.639,1079,0.628,1103,0.592,1145,1.405,1180,0.664,1228,0.608,1256,0.6,1265,3.363,1280,0.564,1282,1.026,1305,0.697,1354,0.812,1360,1.579,1369,0.6,1431,0.57,1452,0.639,1457,0.639,1627,3.902,1878,0.679,1880,0.772,1907,1.321,1939,5.426,1940,1.211,2028,1.359,2087,0.741,2104,0.592,2118,2.194,2139,0.433,2190,0.6,2200,6.502,2219,5.005,2227,1.359,2228,1.837,2243,0.717,2252,0.717,2265,0.664,2293,1.463,2341,0.741,2342,0.772,2352,0.772,2403,0.874,2404,0.874,2405,0.874,2406,0.874,2407,2.545,2408,0.812,2409,0.812,2410,3.823,2411,1.54,2412,0.812,2413,0.812,2414,0.812,2415,0.812,2416,0.812,2417,7.907,2418,7.666,2419,0.874,2420,0.874,2421,0.874,2422,0.874,2423,0.874,2424,4.601,2425,0.874,2426,0.874,2427,0.874,2428,0.874,2429,0.874,2430,0.874,2431,3.583,2432,4.276,2433,4.276,2434,0.874,2435,1.657,2436,0.874,2437,0.874,2438,1.463,2439,1.54,2440,1.657,2441,0.874,2442,0.874,2443,1.657,2444,0.874,2445,0.874,2446,0.874,2447,0.874,2448,0.874,2449,1.657,2450,1.657,2451,0.874,2452,0.874,2453,0.812,2454,0.812,2455,0.874,2456,0.812,2457,0.812,2458,0.812,2459,0.812,2460,0.874,2461,0.874,2462,0.874,2463,0.812,2464,0.874,2465,0.874,2466,0.874,2467,0.874,2468,0.874,2469,0.874,2470,0.874,2471,0.874,2472,0.874,2473,0.874,2474,0.874,2475,0.874,2476,0.874,2477,0.874,2478,0.874,2479,0.874,2480,0.874,2481,0.874,2482,6.537,2483,3.001,2484,1.657,2485,1.657,2486,0.874,2487,4.114,2488,5.435,2489,0.874,2490,1.657,2491,2.362,2492,4.114,2493,3.001,2494,0.874,2495,0.874,2496,3.001,2497,3.001,2498,0.874,2499,1.657,2500,1.657,2501,0.874,2502,2.362,2503,2.362,2504,0.874,2505,0.874,2506,0.874,2507,0.874,2508,0.812,2509,1.657,2510,0.874,2511,0.874,2512,0.874,2513,0.874,2514,0.874,2515,0.874,2516,0.874,2517,0.874,2518,0.812,2519,0.874]],["component/263",[3,0.373,2139,1.063]],["title/264-1",[397,38.852]],["name/264-1",[]],["text/264-1",[]],["component/264-1",[]],["title/264-2",[623,36.978,2220,50.292]],["name/264-2",[]],["text/264-2",[]],["component/264-2",[]],["title/264",[348,51.972]],["name/264",[2520,2.609]],["text/264",[0,1.138,3,1.304,4,1.946,10,3.335,15,2.419,37,2.001,40,1.345,83,2.431,99,2.22,100,1.548,107,2.302,124,2.026,142,2.726,149,4.16,157,2.237,162,2.669,167,2.419,178,2.274,204,1.845,205,2.546,224,2.636,264,3.213,277,1.982,331,2.255,344,2.62,356,1.935,360,2.374,377,4.246,397,2.139,414,2.302,435,3.413,444,4.16,514,4.216,538,2.982,635,4.328,663,2.839,696,3.213,704,2.758,749,3.067,753,3.365,1350,3.465,1565,3.522,1747,6.618,2077,4.328,2110,3.038,2219,3.584,2228,3.812,2362,4.557,2521,4.903,2522,4.328,2523,4.903,2524,8.36,2525,3.727,2526,4.903]],["component/264",[3,0.373,2139,1.063]],["title/265",[649,51.575]],["name/265",[649,1.511]],["text/265",[0,1.125,2,1.245,3,0.498,10,3.87,15,1.411,17,1.805,26,1.205,27,1.954,29,1.3,33,2.899,40,0.784,55,2.661,57,2.055,58,3.978,74,2.258,83,1.418,90,1.355,91,2.055,92,1.19,93,2.022,111,3.682,113,2.319,115,1.547,135,4.377,136,2.767,151,2.673,157,2.213,159,1.462,163,1.963,169,1.567,171,1.47,193,1.079,196,1.271,215,2.976,281,1.867,286,1.494,290,1.097,292,1.486,313,1.327,317,2.808,331,2.231,354,2.404,411,2.747,414,1.343,446,1.432,448,2.055,477,2.639,478,1.398,514,1.609,535,2.347,552,1.367,582,1.696,601,2.899,629,3.283,641,1.644,646,1.807,649,3.655,652,1.867,654,1.355,666,1.725,673,1.235,690,1.725,710,1.567,724,2.347,732,1.343,763,2.174,847,3.544,857,1.632,876,1.963,920,1.567,962,1.632,1182,2.347,1194,1.656,1221,2.728,1319,2.426,1382,2.426,1418,2.426,1511,2.426,1524,2.426,2106,2.281,2180,2.13,2214,2.347,2335,5.572,2527,2.347,2528,2.86,2529,5.353,2530,2.347,2531,2.426,2532,2.13,2533,2.86,2534,2.86,2535,2.86,2536,2.658,2537,2.281]],["component/265",[3,0.373,2139,1.063]],["title/266-1",[30,24.42,40,19.2]],["name/266-1",[]],["text/266-1",[]],["component/266-1",[]],["title/266-2",[0,16.243,883,44.235]],["name/266-2",[]],["text/266-2",[]],["component/266-2",[]],["title/266-3",[10,25.659,708,30.429]],["name/266-3",[]],["text/266-3",[]],["component/266-3",[]],["title/266-4",[623,36.978,2220,50.292]],["name/266-4",[]],["text/266-4",[]],["component/266-4",[]],["title/266",[2,13.805,3,12.182]],["name/266",[3,0.454]],["text/266",[0,1.965,2,0.695,3,0.891,4,1.738,10,2.115,15,0.68,17,1.906,23,0.72,24,1.283,29,0.627,30,2.395,37,1.438,38,0.871,40,1.883,55,2.244,65,2.159,85,1.107,87,0.615,90,0.653,99,0.624,105,0.601,106,1.429,115,2.026,116,1.521,124,1.049,127,0.787,130,0.873,135,2.479,136,0.945,142,1.592,143,0.524,164,0.624,169,0.755,171,0.708,172,2.202,174,0.765,175,0.77,176,0.885,177,0.741,178,0.639,180,0.787,204,1.326,210,1.841,213,3.344,215,1.557,216,1.902,217,1.282,248,0.804,250,0.77,254,0.741,257,0.712,258,0.65,265,0.694,277,2.775,281,0.9,296,0.746,313,1.177,318,0.656,319,0.561,322,1.223,342,0.656,351,1.506,356,0.544,369,0.89,376,3.011,377,1.437,390,0.741,397,1.107,401,1.418,411,1.437,412,0.946,414,0.647,415,0.933,421,1.072,425,1.072,426,1.381,428,1.072,439,0.824,458,0.871,465,1.458,468,0.732,483,1.517,510,0.76,552,2.758,558,1.823,584,1.217,646,1.603,650,1.543,651,1.731,656,1.39,663,1.469,668,1.811,669,1.557,673,0.595,678,0.824,680,1.008,685,0.77,693,0.765,695,0.839,698,0.824,708,1.532,724,1.131,740,0.817,749,0.862,762,0.846,779,0.854,804,2.616,809,0.811,858,0.787,862,1.008,867,1.919,883,2.227,962,0.787,977,1.099,978,1.099,1072,0.89,1078,0.854,1080,1.048,1091,0.96,1142,0.99,1143,1.504,1179,2.639,1282,0.854,1349,2.023,1360,1.696,1361,2.023,1395,0.96,1402,0.88,1405,1.008,1456,2.741,1469,3.144,1565,0.99,1591,1.169,1602,0.946,1608,0.831,1632,1.131,1721,0.99,1844,1.217,1907,1.099,1922,1.217,2024,2.358,2104,0.933,2115,1.027,2126,1.099,2137,1.131,2180,1.027,2188,1.169,2190,2.419,2195,2.152,2214,1.131,2250,1.281,2340,1.169,2389,2.023,2527,2.082,2532,1.027,2538,2.24,2539,1.379,2540,1.379,2541,1.281,2542,1.379,2543,1.379,2544,1.379,2545,1.379,2546,1.217,2547,2.537,2548,2.537,2549,1.379,2550,1.379,2551,2.537,2552,1.379,2553,1.379,2554,1.169,2555,2.152,2556,1.131,2557,1.379,2558,1.379,2559,1.379,2560,1.379,2561,1.281,2562,1.379,2563,1.217,2564,1.217]],["component/266",[3,0.373,2139,1.063]],["title/267-1",[30,24.42,200,30.322]],["name/267-1",[]],["text/267-1",[]],["component/267-1",[]],["title/267-2",[403,43.795,2565,65.064]],["name/267-2",[]],["text/267-2",[]],["component/267-2",[]],["title/267-3",[30,24.42,444,38.85]],["name/267-3",[]],["text/267-3",[]],["component/267-3",[]],["title/267-4",[265,35.231,2566,59.374]],["name/267-4",[]],["text/267-4",[]],["component/267-4",[]],["title/267-5",[65,14.495,414,20.023,513,30.137,1183,32.411,2340,36.16]],["name/267-5",[]],["text/267-5",[]],["component/267-5",[]],["title/267-6",[0,16.243,1295,49.485]],["name/267-6",[]],["text/267-6",[]],["component/267-6",[]],["title/267-7",[623,36.978,2220,50.292]],["name/267-7",[]],["text/267-7",[]],["component/267-7",[]],["title/267",[477,48.479]],["name/267",[477,1.42]],["text/267",[0,1.683,2,0.166,3,0.506,4,1.154,8,0.578,10,2.22,11,1.318,17,0.851,22,1.032,23,0.44,24,1.47,27,0.339,28,0.315,29,0.383,30,1.394,31,0.714,34,0.366,37,0.653,42,0.761,47,1.855,48,0.508,55,1.673,65,0.777,68,0.69,74,0.392,79,0.341,83,0.418,85,0.698,87,0.376,88,0.43,90,1.082,92,0.35,99,0.381,105,0.367,106,0.649,113,0.588,116,1.5,119,1.098,124,1.201,125,1.268,128,0.499,130,1,131,0.37,138,0.408,142,0.306,143,0.32,146,0.508,151,0.882,155,0.381,159,0.43,164,0.381,167,0.416,169,0.461,171,0.433,172,0.362,175,0.47,176,0.294,180,0.913,186,0.404,187,0.453,190,1.019,192,0.41,193,0.318,199,0.428,200,2.129,201,1.429,202,1.114,204,1.308,207,1.441,210,0.44,213,0.73,215,1.402,216,2.137,217,0.306,229,0.941,230,0.761,248,0.933,250,0.47,262,0.435,265,1.15,267,0.503,277,1.987,281,1.491,282,0.477,287,0.484,290,1.115,292,0.831,293,0.37,304,0.34,305,0.458,306,0.305,309,0.461,313,0.391,318,0.401,319,0.929,331,0.387,342,0.761,344,1.554,351,1.911,354,0.418,356,0.631,359,0.809,361,1.761,369,0.543,372,2.859,375,0.627,384,0.941,385,0.522,390,0.453,391,0.47,397,0.367,401,0.47,403,2.174,405,0.474,411,0.906,414,2.501,426,3.297,434,1.114,436,2.671,441,1.251,444,4.168,458,1.011,461,0.503,469,0.437,473,0.55,477,2.676,480,0.527,510,1.603,513,1.615,514,0.474,538,0.512,541,1.2,552,0.402,554,1.312,581,0.527,596,0.456,622,0.876,623,0.845,646,2.525,650,1.768,652,0.55,656,2.451,663,1.323,678,0.503,682,0.532,687,0.57,693,0.888,698,0.503,702,0.464,723,0.556,740,1.355,773,0.578,804,0.43,829,0.605,832,0.43,842,0.543,843,0.556,863,0.57,871,0.453,872,0.491,913,0.64,933,0.616,934,0.655,953,1.275,1028,1.001,1079,1.149,1091,0.586,1102,0.595,1126,0.714,1132,0.627,1141,0.47,1143,3.787,1183,0.64,1194,3.303,1224,0.64,1232,1.131,1282,1.801,1283,0.586,1293,2.496,1295,0.595,1335,0.671,1360,0.563,1369,0.578,1385,1.216,1405,0.616,1423,1.357,1463,0.512,1492,1.169,1525,0.691,1527,0.655,1565,1.149,1566,0.691,1574,1.67,1599,0.691,1602,0.578,1608,3.21,1650,1.429,1662,1.216,1709,1.487,1721,1.641,1762,0.743,1794,0.743,1844,0.743,1872,0.783,1896,0.783,1947,2.87,2009,0.605,2092,2.771,2104,1.083,2115,0.627,2126,0.671,2139,1.133,2185,0.714,2190,1.995,2198,0.783,2240,1.275,2247,0.714,2248,0.595,2299,1.412,2340,0.714,2361,1.938,2389,0.671,2522,0.743,2527,2.385,2532,1.191,2555,1.357,2556,3.67,2561,0.783,2563,1.412,2565,4.569,2566,2.947,2567,1.6,2568,1.6,2569,0.842,2570,0.842,2571,0.842,2572,0.842,2573,0.783,2574,0.842,2575,0.842,2576,0.842,2577,0.743,2578,0.842,2579,0.842,2580,0.783,2581,0.842,2582,0.783,2583,0.842,2584,2.285,2585,0.783,2586,0.691,2587,0.842,2588,0.842,2589,1.169,2590,0.842,2591,1.357,2592,0.842,2593,2.285,2594,0.842,2595,0.743,2596,0.842,2597,0.783,2598,0.783]],["component/267",[3,0.373,2139,1.063]],["title/268-1",[826,62.957]],["name/268-1",[]],["text/268-1",[]],["component/268-1",[]],["title/268-2",[1405,65.105]],["name/268-2",[]],["text/268-2",[]],["component/268-2",[]],["title/268-3",[188,29.601,189,33.305]],["name/268-3",[]],["text/268-3",[]],["component/268-3",[]],["title/268",[10,13.825,27,15.202,55,10.419,113,13.861,414,17.714,1859,30.073]],["name/268",[5,1.313]],["text/268",[0,0.983,2,1.218,3,0.23,4,1.681,9,0.935,10,2.773,11,0.927,14,0.896,15,0.653,16,2.382,17,2.3,20,0.588,22,0.854,23,0.691,24,1.721,26,0.557,27,1.371,28,1.858,30,0.461,32,1.028,34,0.575,36,0.599,37,1.728,39,0.784,40,0.363,44,0.791,47,1.013,55,1.549,68,1.054,72,0.538,77,0.666,78,0.695,79,1.717,83,0.656,88,0.676,91,0.95,92,1.016,97,0.45,105,0.577,107,0.621,108,0.82,110,0.778,113,2.78,131,1.495,135,1.183,150,0.559,151,0.729,158,0.659,167,1.679,169,0.725,187,2.277,190,0.59,200,1.058,201,0.828,215,3.792,228,0.798,264,0.567,265,0.666,285,0.638,290,0.507,292,0.687,293,0.581,299,0.734,304,0.535,307,0.68,309,0.725,313,1.133,322,1.178,334,0.845,340,0.805,350,0.448,356,1.343,359,0.669,366,0.707,372,1.523,373,0.669,376,1.437,377,1.928,379,0.812,385,0.82,391,0.739,411,0.749,413,0.985,414,3.894,426,0.72,447,0.95,463,1.384,465,1.404,469,0.687,473,2.221,477,1.852,478,0.647,514,0.744,533,1.122,537,0.836,581,1.528,588,1.122,601,0.791,603,2.072,641,0.76,646,2.15,650,1.486,651,3.511,652,0.863,653,1.819,654,0.627,658,2.2,666,0.798,671,0.798,672,0.863,674,1.321,679,0.921,713,0.896,715,1.147,725,0.908,751,0.711,752,0.734,764,2.157,773,0.908,787,0.812,799,0.863,810,0.896,828,0.935,832,0.676,859,0.874,861,1.473,883,0.836,904,0.874,913,1.006,926,0.896,934,1.028,955,0.985,962,0.755,971,1.168,987,1.168,1003,0.845,1027,2.792,1028,0.828,1046,1.899,1050,0.884,1080,1.006,1081,1.122,1112,0.935,1194,1.97,1197,0.884,1221,0.744,1276,0.935,1282,1.513,1345,0.874,1347,1.947,1369,0.908,1393,1.085,1395,0.921,1404,4.359,1405,0.967,1411,0.985,1420,1.122,1436,1.122,1721,4.806,1765,1.028,1859,3.957,2009,1.755,2087,1.122,2104,0.896,2110,0.82,2139,0.656,2180,2.534,2191,1.229,2248,0.935,2365,1.122,2439,1.229,2529,1.122,2532,0.985,2537,1.055,2573,1.229,2577,1.168,2599,1.323,2600,1.323,2601,1.168,2602,1.323,2603,1.323,2604,1.323,2605,1.323,2606,1.229,2607,2.443,2608,1.323,2609,1.323,2610,2.886,2611,1.323,2612,2.443,2613,1.323,2614,1.323,2615,1.229,2616,2.443,2617,1.323,2618,1.323,2619,1.323,2620,1.323,2621,1.168,2622,1.323,2623,1.323,2624,3.403,2625,3.403,2626,1.323,2627,1.323,2628,1.323,2629,1.323,2630,1.168,2631,1.323,2632,1.323,2633,1.323,2634,1.323,2635,1.323,2636,1.323,2637,1.323,2638,1.168]],["component/268",[3,0.373,2139,1.063]],["title/269-1",[385,43.374,2220,50.292]],["name/269-1",[]],["text/269-1",[]],["component/269-1",[]],["title/269-2",[299,49.427]],["name/269-2",[]],["text/269-2",[]],["component/269-2",[]],["title/269-3",[2,13.805,2630,61.807]],["name/269-3",[]],["text/269-3",[]],["component/269-3",[]],["title/269-4",[6,36.075,30,20.116,277,23.313]],["name/269-4",[]],["text/269-4",[]],["component/269-4",[]],["title/269-5",[30,24.42,40,19.2]],["name/269-5",[]],["text/269-5",[]],["component/269-5",[]],["title/269-6",[623,36.978,2220,50.292]],["name/269-6",[]],["text/269-6",[]],["component/269-6",[]],["title/269",[135,43.136]],["name/269",[135,1.264]],["text/269",[0,0.89,2,0.548,3,0.139,4,0.605,6,2.961,10,1.576,11,1.055,14,0.542,15,1.372,17,1.911,19,0.535,24,0.405,26,0.642,28,1.435,30,1.921,32,0.622,34,0.948,36,0.69,37,1.134,40,0.913,42,0.38,47,0.904,48,0.482,55,1.945,56,0.486,58,0.656,65,0.741,72,0.619,74,0.709,79,0.884,83,1.081,85,0.349,87,0.357,90,0.379,92,0.333,97,1.745,99,1.508,103,0.743,106,0.324,107,0.715,111,0.965,113,1.886,115,1.223,116,1.856,124,0.33,125,0.349,129,0.309,130,0.75,131,0.351,135,2.292,136,1.601,142,0.291,143,0.304,151,0.441,156,0.395,157,0.695,161,0.397,164,0.987,167,1.643,168,0.896,169,0.438,175,0.447,177,0.819,190,0.972,193,0.823,197,1.253,200,1.442,201,0.5,202,0.557,203,0.804,204,0.573,210,1.452,213,0.995,215,2.354,216,3.374,217,1.867,224,0.819,229,1.282,233,1.79,249,0.678,250,0.447,262,0.413,266,0.549,267,0.478,277,0.881,281,1.814,282,0.863,287,0.46,291,0.657,292,0.415,296,0.433,298,0.447,299,0.845,307,0.411,313,0.371,317,0.463,318,0.38,319,0.325,321,0.46,331,1.279,334,0.972,356,0.316,359,0.77,361,0.781,372,3.265,376,0.896,377,0.453,381,0.511,382,0.522,388,1.541,390,0.819,397,0.349,404,0.486,411,0.863,414,1.564,418,0.395,426,0.829,436,2.563,438,0.549,441,0.438,457,1.194,462,0.91,463,0.453,464,0.491,465,0.875,474,0.463,478,0.391,480,0.5,483,0.91,486,0.608,514,0.857,552,0.382,582,0.474,583,0.656,585,0.542,587,0.542,607,0.622,629,0.542,646,1.378,650,1.691,654,1.317,656,0.438,660,0.5,661,0.496,663,0.882,666,0.482,668,0.411,674,0.433,682,0.505,698,0.91,706,2.72,708,0.948,715,0.376,720,0.557,732,0.715,734,0.549,739,0.43,753,1.045,766,0.596,772,0.622,773,0.549,787,0.491,797,0.516,800,0.549,804,0.409,822,0.516,842,0.516,847,1.594,867,0.829,871,0.43,907,0.585,910,1.031,945,1.113,947,0.706,949,2.731,958,0.565,963,0.622,1027,1.249,1046,0.622,1050,1.018,1072,0.516,1076,1.849,1079,1.094,1142,0.575,1143,1.293,1178,0.528,1206,0.585,1221,2.419,1232,1.077,1279,0.622,1285,0.622,1345,0.528,1349,0.638,1350,1.965,1351,1.249,1369,1.045,1393,0.656,1395,0.557,1401,0.678,1405,1.113,1409,0.622,1441,0.5,1446,0.557,1456,0.622,1463,0.486,1468,0.608,1473,0.596,1492,0.585,1511,2.358,1527,0.622,1565,0.575,1602,0.549,1608,2.007,1613,0.656,1650,0.5,1721,2.392,1731,0.743,1800,0.575,1810,0.638,1901,0.706,1947,1.997,2009,0.575,2028,0.656,2092,0.638,2106,0.638,2118,0.585,2139,0.397,2174,0.678,2180,0.596,2190,1.496,2217,0.706,2240,0.638,2241,0.678,2248,0.565,2253,0.706,2350,0.743,2352,0.706,2353,1.415,2365,0.678,2389,0.638,2399,0.743,2401,0.743,2527,3.146,2529,1.849,2531,2.358,2532,1.134,2536,2.026,2537,0.638,2541,0.743,2554,1.292,2555,1.292,2585,0.743,2591,2.824,2597,0.743,2598,0.743,2630,1.345,2639,0.8,2640,0.8,2641,0.8,2642,0.8,2643,0.8,2644,3.386,2645,0.8,2646,1.523,2647,0.743,2648,0.8,2649,1.523,2650,1.415,2651,1.523,2652,1.523,2653,1.523,2654,1.523,2655,1.523,2656,1.523,2657,1.523,2658,1.523,2659,1.523,2660,1.523,2661,1.523,2662,0.8,2663,0.8,2664,0.8,2665,1.523,2666,1.523,2667,0.8,2668,0.8,2669,0.743,2670,0.8,2671,0.8,2672,0.8,2673,0.8,2674,0.8,2675,0.8,2676,0.8]],["component/269",[3,0.373,2139,1.063]],["title/270-1",[0,16.243,1080,53.218]],["name/270-1",[]],["text/270-1",[]],["component/270-1",[]],["title/270-2",[172,30.11,541,36.768]],["name/270-2",[]],["text/270-2",[]],["component/270-2",[]],["title/270-3",[34,30.429,130,24.078]],["name/270-3",[]],["text/270-3",[]],["component/270-3",[]],["title/270-4",[10,25.659,708,30.429]],["name/270-4",[]],["text/270-4",[]],["component/270-4",[]],["title/270-5",[444,32.002,1060,44.835,1194,33.392]],["name/270-5",[]],["text/270-5",[]],["component/270-5",[]],["title/270",[10,25.659,1080,53.218]],["name/270",[10,0.535,1080,1.11]],["text/270",[0,1.895,2,0.546,3,0.264,4,0.603,10,3.743,11,0.576,15,1.887,16,0.854,17,1.032,20,0.674,22,1.788,23,0.793,26,0.64,34,1.662,36,0.687,37,1.131,40,0.416,43,0.596,47,1.585,55,1.703,62,1.336,65,0.942,74,0.707,78,0.797,83,1.896,85,0.662,90,0.719,92,0.631,97,0.516,106,0.615,111,0.672,117,0.872,124,1.145,125,0.662,130,1.623,131,1.68,142,0.552,151,0.837,155,1.731,159,1.416,164,0.687,167,2.329,172,1.192,177,1.49,180,0.866,188,0.642,193,0.573,200,0.657,203,0.802,204,1.043,205,0.788,207,1.585,213,0.693,217,1.998,224,0.816,228,0.915,274,0.923,277,0.614,292,0.788,304,0.614,309,0.831,318,0.722,319,0.617,322,0.732,331,1.275,333,0.821,334,0.969,349,0.98,350,0.514,351,1.184,359,0.768,361,0.993,362,1.09,366,0.811,372,1.712,373,0.768,397,1.668,411,0.86,414,2.58,426,0.826,434,1.057,444,2.122,458,1.751,477,2.569,478,0.742,513,1.073,515,0.719,537,1.751,541,2.008,552,1.324,601,1.657,646,1.751,650,1.686,651,0.745,652,0.991,655,1.002,663,2.214,672,0.991,674,1.499,677,1.015,678,1.657,687,1.028,690,1.671,703,0.9,708,1.205,713,1.028,714,0.76,733,1.13,734,1.042,743,0.94,753,1.042,770,1.057,773,1.902,779,1.717,828,1.073,832,2.412,882,1.109,918,1.929,926,1.028,932,0.797,933,1.109,934,1.18,1080,6.208,1097,1.245,1099,1.109,1132,2.064,1141,0.848,1143,0.9,1194,3.57,1283,1.929,1315,1.21,1349,2.209,1350,1.959,1385,1.154,1395,1.929,1404,1.18,1411,1.13,1447,1.21,1472,1.245,1574,1.109,1602,2.624,1608,2.306,1650,1.734,1765,2.155,1795,1.287,1947,2.747,2104,1.028,2139,0.753,2170,1.18,2190,1.902,2240,1.21,2315,2.209,2556,4.506,2564,1.34,2566,1.287,2595,1.34,2601,1.34,2621,2.447,2677,1.411,2678,1.411,2679,1.411,2680,1.21,2681,1.411,2682,1.411,2683,1.411,2684,4.659,2685,1.411,2686,1.411,2687,1.411,2688,2.576,2689,1.411,2690,2.447,2691,1.411,2692,1.411,2693,1.34,2694,1.411,2695,1.411,2696,1.411,2697,1.411,2698,1.411]],["component/270",[3,0.373,2139,1.063]],["title/271-1",[623,36.978,2220,50.292]],["name/271-1",[]],["text/271-1",[]],["component/271-1",[]],["title/271-2",[397,38.852]],["name/271-2",[]],["text/271-2",[]],["component/271-2",[]],["title/271",[2699,89.07]],["name/271",[1599,2.14]],["text/271",[3,0.778,4,2.771,10,3.147,22,4.504,26,1.883,27,2.813,30,2.434,40,1.226,55,2.371,62,2.155,74,2.081,88,2.284,105,1.95,113,3.155,115,1.426,135,4.158,142,1.626,159,2.284,169,2.448,180,2.55,188,1.89,193,1.686,206,2.032,215,4.283,293,1.964,313,2.073,319,1.818,359,2.261,364,3.267,397,1.95,401,2.497,414,2.099,477,2.433,514,2.514,537,2.824,646,4.409,649,2.588,651,2.195,652,2.917,663,2.588,674,3.775,706,2.569,735,2.743,779,4.324,931,3.667,949,5.725,954,3.667,955,3.329,995,3.667,1005,3.159,1078,2.769,1194,2.588,1236,3.267,1282,2.769,1390,3.475,1444,3.791,1567,3.791,1859,3.563,2214,3.667,2532,3.329,2591,3.791,2700,4.154]],["component/271",[3,0.373,2139,1.063]],["title/272-1",[30,24.42,200,30.322]],["name/272-1",[]],["text/272-1",[]],["component/272-1",[]],["title/272-2",[130,30.633]],["name/272-2",[]],["text/272-2",[]],["component/272-2",[]],["title/272-3",[200,30.322,217,25.463]],["name/272-3",[]],["text/272-3",[]],["component/272-3",[]],["title/272-4",[623,36.978,2220,50.292]],["name/272-4",[]],["text/272-4",[]],["component/272-4",[]],["title/272",[2532,66.337]],["name/272",[2532,1.943]],["text/272",[0,0.593,2,0.274,10,2.339,11,2.421,15,0.685,17,1.916,20,0.617,22,1.649,24,1.794,30,3.177,37,1.042,39,2.103,42,0.661,43,0.545,46,0.606,47,1.471,48,0.837,55,1.762,65,1.497,67,0.792,68,0.599,74,0.647,77,0.699,83,0.689,85,0.606,88,0.71,89,0.804,92,0.578,96,1.291,97,1.206,99,0.629,104,1.178,107,1.666,113,0.51,116,1.103,124,1.056,125,0.606,129,0.537,130,1.995,131,0.61,135,0.673,152,0.721,156,1.261,164,1.606,167,0.685,168,0.817,171,0.714,172,1.099,176,0.484,178,1.185,180,0.792,198,0.761,200,1.907,201,3.22,204,1.335,207,0.576,212,1.583,213,3.359,215,4.233,224,0.747,227,0.776,248,0.81,252,1.54,265,1.286,277,1.78,280,1.034,281,0.906,282,1.447,291,1.103,293,0.61,306,1.284,309,0.761,319,0.565,322,1.232,331,0.639,342,0.661,356,0.548,359,0.703,361,1.577,365,0.998,372,0.622,373,0.703,375,1.034,376,1.503,385,0.861,391,0.776,397,0.606,411,1.447,414,2.724,418,0.685,426,1.391,444,1.969,462,0.83,465,0.798,472,0.953,512,1.139,530,1.034,552,1.695,556,1.178,557,1.178,623,1.874,646,0.878,650,2.158,654,0.658,674,0.751,678,0.83,682,0.878,698,0.83,701,2.198,715,0.652,779,0.861,804,1.813,807,0.94,809,0.817,819,1.034,863,0.94,866,0.982,872,0.81,904,1.687,918,0.967,1005,0.982,1027,1.139,1046,1.08,1048,1.139,1050,0.928,1076,1.178,1079,0.998,1084,0.928,1092,0.998,1102,0.982,1134,1.178,1143,1.515,1197,1.708,1316,1.08,1345,0.917,1347,1.107,1350,1.806,1395,0.967,1405,2.593,1524,1.178,1527,1.08,1608,0.837,1721,0.998,1859,2.037,1899,1.291,1928,0.953,1947,0.998,1974,1.08,2009,0.998,2089,1.226,2104,0.94,2106,1.107,2118,1.867,2190,0.953,2239,1.291,2241,1.178,2248,1.806,2315,2.828,2365,1.178,2389,6.201,2400,1.226,2527,2.096,2529,1.178,2530,1.139,2531,1.178,2532,3.279,2537,1.107,2538,2.256,2554,4.365,2555,1.178,2556,1.139,2563,1.226,2577,1.226,2591,3.009,2610,1.178,2615,1.291,2644,3.132,2647,1.291,2700,1.291,2701,1.389,2702,1.389,2703,1.226,2704,1.226,2705,1.389,2706,1.389,2707,1.389,2708,2.555,2709,1.389,2710,1.389,2711,1.389,2712,1.389,2713,1.389,2714,1.389,2715,1.389,2716,1.107,2717,1.291,2718,1.291,2719,2.374,2720,1.389]],["component/272",[3,0.373,2139,1.063]],["title/273-1",[10,25.659,155,31.699]],["name/273-1",[]],["text/273-1",[]],["component/273-1",[]],["title/273-2",[172,30.11,541,36.768]],["name/273-2",[]],["text/273-2",[]],["component/273-2",[]],["title/273-3",[34,30.429,130,24.078]],["name/273-3",[]],["text/273-3",[]],["component/273-3",[]],["title/273-4",[10,25.659,708,30.429]],["name/273-4",[]],["text/273-4",[]],["component/273-4",[]],["title/273-5",[444,32.002,1060,44.835,1194,33.392]],["name/273-5",[]],["text/273-5",[]],["component/273-5",[]],["title/273-6",[687,47.402,2690,61.807]],["name/273-6",[]],["text/273-6",[]],["component/273-6",[]],["title/273-7",[449,50.292,1194,40.538]],["name/273-7",[]],["text/273-7",[]],["component/273-7",[]],["title/273-8",[342,42.372]],["name/273-8",[]],["text/273-8",[]],["component/273-8",[]],["title/273",[47,29.022,761,39.942]],["name/273",[47,0.605,761,0.833]],["text/273",[0,1.546,2,0.178,4,0.358,10,3.318,11,0.647,15,1.198,16,0.507,17,0.635,20,0.4,22,1.1,23,0.47,26,0.38,29,0.409,30,0.847,34,1.055,36,0.408,37,0.696,40,0.247,43,0.353,47,0.707,55,1.3,62,1.17,65,2.732,74,0.42,78,0.473,83,1.204,85,0.393,90,0.427,92,0.375,97,0.58,106,0.365,111,0.399,117,0.518,124,0.705,125,1.059,130,1.059,131,2.068,142,0.328,151,0.497,155,1.099,159,0.871,164,0.408,167,1.52,172,0.733,177,0.917,180,0.514,188,0.381,200,0.39,203,0.476,204,0.913,205,0.468,207,1.006,213,0.411,215,0.553,217,1.336,224,0.484,228,0.543,252,1.464,274,0.548,277,0.364,282,0.51,290,0.654,293,0.396,304,0.689,305,0.49,309,0.493,317,0.987,318,0.429,319,0.366,322,0.434,331,0.784,333,0.487,334,0.575,344,0.481,349,0.581,350,0.577,351,0.728,354,0.447,359,0.456,361,0.87,362,0.647,366,0.481,372,1.087,373,0.456,376,1.428,397,1.059,411,0.51,414,3.981,426,0.928,434,3.277,444,2.338,449,1.225,458,1.077,477,1.999,478,0.44,483,1.019,513,1.716,515,0.427,537,1.077,541,1.275,542,0.671,552,2.466,577,0.627,601,1.019,646,1.534,650,3.63,651,0.442,652,0.588,655,1.603,663,2.126,672,0.588,674,0.922,677,0.602,678,1.019,687,1.154,690,1.028,701,1.504,703,0.534,708,0.741,713,0.61,714,0.451,716,0.484,734,0.618,740,1.011,743,2.916,753,0.618,770,0.627,773,1.17,828,0.637,832,2.153,862,0.658,871,0.484,882,0.658,900,1.296,906,0.618,914,0.739,918,1.187,926,0.61,932,0.473,933,0.658,934,1.887,1080,4.536,1093,1.326,1097,0.739,1099,1.246,1132,3.137,1141,0.503,1143,3.751,1194,2.725,1224,2.341,1283,1.187,1295,0.637,1315,0.718,1349,1.359,1350,1.205,1369,0.618,1395,1.187,1404,0.7,1411,0.671,1447,0.718,1463,0.548,1472,0.739,1562,0.718,1567,0.764,1574,0.658,1602,1.666,1608,1.464,1650,1.067,1765,1.887,1795,2.059,1893,0.795,1947,1.744,2009,0.647,2104,0.61,2139,0.447,2170,0.7,2188,0.764,2190,1.17,2195,0.764,2240,0.718,2248,0.637,2266,0.837,2315,3.753,2389,4.449,2400,0.795,2530,1.399,2531,0.764,2554,0.764,2556,6.954,2564,0.795,2566,0.764,2595,1.505,2610,0.764,2621,2.719,2644,0.795,2650,1.585,2677,0.837,2678,0.837,2679,0.837,2680,0.718,2681,0.837,2682,0.837,2683,0.837,2684,3.115,2685,1.585,2686,1.585,2687,2.256,2688,3.915,2689,1.585,2690,2.719,2691,2.256,2692,0.837,2693,0.795,2694,0.837,2695,0.837,2696,0.837,2697,0.837,2698,0.837,2716,0.718,2717,0.837,2718,0.837,2719,0.837,2721,0.901,2722,0.901,2723,1.705,2724,1.705,2725,1.705,2726,0.901,2727,0.901,2728,2.428,2729,0.901,2730,0.901,2731,0.901,2732,1.705,2733,1.705,2734,0.901,2735,0.901,2736,4.707,2737,0.901,2738,0.901,2739,0.901,2740,0.901,2741,0.901,2742,0.901,2743,0.901,2744,0.901]],["component/273",[3,0.373,2139,1.063]],["title/274-1",[463,39.657,1079,50.292]],["name/274-1",[]],["text/274-1",[]],["component/274-1",[]],["title/274-2",[30,24.42,861,42.211]],["name/274-2",[]],["text/274-2",[]],["component/274-2",[]],["title/274-3",[30,20.116,141,20.974,259,26.422]],["name/274-3",[]],["text/274-3",[]],["component/274-3",[]],["title/274-4",[48,34.77,356,22.76,976,47.308]],["name/274-4",[]],["text/274-4",[]],["component/274-4",[]],["title/274",[405,32.439,712,28.321,861,34.77]],["name/274",[405,0.821,861,0.88]],["text/274",[11,0.867,13,0.99,17,1.488,22,3.436,24,2.021,26,0.963,30,1.857,31,1.938,34,0.993,37,0.932,55,1.471,65,0.777,74,1.064,83,1.133,85,0.997,89,1.323,92,0.95,106,0.926,111,1.011,124,1.651,125,0.997,138,1.106,141,4.141,158,1.991,159,1.168,164,1.034,167,1.127,175,1.276,180,1.303,190,1.019,204,0.86,216,2.314,248,1.333,255,2.525,259,5.31,264,2.282,277,2.153,291,2.757,292,1.187,296,3.455,326,1.366,331,1.051,334,3.4,344,1.221,354,1.981,356,0.902,361,0.819,376,1.344,379,1.402,397,0.997,405,1.285,411,1.294,414,1.073,426,1.244,463,3.016,473,3.475,518,1.344,542,1.702,582,2.369,623,1.207,651,1.122,656,2.189,661,1.415,663,1.323,694,1.707,701,1.415,712,3.919,772,1.776,796,1.568,797,1.474,851,1.459,861,4.811,864,1.702,883,1.444,918,1.591,985,1.702,1050,1.527,1074,2.123,1079,1.641,1084,1.527,1143,1.355,1350,2.824,1375,1.821,1399,1.776,1463,2.43,1469,1.641,1527,1.776,1566,1.874,1608,3.851,1650,2.5,1947,3.825,2090,1.874,2092,1.821,2118,5.304,2174,1.938,2190,1.568,2240,4.245,2538,4.701,2589,1.67,2745,2.285,2746,2.285,2747,2.017,2748,2.285,2749,1.874,2750,2.017,2751,2.285,2752,2.285,2753,2.017,2754,2.285,2755,2.285]],["component/274",[3,0.373,2139,1.063]],["title/275-1",[30,20.116,40,15.816,277,23.313]],["name/275-1",[]],["text/275-1",[]],["component/275-1",[]],["title/275-2",[0,11.375,30,17.101,100,15.479,712,24.077]],["name/275-2",[]],["text/275-2",[]],["component/275-2",[]],["title/275-3",[318,33.305,1003,44.696]],["name/275-3",[]],["text/275-3",[]],["component/275-3",[]],["title/275",[2,9.667,3,8.531,4,19.464,405,27.578]],["name/275",[2,0.288,3,0.254]],["text/275",[0,1.893,2,0.41,3,0.861,4,0.826,11,1.876,13,0.901,15,1.026,17,1.369,26,0.876,28,0.778,30,3.031,37,0.849,40,2.719,43,2.345,48,1.254,55,1.016,65,3.579,74,0.969,100,1.161,105,0.907,106,0.843,116,2.135,125,1.605,126,1.178,127,1.187,141,1.338,150,0.879,155,2.239,164,0.942,176,0.725,177,1.118,190,0.927,191,2.418,207,1.525,216,4.153,254,2.659,259,1.685,264,0.891,267,2.199,270,1.342,277,1.487,296,1.125,344,1.111,351,1.571,353,1.357,361,0.745,372,1.647,373,1.052,385,2.279,397,1.605,403,1.301,404,1.265,407,1.223,418,1.815,468,1.105,470,1.301,478,2.418,534,1.178,552,2.855,559,1.836,623,1.098,712,5.297,762,1.276,763,1.581,765,1.494,804,3.054,844,1.549,852,3.125,860,3.277,861,2.218,863,2.491,864,1.549,867,2.002,868,1.581,869,1.213,870,1.448,871,3.213,879,1.233,883,1.314,887,1.549,888,1.581,889,2.74,890,2.796,891,1.581,892,1.581,893,1.581,894,1.549,895,1.581,896,1.581,897,1.581,898,1.581,901,1.581,906,1.427,1017,1.836,1143,2.181,1215,3.76,1721,1.494,1907,1.658,1983,1.764,2127,1.933,2488,1.933,2747,1.836,2756,2.08,2757,2.08,2758,3.248,2759,2.08,2760,1.933,2761,3.419,2762,2.08]],["component/275",[3,0.373,2139,1.063]],["title/276-1",[308,29.788,324,34.77,325,36.075]],["name/276-1",[]],["text/276-1",[]],["component/276-1",[]],["title/276-2",[0,13.38,217,20.974,541,30.287]],["name/276-2",[]],["text/276-2",[]],["component/276-2",[]],["title/276-3",[594,43.374,1789,36.562]],["name/276-3",[]],["text/276-3",[]],["component/276-3",[]],["title/276-4",[318,33.305,1003,44.696]],["name/276-4",[]],["text/276-4",[]],["component/276-4",[]],["title/276-5",[1608,42.211,1650,43.795]],["name/276-5",[]],["text/276-5",[]],["component/276-5",[]],["title/276",[0,16.243,838,34.545]],["name/276",[838,1.287]],["text/276",[0,1.015,2,0.272,3,0.442,17,1.312,24,1.283,26,0.581,30,0.481,34,1.532,37,0.563,40,1.2,46,0.601,55,0.701,57,1.823,62,0.665,65,2.633,73,1.803,79,0.559,83,0.684,97,2.159,105,1.538,108,1.572,110,3.734,124,0.57,130,0.474,136,3.153,146,0.831,157,2.336,164,0.624,174,1.408,175,1.418,176,0.481,177,1.364,204,1.326,216,0.599,217,1.282,259,1.615,265,0.694,277,0.557,282,0.781,292,0.716,293,0.606,307,1.304,308,0.712,310,1.831,315,1.008,318,0.656,319,0.561,324,2.125,325,1.587,337,0.91,350,0.467,351,0.589,356,0.544,360,0.668,381,0.88,382,0.9,384,0.811,397,0.601,411,0.781,414,1.192,419,1.084,426,0.75,439,0.824,463,0.781,464,0.846,473,0.9,506,7.616,514,1.427,552,2.446,578,1.969,594,1.572,601,0.824,621,1.048,623,1.34,627,1.099,663,1.469,665,1.027,674,0.746,696,2.194,697,0.99,708,2.225,712,0.677,752,0.765,762,1.557,791,0.974,804,1.802,810,0.933,823,1.969,838,1.739,850,0.96,860,1.218,863,0.933,871,1.364,873,0.846,884,2.356,887,1.027,889,1.027,906,1.741,920,2.804,973,3.199,1028,0.862,1103,0.933,1111,0.91,1178,0.91,1181,1.027,1265,1.008,1459,1.008,1460,1.008,1608,1.53,1624,1.557,1631,0.96,1650,1.587,1662,1.048,1677,1.281,1786,1.718,1789,2.673,1793,1.217,1800,0.99,1801,0.862,1809,3.144,1880,1.217,1928,0.946,1935,1.131,1936,1.217,1937,1.217,1940,1.008,1944,0.974,1951,1.072,1952,1.072,2099,1.281,2114,2.358,2115,2.625,2190,0.946,2407,6.215,2508,1.281,2537,1.099,2610,1.169,2693,1.217,2703,1.217,2763,1.217,2764,2.537,2765,1.379,2766,2.537,2767,1.379,2768,2.537,2769,2.537,2770,1.379,2771,1.379,2772,1.379,2773,1.379,2774,1.281,2775,1.379,2776,1.379,2777,1.379,2778,1.379,2779,1.379,2780,1.379,2781,1.379,2782,1.379,2783,1.379,2784,1.379,2785,1.379,2786,1.379,2787,1.379,2788,1.379,2789,1.379,2790,1.379,2791,1.379,2792,1.379,2793,1.379,2794,1.379,2795,1.379,2796,1.379,2797,1.379,2798,1.379,2799,1.131,2800,1.379,2801,1.379,2802,1.379,2803,1.379,2804,1.379,2805,1.379,2806,1.379,2807,1.379,2808,1.379,2809,4.377,2810,4.377,2811,2.537,2812,2.537,2813,1.379,2814,1.379,2815,1.379,2816,1.379,2817,2.537]],["component/276",[3,0.373,2139,1.063]],["title/277-1",[188,29.601,189,33.305]],["name/277-1",[]],["text/277-1",[]],["component/277-1",[]],["title/277-2",[0,8.752,35,20.158,65,12.824,150,15.949,823,21.073,2818,33.302]],["name/277-2",[]],["text/277-2",[]],["component/277-2",[]],["title/277-3",[13,24.977,73,23.754,935,48.908]],["name/277-3",[]],["text/277-3",[]],["component/277-3",[]],["title/277-4",[2,8.407,3,7.419,230,20.283,291,18.402,2525,32.411]],["name/277-4",[]],["text/277-4",[]],["component/277-4",[]],["title/277",[705,33.649,779,52.447]],["name/277",[5,1.313]],["text/277",[0,2.03,2,1.408,3,1.349,4,0.755,10,1.688,13,3.094,15,0.938,17,2.886,21,1.288,23,1.774,28,1.723,29,0.865,35,2.461,36,0.861,55,1.973,62,0.917,68,1.466,73,3.604,74,0.886,77,0.957,79,0.771,89,1.101,90,0.901,92,0.791,95,2.641,97,1.155,109,2.687,124,2.314,130,0.654,131,0.836,134,1.861,136,0.708,146,1.147,150,1.947,156,0.938,157,1.551,167,0.938,168,1.119,176,1.185,188,0.804,189,0.905,200,1.472,204,0.716,205,0.988,206,1.544,230,2.191,285,0.917,291,0.821,292,0.988,304,0.769,305,1.035,307,1.746,309,1.042,318,0.905,319,0.774,322,0.917,323,1.271,324,1.147,350,0.644,354,0.943,373,0.962,403,1.19,405,1.07,414,0.893,435,3.206,465,1.953,486,1.446,490,1.967,586,1.56,660,2.125,669,1.167,674,1.029,697,1.366,703,2.014,708,0.827,712,3.159,720,1.324,721,1.416,735,1.167,751,1.023,773,1.305,787,1.167,823,5.824,832,0.972,838,0.938,851,1.214,861,1.147,863,2.301,920,2.522,935,2.882,942,1.324,1050,1.271,1087,1.768,1091,1.324,1473,2.531,1525,3.778,1631,1.324,1801,1.19,1802,1.479,1803,1.39,1806,1.178,1809,1.366,1838,2.332,1855,1.768,1935,1.56,1936,1.679,1937,1.679,1958,3.158,2139,2.283,2170,1.479,2219,1.39,2243,1.56,2249,3.905,2335,1.679,2525,2.583,2580,1.768,2758,1.679,2818,4.944,2819,1.902,2820,1.902,2821,3,2822,1.902,2823,4.605,2824,1.902,2825,1.902,2826,1.902,2827,1.902,2828,1.902,2829,1.902,2830,1.902,2831,1.902,2832,1.902,2833,1.902,2834,1.902]],["component/277",[3,0.373,2139,1.063]],["title/278-1",[30,20.116,176,20.116,177,31.004]],["name/278-1",[]],["text/278-1",[]],["component/278-1",[]],["title/278-2",[20,39.569]],["name/278-2",[]],["text/278-2",[]],["component/278-2",[]],["title/278-3",[48,34.77,356,22.76,976,47.308]],["name/278-3",[]],["text/278-3",[]],["component/278-3",[]],["title/278",[155,31.699,259,32.076]],["name/278",[259,1.195]],["text/278",[0,2.086,17,1.222,24,1.66,40,2.659,43,1.288,44,1.962,55,2.24,65,3.789,127,1.873,141,1.194,155,3.672,204,2.623,259,4.12,286,1.714,350,1.111,352,2.034,354,1.628,356,2.148,372,3.12,405,1.846,406,6.04,450,2.358,552,3.875,581,2.053,797,2.118,804,2.781,823,3.04,832,1.678,871,2.926,884,6.48,907,2.399,1067,3.051,1079,2.358,1215,5.299,1283,2.285,1316,2.552,1399,2.552,1452,6.573,1799,2.495,2118,2.399,2758,4.805,2760,7.538,2761,9.985,2835,8.11,2836,8.11,2837,8.11,2838,6.971,2839,3.283,2840,3.283,2841,3.283]],["component/278",[3,0.373,2139,1.063]],["title/279-1",[106,28.389,385,43.374]],["name/279-1",[]],["text/279-1",[]],["component/279-1",[]],["title/279-2",[2,11.372,36,26.111,351,24.632]],["name/279-2",[]],["text/279-2",[]],["component/279-2",[]],["title/279-3",[0,16.243,351,29.903]],["name/279-3",[]],["text/279-3",[]],["component/279-3",[]],["title/279-4",[106,28.389,342,33.305]],["name/279-4",[]],["text/279-4",[]],["component/279-4",[]],["title/279-5",[47,29.022,1091,48.74]],["name/279-5",[]],["text/279-5",[]],["component/279-5",[]],["title/279",[106,28.389,351,29.903]],["name/279",[106,0.592,351,0.624]],["text/279",[0,1.926,2,0.953,10,1.315,11,0.767,13,0.467,15,0.997,16,0.607,17,2.633,20,0.898,23,0.564,26,0.455,30,0.376,32,0.839,36,1.922,37,1.163,40,0.296,45,0.731,47,1.182,48,1.219,55,0.991,56,0.656,65,4.051,72,0.439,73,0.444,74,0.941,75,0.741,79,0.438,80,0.713,83,0.535,85,1.243,90,0.511,97,0.367,101,0.645,106,1.961,108,0.669,110,0.635,113,0.397,136,1.061,137,0.57,155,0.489,159,0.551,164,0.489,167,0.997,168,1.189,176,0.994,190,0.481,204,0.761,217,0.735,219,0.839,221,0.56,224,1.087,227,1.129,248,0.63,263,0.675,265,1.435,291,0.466,294,1.407,309,1.107,310,1.05,318,0.961,319,0.439,321,0.62,331,0.496,348,0.63,350,0.365,351,2.862,359,0.546,366,0.577,373,0.546,384,2.109,390,1.087,394,0.763,397,0.471,414,0.507,426,1.552,437,0.669,467,1.651,468,3.758,469,0.56,510,1.114,515,0.511,537,0.682,538,0.656,541,1.497,552,3.38,578,0.603,594,0.669,606,0.64,623,1.068,654,0.957,663,1.651,666,0.651,671,0.651,692,0.538,696,2.509,698,0.645,703,0.64,705,1.179,708,2.912,716,0.58,731,0.741,732,0.507,742,0.4,752,0.599,759,0.804,761,0.616,773,1.956,779,2.222,784,0.804,791,0.763,804,2.169,809,0.635,823,2.004,828,0.763,838,0.532,841,0.731,860,0.97,904,0.713,906,0.741,937,0.86,962,0.616,970,1.452,976,0.885,995,0.885,999,2.338,1000,2.216,1007,0.839,1025,0.915,1028,1.264,1046,0.839,1091,0.751,1093,0.839,1099,0.789,1120,0.839,1239,2.222,1287,0.775,1395,0.751,1422,0.804,1431,2.341,1597,1.429,1602,1.387,1606,4.425,1608,3.237,1614,0.885,1632,0.885,1637,0.915,1639,1.003,1640,1.003,1647,0.915,1650,1.783,1729,0.915,1741,3.333,1748,1.003,1749,1.784,1789,1.055,1878,0.839,1897,0.953,1908,1.003,1910,0.885,1951,1.571,1952,2.216,1967,1.003,2023,3.333,2101,0.953,2104,0.731,2115,0.804,2234,1.003,2267,0.953,2315,1.611,2463,1.878,2638,0.953,2753,0.953,2763,0.953,2842,1.079,2843,1.079,2844,1.079,2845,1.079,2846,1.079,2847,1.079,2848,1.079,2849,1.079,2850,1.079,2851,1.079,2852,1.079,2853,1.079,2854,1.079,2855,5.854,2856,1.079,2857,1.079,2858,1.079,2859,1.079,2860,1.079,2861,1.079,2862,1.079,2863,1.079,2864,1.079,2865,1.079,2866,1.079,2867,1.079,2868,1.079,2869,1.079,2870,1.079,2871,1.079,2872,1.079,2873,1.079,2874,1.079,2875,1.079,2876,1.079,2877,1.079,2878,2.021,2879,1.079,2880,1.079,2881,1.079,2882,1.079,2883,1.079,2884,2.021,2885,1.079,2886,1.079,2887,1.079,2888,1.079,2889,1.079,2890,1.079,2891,1.079,2892,1.079,2893,1.003,2894,1.003,2895,1.003,2896,1.003,2897,1.079,2898,0.915,2899,1.003,2900,1.003]],["component/279",[3,0.373,2139,1.063]],["title/280-1",[2,7.438,3,6.564,4,14.976,30,13.158,141,13.719,668,19.38]],["name/280-1",[]],["text/280-1",[]],["component/280-1",[]],["title/280-2",[30,17.101,141,17.831,277,19.819,668,25.188]],["name/280-2",[]],["text/280-2",[]],["component/280-2",[]],["title/280-3",[141,20.974,643,31.792,668,29.629]],["name/280-3",[]],["text/280-3",[]],["component/280-3",[]],["title/280-4",[141,20.974,668,29.629,694,24.632]],["name/280-4",[]],["text/280-4",[]],["component/280-4",[]],["title/280-5",[480,43.795,596,37.869]],["name/280-5",[]],["text/280-5",[]],["component/280-5",[]],["title/280-6",[40,19.2,263,43.795]],["name/280-6",[]],["text/280-6",[]],["component/280-6",[]],["title/280-7",[342,33.305,405,39.381]],["name/280-7",[]],["text/280-7",[]],["component/280-7",[]],["title/280-8",[319,28.477,342,33.305]],["name/280-8",[]],["text/280-8",[]],["component/280-8",[]],["title/280-9",[1221,39.381,1256,48.048]],["name/280-9",[]],["text/280-9",[]],["component/280-9",[]],["title/280-10",[74,41.479]],["name/280-10",[]],["text/280-10",[]],["component/280-10",[]],["title/280",[40,19.2,2821,61.807]],["name/280",[40,0.4,2901,1.357]],["text/280",[0,0.9,2,0.68,3,0.746,4,1.852,11,0.509,13,0.582,17,1.737,23,0.366,25,0.651,26,1.256,28,1.115,29,0.319,30,0.468,34,1.295,40,1.711,46,0.306,47,0.291,54,0.397,55,2.052,62,0.338,65,3.182,67,0.4,68,0.58,72,0.285,73,0.289,79,0.284,81,0.469,83,0.958,85,0.306,86,0.426,90,1.173,97,0.842,99,0.875,100,1.225,105,0.843,106,0.784,107,0.329,110,1.137,111,0.31,113,0.71,115,0.617,116,0.834,119,0.481,130,1.185,131,0.59,134,0.384,136,1.596,138,0.339,141,2.061,142,2.061,143,0.735,151,0.386,152,0.697,156,0.346,157,0.613,158,1.234,162,0.731,164,0.608,167,0.346,174,1.374,175,1.384,176,1.202,177,0.722,178,1.149,180,0.4,184,0.329,190,0.313,192,0.341,193,0.264,196,0.311,198,1.888,199,0.356,204,1.121,206,0.61,210,0.701,216,0.84,217,0.255,224,0.722,227,1.384,228,0.423,229,0.412,254,1.331,264,0.828,267,1.155,277,0.543,278,0.475,279,0.463,286,0.366,290,0.269,291,1.069,292,0.364,293,0.308,299,0.745,300,0.488,304,0.543,306,0.486,311,0.736,312,0.481,313,0.325,317,0.406,318,0.333,324,0.423,325,0.84,331,0.889,334,0.857,342,0.333,344,1.033,350,1.166,351,0.826,354,0.348,366,0.375,368,0.731,372,0.601,376,0.412,377,0.397,381,0.448,385,0.832,390,0.377,397,0.843,411,1.095,412,0.922,414,0.631,426,0.382,437,1.197,445,1.346,446,0.968,448,0.504,457,0.736,461,0.419,463,0.397,464,0.824,465,0.403,469,1.004,473,0.457,480,0.84,490,0.778,496,0.495,513,0.495,515,0.332,528,0.575,531,0.379,534,0.397,541,0.368,545,0.475,552,1.854,558,1.779,581,0.439,596,1.612,600,0.504,601,0.419,621,0.533,622,0.384,623,0.37,629,0.909,643,0.386,654,0.636,656,0.736,667,1.779,668,4.376,678,0.419,694,0.826,696,1.837,698,0.419,706,0.772,708,1.498,712,0.344,715,0.329,716,0.377,726,0.705,730,0.876,732,0.329,737,0.412,742,0.497,749,0.439,751,0.377,752,0.389,772,0.545,773,0.922,784,0.522,786,0.575,788,0.443,793,0.452,797,0.867,803,0.481,804,1.761,808,0.512,823,0.392,829,0.504,860,0.336,871,1.331,920,0.736,1000,0.545,1003,1.234,1028,0.439,1035,0.595,1050,1.292,1056,0.278,1060,0.545,1061,0.522,1062,0.575,1064,0.512,1079,0.965,1091,0.935,1099,0.512,1103,0.475,1108,0.495,1132,0.522,1142,1.388,1178,1.635,1205,0.545,1221,1.087,1232,0.495,1264,0.595,1282,0.832,1292,0.533,1293,1.388,1350,0.495,1369,0.922,1375,0.559,1395,0.488,1399,0.545,1409,0.545,1441,0.439,1461,0.522,1463,0.426,1473,0.522,1562,1.071,1565,0.504,1590,2.186,1591,1.639,1602,0.481,1606,1.276,1608,1.165,1650,1.549,1662,0.533,1668,0.651,1730,0.595,1734,3.203,1742,1.248,1747,0.619,1907,1.071,1916,0.559,1939,0.533,1940,1.413,1944,2.106,1950,0.545,1951,1.044,1952,1.925,1953,0.595,2028,0.575,2067,0.619,2092,0.559,2118,0.982,2137,1.102,2139,0.666,2180,0.522,2190,0.481,2194,0.619,2200,0.595,2201,0.619,2247,2.923,2248,0.495,2279,1.139,2295,0.651,2296,0.651,2299,0.619,2341,0.595,2361,0.595,2522,0.619,2530,0.575,2546,0.619,2684,0.595,2704,0.619,2750,0.619,2821,1.706,2898,0.595,2901,0.651,2902,0.651,2903,0.651,2904,1.248,2905,0.651,2906,2.302,2907,0.651,2908,0.651,2909,0.982,2910,1.248,2911,0.651,2912,0.651,2913,0.651,2914,0.651,2915,0.651,2916,0.701,2917,0.701,2918,0.701,2919,0.701,2920,0.701,2921,0.701,2922,1.343,2923,0.701,2924,0.651,2925,0.481,2926,0.701,2927,0.701,2928,1.343,2929,0.701,2930,0.651,2931,0.651,2932,0.651,2933,0.651,2934,0.701,2935,4.286,2936,0.701,2937,1.343,2938,0.701,2939,0.701,2940,0.701,2941,0.701,2942,0.701,2943,0.701,2944,0.701,2945,0.701,2946,0.701,2947,0.701,2948,0.701,2949,0.701,2950,0.701,2951,0.701,2952,0.701,2953,0.701,2954,0.701,2955,0.701,2956,1.343,2957,0.701,2958,0.701,2959,0.701,2960,0.701,2961,0.701]],["component/280",[3,0.373,2139,1.063]],["title/281-1",[2,7.438,3,6.564,4,14.976,30,13.158,141,13.719,668,19.38]],["name/281-1",[]],["text/281-1",[]],["component/281-1",[]],["title/281-2",[30,17.101,141,17.831,277,19.819,668,25.188]],["name/281-2",[]],["text/281-2",[]],["component/281-2",[]],["title/281-3",[141,20.974,643,31.792,668,29.629]],["name/281-3",[]],["text/281-3",[]],["component/281-3",[]],["title/281-4",[141,20.974,668,29.629,694,24.632]],["name/281-4",[]],["text/281-4",[]],["component/281-4",[]],["title/281-5",[480,43.795,596,37.869]],["name/281-5",[]],["text/281-5",[]],["component/281-5",[]],["title/281-6",[40,19.2,263,43.795]],["name/281-6",[]],["text/281-6",[]],["component/281-6",[]],["title/281-7",[342,33.305,405,39.381]],["name/281-7",[]],["text/281-7",[]],["component/281-7",[]],["title/281-8",[319,28.477,342,33.305]],["name/281-8",[]],["text/281-8",[]],["component/281-8",[]],["title/281-9",[1221,39.381,1256,48.048]],["name/281-9",[]],["text/281-9",[]],["component/281-9",[]],["title/281-10",[74,41.479]],["name/281-10",[]],["text/281-10",[]],["component/281-10",[]],["title/281-11",[136,26.064,157,31.949]],["name/281-11",[]],["text/281-11",[]],["component/281-11",[]],["title/281-12",[176,24.42,708,30.429]],["name/281-12",[]],["text/281-12",[]],["component/281-12",[]],["title/281",[40,19.2,2219,51.173]],["name/281",[40,0.4,2219,1.067]],["text/281",[0,0.999,2,0.571,3,0.634,4,1.15,6,0.356,10,0.209,11,0.216,13,0.69,15,0.281,17,1.482,23,0.297,24,0.288,26,1.049,28,0.769,29,0.259,30,0.556,34,0.692,37,0.448,40,1.56,42,0.271,43,0.223,44,0.34,46,0.248,47,0.236,55,1.699,62,0.53,65,3.198,67,0.325,68,0.887,72,0.231,73,0.453,74,0.742,75,0.391,79,0.446,83,1.019,85,0.248,86,0.668,87,0.49,90,0.52,97,0.699,99,0.498,100,1.359,105,0.695,106,0.834,107,0.516,108,0.681,111,0.252,113,0.585,115,0.656,116,0.246,125,0.695,130,0.856,131,0.483,134,0.312,136,1.078,138,0.276,141,1.883,142,2.317,143,0.216,149,0.884,151,0.314,152,0.571,154,0.577,155,0.258,156,0.281,157,1.322,158,1.024,164,0.498,165,0.846,167,0.786,174,1.607,175,1.391,176,1.502,177,0.591,178,0.739,180,0.325,182,0.353,184,0.267,190,0.254,192,0.277,193,0.215,196,0.488,199,0.289,204,0.937,206,0.499,207,0.236,210,0.574,211,0.442,216,0.478,224,0.857,227,0.318,229,0.335,253,0.454,254,1.105,264,0.683,267,1.488,277,0.644,278,0.385,279,0.376,291,0.887,292,0.571,293,0.25,294,0.396,299,0.61,300,0.396,304,0.23,306,0.206,311,0.602,313,0.264,314,1.164,317,0.329,318,0.271,319,0.648,322,0.274,324,0.343,325,0.687,326,0.34,331,1.145,334,0.363,342,0.271,344,0.587,348,0.332,350,1.11,351,0.469,354,0.282,360,0.276,361,0.394,364,0.416,366,0.304,368,0.598,372,0.492,376,0.646,377,0.322,381,0.363,385,0.681,388,0.402,390,0.306,397,0.695,401,0.318,411,1.164,412,0.754,414,0.516,418,0.542,426,0.598,435,0.396,437,0.987,445,1.109,446,0.798,448,0.409,457,0.602,463,0.322,464,0.978,465,0.327,469,0.827,473,0.371,478,0.278,480,0.687,490,0.636,496,0.402,497,0.402,513,0.402,515,0.27,516,0.38,531,0.308,534,0.322,545,0.385,552,1.567,555,0.416,558,1.477,581,0.356,594,0.353,596,1.567,600,0.409,601,0.34,607,0.442,622,0.602,623,0.301,634,0.483,643,0.314,654,0.974,656,0.312,663,0.329,667,1.477,668,3.933,677,0.38,678,0.952,694,0.68,696,2.819,698,0.34,708,0.692,712,0.54,715,0.748,716,0.306,728,0.346,730,0.371,732,0.267,735,0.349,737,0.646,742,0.211,749,0.356,750,0.367,751,0.306,752,0.316,762,0.674,772,0.442,773,0.754,784,0.424,786,0.467,788,0.36,793,0.367,797,0.709,803,0.391,804,1.48,808,0.416,809,0.335,822,0.367,823,0.318,829,0.409,835,0.38,851,0.363,857,0.325,860,0.273,871,1.105,920,0.602,922,0.454,940,1.598,1000,0.442,1002,0.502,1003,1.017,1028,0.356,1035,0.932,1050,1.065,1056,0.226,1060,0.442,1061,0.424,1062,0.467,1064,0.416,1079,0.789,1091,0.765,1099,0.416,1103,0.744,1108,0.402,1121,0.416,1132,0.424,1141,0.318,1142,1.144,1178,0.726,1179,0.343,1180,0.835,1184,0.483,1221,1.156,1228,0.396,1232,0.402,1265,0.416,1282,0.681,1283,0.765,1292,0.433,1293,1.144,1295,0.402,1350,0.402,1369,0.754,1375,0.454,1385,0.433,1395,0.765,1399,0.442,1409,0.442,1431,1.342,1441,0.356,1452,0.416,1457,0.416,1461,0.424,1469,0.409,1524,0.483,1562,0.454,1565,0.409,1590,1.815,1591,1.351,1602,0.391,1606,1.052,1608,0.961,1627,2.781,1650,1.286,1662,0.433,1721,0.409,1729,1.351,1730,0.483,1800,0.409,1878,2.252,1907,0.876,1916,0.454,1939,0.433,1940,1.819,1944,1.759,1950,0.442,1951,0.854,1952,1.239,1953,0.483,2003,0.502,2028,0.901,2086,0.502,2089,0.502,2092,0.454,2106,0.454,2118,1.165,2137,0.467,2139,0.545,2175,0.529,2180,0.818,2190,0.391,2194,0.502,2200,2.111,2201,2.197,2219,3.582,2227,0.467,2243,0.901,2249,0.932,2252,0.467,2261,0.529,2265,0.835,2267,0.97,2293,1.815,2315,0.454,2341,0.483,2342,0.502,2361,0.483,2407,4.612,2408,0.529,2409,0.529,2410,2.692,2411,1.021,2412,0.529,2413,0.529,2414,0.529,2415,0.529,2416,0.529,2432,0.529,2433,0.529,2453,0.529,2454,0.529,2456,1.481,2457,1.021,2458,1.021,2459,0.529,2518,0.529,2530,0.467,2546,0.502,2601,0.502,2684,0.483,2704,0.502,2750,0.502,2898,0.483,2902,0.529,2903,0.529,2904,1.021,2905,0.529,2906,1.91,2907,0.529,2908,0.529,2909,0.803,2910,1.021,2911,0.529,2912,0.529,2913,0.529,2914,0.529,2915,0.529,2924,0.529,2925,0.391,2930,0.529,2931,0.529,2932,0.529,2933,0.529,2962,0.569,2963,0.569,2964,0.569,2965,0.569,2966,0.569,2967,0.569,2968,0.569,2969,0.569,2970,0.569,2971,0.569,2972,0.467,2973,2.056,2974,0.569,2975,0.569,2976,0.569,2977,1.099,2978,0.569,2979,0.569,2980,1.099,2981,2.056,2982,0.569,2983,0.569,2984,0.569,2985,0.569,2986,0.569,2987,0.569,2988,0.569,2989,1.099,2990,0.569,2991,0.569,2992,0.569,2993,0.569,2994,0.569,2995,0.569,2996,0.569,2997,0.569,2998,0.569]],["component/281",[3,0.373,2139,1.063]],["title/282-1",[306,25.334,539,42.971]],["name/282-1",[]],["text/282-1",[]],["component/282-1",[]],["title/282-2",[35,30.818,306,20.868,1842,40.148]],["name/282-2",[]],["text/282-2",[]],["component/282-2",[]],["title/282-3",[29,31.823,304,28.302]],["name/282-3",[]],["text/282-3",[]],["component/282-3",[]],["title/282",[405,39.381,1842,48.74]],["name/282",[1842,1.816]],["text/282",[0,1.781,17,3.283,20,1.676,29,2.772,30,1.316,35,2.016,37,1.539,39,2.236,43,1.48,46,1.645,47,1.564,55,1.042,56,5.888,65,2.073,66,5.384,68,1.628,85,1.645,88,1.928,92,1.569,97,2.61,99,1.708,131,2.68,143,1.435,151,2.08,176,2.127,197,2.168,204,2.295,207,1.564,224,2.028,227,2.107,266,2.589,282,2.137,287,2.168,293,1.657,304,1.525,306,3.503,318,1.795,331,1.735,345,2.315,350,1.277,359,1.908,361,1.351,397,1.645,465,2.168,472,2.589,474,2.184,514,2.122,539,5.942,558,2.71,578,2.107,594,4.756,649,3.531,838,3.788,920,2.066,1005,2.666,1624,4.712,1789,1.97,1842,6.74,2139,1.87,2999,3.506,3000,3.506,3001,3.506,3002,3.506,3003,3.506,3004,3.506,3005,3.33]],["component/282",[3,0.373,2139,1.063]],["title/283-1",[193,33.606]],["name/283-1",[]],["text/283-1",[]],["component/283-1",[]],["title/283-2",[55,24.602]],["name/283-2",[]],["text/283-2",[]],["component/283-2",[]],["title/283",[477,38.105,646,44.235]],["name/283",[477,0.795,2103,1.357]],["text/283",[0,0.917,2,1.04,3,0.918,4,1.569,10,2.321,17,2.358,20,1.756,24,1.142,28,1.48,30,2.209,34,2.293,37,1.613,40,1.447,55,2.188,65,3.08,72,0.918,75,1.549,77,1.136,79,0.915,83,1.119,93,1.595,97,0.767,106,0.915,116,0.974,130,0.776,138,1.093,155,1.022,167,1.114,181,1.833,193,1.492,205,1.172,210,1.179,212,1.398,215,1.385,216,0.981,217,1.438,229,1.327,232,1.851,248,1.317,254,1.213,255,1.426,261,2.908,264,1.694,265,1.989,272,1.327,273,3.62,277,0.912,291,1.706,293,0.992,295,1.307,306,1.909,319,0.918,330,1.621,344,1.206,350,2.436,357,4.623,361,2.269,366,1.206,369,3.404,377,1.278,414,1.06,426,1.228,444,3.995,451,1.509,461,1.349,469,1.172,472,1.549,477,2.871,480,1.412,485,1.914,490,1.307,514,1.27,541,1.185,587,1.528,596,1.221,623,2.088,646,1.426,650,2.404,651,1.108,652,2.58,658,1.172,663,2.289,668,3.254,677,1.509,678,1.349,682,1.426,698,2.363,800,1.549,827,2.449,842,1.456,932,1.185,962,1.288,1020,1.851,1092,1.621,1228,1.571,1351,1.851,1385,1.716,1441,1.412,1565,1.621,1574,1.65,1602,1.549,1662,1.716,1721,1.621,1784,1.851,1859,1.799,1878,1.755,2139,1.119,2338,1.992,2377,2.097,2582,2.097,3006,2.097,3007,2.257,3008,2.097,3009,2.257,3010,2.257,3011,2.257,3012,2.257,3013,2.257,3014,2.257,3015,3.953,3016,2.257,3017,2.257,3018,2.257,3019,2.257,3020,2.257]],["component/283",[3,0.373,2139,1.063]],["title/284-1",[390,47.886]],["name/284-1",[]],["text/284-1",[]],["component/284-1",[]],["title/284-2",[30,20.116,40,15.816,277,23.313]],["name/284-2",[]],["text/284-2",[]],["component/284-2",[]],["title/284-3",[0,16.243,30,24.42]],["name/284-3",[]],["text/284-3",[]],["component/284-3",[]],["title/284",[2,9.667,3,8.531,4,19.464,405,27.578]],["name/284",[2,0.288,3,0.254]],["text/284",[0,2.629,2,1.199,3,1.058,10,2.229,17,2.264,24,3.076,29,2.765,30,4.372,40,2.414,55,2.431,254,6.465,255,3.843,277,3.558,373,3.076,377,3.445,390,3.27,534,3.445,623,4.648,762,3.733,860,4.224,883,3.843,1783,5.959,2139,4.364,2192,5.653,2195,5.158,2747,5.37,3021,6.082]],["component/284",[3,0.373,2139,1.063]],["title/285-1",[308,29.788,324,34.77,325,36.075]],["name/285-1",[]],["text/285-1",[]],["component/285-1",[]],["title/285-2",[0,13.38,217,20.974,541,30.287]],["name/285-2",[]],["text/285-2",[]],["component/285-2",[]],["title/285-3",[594,43.374,1789,36.562]],["name/285-3",[]],["text/285-3",[]],["component/285-3",[]],["title/285-4",[318,33.305,1003,44.696]],["name/285-4",[]],["text/285-4",[]],["component/285-4",[]],["title/285-5",[2011,66.337]],["name/285-5",[]],["text/285-5",[]],["component/285-5",[]],["title/285",[0,16.243,838,34.545]],["name/285",[838,1.287]],["text/285",[0,1.284,2,0.965,3,0.963,10,1.529,11,0.492,16,0.73,17,1.247,20,0.577,24,1.214,34,2.127,40,1.144,46,0.566,47,0.538,55,1.685,57,1.724,65,3.328,73,2.279,74,0.605,83,0.644,92,0.54,97,2.673,101,0.776,105,0.566,108,1.487,130,0.446,136,1.247,137,0.686,143,1.274,146,2.019,157,0.592,164,1.087,172,0.558,174,1.332,175,1.341,176,0.453,188,0.549,199,0.66,200,0.562,204,0.488,207,0.995,213,1.528,216,0.564,217,0.472,227,0.725,229,0.763,259,0.595,282,0.735,287,0.746,291,0.56,296,0.702,307,1.233,308,0.671,310,1.247,318,0.618,319,0.528,323,0.868,324,1.447,325,1.502,351,0.554,352,0.804,355,1.323,356,0.512,361,0.465,372,1.074,377,0.735,381,0.829,382,0.847,384,0.763,397,0.566,401,2.331,404,0.79,411,0.735,414,1.127,419,0.554,426,0.707,436,0.868,439,0.776,461,0.776,463,0.735,464,0.797,465,0.746,469,1.247,480,0.812,514,1.883,542,0.967,552,1.147,578,3.091,581,0.812,594,1.487,596,1.298,601,0.776,606,0.77,621,0.987,623,1.268,627,1.035,650,0.79,663,0.752,671,0.783,674,0.702,684,0.707,696,0.556,697,0.933,698,0.776,703,0.77,708,2.127,742,0.889,749,0.812,752,1.858,762,2.055,804,1.227,809,0.763,810,0.879,838,1.652,842,0.838,850,0.904,871,1.291,906,0.891,920,4.1,932,2.191,973,2.447,1028,0.812,1043,4.135,1097,1.969,1103,0.879,1111,0.857,1112,0.918,1114,0.812,1232,0.918,1265,0.949,1316,1.009,1345,1.585,1404,1.866,1406,1.065,1461,0.967,1566,1.065,1588,0.891,1608,1.447,1624,2.56,1650,1.502,1697,2.119,1783,5.325,1786,0.879,1789,2.889,1791,0.904,1798,1.914,1801,0.812,1813,3.805,1864,1.969,1935,2.747,1940,2.447,1941,0.933,1942,0.933,1943,0.933,1944,0.918,2009,0.933,2067,1.146,2087,1.101,2115,1.788,2136,1.206,2137,1.065,2138,1.206,2139,2.743,2140,1.206,2141,2.231,2146,1.206,2155,1.206,2156,1.206,2157,2.231,2158,1.206,2159,2.231,2162,1.206,2190,0.891,2407,6.963,2537,1.035,2703,1.146,2763,1.146,2774,1.206,3022,2.401,3023,1.298,3024,1.298,3025,1.298,3026,2.401,3027,2.401,3028,1.298,3029,1.298,3030,1.298,3031,2.401,3032,1.298,3033,1.298,3034,1.298]],["component/285",[3,0.373,2139,1.063]],["title/286-1",[188,29.601,189,33.305]],["name/286-1",[]],["text/286-1",[]],["component/286-1",[]],["title/286-2",[0,13.38,35,30.818,150,24.383]],["name/286-2",[]],["text/286-2",[]],["component/286-2",[]],["title/286-3",[2,13.805,3,12.182]],["name/286-3",[]],["text/286-3",[]],["component/286-3",[]],["title/286",[10,21.136,16,32.439,652,37.636]],["name/286",[5,1.313]],["text/286",[0,2.002,2,1.958,3,1.727,4,1.21,10,3.163,17,2.883,28,1.141,29,1.386,30,1.785,35,3.534,40,1.813,55,2.877,56,1.854,68,1.316,73,1.256,79,1.236,92,1.268,97,1.74,100,0.963,107,1.432,124,1.26,130,1.048,143,1.16,146,1.838,150,1.289,157,1.391,174,1.692,178,1.414,188,1.289,189,1.45,193,1.15,200,2.216,206,1.386,215,1.871,304,1.232,307,3.397,313,1.414,323,2.038,324,1.838,339,2.092,350,1.032,377,2.898,379,1.871,390,1.639,435,2.122,444,1.692,477,1.659,528,2.501,607,2.37,650,3.112,651,1.497,652,1.99,703,1.807,708,1.325,714,1.527,715,2.403,750,1.967,751,1.639,787,1.871,838,1.504,861,1.838,886,1.907,920,3.622,932,1.601,962,3.772,982,2.431,1025,2.586,1026,2.37,1028,1.907,1371,6.567,1783,4.477,1787,2.501,1801,1.907,1809,2.19,1828,2.586,1838,3.512,2139,3.839,2170,2.37,2438,2.691,2818,4.517,3035,3.049]],["component/286",[3,0.373,2139,1.063]],["title/287-1",[23,30.117,176,20.116,708,25.065]],["name/287-1",[]],["text/287-1",[]],["component/287-1",[]],["title/287-2",[2,11.372,36,26.111,351,24.632]],["name/287-2",[]],["text/287-2",[]],["component/287-2",[]],["title/287-3",[0,16.243,351,29.903]],["name/287-3",[]],["text/287-3",[]],["component/287-3",[]],["title/287-4",[106,28.389,342,33.305]],["name/287-4",[]],["text/287-4",[]],["component/287-4",[]],["title/287-5",[47,29.022,1091,48.74]],["name/287-5",[]],["text/287-5",[]],["component/287-5",[]],["title/287",[106,28.389,351,29.903]],["name/287",[106,0.592,351,0.624]],["text/287",[0,2.181,2,1.593,15,2.293,16,1.53,17,3.276,23,3.176,26,1.146,30,0.949,32,2.115,34,1.182,36,3.658,37,1.896,40,1.274,45,1.842,47,2.521,55,0.751,56,1.655,72,1.107,74,2.164,83,1.349,97,0.925,106,3.276,110,1.6,113,1,137,1.437,163,1.867,167,1.342,176,2.121,204,1.024,219,2.115,224,1.463,227,1.52,248,1.587,263,1.702,265,1.369,291,1.174,310,1.413,317,1.575,319,1.107,350,0.921,351,3.759,366,1.454,394,1.923,414,1.278,426,1.481,467,1.575,468,2.469,469,1.413,537,1.719,578,1.52,594,1.686,601,1.626,650,5.353,663,2.691,677,1.819,692,1.356,696,1.166,698,1.626,703,4.264,708,3.126,732,1.278,778,2.307,779,2.879,838,1.342,920,1.49,962,1.552,970,3.338,1091,1.894,1239,2.879,1338,2.068,1395,1.894,1411,2.026,1422,2.026,1441,1.702,1602,1.867,1606,1.796,1614,2.232,1729,2.307,1783,1.842,1789,2.427,1878,2.115,2101,2.402,2104,1.842,2606,4.318,2638,2.402,2753,2.402,2893,2.528,2894,2.528,2895,2.528,2896,2.528,2898,6.1,2899,2.528,2900,2.528,3005,2.402,3036,2.721,3037,2.721,3038,4.647,3039,2.721,3040,2.721]],["component/287",[3,0.373,2139,1.063]],["title/288-1",[623,36.978,1840,65.064]],["name/288-1",[]],["text/288-1",[]],["component/288-1",[]],["title/288",[1599,73.068]],["name/288",[1599,2.14]],["text/288",[0,0.969,2,1.477,3,1.303,10,2.425,11,0.912,16,2.349,19,1.606,20,1.068,24,1.216,28,3.075,34,1.045,36,1.088,40,2.253,41,1.971,44,1.437,47,3.658,55,2.581,62,1.159,79,0.974,85,1.821,87,1.072,91,3,97,2.249,100,1.318,106,1.693,107,1.129,110,1.413,130,1.436,134,1.316,136,2.061,141,0.874,142,0.874,149,1.334,150,1.766,174,1.334,176,1.931,181,1.937,184,1.129,190,1.862,191,1.175,197,2.4,205,2.876,248,1.402,264,1.03,265,1.209,291,1.037,292,1.248,293,1.056,299,1.334,306,0.87,307,1.235,309,1.316,322,1.159,350,1.874,366,1.284,376,2.456,377,3.136,405,1.352,426,1.308,444,1.334,465,1.381,474,1.392,477,2.273,499,1.392,530,1.79,588,2.038,649,1.392,650,4.024,651,1.18,708,1.815,709,1.449,715,1.129,724,1.971,727,1.673,728,1.462,779,2.587,805,1.79,809,1.413,838,1.186,932,2.908,949,1.971,962,3.159,963,1.868,995,1.971,1058,2.122,1060,1.868,1078,1.489,1101,1.868,1114,1.503,1116,1.79,1179,1.449,1182,1.971,1279,1.868,1320,1.79,1338,1.827,1358,2.233,1360,1.606,1392,2.038,1441,1.503,1525,1.971,1783,1.627,1787,1.971,2139,1.192,2188,2.038,2217,2.122,2229,2.233,2245,2.233,2289,2.233,2525,1.827,3006,2.233,3041,2.403,3042,2.403,3043,2.403,3044,2.403,3045,2.403,3046,2.403,3047,2.403]],["component/288",[3,0.373,2139,1.063]],["title/289-1",[306,25.334,539,42.971]],["name/289-1",[]],["text/289-1",[]],["component/289-1",[]],["title/289-2",[35,30.818,306,20.868,1842,40.148]],["name/289-2",[]],["text/289-2",[]],["component/289-2",[]],["title/289-3",[29,31.823,304,28.302]],["name/289-3",[]],["text/289-3",[]],["component/289-3",[]],["title/289",[405,39.381,1842,48.74]],["name/289",[1842,1.816]],["text/289",[0,1.565,11,1.189,17,3.263,20,1.392,29,2.381,30,1.093,35,1.675,37,2.137,39,1.858,43,1.23,44,1.874,46,1.367,47,1.299,55,0.866,56,5.332,65,1.781,66,4.624,68,1.353,85,1.367,88,1.602,92,1.304,97,2.679,99,1.419,106,1.271,131,2.301,143,1.192,151,1.728,176,1.827,197,1.801,204,1.971,207,1.299,221,1.628,224,1.685,227,1.751,248,1.829,266,2.151,282,1.776,287,1.801,290,1.202,291,1.353,293,1.377,304,1.267,306,3.639,318,1.491,331,1.442,345,1.924,350,1.772,359,1.585,361,2.417,397,1.367,465,1.801,472,2.151,474,1.815,514,1.763,519,1.942,539,5.815,558,2.252,578,1.751,580,2.095,587,2.122,594,4.179,649,3.033,838,3.329,920,1.717,1005,2.216,1193,2.023,1596,4.072,1613,2.571,1624,5.38,1789,1.637,1842,7.001,1939,2.383,2139,1.554,2999,2.913,3000,2.913,3001,2.913,3002,2.913,3003,2.913,3004,2.913,3005,2.767,3048,3.135,3049,3.135]],["component/289",[3,0.373,2139,1.063]],["title/290-1",[308,29.788,324,34.77,325,36.075]],["name/290-1",[]],["text/290-1",[]],["component/290-1",[]],["title/290-2",[29,26.213,306,20.868,307,29.629]],["name/290-2",[]],["text/290-2",[]],["component/290-2",[]],["title/290-3",[40,19.2,97,23.801]],["name/290-3",[]],["text/290-3",[]],["component/290-3",[]],["title/290",[40,19.2,932,36.768]],["name/290",[932,1.37]],["text/290",[2,1.095,3,0.966,10,2.598,17,1.252,24,1.7,29,1.528,30,1.173,34,2.413,40,2.846,47,1.394,55,1.958,62,3.418,67,1.918,72,1.367,77,1.692,97,2.798,100,2.599,106,1.363,130,1.156,136,2.067,164,1.522,174,1.866,179,2.124,188,1.421,200,1.456,206,3.223,207,1.394,210,2.899,211,2.614,221,1.746,223,2.063,229,1.977,248,1.962,265,1.692,306,3.297,308,1.737,314,1.904,322,1.621,324,3.347,325,3.472,342,1.599,350,2.399,381,2.146,397,2.421,414,1.579,444,1.866,528,4.554,578,1.878,612,6.259,623,1.776,629,2.276,643,1.853,650,3.376,652,3.623,656,1.841,663,1.947,674,1.818,678,2.01,682,2.124,715,1.579,932,3.723,954,2.758,1020,2.758,1343,2.758,1351,2.758,1385,2.556,1469,2.415,1662,2.556,1721,2.415,1947,2.415,2139,1.667,2253,2.968,2438,2.968,2669,3.124,3008,3.124,3050,3.362,3051,3.362,3052,3.362,3053,3.362]],["component/290",[3,0.373,2139,1.063]],["title/291",[2,9.667,3,8.531,141,17.831,3054,49.026]],["name/291",[5,1.313]],["text/291",[0,1.858,2,2.101,3,1.854,4,4.23,27,4.294,36,3.626,55,2.212,92,3.331,115,3.399,129,3.098,133,4.206,141,2.913,217,2.913,368,4.359,397,3.494,487,5.423,807,5.423,841,5.423,3055,6.793]],["component/291",[2,0.423,3,0.373]],["title/292-1",[291,30.215,668,35.969]],["name/292-1",[]],["text/292-1",[]],["component/292-1",[]],["title/292-2",[2909,65.105]],["name/292-2",[]],["text/292-2",[]],["component/292-2",[]],["title/292-3",[742,32.986]],["name/292-3",[]],["text/292-3",[]],["component/292-3",[]],["title/292-4",[1234,41.852,2909,51.173]],["name/292-4",[]],["text/292-4",[]],["component/292-4",[]],["title/292-5",[1056,35.362]],["name/292-5",[]],["text/292-5",[]],["component/292-5",[]],["title/292-6",[742,32.986]],["name/292-6",[]],["text/292-6",[]],["component/292-6",[]],["title/292-7",[694,29.903,3056,59.374]],["name/292-7",[]],["text/292-7",[]],["component/292-7",[]],["title/292-8",[1056,35.362]],["name/292-8",[]],["text/292-8",[]],["component/292-8",[]],["title/292-9",[742,32.986]],["name/292-9",[]],["text/292-9",[]],["component/292-9",[]],["title/292-10",[336,39.867]],["name/292-10",[]],["text/292-10",[]],["component/292-10",[]],["title/292-11",[3057,67.707]],["name/292-11",[]],["text/292-11",[]],["component/292-11",[]],["title/292-12",[1056,35.362]],["name/292-12",[]],["text/292-12",[]],["component/292-12",[]],["title/292-13",[742,32.986]],["name/292-13",[]],["text/292-13",[]],["component/292-13",[]],["title/292-14",[1234,41.852,3057,53.218]],["name/292-14",[]],["text/292-14",[]],["component/292-14",[]],["title/292-15",[419,38.044]],["name/292-15",[]],["text/292-15",[]],["component/292-15",[]],["title/292-16",[742,32.986]],["name/292-16",[]],["text/292-16",[]],["component/292-16",[]],["title/292-17",[3058,67.707]],["name/292-17",[]],["text/292-17",[]],["component/292-17",[]],["title/292-18",[1056,35.362]],["name/292-18",[]],["text/292-18",[]],["component/292-18",[]],["title/292-19",[742,32.986]],["name/292-19",[]],["text/292-19",[]],["component/292-19",[]],["title/292-20",[2110,43.374,3058,53.218]],["name/292-20",[]],["text/292-20",[]],["component/292-20",[]],["title/292-21",[1056,35.362]],["name/292-21",[]],["text/292-21",[]],["component/292-21",[]],["title/292-22",[419,38.044]],["name/292-22",[]],["text/292-22",[]],["component/292-22",[]],["title/292-23",[742,32.986]],["name/292-23",[]],["text/292-23",[]],["component/292-23",[]],["title/292-24",[694,29.903,3058,53.218]],["name/292-24",[]],["text/292-24",[]],["component/292-24",[]],["title/292-25",[1056,35.362]],["name/292-25",[]],["text/292-25",[]],["component/292-25",[]],["title/292-26",[742,32.986]],["name/292-26",[]],["text/292-26",[]],["component/292-26",[]],["title/292-27",[2925,48.048,3058,53.218]],["name/292-27",[]],["text/292-27",[]],["component/292-27",[]],["title/292-28",[1056,35.362]],["name/292-28",[]],["text/292-28",[]],["component/292-28",[]],["title/292-29",[419,38.044]],["name/292-29",[]],["text/292-29",[]],["component/292-29",[]],["title/292-30",[742,32.986]],["name/292-30",[]],["text/292-30",[]],["component/292-30",[]],["title/292-31",[3059,75.54]],["name/292-31",[]],["text/292-31",[]],["component/292-31",[]],["title/292-32",[1056,35.362]],["name/292-32",[]],["text/292-32",[]],["component/292-32",[]],["title/292-33",[742,32.986]],["name/292-33",[]],["text/292-33",[]],["component/292-33",[]],["title/292-34",[1234,41.852,3059,59.374]],["name/292-34",[]],["text/292-34",[]],["component/292-34",[]],["title/292-35",[1056,35.362]],["name/292-35",[]],["text/292-35",[]],["component/292-35",[]],["title/292-36",[419,38.044]],["name/292-36",[]],["text/292-36",[]],["component/292-36",[]],["title/292-37",[742,32.986]],["name/292-37",[]],["text/292-37",[]],["component/292-37",[]],["title/292-38",[3060,67.707]],["name/292-38",[]],["text/292-38",[]],["component/292-38",[]],["title/292-39",[1056,35.362]],["name/292-39",[]],["text/292-39",[]],["component/292-39",[]],["title/292-40",[742,32.986]],["name/292-40",[]],["text/292-40",[]],["component/292-40",[]],["title/292-41",[2110,43.374,3060,53.218]],["name/292-41",[]],["text/292-41",[]],["component/292-41",[]],["title/292-42",[1056,35.362]],["name/292-42",[]],["text/292-42",[]],["component/292-42",[]],["title/292-43",[419,38.044]],["name/292-43",[]],["text/292-43",[]],["component/292-43",[]],["title/292-44",[742,32.986]],["name/292-44",[]],["text/292-44",[]],["component/292-44",[]],["title/292-45",[694,29.903,3060,53.218]],["name/292-45",[]],["text/292-45",[]],["component/292-45",[]],["title/292-46",[1056,35.362]],["name/292-46",[]],["text/292-46",[]],["component/292-46",[]],["title/292-47",[742,32.986]],["name/292-47",[]],["text/292-47",[]],["component/292-47",[]],["title/292-48",[2925,48.048,3060,53.218]],["name/292-48",[]],["text/292-48",[]],["component/292-48",[]],["title/292-49",[1056,35.362]],["name/292-49",[]],["text/292-49",[]],["component/292-49",[]],["title/292-50",[419,38.044]],["name/292-50",[]],["text/292-50",[]],["component/292-50",[]],["title/292-51",[742,32.986]],["name/292-51",[]],["text/292-51",[]],["component/292-51",[]],["title/292-52",[40,19.2,958,49.485]],["name/292-52",[]],["text/292-52",[]],["component/292-52",[]],["title/292-53",[1341,43.795,3061,55.815]],["name/292-53",[]],["text/292-53",[]],["component/292-53",[]],["title/292-54",[1056,35.362]],["name/292-54",[]],["text/292-54",[]],["component/292-54",[]],["title/292-55",[742,32.986]],["name/292-55",[]],["text/292-55",[]],["component/292-55",[]],["title/292-56",[1341,36.075,2110,35.728,3061,45.976]],["name/292-56",[]],["text/292-56",[]],["component/292-56",[]],["title/292-57",[1056,35.362]],["name/292-57",[]],["text/292-57",[]],["component/292-57",[]],["title/292-58",[419,38.044]],["name/292-58",[]],["text/292-58",[]],["component/292-58",[]],["title/292-59",[742,32.986]],["name/292-59",[]],["text/292-59",[]],["component/292-59",[]],["title/292-60",[694,24.632,1341,36.075,3061,45.976]],["name/292-60",[]],["text/292-60",[]],["component/292-60",[]],["title/292-61",[1056,35.362]],["name/292-61",[]],["text/292-61",[]],["component/292-61",[]],["title/292-62",[742,32.986]],["name/292-62",[]],["text/292-62",[]],["component/292-62",[]],["title/292-63",[1341,36.075,2110,35.728,3062,53.595]],["name/292-63",[]],["text/292-63",[]],["component/292-63",[]],["title/292-64",[1056,35.362]],["name/292-64",[]],["text/292-64",[]],["component/292-64",[]],["title/292-65",[742,32.986]],["name/292-65",[]],["text/292-65",[]],["component/292-65",[]],["title/292-66",[3063,75.54]],["name/292-66",[]],["text/292-66",[]],["component/292-66",[]],["title/292-67",[1056,35.362]],["name/292-67",[]],["text/292-67",[]],["component/292-67",[]],["title/292-68",[742,32.986]],["name/292-68",[]],["text/292-68",[]],["component/292-68",[]],["title/292-69",[2110,43.374,3063,59.374]],["name/292-69",[]],["text/292-69",[]],["component/292-69",[]],["title/292-70",[1056,35.362]],["name/292-70",[]],["text/292-70",[]],["component/292-70",[]],["title/292-71",[419,38.044]],["name/292-71",[]],["text/292-71",[]],["component/292-71",[]],["title/292-72",[742,32.986]],["name/292-72",[]],["text/292-72",[]],["component/292-72",[]],["title/292-73",[11,26.559,958,49.485]],["name/292-73",[]],["text/292-73",[]],["component/292-73",[]],["title/292-74",[3064,75.54]],["name/292-74",[]],["text/292-74",[]],["component/292-74",[]],["title/292-75",[742,32.986]],["name/292-75",[]],["text/292-75",[]],["component/292-75",[]],["title/292-76",[65,19.606,176,20.116,285,27.802]],["name/292-76",[]],["text/292-76",[]],["component/292-76",[]],["title/292-77",[1234,41.852,3065,65.064]],["name/292-77",[]],["text/292-77",[]],["component/292-77",[]],["title/292-78",[1056,35.362]],["name/292-78",[]],["text/292-78",[]],["component/292-78",[]],["title/292-79",[419,38.044]],["name/292-79",[]],["text/292-79",[]],["component/292-79",[]],["title/292-80",[742,32.986]],["name/292-80",[]],["text/292-80",[]],["component/292-80",[]],["title/292-81",[3066,82.779]],["name/292-81",[]],["text/292-81",[]],["component/292-81",[]],["title/292-82",[1056,35.362]],["name/292-82",[]],["text/292-82",[]],["component/292-82",[]],["title/292-83",[742,32.986]],["name/292-83",[]],["text/292-83",[]],["component/292-83",[]],["title/292-84",[1122,54.67]],["name/292-84",[]],["text/292-84",[]],["component/292-84",[]],["title/292-85",[1234,41.852,3067,65.064]],["name/292-85",[]],["text/292-85",[]],["component/292-85",[]],["title/292-86",[1056,35.362]],["name/292-86",[]],["text/292-86",[]],["component/292-86",[]],["title/292-87",[419,38.044]],["name/292-87",[]],["text/292-87",[]],["component/292-87",[]],["title/292-88",[742,32.986]],["name/292-88",[]],["text/292-88",[]],["component/292-88",[]],["title/292-89",[43,27.47,356,27.631]],["name/292-89",[]],["text/292-89",[]],["component/292-89",[]],["title/292-90",[221,29.951,230,27.434,3068,43.837]],["name/292-90",[]],["text/292-90",[]],["component/292-90",[]],["title/292-91",[742,32.986]],["name/292-91",[]],["text/292-91",[]],["component/292-91",[]],["title/292-92",[115,18.399,221,29.951,3068,43.837]],["name/292-92",[]],["text/292-92",[]],["component/292-92",[]],["title/292-93",[742,32.986]],["name/292-93",[]],["text/292-93",[]],["component/292-93",[]],["title/292",[115,28.417]],["name/292",[115,0.832]],["text/292",[0,2.08,2,0.094,3,0.083,10,1.263,11,2.435,20,0.211,26,0.2,27,0.702,28,0.178,30,0.864,40,2.979,42,3.753,43,0.186,46,0.76,55,0.867,65,1.457,74,0.625,79,0.545,85,0.76,99,0.215,108,0.294,111,3.492,115,0.294,116,0.205,119,1.7,124,0.196,125,0.402,126,0.522,128,0.281,131,0.405,152,1.943,176,2.046,181,0.427,190,0.411,205,0.698,216,4.189,230,1.494,259,2.193,277,1.001,282,0.761,291,2.844,292,0.698,316,0.551,318,0.639,336,0.212,348,1.016,349,0.595,350,0.312,355,0.508,356,0.836,372,2.142,376,0.279,384,2.952,390,0.255,414,0.223,418,1.701,419,2.24,424,0.269,426,0.501,429,0.571,437,0.832,441,5.683,446,0.238,457,0.505,458,0.582,462,4.313,463,3.636,468,0.252,511,0.291,541,2.111,581,1.09,600,0.662,606,0.546,641,0.529,643,2.062,654,0.636,657,1.278,658,0.246,661,0.832,666,0.555,668,1.922,673,0.398,694,1.203,704,0.755,708,0.584,716,0.495,732,0.223,738,2.865,742,0.785,750,0.306,752,0.511,761,0.526,762,0.824,809,1.847,814,0.565,860,1.352,870,0.33,872,0.538,910,0.321,952,0.716,1003,0.857,1004,0.641,1028,0.297,1075,2.256,1108,0.335,1114,0.576,1115,0.651,1186,2.52,1194,3.396,1197,0.317,1221,4.139,1239,5.496,1240,1.231,1267,4.217,1295,1.231,1340,1.779,1341,0.84,1359,0.756,1360,0.317,1422,0.686,1431,2.25,1438,3.453,1439,3.333,1440,0.716,1446,0.641,1449,0.716,1463,1.289,1558,0.756,1572,0.378,1574,0.347,1728,2.576,1780,1.389,2043,0.361,2203,1.297,2525,0.361,2586,0.389,2589,4.691,2680,0.378,2716,1.389,2749,0.389,2799,0.756,2925,1.454,3069,0.361,3070,0.361,3071,0.402,3072,0.781,3073,2.101,3074,1.477,3075,0.781,3076,0.781,3077,0.781,3078,0.781,3079,1.477,3080,0.781,3081,1.477,3082,0.781,3083,2.663,3084,1.477,3085,1.477,3086,1.477,3087,1.477,3088,0.781,3089,0.781,3090,0.781,3091,1.477,3092,0.781,3093,1.102,3094,0.756,3095,1.139,3096,4.302,3097,2.663,3098,0.402,3099,0.781,3100,0.402,3101,0.402,3102,0.7,3103,0.402,3104,0.402,3105,0.361,3106,0.402,3107,0.361,3108,0.7,3109,0.402,3110,0.402,3111,0.781,3112,0.361]],["component/292",[2,0.423,3,0.373]],["title/293-1",[869,51.972]],["name/293-1",[]],["text/293-1",[]],["component/293-1",[]],["title/293-2",[860,42.748]],["name/293-2",[]],["text/293-2",[]],["component/293-2",[]],["title/293-3",[3102,67.707]],["name/293-3",[]],["text/293-3",[]],["component/293-3",[]],["title/293-4",[3113,67.707]],["name/293-4",[]],["text/293-4",[]],["component/293-4",[]],["title/293-5",[3114,67.707]],["name/293-5",[]],["text/293-5",[]],["component/293-5",[]],["title/293-6",[3115,67.707]],["name/293-6",[]],["text/293-6",[]],["component/293-6",[]],["title/293-7",[3107,67.707]],["name/293-7",[]],["text/293-7",[]],["component/293-7",[]],["title/293-8",[3108,67.707]],["name/293-8",[]],["text/293-8",[]],["component/293-8",[]],["title/293-9",[0,20.666]],["name/293-9",[]],["text/293-9",[]],["component/293-9",[]],["title/293-10",[3116,67.707]],["name/293-10",[]],["text/293-10",[]],["component/293-10",[]],["title/293-11",[3117,67.707]],["name/293-11",[]],["text/293-11",[]],["component/293-11",[]],["title/293-12",[3118,67.707]],["name/293-12",[]],["text/293-12",[]],["component/293-12",[]],["title/293-13",[3119,67.707]],["name/293-13",[]],["text/293-13",[]],["component/293-13",[]],["title/293-14",[1258,60.308]],["name/293-14",[]],["text/293-14",[]],["component/293-14",[]],["title/293-15",[3120,67.707]],["name/293-15",[]],["text/293-15",[]],["component/293-15",[]],["title/293-16",[739,47.886]],["name/293-16",[]],["text/293-16",[]],["component/293-16",[]],["title/293-17",[3121,67.707]],["name/293-17",[]],["text/293-17",[]],["component/293-17",[]],["title/293-18",[3122,67.707]],["name/293-18",[]],["text/293-18",[]],["component/293-18",[]],["title/293-19",[213,40.647]],["name/293-19",[]],["text/293-19",[]],["component/293-19",[]],["title/293-20",[3101,75.54]],["name/293-20",[]],["text/293-20",[]],["component/293-20",[]],["title/293-21",[3100,75.54]],["name/293-21",[]],["text/293-21",[]],["component/293-21",[]],["title/293-22",[3105,67.707]],["name/293-22",[]],["text/293-22",[]],["component/293-22",[]],["title/293-23",[3069,67.707]],["name/293-23",[]],["text/293-23",[]],["component/293-23",[]],["title/293-24",[3070,67.707]],["name/293-24",[]],["text/293-24",[]],["component/293-24",[]],["title/293-25",[3112,67.707]],["name/293-25",[]],["text/293-25",[]],["component/293-25",[]],["title/293-26",[3123,67.707]],["name/293-26",[]],["text/293-26",[]],["component/293-26",[]],["title/293-27",[429,55.183]],["name/293-27",[]],["text/293-27",[]],["component/293-27",[]],["title/293-28",[3124,67.707]],["name/293-28",[]],["text/293-28",[]],["component/293-28",[]],["title/293-29",[3125,67.707]],["name/293-29",[]],["text/293-29",[]],["component/293-29",[]],["title/293",[252,53.703]],["name/293",[252,1.573]],["text/293",[0,1.229,10,0.831,11,0.861,19,0.816,20,0.543,26,0.515,27,0.492,30,0.791,40,1.281,42,5.403,55,0.627,65,2.701,78,0.641,85,0.989,92,0.943,95,0.576,99,1.798,108,2.46,118,0.797,124,0.937,125,2.553,127,1.294,152,0.634,155,0.553,164,0.553,172,1.708,173,6.355,176,0.791,178,0.566,181,0.566,190,0.545,212,1.405,213,2.9,216,2.302,230,1.511,257,0.631,258,0.576,259,1.039,260,0.85,265,0.615,270,0.788,277,0.494,304,1.284,313,0.566,317,0.707,331,0.562,350,1.344,354,0.606,355,2.189,356,1.254,358,1.48,361,1.897,372,1.015,376,0.718,384,0.718,397,0.533,414,1.492,418,3.36,437,1.405,441,5.722,451,0.816,457,2.175,510,0.673,541,0.641,555,2.322,585,1.536,596,1.718,643,3.227,654,0.578,655,0.806,657,3.832,666,0.736,673,0.527,694,2.5,704,3.292,732,0.574,739,2.135,781,0.863,798,0.788,867,1.235,869,1.324,877,0.788,879,0.724,899,0.772,1003,0.78,1070,0.816,1072,2.562,1075,0.877,1083,0.928,1111,0.806,1115,0.863,1137,2.902,1179,1.368,1239,6.968,1240,1.603,1258,1.536,1259,0.877,1340,2.282,1344,1.861,1402,0.78,1431,0.797,1452,0.893,1465,0.928,1470,0.928,1823,0.949,1949,0.949,2009,0.877,2199,1.002,2203,2.366,2248,0.863,2265,0.928,2524,1.002,2589,1.658,2972,1.002,3113,0.928,3114,0.928,3115,0.928,3116,0.928,3117,0.928,3118,0.928,3119,0.928,3120,0.928,3121,0.928,3122,0.928,3123,0.928,3124,0.928,3125,0.928,3126,1.036,3127,1.036,3128,1.036,3129,1.036,3130,1.924,3131,3.367,3132,1.036,3133,3.367,3134,1.036,3135,1.036,3136,1.036,3137,1.924,3138,1.036,3139,1.036,3140,1.036,3141,3.367,3142,1.036,3143,1.036,3144,1.036,3145,1.036,3146,1.924,3147,1.036,3148,1.036,3149,1.036,3150,1.036,3151,1.924,3152,1.036,3153,1.036]],["component/293",[2,0.423,3,0.373]],["title/294",[2,9.667,3,8.531,141,17.831,3154,49.026]],["name/294",[5,1.313]],["text/294",[0,1.858,2,2.101,3,1.854,4,4.23,27,4.294,36,3.626,55,2.212,92,3.331,115,3.399,129,3.098,133,4.206,141,2.913,217,2.913,368,4.359,397,3.494,487,5.423,807,5.423,841,5.423,3055,6.793]],["component/294",[2,0.423,3,0.373]],["title/295-1",[291,30.215,668,35.969]],["name/295-1",[]],["text/295-1",[]],["component/295-1",[]],["title/295-2",[2909,65.105]],["name/295-2",[]],["text/295-2",[]],["component/295-2",[]],["title/295-3",[742,32.986]],["name/295-3",[]],["text/295-3",[]],["component/295-3",[]],["title/295-4",[1234,41.852,2909,51.173]],["name/295-4",[]],["text/295-4",[]],["component/295-4",[]],["title/295-5",[1056,35.362]],["name/295-5",[]],["text/295-5",[]],["component/295-5",[]],["title/295-6",[742,32.986]],["name/295-6",[]],["text/295-6",[]],["component/295-6",[]],["title/295-7",[694,29.903,3056,59.374]],["name/295-7",[]],["text/295-7",[]],["component/295-7",[]],["title/295-8",[1056,35.362]],["name/295-8",[]],["text/295-8",[]],["component/295-8",[]],["title/295-9",[742,32.986]],["name/295-9",[]],["text/295-9",[]],["component/295-9",[]],["title/295-10",[336,39.867]],["name/295-10",[]],["text/295-10",[]],["component/295-10",[]],["title/295-11",[3057,67.707]],["name/295-11",[]],["text/295-11",[]],["component/295-11",[]],["title/295-12",[1056,35.362]],["name/295-12",[]],["text/295-12",[]],["component/295-12",[]],["title/295-13",[742,32.986]],["name/295-13",[]],["text/295-13",[]],["component/295-13",[]],["title/295-14",[1234,41.852,3057,53.218]],["name/295-14",[]],["text/295-14",[]],["component/295-14",[]],["title/295-15",[419,38.044]],["name/295-15",[]],["text/295-15",[]],["component/295-15",[]],["title/295-16",[742,32.986]],["name/295-16",[]],["text/295-16",[]],["component/295-16",[]],["title/295-17",[3058,67.707]],["name/295-17",[]],["text/295-17",[]],["component/295-17",[]],["title/295-18",[1056,35.362]],["name/295-18",[]],["text/295-18",[]],["component/295-18",[]],["title/295-19",[742,32.986]],["name/295-19",[]],["text/295-19",[]],["component/295-19",[]],["title/295-20",[2110,43.374,3058,53.218]],["name/295-20",[]],["text/295-20",[]],["component/295-20",[]],["title/295-21",[1056,35.362]],["name/295-21",[]],["text/295-21",[]],["component/295-21",[]],["title/295-22",[419,38.044]],["name/295-22",[]],["text/295-22",[]],["component/295-22",[]],["title/295-23",[742,32.986]],["name/295-23",[]],["text/295-23",[]],["component/295-23",[]],["title/295-24",[694,29.903,3058,53.218]],["name/295-24",[]],["text/295-24",[]],["component/295-24",[]],["title/295-25",[1056,35.362]],["name/295-25",[]],["text/295-25",[]],["component/295-25",[]],["title/295-26",[742,32.986]],["name/295-26",[]],["text/295-26",[]],["component/295-26",[]],["title/295-27",[2925,48.048,3058,53.218]],["name/295-27",[]],["text/295-27",[]],["component/295-27",[]],["title/295-28",[1056,35.362]],["name/295-28",[]],["text/295-28",[]],["component/295-28",[]],["title/295-29",[419,38.044]],["name/295-29",[]],["text/295-29",[]],["component/295-29",[]],["title/295-30",[742,32.986]],["name/295-30",[]],["text/295-30",[]],["component/295-30",[]],["title/295-31",[3059,75.54]],["name/295-31",[]],["text/295-31",[]],["component/295-31",[]],["title/295-32",[1056,35.362]],["name/295-32",[]],["text/295-32",[]],["component/295-32",[]],["title/295-33",[742,32.986]],["name/295-33",[]],["text/295-33",[]],["component/295-33",[]],["title/295-34",[1234,41.852,3059,59.374]],["name/295-34",[]],["text/295-34",[]],["component/295-34",[]],["title/295-35",[1056,35.362]],["name/295-35",[]],["text/295-35",[]],["component/295-35",[]],["title/295-36",[419,38.044]],["name/295-36",[]],["text/295-36",[]],["component/295-36",[]],["title/295-37",[742,32.986]],["name/295-37",[]],["text/295-37",[]],["component/295-37",[]],["title/295-38",[3060,67.707]],["name/295-38",[]],["text/295-38",[]],["component/295-38",[]],["title/295-39",[1056,35.362]],["name/295-39",[]],["text/295-39",[]],["component/295-39",[]],["title/295-40",[742,32.986]],["name/295-40",[]],["text/295-40",[]],["component/295-40",[]],["title/295-41",[2110,43.374,3060,53.218]],["name/295-41",[]],["text/295-41",[]],["component/295-41",[]],["title/295-42",[1056,35.362]],["name/295-42",[]],["text/295-42",[]],["component/295-42",[]],["title/295-43",[419,38.044]],["name/295-43",[]],["text/295-43",[]],["component/295-43",[]],["title/295-44",[742,32.986]],["name/295-44",[]],["text/295-44",[]],["component/295-44",[]],["title/295-45",[694,29.903,3060,53.218]],["name/295-45",[]],["text/295-45",[]],["component/295-45",[]],["title/295-46",[1056,35.362]],["name/295-46",[]],["text/295-46",[]],["component/295-46",[]],["title/295-47",[742,32.986]],["name/295-47",[]],["text/295-47",[]],["component/295-47",[]],["title/295-48",[2925,48.048,3060,53.218]],["name/295-48",[]],["text/295-48",[]],["component/295-48",[]],["title/295-49",[1056,35.362]],["name/295-49",[]],["text/295-49",[]],["component/295-49",[]],["title/295-50",[419,38.044]],["name/295-50",[]],["text/295-50",[]],["component/295-50",[]],["title/295-51",[742,32.986]],["name/295-51",[]],["text/295-51",[]],["component/295-51",[]],["title/295-52",[40,19.2,958,49.485]],["name/295-52",[]],["text/295-52",[]],["component/295-52",[]],["title/295-53",[1341,43.795,3061,55.815]],["name/295-53",[]],["text/295-53",[]],["component/295-53",[]],["title/295-54",[1056,35.362]],["name/295-54",[]],["text/295-54",[]],["component/295-54",[]],["title/295-55",[742,32.986]],["name/295-55",[]],["text/295-55",[]],["component/295-55",[]],["title/295-56",[1341,36.075,2110,35.728,3061,45.976]],["name/295-56",[]],["text/295-56",[]],["component/295-56",[]],["title/295-57",[1056,35.362]],["name/295-57",[]],["text/295-57",[]],["component/295-57",[]],["title/295-58",[419,38.044]],["name/295-58",[]],["text/295-58",[]],["component/295-58",[]],["title/295-59",[742,32.986]],["name/295-59",[]],["text/295-59",[]],["component/295-59",[]],["title/295-60",[694,24.632,1341,36.075,3061,45.976]],["name/295-60",[]],["text/295-60",[]],["component/295-60",[]],["title/295-61",[1056,35.362]],["name/295-61",[]],["text/295-61",[]],["component/295-61",[]],["title/295-62",[742,32.986]],["name/295-62",[]],["text/295-62",[]],["component/295-62",[]],["title/295-63",[1341,36.075,2110,35.728,3062,53.595]],["name/295-63",[]],["text/295-63",[]],["component/295-63",[]],["title/295-64",[1056,35.362]],["name/295-64",[]],["text/295-64",[]],["component/295-64",[]],["title/295-65",[742,32.986]],["name/295-65",[]],["text/295-65",[]],["component/295-65",[]],["title/295-66",[3063,75.54]],["name/295-66",[]],["text/295-66",[]],["component/295-66",[]],["title/295-67",[1056,35.362]],["name/295-67",[]],["text/295-67",[]],["component/295-67",[]],["title/295-68",[742,32.986]],["name/295-68",[]],["text/295-68",[]],["component/295-68",[]],["title/295-69",[2110,43.374,3063,59.374]],["name/295-69",[]],["text/295-69",[]],["component/295-69",[]],["title/295-70",[1056,35.362]],["name/295-70",[]],["text/295-70",[]],["component/295-70",[]],["title/295-71",[419,38.044]],["name/295-71",[]],["text/295-71",[]],["component/295-71",[]],["title/295-72",[742,32.986]],["name/295-72",[]],["text/295-72",[]],["component/295-72",[]],["title/295-73",[11,26.559,958,49.485]],["name/295-73",[]],["text/295-73",[]],["component/295-73",[]],["title/295-74",[3064,75.54]],["name/295-74",[]],["text/295-74",[]],["component/295-74",[]],["title/295-75",[742,32.986]],["name/295-75",[]],["text/295-75",[]],["component/295-75",[]],["title/295-76",[65,19.606,176,20.116,285,27.802]],["name/295-76",[]],["text/295-76",[]],["component/295-76",[]],["title/295-77",[1234,41.852,3065,65.064]],["name/295-77",[]],["text/295-77",[]],["component/295-77",[]],["title/295-78",[1056,35.362]],["name/295-78",[]],["text/295-78",[]],["component/295-78",[]],["title/295-79",[419,38.044]],["name/295-79",[]],["text/295-79",[]],["component/295-79",[]],["title/295-80",[742,32.986]],["name/295-80",[]],["text/295-80",[]],["component/295-80",[]],["title/295-81",[3066,82.779]],["name/295-81",[]],["text/295-81",[]],["component/295-81",[]],["title/295-82",[1056,35.362]],["name/295-82",[]],["text/295-82",[]],["component/295-82",[]],["title/295-83",[742,32.986]],["name/295-83",[]],["text/295-83",[]],["component/295-83",[]],["title/295-84",[1122,54.67]],["name/295-84",[]],["text/295-84",[]],["component/295-84",[]],["title/295-85",[1234,41.852,3067,65.064]],["name/295-85",[]],["text/295-85",[]],["component/295-85",[]],["title/295-86",[1056,35.362]],["name/295-86",[]],["text/295-86",[]],["component/295-86",[]],["title/295-87",[419,38.044]],["name/295-87",[]],["text/295-87",[]],["component/295-87",[]],["title/295-88",[742,32.986]],["name/295-88",[]],["text/295-88",[]],["component/295-88",[]],["title/295-89",[43,27.47,356,27.631]],["name/295-89",[]],["text/295-89",[]],["component/295-89",[]],["title/295-90",[221,29.951,230,27.434,3068,43.837]],["name/295-90",[]],["text/295-90",[]],["component/295-90",[]],["title/295-91",[742,32.986]],["name/295-91",[]],["text/295-91",[]],["component/295-91",[]],["title/295-92",[115,18.399,221,29.951,3068,43.837]],["name/295-92",[]],["text/295-92",[]],["component/295-92",[]],["title/295-93",[742,32.986]],["name/295-93",[]],["text/295-93",[]],["component/295-93",[]],["title/295",[115,28.417]],["name/295",[115,0.832]],["text/295",[0,2.08,2,0.094,3,0.083,10,1.263,11,2.435,20,0.211,26,0.2,27,0.702,28,0.178,30,0.864,40,2.979,42,3.753,43,0.186,46,0.76,55,0.867,65,1.457,74,0.625,79,0.545,85,0.76,99,0.215,108,0.294,111,3.492,115,0.294,116,0.205,119,1.7,124,0.196,125,0.402,126,0.522,128,0.281,131,0.405,152,1.943,176,2.046,181,0.427,190,0.411,205,0.698,216,4.189,230,1.494,259,2.193,277,1.001,282,0.761,291,2.844,292,0.698,316,0.551,318,0.639,336,0.212,348,1.016,349,0.595,350,0.312,355,0.508,356,0.836,372,2.142,376,0.279,384,2.952,390,0.255,414,0.223,418,1.701,419,2.24,424,0.269,426,0.501,429,0.571,437,0.832,441,5.683,446,0.238,457,0.505,458,0.582,462,4.313,463,3.636,468,0.252,511,0.291,541,2.111,581,1.09,600,0.662,606,0.546,641,0.529,643,2.062,654,0.636,657,1.278,658,0.246,661,0.832,666,0.555,668,1.922,673,0.398,694,1.203,704,0.755,708,0.584,716,0.495,732,0.223,738,2.865,742,0.785,750,0.306,752,0.511,761,0.526,762,0.824,809,1.847,814,0.565,860,1.352,870,0.33,872,0.538,910,0.321,952,0.716,1003,0.857,1004,0.641,1028,0.297,1075,2.256,1108,0.335,1114,0.576,1115,0.651,1186,2.52,1194,3.396,1197,0.317,1221,4.139,1239,5.496,1240,1.231,1267,4.217,1295,1.231,1340,1.779,1341,0.84,1359,0.756,1360,0.317,1422,0.686,1431,2.25,1438,3.453,1439,3.333,1440,0.716,1446,0.641,1449,0.716,1463,1.289,1558,0.756,1572,0.378,1574,0.347,1728,2.576,1780,1.389,2043,0.361,2203,1.297,2525,0.361,2586,0.389,2589,4.691,2680,0.378,2716,1.389,2749,0.389,2799,0.756,2925,1.454,3069,0.361,3070,0.361,3071,0.402,3072,0.781,3073,2.101,3074,1.477,3075,0.781,3076,0.781,3077,0.781,3078,0.781,3079,1.477,3080,0.781,3081,1.477,3082,0.781,3083,2.663,3084,1.477,3085,1.477,3086,1.477,3087,1.477,3088,0.781,3089,0.781,3090,0.781,3091,1.477,3092,0.781,3093,1.102,3094,0.756,3095,1.139,3096,4.302,3097,2.663,3098,0.402,3099,0.781,3100,0.402,3101,0.402,3102,0.7,3103,0.402,3104,0.402,3105,0.361,3106,0.402,3107,0.361,3108,0.7,3109,0.402,3110,0.402,3111,0.781,3112,0.361]],["component/295",[2,0.423,3,0.373]],["title/296-1",[869,51.972]],["name/296-1",[]],["text/296-1",[]],["component/296-1",[]],["title/296-2",[860,42.748]],["name/296-2",[]],["text/296-2",[]],["component/296-2",[]],["title/296-3",[3102,67.707]],["name/296-3",[]],["text/296-3",[]],["component/296-3",[]],["title/296-4",[3113,67.707]],["name/296-4",[]],["text/296-4",[]],["component/296-4",[]],["title/296-5",[3114,67.707]],["name/296-5",[]],["text/296-5",[]],["component/296-5",[]],["title/296-6",[3115,67.707]],["name/296-6",[]],["text/296-6",[]],["component/296-6",[]],["title/296-7",[3107,67.707]],["name/296-7",[]],["text/296-7",[]],["component/296-7",[]],["title/296-8",[3108,67.707]],["name/296-8",[]],["text/296-8",[]],["component/296-8",[]],["title/296-9",[0,20.666]],["name/296-9",[]],["text/296-9",[]],["component/296-9",[]],["title/296-10",[3116,67.707]],["name/296-10",[]],["text/296-10",[]],["component/296-10",[]],["title/296-11",[3117,67.707]],["name/296-11",[]],["text/296-11",[]],["component/296-11",[]],["title/296-12",[3118,67.707]],["name/296-12",[]],["text/296-12",[]],["component/296-12",[]],["title/296-13",[3119,67.707]],["name/296-13",[]],["text/296-13",[]],["component/296-13",[]],["title/296-14",[1258,60.308]],["name/296-14",[]],["text/296-14",[]],["component/296-14",[]],["title/296-15",[3120,67.707]],["name/296-15",[]],["text/296-15",[]],["component/296-15",[]],["title/296-16",[739,47.886]],["name/296-16",[]],["text/296-16",[]],["component/296-16",[]],["title/296-17",[3121,67.707]],["name/296-17",[]],["text/296-17",[]],["component/296-17",[]],["title/296-18",[3122,67.707]],["name/296-18",[]],["text/296-18",[]],["component/296-18",[]],["title/296-19",[213,40.647]],["name/296-19",[]],["text/296-19",[]],["component/296-19",[]],["title/296-20",[3101,75.54]],["name/296-20",[]],["text/296-20",[]],["component/296-20",[]],["title/296-21",[3100,75.54]],["name/296-21",[]],["text/296-21",[]],["component/296-21",[]],["title/296-22",[3105,67.707]],["name/296-22",[]],["text/296-22",[]],["component/296-22",[]],["title/296-23",[3069,67.707]],["name/296-23",[]],["text/296-23",[]],["component/296-23",[]],["title/296-24",[3070,67.707]],["name/296-24",[]],["text/296-24",[]],["component/296-24",[]],["title/296-25",[3112,67.707]],["name/296-25",[]],["text/296-25",[]],["component/296-25",[]],["title/296-26",[3123,67.707]],["name/296-26",[]],["text/296-26",[]],["component/296-26",[]],["title/296-27",[429,55.183]],["name/296-27",[]],["text/296-27",[]],["component/296-27",[]],["title/296-28",[3124,67.707]],["name/296-28",[]],["text/296-28",[]],["component/296-28",[]],["title/296-29",[3125,67.707]],["name/296-29",[]],["text/296-29",[]],["component/296-29",[]],["title/296",[252,53.703]],["name/296",[252,1.573]],["text/296",[0,1.229,10,0.831,11,0.861,19,0.816,20,0.543,26,0.515,27,0.492,30,0.791,40,1.281,42,5.403,55,0.627,65,2.701,78,0.641,85,0.989,92,0.943,95,0.576,99,1.798,108,2.46,118,0.797,124,0.937,125,2.553,127,1.294,152,0.634,155,0.553,164,0.553,172,1.708,173,6.355,176,0.791,178,0.566,181,0.566,190,0.545,212,1.405,213,2.9,216,2.302,230,1.511,257,0.631,258,0.576,259,1.039,260,0.85,265,0.615,270,0.788,277,0.494,304,1.284,313,0.566,317,0.707,331,0.562,350,1.344,354,0.606,355,2.189,356,1.254,358,1.48,361,1.897,372,1.015,376,0.718,384,0.718,397,0.533,414,1.492,418,3.36,437,1.405,441,5.722,451,0.816,457,2.175,510,0.673,541,0.641,555,2.322,585,1.536,596,1.718,643,3.227,654,0.578,655,0.806,657,3.832,666,0.736,673,0.527,694,2.5,704,3.292,732,0.574,739,2.135,781,0.863,798,0.788,867,1.235,869,1.324,877,0.788,879,0.724,899,0.772,1003,0.78,1070,0.816,1072,2.562,1075,0.877,1083,0.928,1111,0.806,1115,0.863,1137,2.902,1179,1.368,1239,6.968,1240,1.603,1258,1.536,1259,0.877,1340,2.282,1344,1.861,1402,0.78,1431,0.797,1452,0.893,1465,0.928,1470,0.928,1823,0.949,1949,0.949,2009,0.877,2199,1.002,2203,2.366,2248,0.863,2265,0.928,2524,1.002,2589,1.658,2972,1.002,3113,0.928,3114,0.928,3115,0.928,3116,0.928,3117,0.928,3118,0.928,3119,0.928,3120,0.928,3121,0.928,3122,0.928,3123,0.928,3124,0.928,3125,0.928,3126,1.036,3127,1.036,3128,1.036,3129,1.036,3130,1.924,3131,3.367,3132,1.036,3133,3.367,3134,1.036,3135,1.036,3136,1.036,3137,1.924,3138,1.036,3139,1.036,3140,1.036,3141,3.367,3142,1.036,3143,1.036,3144,1.036,3145,1.036,3146,1.924,3147,1.036,3148,1.036,3149,1.036,3150,1.036,3151,1.924,3152,1.036,3153,1.036]],["component/296",[2,0.423,3,0.373]],["title/297",[2,9.667,3,8.531,141,17.831,3155,49.026]],["name/297",[5,1.313]],["text/297",[0,1.858,2,2.101,3,1.854,4,4.23,27,4.294,36,3.626,55,2.212,92,3.331,115,3.399,129,3.098,133,4.206,141,2.913,217,2.913,368,4.359,397,3.494,487,5.423,807,5.423,841,5.423,3055,6.793]],["component/297",[2,0.423,3,0.373]],["title/298-1",[291,30.215,668,35.969]],["name/298-1",[]],["text/298-1",[]],["component/298-1",[]],["title/298-2",[2909,65.105]],["name/298-2",[]],["text/298-2",[]],["component/298-2",[]],["title/298-3",[742,32.986]],["name/298-3",[]],["text/298-3",[]],["component/298-3",[]],["title/298-4",[1234,41.852,2909,51.173]],["name/298-4",[]],["text/298-4",[]],["component/298-4",[]],["title/298-5",[742,32.986]],["name/298-5",[]],["text/298-5",[]],["component/298-5",[]],["title/298-6",[694,29.903,3056,59.374]],["name/298-6",[]],["text/298-6",[]],["component/298-6",[]],["title/298-7",[1056,35.362]],["name/298-7",[]],["text/298-7",[]],["component/298-7",[]],["title/298-8",[742,32.986]],["name/298-8",[]],["text/298-8",[]],["component/298-8",[]],["title/298-9",[336,39.867]],["name/298-9",[]],["text/298-9",[]],["component/298-9",[]],["title/298-10",[3057,67.707]],["name/298-10",[]],["text/298-10",[]],["component/298-10",[]],["title/298-11",[1056,35.362]],["name/298-11",[]],["text/298-11",[]],["component/298-11",[]],["title/298-12",[742,32.986]],["name/298-12",[]],["text/298-12",[]],["component/298-12",[]],["title/298-13",[1234,41.852,3057,53.218]],["name/298-13",[]],["text/298-13",[]],["component/298-13",[]],["title/298-14",[419,38.044]],["name/298-14",[]],["text/298-14",[]],["component/298-14",[]],["title/298-15",[742,32.986]],["name/298-15",[]],["text/298-15",[]],["component/298-15",[]],["title/298-16",[3156,67.707]],["name/298-16",[]],["text/298-16",[]],["component/298-16",[]],["title/298-17",[1056,35.362]],["name/298-17",[]],["text/298-17",[]],["component/298-17",[]],["title/298-18",[742,32.986]],["name/298-18",[]],["text/298-18",[]],["component/298-18",[]],["title/298-19",[2110,43.374,3156,53.218]],["name/298-19",[]],["text/298-19",[]],["component/298-19",[]],["title/298-20",[1056,35.362]],["name/298-20",[]],["text/298-20",[]],["component/298-20",[]],["title/298-21",[419,38.044]],["name/298-21",[]],["text/298-21",[]],["component/298-21",[]],["title/298-22",[742,32.986]],["name/298-22",[]],["text/298-22",[]],["component/298-22",[]],["title/298-23",[694,29.903,3156,53.218]],["name/298-23",[]],["text/298-23",[]],["component/298-23",[]],["title/298-24",[1056,35.362]],["name/298-24",[]],["text/298-24",[]],["component/298-24",[]],["title/298-25",[742,32.986]],["name/298-25",[]],["text/298-25",[]],["component/298-25",[]],["title/298-26",[2925,48.048,3156,53.218]],["name/298-26",[]],["text/298-26",[]],["component/298-26",[]],["title/298-27",[1056,35.362]],["name/298-27",[]],["text/298-27",[]],["component/298-27",[]],["title/298-28",[419,38.044]],["name/298-28",[]],["text/298-28",[]],["component/298-28",[]],["title/298-29",[742,32.986]],["name/298-29",[]],["text/298-29",[]],["component/298-29",[]],["title/298-30",[3157,75.54]],["name/298-30",[]],["text/298-30",[]],["component/298-30",[]],["title/298-31",[1056,35.362]],["name/298-31",[]],["text/298-31",[]],["component/298-31",[]],["title/298-32",[742,32.986]],["name/298-32",[]],["text/298-32",[]],["component/298-32",[]],["title/298-33",[1234,41.852,3157,59.374]],["name/298-33",[]],["text/298-33",[]],["component/298-33",[]],["title/298-34",[1056,35.362]],["name/298-34",[]],["text/298-34",[]],["component/298-34",[]],["title/298-35",[419,38.044]],["name/298-35",[]],["text/298-35",[]],["component/298-35",[]],["title/298-36",[742,32.986]],["name/298-36",[]],["text/298-36",[]],["component/298-36",[]],["title/298-37",[3158,67.707]],["name/298-37",[]],["text/298-37",[]],["component/298-37",[]],["title/298-38",[1056,35.362]],["name/298-38",[]],["text/298-38",[]],["component/298-38",[]],["title/298-39",[742,32.986]],["name/298-39",[]],["text/298-39",[]],["component/298-39",[]],["title/298-40",[2110,43.374,3158,53.218]],["name/298-40",[]],["text/298-40",[]],["component/298-40",[]],["title/298-41",[1056,35.362]],["name/298-41",[]],["text/298-41",[]],["component/298-41",[]],["title/298-42",[419,38.044]],["name/298-42",[]],["text/298-42",[]],["component/298-42",[]],["title/298-43",[742,32.986]],["name/298-43",[]],["text/298-43",[]],["component/298-43",[]],["title/298-44",[694,29.903,3158,53.218]],["name/298-44",[]],["text/298-44",[]],["component/298-44",[]],["title/298-45",[1056,35.362]],["name/298-45",[]],["text/298-45",[]],["component/298-45",[]],["title/298-46",[742,32.986]],["name/298-46",[]],["text/298-46",[]],["component/298-46",[]],["title/298-47",[2925,48.048,3158,53.218]],["name/298-47",[]],["text/298-47",[]],["component/298-47",[]],["title/298-48",[1056,35.362]],["name/298-48",[]],["text/298-48",[]],["component/298-48",[]],["title/298-49",[419,38.044]],["name/298-49",[]],["text/298-49",[]],["component/298-49",[]],["title/298-50",[742,32.986]],["name/298-50",[]],["text/298-50",[]],["component/298-50",[]],["title/298-51",[40,19.2,958,49.485]],["name/298-51",[]],["text/298-51",[]],["component/298-51",[]],["title/298-52",[1341,43.795,3159,55.815]],["name/298-52",[]],["text/298-52",[]],["component/298-52",[]],["title/298-53",[1056,35.362]],["name/298-53",[]],["text/298-53",[]],["component/298-53",[]],["title/298-54",[742,32.986]],["name/298-54",[]],["text/298-54",[]],["component/298-54",[]],["title/298-55",[1341,36.075,2110,35.728,3159,45.976]],["name/298-55",[]],["text/298-55",[]],["component/298-55",[]],["title/298-56",[1056,35.362]],["name/298-56",[]],["text/298-56",[]],["component/298-56",[]],["title/298-57",[419,38.044]],["name/298-57",[]],["text/298-57",[]],["component/298-57",[]],["title/298-58",[742,32.986]],["name/298-58",[]],["text/298-58",[]],["component/298-58",[]],["title/298-59",[694,24.632,1341,36.075,3159,45.976]],["name/298-59",[]],["text/298-59",[]],["component/298-59",[]],["title/298-60",[1056,35.362]],["name/298-60",[]],["text/298-60",[]],["component/298-60",[]],["title/298-61",[742,32.986]],["name/298-61",[]],["text/298-61",[]],["component/298-61",[]],["title/298-62",[1341,36.075,2110,35.728,3160,53.595]],["name/298-62",[]],["text/298-62",[]],["component/298-62",[]],["title/298-63",[1056,35.362]],["name/298-63",[]],["text/298-63",[]],["component/298-63",[]],["title/298-64",[742,32.986]],["name/298-64",[]],["text/298-64",[]],["component/298-64",[]],["title/298-65",[3161,75.54]],["name/298-65",[]],["text/298-65",[]],["component/298-65",[]],["title/298-66",[1056,35.362]],["name/298-66",[]],["text/298-66",[]],["component/298-66",[]],["title/298-67",[742,32.986]],["name/298-67",[]],["text/298-67",[]],["component/298-67",[]],["title/298-68",[2110,43.374,3161,59.374]],["name/298-68",[]],["text/298-68",[]],["component/298-68",[]],["title/298-69",[1056,35.362]],["name/298-69",[]],["text/298-69",[]],["component/298-69",[]],["title/298-70",[419,38.044]],["name/298-70",[]],["text/298-70",[]],["component/298-70",[]],["title/298-71",[742,32.986]],["name/298-71",[]],["text/298-71",[]],["component/298-71",[]],["title/298-72",[11,26.559,958,49.485]],["name/298-72",[]],["text/298-72",[]],["component/298-72",[]],["title/298-73",[3064,75.54]],["name/298-73",[]],["text/298-73",[]],["component/298-73",[]],["title/298-74",[742,32.986]],["name/298-74",[]],["text/298-74",[]],["component/298-74",[]],["title/298-75",[65,19.606,176,20.116,285,27.802]],["name/298-75",[]],["text/298-75",[]],["component/298-75",[]],["title/298-76",[1234,41.852,3162,65.064]],["name/298-76",[]],["text/298-76",[]],["component/298-76",[]],["title/298-77",[1056,35.362]],["name/298-77",[]],["text/298-77",[]],["component/298-77",[]],["title/298-78",[419,38.044]],["name/298-78",[]],["text/298-78",[]],["component/298-78",[]],["title/298-79",[742,32.986]],["name/298-79",[]],["text/298-79",[]],["component/298-79",[]],["title/298-80",[3163,82.779]],["name/298-80",[]],["text/298-80",[]],["component/298-80",[]],["title/298-81",[1056,35.362]],["name/298-81",[]],["text/298-81",[]],["component/298-81",[]],["title/298-82",[742,32.986]],["name/298-82",[]],["text/298-82",[]],["component/298-82",[]],["title/298-83",[1122,54.67]],["name/298-83",[]],["text/298-83",[]],["component/298-83",[]],["title/298-84",[1234,41.852,3164,65.064]],["name/298-84",[]],["text/298-84",[]],["component/298-84",[]],["title/298-85",[1056,35.362]],["name/298-85",[]],["text/298-85",[]],["component/298-85",[]],["title/298-86",[419,38.044]],["name/298-86",[]],["text/298-86",[]],["component/298-86",[]],["title/298-87",[742,32.986]],["name/298-87",[]],["text/298-87",[]],["component/298-87",[]],["title/298-88",[43,27.47,356,27.631]],["name/298-88",[]],["text/298-88",[]],["component/298-88",[]],["title/298-89",[221,29.951,230,27.434,3068,43.837]],["name/298-89",[]],["text/298-89",[]],["component/298-89",[]],["title/298-90",[742,32.986]],["name/298-90",[]],["text/298-90",[]],["component/298-90",[]],["title/298-91",[115,18.399,221,29.951,3068,43.837]],["name/298-91",[]],["text/298-91",[]],["component/298-91",[]],["title/298-92",[742,32.986]],["name/298-92",[]],["text/298-92",[]],["component/298-92",[]],["title/298",[115,28.417]],["name/298",[115,0.832]],["text/298",[0,1.921,2,0.094,3,0.083,10,1.272,11,2.448,20,0.213,26,0.202,27,0.708,28,0.179,30,0.871,40,2.673,42,3.71,43,0.188,46,0.766,55,0.873,65,1.467,74,0.631,79,0.549,85,0.766,99,0.217,111,3.507,115,0.296,116,0.207,119,1.713,124,0.198,125,3.225,126,0.526,128,0.284,131,0.408,152,1.956,176,2.057,181,0.431,190,0.414,205,0.703,216,2.879,230,1.504,259,2.207,277,1.009,282,0.767,291,2.858,292,0.703,316,0.555,318,0.644,336,0.214,348,1.024,349,0.6,350,0.314,355,0.512,356,0.843,372,2.156,376,0.281,384,2.97,390,0.257,414,0.225,418,1.713,419,2.253,424,0.271,426,0.506,429,0.576,437,0.839,441,5.601,446,0.24,457,0.509,458,0.587,462,4.334,463,3.554,468,0.254,511,0.294,541,2.125,581,1.098,600,0.667,606,0.551,641,0.534,643,2.076,654,0.641,657,1.288,658,0.249,661,0.839,666,0.56,668,1.783,673,0.401,694,1.212,704,0.762,708,0.589,716,0.499,732,0.225,738,2.884,742,0.791,750,0.309,752,0.516,761,0.53,762,0.831,809,1.86,814,0.57,860,1.362,870,0.333,872,0.542,910,0.324,952,0.722,1003,0.864,1004,0.647,1028,0.299,1075,2.272,1108,0.338,1114,0.581,1115,0.657,1186,2.537,1194,3.3,1197,0.32,1221,4.159,1239,5.457,1240,1.241,1267,4.24,1295,1.241,1340,1.793,1341,0.847,1359,0.762,1360,0.32,1422,0.692,1431,2.265,1438,3.474,1439,3.354,1440,0.722,1446,0.647,1449,0.722,1463,1.068,1558,0.762,1572,0.381,1574,0.35,1728,2.594,1780,1.4,2043,0.364,2203,1.307,2279,2.406,2525,0.364,2586,0.393,2589,4.716,2680,0.381,2716,1.4,2749,0.393,2799,0.762,2925,1.466,3069,0.364,3070,0.364,3071,0.406,3072,0.788,3073,2.117,3074,1.489,3075,0.788,3076,0.788,3077,0.788,3078,0.788,3079,1.489,3080,0.788,3081,1.489,3082,0.788,3083,2.682,3084,1.489,3085,1.489,3086,1.489,3087,1.489,3088,0.788,3089,0.788,3090,0.788,3091,1.489,3092,0.788,3093,1.111,3094,0.762,3095,1.148,3096,4.328,3097,2.682,3098,0.406,3099,0.788,3102,0.706,3103,0.406,3104,0.406,3105,0.364,3106,0.406,3107,0.364,3108,0.706,3109,0.406,3110,0.406,3111,0.788,3112,0.364,3165,5.482,3166,0.406,3167,0.406,3168,0.445]],["component/298",[2,0.423,3,0.373]],["title/299-1",[869,51.972]],["name/299-1",[]],["text/299-1",[]],["component/299-1",[]],["title/299-2",[860,42.748]],["name/299-2",[]],["text/299-2",[]],["component/299-2",[]],["title/299-3",[3102,67.707]],["name/299-3",[]],["text/299-3",[]],["component/299-3",[]],["title/299-4",[3113,67.707]],["name/299-4",[]],["text/299-4",[]],["component/299-4",[]],["title/299-5",[3114,67.707]],["name/299-5",[]],["text/299-5",[]],["component/299-5",[]],["title/299-6",[3115,67.707]],["name/299-6",[]],["text/299-6",[]],["component/299-6",[]],["title/299-7",[3107,67.707]],["name/299-7",[]],["text/299-7",[]],["component/299-7",[]],["title/299-8",[3108,67.707]],["name/299-8",[]],["text/299-8",[]],["component/299-8",[]],["title/299-9",[0,20.666]],["name/299-9",[]],["text/299-9",[]],["component/299-9",[]],["title/299-10",[3116,67.707]],["name/299-10",[]],["text/299-10",[]],["component/299-10",[]],["title/299-11",[3117,67.707]],["name/299-11",[]],["text/299-11",[]],["component/299-11",[]],["title/299-12",[3118,67.707]],["name/299-12",[]],["text/299-12",[]],["component/299-12",[]],["title/299-13",[3119,67.707]],["name/299-13",[]],["text/299-13",[]],["component/299-13",[]],["title/299-14",[1258,60.308]],["name/299-14",[]],["text/299-14",[]],["component/299-14",[]],["title/299-15",[3120,67.707]],["name/299-15",[]],["text/299-15",[]],["component/299-15",[]],["title/299-16",[739,47.886]],["name/299-16",[]],["text/299-16",[]],["component/299-16",[]],["title/299-17",[3121,67.707]],["name/299-17",[]],["text/299-17",[]],["component/299-17",[]],["title/299-18",[3122,67.707]],["name/299-18",[]],["text/299-18",[]],["component/299-18",[]],["title/299-19",[213,40.647]],["name/299-19",[]],["text/299-19",[]],["component/299-19",[]],["title/299-20",[3167,75.54]],["name/299-20",[]],["text/299-20",[]],["component/299-20",[]],["title/299-21",[3166,75.54]],["name/299-21",[]],["text/299-21",[]],["component/299-21",[]],["title/299-22",[3105,67.707]],["name/299-22",[]],["text/299-22",[]],["component/299-22",[]],["title/299-23",[3069,67.707]],["name/299-23",[]],["text/299-23",[]],["component/299-23",[]],["title/299-24",[3070,67.707]],["name/299-24",[]],["text/299-24",[]],["component/299-24",[]],["title/299-25",[3112,67.707]],["name/299-25",[]],["text/299-25",[]],["component/299-25",[]],["title/299-26",[3123,67.707]],["name/299-26",[]],["text/299-26",[]],["component/299-26",[]],["title/299-27",[429,55.183]],["name/299-27",[]],["text/299-27",[]],["component/299-27",[]],["title/299-28",[3124,67.707]],["name/299-28",[]],["text/299-28",[]],["component/299-28",[]],["title/299-29",[3125,67.707]],["name/299-29",[]],["text/299-29",[]],["component/299-29",[]],["title/299",[252,53.703]],["name/299",[252,1.573]],["text/299",[0,1.229,10,0.831,11,0.861,19,0.816,20,0.543,26,0.515,27,0.492,30,0.791,40,1.281,42,5.403,55,0.627,65,2.701,78,0.641,85,0.989,92,0.943,95,0.576,99,1.798,108,2.46,118,0.797,124,0.937,125,2.553,127,1.294,152,0.634,155,0.553,164,0.553,172,1.708,173,6.355,176,0.791,178,0.566,181,0.566,190,0.545,212,1.405,213,2.9,216,2.302,230,1.511,257,0.631,258,0.576,259,1.039,260,0.85,265,0.615,270,0.788,277,0.494,304,1.284,313,0.566,317,0.707,331,0.562,350,1.344,354,0.606,355,2.189,356,1.254,358,1.48,361,1.897,372,1.015,376,0.718,384,0.718,397,0.533,414,1.492,418,3.36,437,1.405,441,5.722,451,0.816,457,2.175,510,0.673,541,0.641,555,2.322,585,1.536,596,1.718,643,3.227,654,0.578,655,0.806,657,3.832,666,0.736,673,0.527,694,2.5,704,3.292,732,0.574,739,2.135,781,0.863,798,0.788,867,1.235,869,1.324,877,0.788,879,0.724,899,0.772,1003,0.78,1070,0.816,1072,2.562,1075,0.877,1083,0.928,1111,0.806,1115,0.863,1137,2.902,1179,1.368,1239,6.968,1240,1.603,1258,1.536,1259,0.877,1340,2.282,1344,1.861,1402,0.78,1431,0.797,1452,0.893,1465,0.928,1470,0.928,1823,0.949,1949,0.949,2009,0.877,2199,1.002,2203,2.366,2248,0.863,2265,0.928,2524,1.002,2589,1.658,2972,1.002,3113,0.928,3114,0.928,3115,0.928,3116,0.928,3117,0.928,3118,0.928,3119,0.928,3120,0.928,3121,0.928,3122,0.928,3123,0.928,3124,0.928,3125,0.928,3126,1.036,3127,1.036,3128,1.036,3129,1.036,3130,1.924,3131,3.367,3132,1.036,3133,3.367,3134,1.036,3135,1.036,3136,1.036,3137,1.924,3138,1.036,3139,1.036,3140,1.036,3141,3.367,3142,1.036,3143,1.036,3144,1.036,3145,1.036,3146,1.924,3147,1.036,3148,1.036,3149,1.036,3150,1.036,3151,1.924,3152,1.036,3153,1.036]],["component/299",[2,0.423,3,0.373]],["title/300",[2,9.667,3,8.531,141,17.831,3169,49.026]],["name/300",[5,1.313]],["text/300",[0,1.858,2,2.101,3,1.854,4,4.23,27,4.294,36,3.626,55,2.212,92,3.331,115,3.399,129,3.098,133,4.206,141,2.913,217,2.913,368,4.359,397,3.494,487,5.423,807,5.423,841,5.423,3055,6.793]],["component/300",[2,0.423,3,0.373]],["title/301-1",[291,30.215,668,35.969]],["name/301-1",[]],["text/301-1",[]],["component/301-1",[]],["title/301-2",[2909,65.105]],["name/301-2",[]],["text/301-2",[]],["component/301-2",[]],["title/301-3",[742,32.986]],["name/301-3",[]],["text/301-3",[]],["component/301-3",[]],["title/301-4",[1234,41.852,2909,51.173]],["name/301-4",[]],["text/301-4",[]],["component/301-4",[]],["title/301-5",[1056,35.362]],["name/301-5",[]],["text/301-5",[]],["component/301-5",[]],["title/301-6",[742,32.986]],["name/301-6",[]],["text/301-6",[]],["component/301-6",[]],["title/301-7",[694,29.903,3056,59.374]],["name/301-7",[]],["text/301-7",[]],["component/301-7",[]],["title/301-8",[1056,35.362]],["name/301-8",[]],["text/301-8",[]],["component/301-8",[]],["title/301-9",[742,32.986]],["name/301-9",[]],["text/301-9",[]],["component/301-9",[]],["title/301-10",[336,39.867]],["name/301-10",[]],["text/301-10",[]],["component/301-10",[]],["title/301-11",[3057,67.707]],["name/301-11",[]],["text/301-11",[]],["component/301-11",[]],["title/301-12",[1056,35.362]],["name/301-12",[]],["text/301-12",[]],["component/301-12",[]],["title/301-13",[742,32.986]],["name/301-13",[]],["text/301-13",[]],["component/301-13",[]],["title/301-14",[1234,41.852,3057,53.218]],["name/301-14",[]],["text/301-14",[]],["component/301-14",[]],["title/301-15",[419,38.044]],["name/301-15",[]],["text/301-15",[]],["component/301-15",[]],["title/301-16",[742,32.986]],["name/301-16",[]],["text/301-16",[]],["component/301-16",[]],["title/301-17",[3156,67.707]],["name/301-17",[]],["text/301-17",[]],["component/301-17",[]],["title/301-18",[1056,35.362]],["name/301-18",[]],["text/301-18",[]],["component/301-18",[]],["title/301-19",[742,32.986]],["name/301-19",[]],["text/301-19",[]],["component/301-19",[]],["title/301-20",[2110,43.374,3156,53.218]],["name/301-20",[]],["text/301-20",[]],["component/301-20",[]],["title/301-21",[1056,35.362]],["name/301-21",[]],["text/301-21",[]],["component/301-21",[]],["title/301-22",[419,38.044]],["name/301-22",[]],["text/301-22",[]],["component/301-22",[]],["title/301-23",[742,32.986]],["name/301-23",[]],["text/301-23",[]],["component/301-23",[]],["title/301-24",[694,29.903,3156,53.218]],["name/301-24",[]],["text/301-24",[]],["component/301-24",[]],["title/301-25",[1056,35.362]],["name/301-25",[]],["text/301-25",[]],["component/301-25",[]],["title/301-26",[742,32.986]],["name/301-26",[]],["text/301-26",[]],["component/301-26",[]],["title/301-27",[2925,48.048,3156,53.218]],["name/301-27",[]],["text/301-27",[]],["component/301-27",[]],["title/301-28",[1056,35.362]],["name/301-28",[]],["text/301-28",[]],["component/301-28",[]],["title/301-29",[419,38.044]],["name/301-29",[]],["text/301-29",[]],["component/301-29",[]],["title/301-30",[742,32.986]],["name/301-30",[]],["text/301-30",[]],["component/301-30",[]],["title/301-31",[3157,75.54]],["name/301-31",[]],["text/301-31",[]],["component/301-31",[]],["title/301-32",[1056,35.362]],["name/301-32",[]],["text/301-32",[]],["component/301-32",[]],["title/301-33",[742,32.986]],["name/301-33",[]],["text/301-33",[]],["component/301-33",[]],["title/301-34",[1234,41.852,3157,59.374]],["name/301-34",[]],["text/301-34",[]],["component/301-34",[]],["title/301-35",[1056,35.362]],["name/301-35",[]],["text/301-35",[]],["component/301-35",[]],["title/301-36",[419,38.044]],["name/301-36",[]],["text/301-36",[]],["component/301-36",[]],["title/301-37",[742,32.986]],["name/301-37",[]],["text/301-37",[]],["component/301-37",[]],["title/301-38",[3158,67.707]],["name/301-38",[]],["text/301-38",[]],["component/301-38",[]],["title/301-39",[1056,35.362]],["name/301-39",[]],["text/301-39",[]],["component/301-39",[]],["title/301-40",[742,32.986]],["name/301-40",[]],["text/301-40",[]],["component/301-40",[]],["title/301-41",[2110,43.374,3158,53.218]],["name/301-41",[]],["text/301-41",[]],["component/301-41",[]],["title/301-42",[1056,35.362]],["name/301-42",[]],["text/301-42",[]],["component/301-42",[]],["title/301-43",[419,38.044]],["name/301-43",[]],["text/301-43",[]],["component/301-43",[]],["title/301-44",[742,32.986]],["name/301-44",[]],["text/301-44",[]],["component/301-44",[]],["title/301-45",[694,29.903,3158,53.218]],["name/301-45",[]],["text/301-45",[]],["component/301-45",[]],["title/301-46",[1056,35.362]],["name/301-46",[]],["text/301-46",[]],["component/301-46",[]],["title/301-47",[742,32.986]],["name/301-47",[]],["text/301-47",[]],["component/301-47",[]],["title/301-48",[2925,48.048,3158,53.218]],["name/301-48",[]],["text/301-48",[]],["component/301-48",[]],["title/301-49",[1056,35.362]],["name/301-49",[]],["text/301-49",[]],["component/301-49",[]],["title/301-50",[419,38.044]],["name/301-50",[]],["text/301-50",[]],["component/301-50",[]],["title/301-51",[742,32.986]],["name/301-51",[]],["text/301-51",[]],["component/301-51",[]],["title/301-52",[40,19.2,958,49.485]],["name/301-52",[]],["text/301-52",[]],["component/301-52",[]],["title/301-53",[1341,43.795,3159,55.815]],["name/301-53",[]],["text/301-53",[]],["component/301-53",[]],["title/301-54",[1056,35.362]],["name/301-54",[]],["text/301-54",[]],["component/301-54",[]],["title/301-55",[742,32.986]],["name/301-55",[]],["text/301-55",[]],["component/301-55",[]],["title/301-56",[1341,36.075,2110,35.728,3159,45.976]],["name/301-56",[]],["text/301-56",[]],["component/301-56",[]],["title/301-57",[1056,35.362]],["name/301-57",[]],["text/301-57",[]],["component/301-57",[]],["title/301-58",[419,38.044]],["name/301-58",[]],["text/301-58",[]],["component/301-58",[]],["title/301-59",[742,32.986]],["name/301-59",[]],["text/301-59",[]],["component/301-59",[]],["title/301-60",[694,24.632,1341,36.075,3159,45.976]],["name/301-60",[]],["text/301-60",[]],["component/301-60",[]],["title/301-61",[1056,35.362]],["name/301-61",[]],["text/301-61",[]],["component/301-61",[]],["title/301-62",[742,32.986]],["name/301-62",[]],["text/301-62",[]],["component/301-62",[]],["title/301-63",[1341,36.075,2110,35.728,3160,53.595]],["name/301-63",[]],["text/301-63",[]],["component/301-63",[]],["title/301-64",[1056,35.362]],["name/301-64",[]],["text/301-64",[]],["component/301-64",[]],["title/301-65",[742,32.986]],["name/301-65",[]],["text/301-65",[]],["component/301-65",[]],["title/301-66",[3161,75.54]],["name/301-66",[]],["text/301-66",[]],["component/301-66",[]],["title/301-67",[1056,35.362]],["name/301-67",[]],["text/301-67",[]],["component/301-67",[]],["title/301-68",[742,32.986]],["name/301-68",[]],["text/301-68",[]],["component/301-68",[]],["title/301-69",[2110,43.374,3161,59.374]],["name/301-69",[]],["text/301-69",[]],["component/301-69",[]],["title/301-70",[1056,35.362]],["name/301-70",[]],["text/301-70",[]],["component/301-70",[]],["title/301-71",[419,38.044]],["name/301-71",[]],["text/301-71",[]],["component/301-71",[]],["title/301-72",[742,32.986]],["name/301-72",[]],["text/301-72",[]],["component/301-72",[]],["title/301-73",[11,26.559,958,49.485]],["name/301-73",[]],["text/301-73",[]],["component/301-73",[]],["title/301-74",[3064,75.54]],["name/301-74",[]],["text/301-74",[]],["component/301-74",[]],["title/301-75",[742,32.986]],["name/301-75",[]],["text/301-75",[]],["component/301-75",[]],["title/301-76",[65,19.606,176,20.116,285,27.802]],["name/301-76",[]],["text/301-76",[]],["component/301-76",[]],["title/301-77",[1234,41.852,3162,65.064]],["name/301-77",[]],["text/301-77",[]],["component/301-77",[]],["title/301-78",[1056,35.362]],["name/301-78",[]],["text/301-78",[]],["component/301-78",[]],["title/301-79",[419,38.044]],["name/301-79",[]],["text/301-79",[]],["component/301-79",[]],["title/301-80",[742,32.986]],["name/301-80",[]],["text/301-80",[]],["component/301-80",[]],["title/301-81",[3163,82.779]],["name/301-81",[]],["text/301-81",[]],["component/301-81",[]],["title/301-82",[1056,35.362]],["name/301-82",[]],["text/301-82",[]],["component/301-82",[]],["title/301-83",[742,32.986]],["name/301-83",[]],["text/301-83",[]],["component/301-83",[]],["title/301-84",[1122,54.67]],["name/301-84",[]],["text/301-84",[]],["component/301-84",[]],["title/301-85",[1234,41.852,3164,65.064]],["name/301-85",[]],["text/301-85",[]],["component/301-85",[]],["title/301-86",[1056,35.362]],["name/301-86",[]],["text/301-86",[]],["component/301-86",[]],["title/301-87",[419,38.044]],["name/301-87",[]],["text/301-87",[]],["component/301-87",[]],["title/301-88",[742,32.986]],["name/301-88",[]],["text/301-88",[]],["component/301-88",[]],["title/301-89",[43,27.47,356,27.631]],["name/301-89",[]],["text/301-89",[]],["component/301-89",[]],["title/301-90",[221,29.951,230,27.434,3068,43.837]],["name/301-90",[]],["text/301-90",[]],["component/301-90",[]],["title/301-91",[742,32.986]],["name/301-91",[]],["text/301-91",[]],["component/301-91",[]],["title/301-92",[115,18.399,221,29.951,3068,43.837]],["name/301-92",[]],["text/301-92",[]],["component/301-92",[]],["title/301-93",[742,32.986]],["name/301-93",[]],["text/301-93",[]],["component/301-93",[]],["title/301",[115,28.417]],["name/301",[115,0.832]],["text/301",[0,1.912,2,0.093,3,0.082,10,1.263,11,2.433,20,0.211,26,0.2,27,0.701,28,0.177,30,0.863,40,2.663,42,3.751,43,0.186,46,0.759,55,0.867,65,1.456,74,0.625,79,0.544,85,0.759,99,0.215,108,0.294,111,3.49,115,0.294,116,0.205,119,1.699,124,0.196,125,3.208,126,0.521,128,0.281,131,0.404,152,1.941,176,2.045,181,0.427,190,0.41,205,0.697,216,2.934,230,1.493,259,2.192,277,1.001,282,0.76,291,2.842,292,0.697,316,0.55,318,0.638,336,0.212,348,1.016,349,0.594,350,0.312,355,0.507,356,0.836,372,2.141,376,0.279,384,2.951,390,0.255,414,0.223,418,1.7,419,2.239,424,0.268,426,0.501,429,0.57,437,0.831,441,5.682,446,0.237,457,0.504,458,0.582,462,4.311,463,3.634,468,0.252,511,0.291,541,2.11,581,1.089,600,0.661,606,0.546,641,0.529,643,2.061,654,0.636,657,1.277,658,0.246,661,0.831,666,0.555,668,1.92,673,0.397,694,1.202,704,0.755,708,0.583,716,0.495,732,0.223,738,2.864,742,0.784,750,0.306,752,0.511,761,0.525,762,0.824,809,1.845,814,0.565,860,1.351,870,0.33,872,0.537,910,0.321,952,0.716,1003,0.857,1004,0.641,1028,0.297,1075,2.254,1108,0.335,1114,0.576,1115,0.651,1186,2.518,1194,3.394,1197,0.317,1221,4.137,1239,5.494,1240,1.23,1267,4.214,1295,1.23,1340,1.778,1341,0.84,1359,0.755,1360,0.317,1422,0.686,1431,2.248,1438,3.451,1439,3.331,1440,0.716,1446,0.641,1449,0.716,1463,1.288,1558,0.755,1572,0.378,1574,0.346,1728,2.574,1780,1.388,2043,0.36,2203,1.296,2279,2.387,2525,0.36,2586,0.389,2589,4.689,2680,0.378,2716,1.388,2749,0.389,2799,0.755,2925,1.453,3069,0.36,3070,0.36,3071,0.402,3072,0.781,3073,2.099,3074,1.476,3075,0.781,3076,0.781,3077,0.781,3078,0.781,3079,1.476,3080,0.781,3081,1.476,3082,0.781,3083,2.661,3084,1.476,3085,1.476,3086,1.476,3087,1.476,3088,0.781,3089,0.781,3090,0.781,3091,1.476,3092,0.781,3093,1.101,3094,0.755,3095,1.138,3096,4.3,3097,2.661,3098,0.402,3099,0.781,3102,0.7,3103,0.402,3104,0.402,3105,0.36,3106,0.402,3107,0.36,3108,0.7,3109,0.402,3110,0.402,3111,0.781,3112,0.36,3165,5.448,3166,0.402,3167,0.402,3168,0.441]],["component/301",[2,0.423,3,0.373]],["title/302-1",[869,51.972]],["name/302-1",[]],["text/302-1",[]],["component/302-1",[]],["title/302-2",[860,42.748]],["name/302-2",[]],["text/302-2",[]],["component/302-2",[]],["title/302-3",[3102,67.707]],["name/302-3",[]],["text/302-3",[]],["component/302-3",[]],["title/302-4",[3113,67.707]],["name/302-4",[]],["text/302-4",[]],["component/302-4",[]],["title/302-5",[3114,67.707]],["name/302-5",[]],["text/302-5",[]],["component/302-5",[]],["title/302-6",[3115,67.707]],["name/302-6",[]],["text/302-6",[]],["component/302-6",[]],["title/302-7",[3107,67.707]],["name/302-7",[]],["text/302-7",[]],["component/302-7",[]],["title/302-8",[3108,67.707]],["name/302-8",[]],["text/302-8",[]],["component/302-8",[]],["title/302-9",[0,20.666]],["name/302-9",[]],["text/302-9",[]],["component/302-9",[]],["title/302-10",[3116,67.707]],["name/302-10",[]],["text/302-10",[]],["component/302-10",[]],["title/302-11",[3117,67.707]],["name/302-11",[]],["text/302-11",[]],["component/302-11",[]],["title/302-12",[3118,67.707]],["name/302-12",[]],["text/302-12",[]],["component/302-12",[]],["title/302-13",[3119,67.707]],["name/302-13",[]],["text/302-13",[]],["component/302-13",[]],["title/302-14",[1258,60.308]],["name/302-14",[]],["text/302-14",[]],["component/302-14",[]],["title/302-15",[3120,67.707]],["name/302-15",[]],["text/302-15",[]],["component/302-15",[]],["title/302-16",[739,47.886]],["name/302-16",[]],["text/302-16",[]],["component/302-16",[]],["title/302-17",[3121,67.707]],["name/302-17",[]],["text/302-17",[]],["component/302-17",[]],["title/302-18",[3122,67.707]],["name/302-18",[]],["text/302-18",[]],["component/302-18",[]],["title/302-19",[213,40.647]],["name/302-19",[]],["text/302-19",[]],["component/302-19",[]],["title/302-20",[3167,75.54]],["name/302-20",[]],["text/302-20",[]],["component/302-20",[]],["title/302-21",[3166,75.54]],["name/302-21",[]],["text/302-21",[]],["component/302-21",[]],["title/302-22",[3105,67.707]],["name/302-22",[]],["text/302-22",[]],["component/302-22",[]],["title/302-23",[3069,67.707]],["name/302-23",[]],["text/302-23",[]],["component/302-23",[]],["title/302-24",[3070,67.707]],["name/302-24",[]],["text/302-24",[]],["component/302-24",[]],["title/302-25",[3112,67.707]],["name/302-25",[]],["text/302-25",[]],["component/302-25",[]],["title/302-26",[3123,67.707]],["name/302-26",[]],["text/302-26",[]],["component/302-26",[]],["title/302-27",[429,55.183]],["name/302-27",[]],["text/302-27",[]],["component/302-27",[]],["title/302-28",[3124,67.707]],["name/302-28",[]],["text/302-28",[]],["component/302-28",[]],["title/302-29",[3125,67.707]],["name/302-29",[]],["text/302-29",[]],["component/302-29",[]],["title/302",[252,53.703]],["name/302",[252,1.573]],["text/302",[0,1.229,10,0.831,11,0.861,19,0.816,20,0.543,26,0.515,27,0.492,30,0.791,40,1.281,42,5.403,55,0.627,65,2.701,78,0.641,85,0.989,92,0.943,95,0.576,99,1.798,108,2.46,118,0.797,124,0.937,125,2.553,127,1.294,152,0.634,155,0.553,164,0.553,172,1.708,173,6.355,176,0.791,178,0.566,181,0.566,190,0.545,212,1.405,213,2.9,216,2.302,230,1.511,257,0.631,258,0.576,259,1.039,260,0.85,265,0.615,270,0.788,277,0.494,304,1.284,313,0.566,317,0.707,331,0.562,350,1.344,354,0.606,355,2.189,356,1.254,358,1.48,361,1.897,372,1.015,376,0.718,384,0.718,397,0.533,414,1.492,418,3.36,437,1.405,441,5.722,451,0.816,457,2.175,510,0.673,541,0.641,555,2.322,585,1.536,596,1.718,643,3.227,654,0.578,655,0.806,657,3.832,666,0.736,673,0.527,694,2.5,704,3.292,732,0.574,739,2.135,781,0.863,798,0.788,867,1.235,869,1.324,877,0.788,879,0.724,899,0.772,1003,0.78,1070,0.816,1072,2.562,1075,0.877,1083,0.928,1111,0.806,1115,0.863,1137,2.902,1179,1.368,1239,6.968,1240,1.603,1258,1.536,1259,0.877,1340,2.282,1344,1.861,1402,0.78,1431,0.797,1452,0.893,1465,0.928,1470,0.928,1823,0.949,1949,0.949,2009,0.877,2199,1.002,2203,2.366,2248,0.863,2265,0.928,2524,1.002,2589,1.658,2972,1.002,3113,0.928,3114,0.928,3115,0.928,3116,0.928,3117,0.928,3118,0.928,3119,0.928,3120,0.928,3121,0.928,3122,0.928,3123,0.928,3124,0.928,3125,0.928,3126,1.036,3127,1.036,3128,1.036,3129,1.036,3130,1.924,3131,3.367,3132,1.036,3133,3.367,3134,1.036,3135,1.036,3136,1.036,3137,1.924,3138,1.036,3139,1.036,3140,1.036,3141,3.367,3142,1.036,3143,1.036,3144,1.036,3145,1.036,3146,1.924,3147,1.036,3148,1.036,3149,1.036,3150,1.036,3151,1.924,3152,1.036,3153,1.036]],["component/302",[2,0.423,3,0.373]],["title/303",[3,8.531,141,17.831,1009,31.639,3170,49.026]],["name/303",[5,1.313]],["text/303",[3,1.685,27,4.852,55,2.674,62,5.804,141,3.522,217,3.522,368,5.27,838,4.778,841,6.556,1009,6.249]],["component/303",[3,0.373,1009,1.384]],["title/304-1",[62,42.941]],["name/304-1",[]],["text/304-1",[]],["component/304-1",[]],["title/304-2",[3171,89.07]],["name/304-2",[]],["text/304-2",[]],["component/304-2",[]],["title/304-3",[742,32.986]],["name/304-3",[]],["text/304-3",[]],["component/304-3",[]],["title/304-4",[873,54.67]],["name/304-4",[]],["text/304-4",[]],["component/304-4",[]],["title/304-5",[1234,41.852,3172,70.009]],["name/304-5",[]],["text/304-5",[]],["component/304-5",[]],["title/304-6",[742,32.986]],["name/304-6",[]],["text/304-6",[]],["component/304-6",[]],["title/304-7",[1234,41.852,3173,70.009]],["name/304-7",[]],["text/304-7",[]],["component/304-7",[]],["title/304-8",[742,32.986]],["name/304-8",[]],["text/304-8",[]],["component/304-8",[]],["title/304",[115,28.417]],["name/304",[115,0.832]],["text/304",[0,1.09,3,1.262,11,4.085,40,2.43,55,2.003,62,6.397,67,2.679,87,4.442,111,3.21,291,4.647,419,3.097,441,4.852,643,2.589,762,4.451,838,4.916,873,7.282,1009,4.68,1221,4.983,1267,3.269,1431,3.065,1438,6.734,3093,7.267,3094,3.852,3096,5.949,3174,4.364]],["component/304",[3,0.373,1009,1.384]],["title/305-1",[3174,82.779]],["name/305-1",[]],["text/305-1",[]],["component/305-1",[]],["title/305",[252,53.703]],["name/305",[252,1.573]],["text/305",[0,2.359,34,4.42,40,2.049,42,3.554,62,6.257,122,6.797,173,4.544,355,5.606,414,4.775,441,4.092,860,3.586,1239,8.041,1360,6.797,1562,5.957,2043,5.679]],["component/305",[3,0.373,1009,1.384]]],"invertedIndex":[["",{"_index":65,"title":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"12-16":{},"12-17":{},"13-1":{},"15-5":{},"31-9":{},"41-9":{},"53-16":{},"53-17":{},"54-1":{},"56-5":{},"71-9":{},"80-9":{},"84-1":{},"86-4":{},"97-1":{},"99-4":{},"113-1":{},"115-4":{},"134-1":{},"136-4":{},"160-1":{},"162-4":{},"188-1":{},"190-4":{},"201-9":{},"209-9":{},"263-4":{},"267-5":{},"277-2":{},"292-76":{},"295-76":{},"298-75":{},"301-76":{}},"name":{},"text":{"1":{},"3":{},"8":{},"9":{},"10":{},"12":{},"19":{},"20":{},"25":{},"27":{},"29":{},"30":{},"31":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"44":{},"49":{},"50":{},"51":{},"53":{},"60":{},"61":{},"66":{},"68":{},"69":{},"70":{},"71":{},"76":{},"78":{},"80":{},"81":{},"83":{},"93":{},"94":{},"96":{},"103":{},"104":{},"109":{},"110":{},"112":{},"122":{},"123":{},"124":{},"125":{},"128":{},"132":{},"133":{},"140":{},"141":{},"143":{},"151":{},"153":{},"158":{},"159":{},"166":{},"167":{},"169":{},"170":{},"175":{},"177":{},"179":{},"184":{},"185":{},"186":{},"194":{},"195":{},"198":{},"199":{},"200":{},"201":{},"206":{},"209":{},"210":{},"211":{},"213":{},"214":{},"215":{},"216":{},"218":{},"219":{},"220":{},"223":{},"228":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"256":{},"258":{},"259":{},"261":{},"262":{},"263":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"285":{},"289":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["0",{"_index":1265,"title":{},"name":{},"text":{"31":{},"71":{},"201":{},"214":{},"216":{},"258":{},"263":{},"276":{},"281":{},"285":{}},"component":{}}],["0..5",{"_index":1691,"title":{},"name":{},"text":{"216":{}},"component":{}}],["0.1",{"_index":3170,"title":{"303":{}},"name":{},"text":{},"component":{}}],["0.1.0",{"_index":1548,"title":{},"name":{},"text":{"214":{}},"component":{}}],["0.1.1",{"_index":1557,"title":{},"name":{},"text":{"214":{}},"component":{}}],["0.10",{"_index":3154,"title":{"294":{}},"name":{},"text":{},"component":{}}],["0.11",{"_index":3054,"title":{"291":{}},"name":{},"text":{},"component":{}}],["0.125",{"_index":2671,"title":{},"name":{},"text":{"269":{}},"component":{}}],["0.25",{"_index":2673,"title":{},"name":{},"text":{"269":{}},"component":{}}],["0.3.0",{"_index":2764,"title":{},"name":{},"text":{"276":{}},"component":{}}],["0.5",{"_index":2820,"title":{},"name":{},"text":{"277":{}},"component":{}}],["0.8",{"_index":3155,"title":{"297":{}},"name":{},"text":{},"component":{}}],["0.9",{"_index":3169,"title":{"300":{}},"name":{},"text":{},"component":{}}],["0000000000000000",{"_index":2756,"title":{},"name":{},"text":{"275":{}},"component":{}}],["00d9",{"_index":2093,"title":{},"name":{},"text":{"245":{}},"component":{}}],["0123456789abcdef",{"_index":888,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["0123456789abcdef.0123456789abcdef",{"_index":2755,"title":{},"name":{},"text":{"274":{}},"component":{}}],["0123456789abcdefghijklmnopqrstuv",{"_index":2757,"title":{},"name":{},"text":{"275":{}},"component":{}}],["03",{"_index":2558,"title":{},"name":{},"text":{"266":{}},"component":{}}],["03e32c1a",{"_index":3136,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["04",{"_index":2201,"title":{},"name":{},"text":{"258":{},"280":{},"281":{}},"component":{}}],["05",{"_index":2973,"title":{},"name":{},"text":{"281":{}},"component":{}}],["06",{"_index":2417,"title":{},"name":{},"text":{"263":{}},"component":{}}],["066187e34a19b375f1a02a1e934db15a",{"_index":2084,"title":{},"name":{},"text":{"245":{}},"component":{}}],["08",{"_index":2418,"title":{},"name":{},"text":{"263":{}},"component":{}}],["08:43:08,141",{"_index":2974,"title":{},"name":{},"text":{"281":{}},"component":{}}],["08:43:08,144",{"_index":2977,"title":{},"name":{},"text":{"281":{}},"component":{}}],["08:43:08,366",{"_index":2985,"title":{},"name":{},"text":{"281":{}},"component":{}}],["08t13:15:44.459994106z",{"_index":2480,"title":{},"name":{},"text":{"263":{}},"component":{}}],["097d501382f5817eb2c5f741d37845158c76dd6a8af899001b36b5a75188aeeb",{"_index":1568,"title":{},"name":{},"text":{"214":{}},"component":{}}],["0a111df",{"_index":3139,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["0x01",{"_index":2096,"title":{},"name":{},"text":{"245":{}},"component":{}}],["0x8000000",{"_index":2162,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["1",{"_index":552,"title":{},"name":{},"text":{"12":{},"15":{},"19":{},"20":{},"27":{},"31":{},"35":{},"40":{},"41":{},"42":{},"53":{},"56":{},"60":{},"61":{},"68":{},"71":{},"75":{},"79":{},"80":{},"81":{},"86":{},"99":{},"103":{},"104":{},"115":{},"124":{},"125":{},"136":{},"140":{},"141":{},"151":{},"162":{},"166":{},"167":{},"177":{},"190":{},"194":{},"195":{},"198":{},"201":{},"205":{},"208":{},"209":{},"210":{},"214":{},"215":{},"216":{},"219":{},"259":{},"261":{},"262":{},"265":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"275":{},"276":{},"278":{},"279":{},"280":{},"281":{},"285":{}},"component":{}}],["1.0",{"_index":856,"title":{},"name":{},"text":{"18":{},"38":{},"59":{},"78":{},"89":{},"102":{},"118":{},"139":{},"165":{},"193":{}},"component":{}}],["1.0.0",{"_index":2457,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["1.13.2.final",{"_index":2975,"title":{},"name":{},"text":{"281":{}},"component":{}}],["1.2.3.4",{"_index":1231,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["1.23",{"_index":1301,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["1.499",{"_index":2461,"title":{},"name":{},"text":{"263":{}},"component":{}}],["1.5",{"_index":1133,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["1.512",{"_index":2976,"title":{},"name":{},"text":{"281":{}},"component":{}}],["1.66",{"_index":2772,"title":{},"name":{},"text":{"276":{}},"component":{}}],["1.7.x",{"_index":1919,"title":{},"name":{},"text":{"234":{},"244":{}},"component":{}}],["1.pgdg21.04+1",{"_index":2710,"title":{},"name":{},"text":{"272":{}},"component":{}}],["1/trigger",{"_index":1595,"title":{},"name":{},"text":{"215":{}},"component":{}}],["10",{"_index":566,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["100",{"_index":2894,"title":{},"name":{},"text":{"279":{},"287":{}},"component":{}}],["101",{"_index":2484,"title":{},"name":{},"text":{"263":{}},"component":{}}],["103",{"_index":2501,"title":{},"name":{},"text":{"263":{}},"component":{}}],["104",{"_index":2494,"title":{},"name":{},"text":{"263":{}},"component":{}}],["105",{"_index":2793,"title":{},"name":{},"text":{"276":{}},"component":{}}],["108",{"_index":2503,"title":{},"name":{},"text":{"263":{}},"component":{}}],["109",{"_index":2485,"title":{},"name":{},"text":{"263":{}},"component":{}}],["11",{"_index":2250,"title":{},"name":{},"text":{"260":{},"266":{}},"component":{}}],["110",{"_index":2507,"title":{},"name":{},"text":{"263":{}},"component":{}}],["111",{"_index":2502,"title":{},"name":{},"text":{"263":{}},"component":{}}],["112",{"_index":2486,"title":{},"name":{},"text":{"263":{}},"component":{}}],["114",{"_index":2806,"title":{},"name":{},"text":{"276":{}},"component":{}}],["116",{"_index":2483,"title":{},"name":{},"text":{"263":{}},"component":{}}],["117",{"_index":2495,"title":{},"name":{},"text":{"263":{}},"component":{}}],["119",{"_index":2804,"title":{},"name":{},"text":{"276":{}},"component":{}}],["11eb",{"_index":3131,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["12",{"_index":2571,"title":{},"name":{},"text":{"267":{}},"component":{}}],["123",{"_index":2505,"title":{},"name":{},"text":{"263":{}},"component":{}}],["125",{"_index":2509,"title":{},"name":{},"text":{"263":{}},"component":{}}],["126",{"_index":2791,"title":{},"name":{},"text":{"276":{}},"component":{}}],["128",{"_index":2786,"title":{},"name":{},"text":{"276":{}},"component":{}}],["13.4",{"_index":2707,"title":{},"name":{},"text":{"272":{}},"component":{}}],["13.6",{"_index":2708,"title":{},"name":{},"text":{"272":{}},"component":{}}],["1394483",{"_index":2442,"title":{},"name":{},"text":{"263":{}},"component":{}}],["144",{"_index":1850,"title":{},"name":{},"text":{"229":{}},"component":{}}],["147",{"_index":2783,"title":{},"name":{},"text":{"276":{}},"component":{}}],["15:15:35,753",{"_index":2419,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,775",{"_index":2423,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,776",{"_index":2426,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,777",{"_index":2428,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,795",{"_index":2430,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,798",{"_index":2434,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,823",{"_index":2436,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,825",{"_index":2440,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,856",{"_index":2445,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,921",{"_index":2448,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,922",{"_index":2451,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:35,933",{"_index":2452,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:36,036",{"_index":2455,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:36,315",{"_index":2464,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15:15:44,520",{"_index":2467,"title":{},"name":{},"text":{"263":{}},"component":{}}],["15m",{"_index":430,"title":{},"name":{},"text":{"8":{},"49":{},"184":{}},"component":{}}],["16",{"_index":2758,"title":{},"name":{},"text":{"275":{},"277":{},"278":{}},"component":{}}],["16384",{"_index":268,"title":{},"name":{},"text":{"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["164.62",{"_index":3030,"title":{},"name":{},"text":{"285":{}},"component":{}}],["168",{"_index":2803,"title":{},"name":{},"text":{"276":{}},"component":{}}],["16:41:44.799424+00",{"_index":2559,"title":{},"name":{},"text":{"266":{}},"component":{}}],["172",{"_index":2801,"title":{},"name":{},"text":{"276":{}},"component":{}}],["176b9238fa48857c",{"_index":2071,"title":{},"name":{},"text":{"245":{}},"component":{}}],["179",{"_index":2789,"title":{},"name":{},"text":{"276":{}},"component":{}}],["188",{"_index":2796,"title":{},"name":{},"text":{"276":{}},"component":{}}],["192.168.1.2:8088",{"_index":3032,"title":{},"name":{},"text":{"285":{}},"component":{}}],["192.168.64.86",{"_index":3016,"title":{},"name":{},"text":{"283":{}},"component":{}}],["198",{"_index":2808,"title":{},"name":{},"text":{"276":{}},"component":{}}],["1hour",{"_index":1130,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["1m",{"_index":1128,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["1s",{"_index":1126,"title":{},"name":{},"text":{"27":{},"68":{},"198":{},"267":{}},"component":{}}],["2",{"_index":804,"title":{},"name":{},"text":{"15":{},"19":{},"20":{},"27":{},"31":{},"40":{},"41":{},"42":{},"56":{},"60":{},"61":{},"68":{},"71":{},"79":{},"80":{},"81":{},"86":{},"99":{},"103":{},"104":{},"115":{},"124":{},"125":{},"136":{},"140":{},"141":{},"162":{},"166":{},"167":{},"177":{},"190":{},"194":{},"195":{},"198":{},"201":{},"208":{},"209":{},"210":{},"212":{},"261":{},"266":{},"267":{},"269":{},"272":{},"275":{},"276":{},"278":{},"279":{},"280":{},"281":{},"285":{}},"component":{}}],["2.0",{"_index":1881,"title":{},"name":{},"text":{"230":{}},"component":{}}],["2.0.0.cr3",{"_index":2460,"title":{},"name":{},"text":{"263":{}},"component":{}}],["2.04(chang",{"_index":1220,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["2.05(content",{"_index":1225,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["2.2",{"_index":529,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["2.x",{"_index":1933,"title":{},"name":{},"text":{"235":{}},"component":{}}],["20",{"_index":2008,"title":{},"name":{},"text":{"241":{}},"component":{}}],["200",{"_index":1438,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["201",{"_index":2799,"title":{},"name":{},"text":{"276":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["202",{"_index":1440,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["2021",{"_index":2200,"title":{},"name":{},"text":{"258":{},"263":{},"280":{},"281":{}},"component":{}}],["2022",{"_index":2557,"title":{},"name":{},"text":{"266":{}},"component":{}}],["20363394",{"_index":2379,"title":{},"name":{},"text":{"262":{}},"component":{}}],["204",{"_index":1439,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["208",{"_index":2792,"title":{},"name":{},"text":{"276":{}},"component":{}}],["20gb",{"_index":271,"title":{},"name":{},"text":{"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["21",{"_index":3143,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["213",{"_index":2790,"title":{},"name":{},"text":{"276":{}},"component":{}}],["238",{"_index":2800,"title":{},"name":{},"text":{"276":{}},"component":{}}],["241",{"_index":2785,"title":{},"name":{},"text":{"276":{}},"component":{}}],["248",{"_index":2798,"title":{},"name":{},"text":{"276":{}},"component":{}}],["250m",{"_index":2681,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["252",{"_index":2784,"title":{},"name":{},"text":{"276":{}},"component":{}}],["256",{"_index":2715,"title":{},"name":{},"text":{"272":{}},"component":{}}],["28t08:42:59.336402353z",{"_index":2912,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["29",{"_index":2807,"title":{},"name":{},"text":{"276":{}},"component":{}}],["2a$12$wslmgorbv3whz3cjcimzxoeo2hl5ueeq8ped11q9bfbm/rwqb7c3g",{"_index":1466,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{}},"component":{}}],["2dbedf0",{"_index":1507,"title":{},"name":{},"text":{"211":{}},"component":{}}],["2e8db6036411adccba75dd5a0316e6ab72402351478a35ac5a452d4cf6371c8f",{"_index":1510,"title":{},"name":{},"text":{"211":{}},"component":{}}],["3",{"_index":871,"title":{},"name":{},"text":{"19":{},"20":{},"23":{},"27":{},"31":{},"41":{},"42":{},"60":{},"61":{},"64":{},"68":{},"71":{},"80":{},"81":{},"103":{},"104":{},"124":{},"125":{},"140":{},"141":{},"166":{},"167":{},"177":{},"194":{},"195":{},"198":{},"201":{},"209":{},"210":{},"236":{},"254":{},"255":{},"261":{},"267":{},"269":{},"273":{},"275":{},"276":{},"278":{},"280":{},"281":{},"285":{}},"component":{}}],["3.1.1",{"_index":1177,"title":{},"name":{},"text":{"28":{},"31":{},"67":{},"71":{},"197":{},"201":{},"261":{}},"component":{}}],["3.9",{"_index":231,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["3.x",{"_index":1934,"title":{},"name":{},"text":{"235":{},"260":{}},"component":{}}],["30",{"_index":2009,"title":{},"name":{},"text":{"241":{},"267":{},"268":{},"269":{},"272":{},"273":{},"285":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["300",{"_index":1556,"title":{},"name":{},"text":{"214":{}},"component":{}}],["30541131",{"_index":2447,"title":{},"name":{},"text":{"263":{}},"component":{}}],["30min",{"_index":1131,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["30t08:36:41.982194z",{"_index":2202,"title":{},"name":{},"text":{"258":{}},"component":{}}],["32",{"_index":2488,"title":{},"name":{},"text":{"263":{},"275":{}},"component":{}}],["32740",{"_index":2668,"title":{},"name":{},"text":{"269":{}},"component":{}}],["34",{"_index":2482,"title":{},"name":{},"text":{"263":{}},"component":{}}],["39",{"_index":2782,"title":{},"name":{},"text":{"276":{}},"component":{}}],["3ef8",{"_index":2470,"title":{},"name":{},"text":{"263":{}},"component":{}}],["4",{"_index":267,"title":{},"name":{},"text":{"5":{},"12":{},"19":{},"41":{},"46":{},"53":{},"60":{},"80":{},"90":{},"103":{},"106":{},"119":{},"124":{},"129":{},"140":{},"155":{},"166":{},"181":{},"194":{},"209":{},"236":{},"261":{},"267":{},"269":{},"275":{},"280":{},"281":{}},"component":{}}],["4.x",{"_index":567,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["400",{"_index":3104,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["400..=499",{"_index":1443,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["401",{"_index":3093,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["403",{"_index":3106,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["404",{"_index":3096,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["406",{"_index":3110,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["409",{"_index":3095,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["42",{"_index":2560,"title":{},"name":{},"text":{"266":{}},"component":{}}],["4209",{"_index":1202,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["4210",{"_index":1226,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["44",{"_index":2493,"title":{},"name":{},"text":{"263":{}},"component":{}}],["443",{"_index":2137,"title":{},"name":{},"text":{"251":{},"266":{},"280":{},"281":{},"285":{}},"component":{}}],["45",{"_index":2787,"title":{},"name":{},"text":{"276":{}},"component":{}}],["4500",{"_index":2811,"title":{},"name":{},"text":{"276":{}},"component":{}}],["4546",{"_index":2206,"title":{},"name":{},"text":{"258":{}},"component":{}}],["46",{"_index":2491,"title":{},"name":{},"text":{"263":{}},"component":{}}],["4697",{"_index":2211,"title":{},"name":{},"text":{"258":{}},"component":{}}],["475e",{"_index":2144,"title":{},"name":{},"text":{"251":{}},"component":{}}],["48",{"_index":2490,"title":{},"name":{},"text":{"263":{}},"component":{}}],["49",{"_index":2497,"title":{},"name":{},"text":{"263":{}},"component":{}}],["49d8",{"_index":2205,"title":{},"name":{},"text":{"258":{}},"component":{}}],["4a15",{"_index":2471,"title":{},"name":{},"text":{"263":{}},"component":{}}],["4ewsjqxwjqmpooftjowt2e4zvxczsow/ianhud6shweu9gnx7c7ib1uygegjxdr5",{"_index":1155,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["5",{"_index":1178,"title":{},"name":{},"text":{"28":{},"36":{},"41":{},"67":{},"76":{},"80":{},"175":{},"197":{},"206":{},"209":{},"216":{},"243":{},"261":{},"269":{},"276":{},"280":{},"281":{}},"component":{}}],["5.55",{"_index":2042,"title":{},"name":{},"text":{"245":{}},"component":{}}],["5.62",{"_index":2046,"title":{},"name":{},"text":{"245":{}},"component":{}}],["5.6inch",{"_index":2130,"title":{},"name":{},"text":{"248":{}},"component":{}}],["50",{"_index":2802,"title":{},"name":{},"text":{"276":{}},"component":{}}],["5005",{"_index":2409,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["51",{"_index":2489,"title":{},"name":{},"text":{"263":{}},"component":{}}],["512",{"_index":1552,"title":{},"name":{},"text":{"214":{}},"component":{}}],["52",{"_index":2496,"title":{},"name":{},"text":{"263":{}},"component":{}}],["52840",{"_index":1969,"title":{"238":{},"245-1":{}},"name":{},"text":{"245":{}},"component":{}}],["53",{"_index":2797,"title":{},"name":{},"text":{"276":{}},"component":{}}],["5300",{"_index":2812,"title":{},"name":{},"text":{"276":{}},"component":{}}],["54",{"_index":2508,"title":{},"name":{},"text":{"263":{},"276":{}},"component":{}}],["5432:5432",{"_index":238,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["55",{"_index":2506,"title":{},"name":{},"text":{"263":{}},"component":{}}],["56",{"_index":2492,"title":{},"name":{},"text":{"263":{}},"component":{}}],["57",{"_index":2500,"title":{},"name":{},"text":{"263":{}},"component":{}}],["58",{"_index":2487,"title":{},"name":{},"text":{"263":{}},"component":{}}],["5b10e583",{"_index":2209,"title":{},"name":{},"text":{"258":{}},"component":{}}],["5m",{"_index":2744,"title":{},"name":{},"text":{"273":{}},"component":{}}],["5wxcu2+b9lrpwksichxm6webfgjuen7sj7o5xpwiow5wlhaqu7g75k/qosmradsw",{"_index":1170,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["5x5",{"_index":1664,"title":{},"name":{},"text":{"216":{}},"component":{}}],["6",{"_index":1446,"title":{},"name":{},"text":{"41":{},"42":{},"80":{},"81":{},"177":{},"209":{},"210":{},"261":{},"269":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["60",{"_index":1967,"title":{},"name":{},"text":{"237":{},"279":{}},"component":{}}],["64",{"_index":1856,"title":{},"name":{},"text":{"229":{}},"component":{}}],["650",{"_index":2057,"title":{},"name":{},"text":{"245":{}},"component":{}}],["7",{"_index":1107,"title":{},"name":{},"text":{"26":{},"220":{},"224":{},"248":{}},"component":{}}],["7.3.0",{"_index":1981,"title":{},"name":{},"text":{"239":{},"241":{},"243":{}},"component":{}}],["700",{"_index":2055,"title":{},"name":{},"text":{"245":{}},"component":{}}],["73.77",{"_index":2773,"title":{},"name":{},"text":{"276":{}},"component":{}}],["74",{"_index":2805,"title":{},"name":{},"text":{"276":{}},"component":{}}],["7716",{"_index":1508,"title":{},"name":{},"text":{"211":{}},"component":{}}],["7ebd35496e91",{"_index":2213,"title":{},"name":{},"text":{"258":{}},"component":{}}],["8",{"_index":1452,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"263":{},"278":{},"281":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["80",{"_index":3017,"title":{},"name":{},"text":{"283":{}},"component":{}}],["8080",{"_index":2669,"title":{},"name":{},"text":{"269":{},"290":{}},"component":{}}],["8080:8080",{"_index":247,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["81",{"_index":2382,"title":{},"name":{},"text":{"262":{}},"component":{}}],["8498",{"_index":2210,"title":{},"name":{},"text":{"258":{}},"component":{}}],["86",{"_index":2795,"title":{},"name":{},"text":{"276":{}},"component":{}}],["8e0d",{"_index":2212,"title":{},"name":{},"text":{"258":{}},"component":{}}],["9092:9092",{"_index":241,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["95",{"_index":3018,"title":{},"name":{},"text":{"283":{}},"component":{}}],["960a4a7689ef",{"_index":2208,"title":{},"name":{},"text":{"258":{}},"component":{}}],["97",{"_index":2499,"title":{},"name":{},"text":{"263":{}},"component":{}}],["97e8",{"_index":3132,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["98",{"_index":2498,"title":{},"name":{},"text":{"263":{}},"component":{}}],["99",{"_index":2504,"title":{},"name":{},"text":{"263":{}},"component":{}}],["9e90",{"_index":3135,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["9e9b",{"_index":3138,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["9mugntp52ge24hgntli1qojflcdyqsmo59ahy2ci2qbdlkobkx/j3vwrav0t9vug",{"_index":1171,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["_",{"_index":1627,"title":{},"name":{},"text":{"216":{},"218":{},"263":{},"281":{}},"component":{}}],["_/_/|_/_/|_|\\____/___",{"_index":2416,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["__",{"_index":2410,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["___",{"_index":2413,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["___\\_\\____/_",{"_index":2415,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["____",{"_index":2411,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["_____",{"_index":2412,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["______",{"_index":2414,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["__interv",{"_index":2686,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["__timefilt",{"_index":2583,"title":{},"name":{},"text":{"267":{}},"component":{}}],["__timefilter(\"tim",{"_index":2689,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["__timegroup(\"tim",{"_index":2685,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["a/b",{"_index":2645,"title":{},"name":{},"text":{"269":{}},"component":{}}],["a0da",{"_index":3130,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["a0db",{"_index":3137,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["a531",{"_index":2472,"title":{},"name":{},"text":{"263":{}},"component":{}}],["a953",{"_index":3140,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["a=stabl",{"_index":2054,"title":{},"name":{},"text":{"245":{}},"component":{}}],["a=test",{"_index":2056,"title":{},"name":{},"text":{"245":{}},"component":{}}],["abcdef123456",{"_index":2541,"title":{},"name":{},"text":{"266":{},"269":{}},"component":{}}],["abil",{"_index":763,"title":{},"name":{},"text":{"15":{},"39":{},"56":{},"231":{},"258":{},"260":{},"265":{},"275":{}},"component":{}}],["abort",{"_index":2462,"title":{},"name":{},"text":{"263":{}},"component":{}}],["abov",{"_index":228,"title":{},"name":{},"text":{"4":{},"5":{},"12":{},"30":{},"39":{},"45":{},"46":{},"53":{},"70":{},"119":{},"129":{},"154":{},"155":{},"170":{},"180":{},"181":{},"200":{},"213":{},"214":{},"218":{},"219":{},"260":{},"268":{},"270":{},"273":{},"280":{}},"component":{}}],["abstract",{"_index":717,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"230":{}},"component":{}}],["acccept",{"_index":1356,"title":{},"name":{},"text":{"39":{}},"component":{}}],["accept",{"_index":1114,"title":{"41-9":{},"80-9":{},"209-9":{}},"name":{},"text":{"26":{},"39":{},"41":{},"42":{},"80":{},"81":{},"91":{},"107":{},"151":{},"177":{},"209":{},"210":{},"258":{},"285":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["access",{"_index":291,"title":{"258-3":{},"277-4":{},"292-1":{},"295-1":{},"298-1":{},"301-1":{}},"name":{},"text":{"5":{},"9":{},"12":{},"14":{},"15":{},"18":{},"19":{},"25":{},"31":{},"36":{},"38":{},"39":{},"42":{},"46":{},"50":{},"53":{},"55":{},"56":{},"59":{},"60":{},"66":{},"71":{},"76":{},"78":{},"81":{},"85":{},"86":{},"89":{},"98":{},"99":{},"102":{},"103":{},"114":{},"115":{},"118":{},"119":{},"124":{},"129":{},"135":{},"136":{},"139":{},"140":{},"151":{},"155":{},"161":{},"162":{},"165":{},"166":{},"171":{},"175":{},"177":{},"181":{},"185":{},"189":{},"190":{},"193":{},"194":{},"201":{},"206":{},"210":{},"213":{},"216":{},"218":{},"234":{},"258":{},"259":{},"261":{},"262":{},"269":{},"272":{},"274":{},"277":{},"279":{},"280":{},"281":{},"283":{},"285":{},"287":{},"288":{},"289":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["accident",{"_index":2754,"title":{},"name":{},"text":{"274":{}},"component":{}}],["accommod",{"_index":1902,"title":{},"name":{},"text":{"231":{}},"component":{}}],["accordingli",{"_index":471,"title":{},"name":{},"text":{"8":{},"26":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"263":{}},"component":{}}],["account",{"_index":861,"title":{"274":{},"258-7":{},"274-2":{}},"name":{"274":{}},"text":{"19":{},"21":{},"60":{},"62":{},"103":{},"105":{},"124":{},"126":{},"140":{},"142":{},"166":{},"168":{},"194":{},"196":{},"258":{},"259":{},"262":{},"268":{},"274":{},"275":{},"277":{},"286":{}},"component":{}}],["accur",{"_index":2573,"title":{},"name":{},"text":{"267":{},"268":{}},"component":{}}],["achiev",{"_index":448,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"265":{},"280":{},"281":{}},"component":{}}],["ack",{"_index":2816,"title":{},"name":{},"text":{"276":{}},"component":{}}],["acknowledg",{"_index":2817,"title":{},"name":{},"text":{"276":{}},"component":{}}],["acquir",{"_index":829,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"267":{},"280":{},"281":{}},"component":{}}],["acquisit",{"_index":2179,"title":{},"name":{},"text":{"257":{}},"component":{}}],["act",{"_index":710,"title":{},"name":{},"text":{"14":{},"16":{},"18":{},"26":{},"30":{},"31":{},"35":{},"38":{},"42":{},"55":{},"57":{},"59":{},"70":{},"71":{},"75":{},"78":{},"81":{},"85":{},"87":{},"98":{},"100":{},"114":{},"116":{},"135":{},"137":{},"139":{},"161":{},"163":{},"165":{},"170":{},"177":{},"189":{},"191":{},"193":{},"200":{},"201":{},"205":{},"210":{},"265":{}},"component":{}}],["action",{"_index":775,"title":{},"name":{},"text":{"15":{},"24":{},"29":{},"39":{},"56":{},"65":{},"69":{},"143":{},"169":{},"199":{},"218":{}},"component":{}}],["activ",{"_index":1283,"title":{},"name":{},"text":{"35":{},"41":{},"75":{},"80":{},"205":{},"209":{},"258":{},"259":{},"267":{},"270":{},"273":{},"278":{},"281":{}},"component":{}}],["actor",{"_index":1597,"title":{"218":{},"216-4":{},"218-1":{},"218-8":{},"231-2":{},"231-3":{}},"name":{},"text":{"216":{},"218":{},"229":{},"230":{},"231":{},"279":{}},"component":{}}],["actorcontext",{"_index":1741,"title":{},"name":{},"text":{"218":{},"279":{}},"component":{}}],["actorcontext::new(app::new(appinitconfig",{"_index":2865,"title":{},"name":{},"text":{"279":{}},"component":{}}],["actorcontext::new(button::new(pin",{"_index":2876,"title":{},"name":{},"text":{"279":{}},"component":{}}],["actorcontext::new(loraactor::new(lora",{"_index":2875,"title":{},"name":{},"text":{"279":{}},"component":{}}],["actorcontext::new(ticker::new(duration::from_secs(60",{"_index":2877,"title":{},"name":{},"text":{"279":{}},"component":{}}],["actors::button",{"_index":2856,"title":{},"name":{},"text":{"279":{}},"component":{}}],["actors::tick",{"_index":2857,"title":{},"name":{},"text":{"279":{}},"component":{}}],["actual",{"_index":331,"title":{"26-8":{}},"name":{},"text":{"6":{},"15":{},"16":{},"17":{},"21":{},"26":{},"27":{},"31":{},"36":{},"42":{},"47":{},"56":{},"57":{},"58":{},"62":{},"68":{},"71":{},"76":{},"81":{},"86":{},"87":{},"88":{},"99":{},"100":{},"101":{},"105":{},"115":{},"116":{},"117":{},"120":{},"126":{},"130":{},"136":{},"137":{},"138":{},"142":{},"151":{},"156":{},"162":{},"163":{},"164":{},"168":{},"175":{},"177":{},"182":{},"190":{},"191":{},"192":{},"196":{},"198":{},"201":{},"206":{},"210":{},"259":{},"261":{},"262":{},"264":{},"265":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"279":{},"280":{},"281":{},"282":{},"289":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["actuat",{"_index":830,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["ad",{"_index":403,"title":{"267-2":{}},"name":{},"text":{"8":{},"22":{},"39":{},"42":{},"49":{},"63":{},"81":{},"93":{},"109":{},"122":{},"132":{},"158":{},"177":{},"184":{},"210":{},"245":{},"256":{},"263":{},"267":{},"275":{},"277":{}},"component":{}}],["adafruit",{"_index":1819,"title":{"239":{}},"name":{},"text":{"220":{},"222":{},"226":{},"239":{}},"component":{}}],["adapt",{"_index":146,"title":{},"name":{},"text":{"2":{},"15":{},"43":{},"56":{},"82":{},"86":{},"95":{},"99":{},"111":{},"115":{},"127":{},"136":{},"152":{},"162":{},"178":{},"190":{},"220":{},"223":{},"225":{},"228":{},"263":{},"267":{},"276":{},"277":{},"285":{},"286":{}},"component":{}}],["add",{"_index":426,"title":{"39-2":{}},"name":{},"text":{"8":{},"15":{},"27":{},"39":{},"40":{},"49":{},"56":{},"68":{},"79":{},"122":{},"132":{},"158":{},"184":{},"198":{},"208":{},"213":{},"216":{},"245":{},"249":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"276":{},"279":{},"280":{},"281":{},"283":{},"285":{},"287":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["add(&'m",{"_index":1775,"title":{},"name":{},"text":{"219":{}},"component":{}}],["add(u32",{"_index":1754,"title":{},"name":{},"text":{"218":{}},"component":{}}],["add_continuous_aggregate_policy('temperature_summary_minut",{"_index":2738,"title":{},"name":{},"text":{"273":{}},"component":{}}],["addfutur",{"_index":1774,"title":{},"name":{},"text":{"219":{}},"component":{}}],["addit",{"_index":304,"title":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"6-1":{},"8-5":{},"8-7":{},"27-5":{},"47-1":{},"49-5":{},"49-7":{},"68-5":{},"91-1":{},"93-5":{},"107-1":{},"109-5":{},"120-1":{},"122-5":{},"130-1":{},"132-5":{},"156-1":{},"158-5":{},"182-1":{},"184-5":{},"184-7":{},"198-5":{},"282-3":{},"289-3":{}},"name":{},"text":{"8":{},"12":{},"13":{},"14":{},"16":{},"27":{},"28":{},"30":{},"31":{},"38":{},"40":{},"41":{},"42":{},"49":{},"53":{},"54":{},"55":{},"57":{},"67":{},"68":{},"70":{},"71":{},"78":{},"79":{},"80":{},"81":{},"84":{},"85":{},"87":{},"97":{},"98":{},"100":{},"113":{},"114":{},"116":{},"122":{},"132":{},"134":{},"135":{},"137":{},"151":{},"158":{},"160":{},"161":{},"163":{},"170":{},"177":{},"184":{},"188":{},"189":{},"191":{},"197":{},"198":{},"200":{},"201":{},"208":{},"209":{},"210":{},"213":{},"216":{},"220":{},"251":{},"258":{},"259":{},"260":{},"267":{},"268":{},"270":{},"273":{},"277":{},"280":{},"281":{},"282":{},"286":{},"289":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["addition",{"_index":323,"title":{},"name":{},"text":{"6":{},"8":{},"47":{},"49":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"184":{},"251":{},"260":{},"277":{},"285":{},"286":{}},"component":{}}],["addon",{"_index":272,"title":{},"name":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{}},"text":{"5":{},"12":{},"13":{},"46":{},"53":{},"54":{},"84":{},"90":{},"97":{},"106":{},"113":{},"119":{},"129":{},"134":{},"155":{},"160":{},"181":{},"188":{},"259":{},"262":{},"283":{}},"component":{}}],["addonprofiles.httpapplicationrouting.config.httpapplicationroutingzonenam",{"_index":2388,"title":{},"name":{},"text":{"262":{}},"component":{}}],["address",{"_index":1228,"title":{"218-4":{}},"name":{},"text":{"30":{},"70":{},"170":{},"200":{},"216":{},"218":{},"231":{},"241":{},"245":{},"263":{},"281":{},"283":{}},"component":{}}],["adher",{"_index":1118,"title":{},"name":{},"text":{"26":{}},"component":{}}],["adjust",{"_index":1020,"title":{},"name":{},"text":{"25":{},"66":{},"241":{},"283":{},"290":{}},"component":{}}],["admin",{"_index":212,"title":{"213":{}},"name":{},"text":{"4":{},"5":{},"12":{},"39":{},"45":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"154":{},"155":{},"180":{},"181":{},"215":{},"272":{},"283":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["admin/admin123456",{"_index":485,"title":{},"name":{},"text":{"9":{},"50":{},"185":{},"283":{}},"component":{}}],["admin123456",{"_index":214,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["administr",{"_index":958,"title":{"292-52":{},"292-73":{},"295-52":{},"295-73":{},"298-51":{},"298-72":{},"301-52":{},"301-73":{}},"name":{},"text":{"22":{},"39":{},"63":{},"269":{}},"component":{}}],["adopt",{"_index":2217,"title":{},"name":{},"text":{"258":{},"269":{},"288":{}},"component":{}}],["adv",{"_index":2040,"title":{},"name":{},"text":{"245":{}},"component":{}}],["advanc",{"_index":954,"title":{},"name":{},"text":{"22":{},"63":{},"220":{},"271":{},"290":{}},"component":{}}],["advantag",{"_index":1374,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["afterward",{"_index":362,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"259":{},"270":{},"273":{}},"component":{}}],["ag",{"_index":2377,"title":{},"name":{},"text":{"262":{},"283":{}},"component":{}}],["again",{"_index":469,"title":{},"name":{},"text":{"8":{},"12":{},"14":{},"15":{},"17":{},"49":{},"53":{},"55":{},"56":{},"58":{},"85":{},"86":{},"88":{},"93":{},"98":{},"99":{},"101":{},"109":{},"114":{},"115":{},"117":{},"122":{},"132":{},"135":{},"136":{},"138":{},"158":{},"161":{},"162":{},"164":{},"184":{},"189":{},"190":{},"192":{},"214":{},"245":{},"249":{},"251":{},"252":{},"259":{},"267":{},"268":{},"279":{},"280":{},"281":{},"283":{},"285":{},"287":{}},"component":{}}],["against",{"_index":1468,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{},"214":{},"216":{},"244":{},"269":{}},"component":{}}],["agent",{"_index":2381,"title":{},"name":{},"text":{"262":{}},"component":{}}],["aggreg",{"_index":1081,"title":{},"name":{},"text":{"26":{},"214":{},"259":{},"268":{}},"component":{}}],["agnost",{"_index":1366,"title":{},"name":{},"text":{"40":{},"41":{},"79":{},"80":{},"208":{},"209":{}},"component":{}}],["agre",{"_index":1365,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["agreement",{"_index":1883,"title":{},"name":{},"text":{"230":{}},"component":{}}],["agvsbg8",{"_index":1559,"title":{},"name":{},"text":{"214":{}},"component":{}}],["ahead",{"_index":2241,"title":{},"name":{},"text":{"259":{},"261":{},"269":{},"272":{}},"component":{}}],["ai/ml",{"_index":1412,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["aim",{"_index":7,"title":{},"name":{},"text":{"1":{}},"component":{}}],["air",{"_index":1799,"title":{},"name":{},"text":{"220":{},"232":{},"235":{},"236":{},"237":{},"254":{},"255":{},"278":{}},"component":{}}],["ajour",{"_index":1009,"title":{"212":{},"303":{}},"name":{},"text":{"24":{},"65":{},"211":{},"212":{},"213":{},"214":{},"215":{},"303":{},"304":{}},"component":{"211":{},"212":{},"213":{},"214":{},"215":{},"303":{},"304":{},"305":{}}}],["ak",{"_index":2373,"title":{},"name":{},"text":{"262":{}},"component":{}}],["aka",{"_index":495,"title":{},"name":{},"text":{"10":{},"12":{},"51":{},"53":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["alert",{"_index":924,"title":{},"name":{},"text":{"22":{},"24":{},"63":{},"65":{}},"component":{}}],["algorithm",{"_index":1464,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{}},"component":{}}],["alia",{"_index":869,"title":{"293-1":{},"296-1":{},"299-1":{},"302-1":{}},"name":{},"text":{"19":{},"29":{},"30":{},"60":{},"69":{},"70":{},"94":{},"103":{},"110":{},"123":{},"124":{},"133":{},"140":{},"143":{},"159":{},"166":{},"169":{},"170":{},"194":{},"199":{},"200":{},"275":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["alias",{"_index":3126,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["align",{"_index":2298,"title":{},"name":{},"text":{"261":{}},"component":{}}],["aliv",{"_index":1311,"title":{},"name":{},"text":{"37":{}},"component":{}}],["allow",{"_index":290,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"21":{},"22":{},"27":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"46":{},"49":{},"50":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"62":{},"63":{},"67":{},"68":{},"69":{},"70":{},"71":{},"74":{},"76":{},"77":{},"78":{},"80":{},"81":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"105":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"122":{},"126":{},"129":{},"132":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"142":{},"143":{},"148":{},"149":{},"150":{},"151":{},"155":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"168":{},"169":{},"170":{},"174":{},"175":{},"176":{},"177":{},"181":{},"184":{},"185":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"204":{},"206":{},"207":{},"209":{},"210":{},"212":{},"214":{},"218":{},"219":{},"231":{},"260":{},"263":{},"265":{},"267":{},"268":{},"273":{},"280":{},"289":{}},"component":{}}],["along",{"_index":1092,"title":{},"name":{},"text":{"26":{},"29":{},"41":{},"69":{},"80":{},"143":{},"169":{},"199":{},"209":{},"272":{},"283":{}},"component":{}}],["alongsid",{"_index":2962,"title":{},"name":{},"text":{"281":{}},"component":{}}],["alphabet",{"_index":645,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["alreadi",{"_index":292,"title":{},"name":{},"text":{"5":{},"8":{},"26":{},"41":{},"42":{},"46":{},"49":{},"80":{},"81":{},"93":{},"109":{},"119":{},"122":{},"129":{},"132":{},"151":{},"155":{},"158":{},"177":{},"181":{},"184":{},"209":{},"210":{},"213":{},"214":{},"215":{},"216":{},"229":{},"258":{},"259":{},"261":{},"262":{},"263":{},"265":{},"267":{},"268":{},"269":{},"270":{},"274":{},"276":{},"277":{},"280":{},"281":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["alter",{"_index":1093,"title":{},"name":{},"text":{"26":{},"41":{},"80":{},"209":{},"245":{},"273":{},"279":{}},"component":{}}],["altern",{"_index":879,"title":{},"name":{},"text":{"19":{},"25":{},"30":{},"36":{},"42":{},"60":{},"66":{},"70":{},"76":{},"81":{},"103":{},"124":{},"140":{},"166":{},"170":{},"175":{},"177":{},"194":{},"200":{},"206":{},"210":{},"229":{},"231":{},"275":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["although",{"_index":1338,"title":{},"name":{},"text":{"38":{},"41":{},"80":{},"209":{},"218":{},"261":{},"287":{},"288":{}},"component":{}}],["alway",{"_index":321,"title":{"41-6":{},"80-6":{},"209-6":{}},"name":{},"text":{"6":{},"15":{},"31":{},"38":{},"41":{},"47":{},"56":{},"71":{},"78":{},"80":{},"86":{},"91":{},"99":{},"107":{},"115":{},"120":{},"130":{},"136":{},"156":{},"162":{},"182":{},"190":{},"201":{},"209":{},"256":{},"262":{},"263":{},"269":{},"279":{}},"component":{}}],["amd64",{"_index":520,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["amount",{"_index":1197,"title":{},"name":{},"text":{"29":{},"36":{},"69":{},"76":{},"143":{},"169":{},"175":{},"199":{},"206":{},"214":{},"268":{},"272":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["analysi",{"_index":917,"title":{},"name":{},"text":{"22":{},"25":{},"63":{},"66":{}},"component":{}}],["analyt",{"_index":2607,"title":{},"name":{},"text":{"268":{}},"component":{}}],["analyz",{"_index":2602,"title":{},"name":{},"text":{"268":{}},"component":{}}],["anchor",{"_index":802,"title":{},"name":{},"text":{"15":{},"27":{},"30":{},"31":{},"56":{},"68":{},"70":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"170":{},"190":{},"198":{},"200":{},"201":{}},"component":{}}],["and/or",{"_index":1387,"title":{"41-7":{},"80-7":{},"209-7":{}},"name":{},"text":{},"component":{}}],["annot",{"_index":2265,"title":{},"name":{},"text":{"261":{},"262":{},"263":{},"281":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["anomali",{"_index":1018,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["anonym",{"_index":1288,"title":{"36-2":{},"76-2":{},"175-2":{},"206-2":{}},"name":{},"text":{"36":{},"39":{},"76":{},"175":{},"206":{}},"component":{}}],["anoth",{"_index":1078,"title":{},"name":{},"text":{"26":{},"29":{},"31":{},"38":{},"39":{},"42":{},"69":{},"71":{},"78":{},"81":{},"143":{},"169":{},"177":{},"199":{},"201":{},"210":{},"218":{},"219":{},"231":{},"258":{},"266":{},"271":{},"288":{}},"component":{}}],["ant",{"_index":2701,"title":{},"name":{},"text":{"272":{}},"component":{}}],["any(array[$device_id]::varchar",{"_index":2595,"title":{},"name":{},"text":{"267":{},"270":{},"273":{}},"component":{}}],["anyth",{"_index":1363,"title":{},"name":{},"text":{"40":{},"79":{},"208":{},"229":{},"256":{},"261":{}},"component":{}}],["anyway",{"_index":2234,"title":{},"name":{},"text":{"259":{},"279":{}},"component":{}}],["apach",{"_index":183,"title":{"34":{},"74":{},"148":{},"174":{},"204":{}},"name":{},"text":{"3":{},"22":{},"24":{},"25":{},"41":{},"44":{},"63":{},"65":{},"66":{},"80":{},"83":{},"96":{},"112":{},"128":{},"153":{},"179":{},"209":{},"230":{},"257":{}},"component":{}}],["api",{"_index":141,"title":{"291":{},"294":{},"297":{},"300":{},"303":{},"18-2":{},"30-1":{},"36-4":{},"59-2":{},"70-1":{},"76-4":{},"89-1":{},"89-2":{},"102-1":{},"102-2":{},"118-1":{},"118-2":{},"139-2":{},"144-1":{},"165-2":{},"170-1":{},"175-4":{},"193-2":{},"200-1":{},"206-4":{},"274-3":{},"280-1":{},"280-2":{},"280-3":{},"280-4":{},"281-1":{},"281-2":{},"281-3":{},"281-4":{}},"name":{},"text":{"2":{},"3":{},"12":{},"14":{},"15":{},"18":{},"19":{},"21":{},"22":{},"25":{},"26":{},"29":{},"30":{},"31":{},"33":{},"36":{},"37":{},"38":{},"40":{},"42":{},"43":{},"44":{},"53":{},"55":{},"56":{},"59":{},"60":{},"62":{},"63":{},"66":{},"69":{},"70":{},"71":{},"73":{},"76":{},"77":{},"78":{},"79":{},"81":{},"82":{},"83":{},"85":{},"86":{},"89":{},"95":{},"96":{},"98":{},"99":{},"102":{},"103":{},"105":{},"111":{},"112":{},"114":{},"115":{},"118":{},"124":{},"126":{},"127":{},"128":{},"135":{},"136":{},"139":{},"140":{},"142":{},"143":{},"144":{},"147":{},"149":{},"151":{},"152":{},"153":{},"161":{},"162":{},"165":{},"166":{},"168":{},"169":{},"170":{},"171":{},"173":{},"175":{},"177":{},"178":{},"179":{},"189":{},"190":{},"193":{},"194":{},"196":{},"199":{},"200":{},"201":{},"203":{},"206":{},"207":{},"208":{},"210":{},"212":{},"213":{},"215":{},"218":{},"258":{},"260":{},"274":{},"275":{},"278":{},"280":{},"281":{},"288":{},"291":{},"294":{},"297":{},"300":{},"303":{}},"component":{}}],["api/admin/v1alpha1/apps/{appid}/accept",{"_index":3160,"title":{"298-62":{},"301-63":{}},"name":{},"text":{},"component":{}}],["api/admin/v1alpha1/apps/{appid}/memb",{"_index":3161,"title":{"298-65":{},"298-68":{},"301-66":{},"301-69":{}},"name":{},"text":{},"component":{}}],["api/admin/v1alpha1/apps/{appid}/transf",{"_index":3159,"title":{"298-52":{},"298-55":{},"298-59":{},"301-53":{},"301-56":{},"301-60":{}},"name":{},"text":{},"component":{}}],["api/admin/v1alpha1/apps/{application}/accept",{"_index":3062,"title":{"292-63":{},"295-63":{}},"name":{},"text":{},"component":{}}],["api/admin/v1alpha1/apps/{application}/memb",{"_index":3063,"title":{"292-66":{},"292-69":{},"295-66":{},"295-69":{}},"name":{},"text":{},"component":{}}],["api/admin/v1alpha1/apps/{application}/transf",{"_index":3061,"title":{"292-53":{},"292-56":{},"292-60":{},"295-53":{},"295-56":{},"295-60":{}},"name":{},"text":{},"component":{}}],["api/admin/v1alpha1/user/whoami",{"_index":3064,"title":{"292-74":{},"295-74":{},"298-73":{},"301-74":{}},"name":{},"text":{},"component":{}}],["api/api/build/v1alpha1/apps/mi",{"_index":1593,"title":{},"name":{},"text":{"215":{}},"component":{}}],["api/build/v1alpha1",{"_index":3171,"title":{"304-2":{}},"name":{},"text":{},"component":{}}],["api/build/v1alpha1/apps/{application}/devices/{device}/trigg",{"_index":3173,"title":{"304-7":{}},"name":{},"text":{},"component":{}}],["api/build/v1alpha1/apps/{application}/trigg",{"_index":3172,"title":{"304-5":{}},"name":{},"text":{},"component":{}}],["api/command/v1alpha1/apps/{appid}/devices/{deviceid",{"_index":3162,"title":{"298-76":{},"301-77":{}},"name":{},"text":{},"component":{}}],["api/command/v1alpha1/apps/{application}/devices/{devic",{"_index":3065,"title":{"292-77":{},"295-77":{}},"name":{},"text":{},"component":{}}],["api/command/v1alpha1/inbox/apps/{appid}/devices/{deviceid",{"_index":3163,"title":{"298-80":{},"301-81":{}},"name":{},"text":{},"component":{}}],["api/command/v1alpha1/inbox/apps/{application}/devices/{devic",{"_index":3066,"title":{"292-81":{},"295-81":{}},"name":{},"text":{},"component":{}}],["api/command/v1alpha1/outbox/apps/{appid}/devices/{deviceid",{"_index":3164,"title":{"298-84":{},"301-85":{}},"name":{},"text":{},"component":{}}],["api/command/v1alpha1/outbox/apps/{application}/devices/{devic",{"_index":3067,"title":{"292-85":{},"295-85":{}},"name":{},"text":{},"component":{}}],["api/registry/v1alpha1/app",{"_index":3057,"title":{"292-11":{},"292-14":{},"295-11":{},"295-14":{},"298-10":{},"298-13":{},"301-11":{},"301-14":{}},"name":{},"text":{},"component":{}}],["api/registry/v1alpha1/apps/{appid",{"_index":3156,"title":{"298-16":{},"298-19":{},"298-23":{},"298-26":{},"301-17":{},"301-20":{},"301-24":{},"301-27":{}},"name":{},"text":{},"component":{}}],["api/registry/v1alpha1/apps/{appid}/devic",{"_index":3157,"title":{"298-30":{},"298-33":{},"301-31":{},"301-34":{}},"name":{},"text":{},"component":{}}],["api/registry/v1alpha1/apps/{appid}/devices/{deviceid",{"_index":3158,"title":{"298-37":{},"298-40":{},"298-44":{},"298-47":{},"301-38":{},"301-41":{},"301-45":{},"301-48":{}},"name":{},"text":{},"component":{}}],["api/registry/v1alpha1/apps/{appl",{"_index":3058,"title":{"292-17":{},"292-20":{},"292-24":{},"292-27":{},"295-17":{},"295-20":{},"295-24":{},"295-27":{}},"name":{},"text":{},"component":{}}],["api/registry/v1alpha1/apps/{application}/devic",{"_index":3059,"title":{"292-31":{},"292-34":{},"295-31":{},"295-34":{}},"name":{},"text":{},"component":{}}],["api/registry/v1alpha1/apps/{application}/devices/{devic",{"_index":3060,"title":{"292-38":{},"292-41":{},"292-45":{},"292-48":{},"295-38":{},"295-41":{},"295-45":{},"295-48":{}},"name":{},"text":{},"component":{}}],["api/tokens/v1alpha1",{"_index":2909,"title":{"292-2":{},"292-4":{},"295-2":{},"295-4":{},"298-2":{},"298-4":{},"301-2":{},"301-4":{}},"name":{},"text":{"280":{},"281":{}},"component":{}}],["api/tokens/v1alpha1/drg_g0yauq",{"_index":2915,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["api/tokens/v1alpha1/{prefix",{"_index":3056,"title":{"292-7":{},"295-7":{},"298-6":{},"301-7":{}},"name":{},"text":{},"component":{}}],["api_key",{"_index":1307,"title":{},"name":{},"text":{"37":{},"77":{},"207":{}},"component":{}}],["apikey",{"_index":868,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{},"275":{}},"component":{}}],["apis.th",{"_index":1262,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["apivers",{"_index":2350,"title":{},"name":{},"text":{"262":{},"269":{}},"component":{}}],["app",{"_index":860,"title":{"293-2":{},"296-2":{},"299-2":{},"302-2":{}},"name":{"19":{},"39":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{}},"text":{"19":{},"20":{},"30":{},"31":{},"36":{},"39":{},"42":{},"60":{},"61":{},"70":{},"71":{},"76":{},"81":{},"103":{},"104":{},"124":{},"125":{},"140":{},"141":{},"151":{},"166":{},"167":{},"170":{},"175":{},"177":{},"194":{},"195":{},"200":{},"201":{},"206":{},"210":{},"215":{},"220":{},"232":{},"235":{},"236":{},"237":{},"245":{},"254":{},"255":{},"258":{},"275":{},"276":{},"279":{},"280":{},"281":{},"284":{},"292":{},"295":{},"298":{},"301":{},"305":{}},"component":{}}],["app.r",{"_index":2879,"title":{},"name":{},"text":{"279":{}},"component":{}}],["app/${drogue.integration.appl",{"_index":2294,"title":{},"name":{},"text":{"261":{}},"component":{}}],["app/devices/mi",{"_index":1594,"title":{},"name":{},"text":{"215":{}},"component":{}}],["app/drogu",{"_index":2449,"title":{},"name":{},"text":{"263":{}},"component":{}}],["app/exampl",{"_index":1296,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["app/mi",{"_index":1303,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["app1",{"_index":2196,"title":{},"name":{},"text":{"258":{}},"component":{}}],["app2",{"_index":2197,"title":{},"name":{},"text":{"258":{}},"component":{}}],["app:foobar",{"_index":1242,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["app_eui",{"_index":887,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{},"276":{}},"component":{}}],["app_key",{"_index":889,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{},"276":{}},"component":{}}],["appear",{"_index":2466,"title":{},"name":{},"text":{"263":{}},"component":{}}],["append",{"_index":2884,"title":{},"name":{},"text":{"279":{}},"component":{}}],["appid",{"_index":3165,"title":{},"name":{},"text":{"298":{},"301":{}},"component":{}}],["appli",{"_index":458,"title":{},"name":{},"text":{"8":{},"12":{},"24":{},"31":{},"49":{},"53":{},"65":{},"71":{},"184":{},"201":{},"213":{},"214":{},"262":{},"266":{},"267":{},"270":{},"273":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["applic",{"_index":40,"title":{"19":{},"39":{},"42":{},"60":{},"81":{},"103":{},"124":{},"140":{},"151":{},"166":{},"177":{},"194":{},"210":{},"216":{},"280":{},"281":{},"290":{},"2-1":{},"19-1":{},"19-5":{},"22-5":{},"25-5":{},"39-2":{},"39-3":{},"42-1":{},"42-2":{},"42-3":{},"42-4":{},"43-1":{},"60-1":{},"60-5":{},"63-5":{},"66-5":{},"81-1":{},"81-2":{},"81-3":{},"81-4":{},"82-1":{},"95-1":{},"103-1":{},"103-5":{},"111-1":{},"124-1":{},"124-5":{},"127-1":{},"140-1":{},"140-5":{},"151-1":{},"151-2":{},"151-3":{},"151-4":{},"152-1":{},"166-1":{},"166-5":{},"177-1":{},"177-2":{},"177-3":{},"177-4":{},"178-1":{},"194-1":{},"194-5":{},"210-1":{},"210-2":{},"210-3":{},"210-4":{},"216-6":{},"239-8":{},"241-8":{},"243-7":{},"251-10":{},"258-10":{},"262-3":{},"262-8":{},"266-1":{},"269-5":{},"275-1":{},"280-6":{},"281-6":{},"284-2":{},"290-3":{},"292-52":{},"295-52":{},"298-51":{},"301-52":{}},"name":{"280":{},"281":{}},"text":{"1":{},"2":{},"3":{},"8":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"29":{},"30":{},"31":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"49":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"69":{},"70":{},"71":{},"74":{},"75":{},"76":{},"78":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"95":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"111":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"122":{},"124":{},"125":{},"126":{},"127":{},"128":{},"132":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"148":{},"151":{},"152":{},"153":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"174":{},"175":{},"177":{},"178":{},"179":{},"184":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"199":{},"200":{},"201":{},"204":{},"205":{},"206":{},"208":{},"209":{},"210":{},"214":{},"215":{},"216":{},"218":{},"219":{},"220":{},"229":{},"230":{},"231":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"268":{},"269":{},"270":{},"271":{},"273":{},"275":{},"276":{},"278":{},"279":{},"280":{},"281":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"290":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"304":{},"305":{}},"component":{}}],["applicatio",{"_index":878,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{}},"component":{}}],["application'",{"_index":3103,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["application.yaml",{"_index":2291,"title":{},"name":{},"text":{"261":{}},"component":{}}],["application/cloudevents+json",{"_index":1450,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["application/join",{"_index":885,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{}},"component":{}}],["application/json",{"_index":1267,"title":{},"name":{},"text":{"31":{},"38":{},"41":{},"71":{},"78":{},"80":{},"201":{},"209":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["application/octet",{"_index":1268,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["application:mi",{"_index":2549,"title":{},"name":{},"text":{"266":{}},"component":{}}],["application=&devic",{"_index":1238,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["application==exampl",{"_index":1251,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["application=app1&device=device%232&data_schema=application%2foctet",{"_index":1218,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["application=drogu",{"_index":2516,"title":{},"name":{},"text":{"263":{}},"component":{}}],["applicationmemb",{"_index":3102,"title":{"293-3":{},"296-3":{},"299-3":{},"302-3":{}},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["applicationscop",{"_index":2258,"title":{},"name":{},"text":{"261":{}},"component":{}}],["applicationspec",{"_index":3113,"title":{"293-4":{},"296-4":{},"299-4":{},"302-4":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["applicationstatu",{"_index":3114,"title":{"293-5":{},"296-5":{},"299-5":{},"302-5":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["applicationuid",{"_index":1328,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["application’",{"_index":1354,"title":{},"name":{},"text":{"39":{},"263":{}},"component":{}}],["applict",{"_index":2218,"title":{},"name":{},"text":{"258":{}},"component":{}}],["approach",{"_index":786,"title":{},"name":{},"text":{"15":{},"56":{},"219":{},"280":{},"281":{}},"component":{}}],["appropri",{"_index":404,"title":{},"name":{},"text":{"8":{},"14":{},"26":{},"29":{},"49":{},"55":{},"69":{},"85":{},"93":{},"98":{},"109":{},"114":{},"122":{},"132":{},"135":{},"143":{},"158":{},"161":{},"169":{},"184":{},"189":{},"199":{},"269":{},"275":{},"285":{}},"component":{}}],["approxim",{"_index":2608,"title":{},"name":{},"text":{"268":{}},"component":{}}],["apps/v1",{"_index":2351,"title":{},"name":{},"text":{"262":{}},"component":{}}],["apt",{"_index":2045,"title":{},"name":{},"text":{"245":{}},"component":{}}],["aquaa4icdwawggikaoicaqct6crz9bq385uek1cohie+3lffojcmbjzmv6b493xc",{"_index":1151,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["arbitrari",{"_index":1115,"title":{},"name":{},"text":{"26":{},"41":{},"80":{},"209":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["arbritrari",{"_index":3141,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["architect",{"_index":969,"title":{},"name":{},"text":{"23":{},"64":{}},"component":{}}],["architectur",{"_index":649,"title":{"88":{},"101":{},"117":{},"265":{},"24-1":{},"65-1":{}},"name":{"265":{}},"text":{"13":{},"17":{},"25":{},"54":{},"58":{},"66":{},"84":{},"88":{},"97":{},"101":{},"113":{},"117":{},"134":{},"138":{},"160":{},"164":{},"188":{},"192":{},"249":{},"265":{},"271":{},"282":{},"288":{},"289":{}},"component":{}}],["archiv",{"_index":389,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["area",{"_index":933,"title":{},"name":{},"text":{"22":{},"27":{},"63":{},"68":{},"198":{},"220":{},"259":{},"267":{},"270":{},"273":{}},"component":{}}],["arg",{"_index":1584,"title":{},"name":{},"text":{"215":{}},"component":{}}],["argument",{"_index":335,"title":{},"name":{},"text":{"6":{},"8":{},"12":{},"42":{},"47":{},"49":{},"53":{},"81":{},"120":{},"122":{},"130":{},"132":{},"151":{},"156":{},"158":{},"177":{},"182":{},"184":{},"210":{},"215":{},"216":{}},"component":{}}],["argument.y",{"_index":1503,"title":{},"name":{},"text":{"210":{}},"component":{}}],["arm",{"_index":1041,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["arm64",{"_index":523,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["around",{"_index":1662,"title":{},"name":{},"text":{"216":{},"256":{},"267":{},"276":{},"280":{},"281":{},"283":{},"290":{}},"component":{}}],["array",{"_index":1423,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"267":{}},"component":{}}],["arriv",{"_index":1101,"title":{},"name":{},"text":{"26":{},"38":{},"78":{},"214":{},"216":{},"218":{},"288":{}},"component":{}}],["artifact",{"_index":1013,"title":{},"name":{},"text":{"24":{},"65":{},"211":{},"212":{},"215":{}},"component":{}}],["artifici",{"_index":2679,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["ask",{"_index":1560,"title":{},"name":{},"text":{"214":{},"259":{},"262":{}},"component":{}}],["aspect",{"_index":487,"title":{},"name":{},"text":{"9":{},"17":{},"50":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"185":{},"192":{},"291":{},"294":{},"297":{},"300":{}},"component":{}}],["assembl",{"_index":2253,"title":{"261-4":{}},"name":{},"text":{"269":{},"290":{}},"component":{}}],["assign",{"_index":439,"title":{},"name":{},"text":{"8":{},"19":{},"31":{},"42":{},"49":{},"60":{},"71":{},"81":{},"93":{},"103":{},"109":{},"122":{},"124":{},"132":{},"140":{},"151":{},"158":{},"166":{},"177":{},"184":{},"194":{},"201":{},"210":{},"245":{},"266":{},"276":{},"285":{}},"component":{}}],["assist",{"_index":1660,"title":{},"name":{},"text":{"216":{}},"component":{}}],["assoc",{"_index":1769,"title":{},"name":{},"text":{"219":{}},"component":{}}],["associ",{"_index":1780,"title":{},"name":{},"text":{"219":{},"231":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["assum",{"_index":203,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"15":{},"26":{},"27":{},"30":{},"40":{},"41":{},"45":{},"51":{},"53":{},"56":{},"68":{},"70":{},"78":{},"79":{},"80":{},"94":{},"110":{},"123":{},"133":{},"154":{},"159":{},"170":{},"180":{},"186":{},"198":{},"200":{},"208":{},"209":{},"213":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"254":{},"255":{},"259":{},"262":{},"269":{},"270":{},"273":{}},"component":{}}],["assumestructuredcloudev",{"_index":1448,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["assur",{"_index":2627,"title":{},"name":{},"text":{"268":{}},"component":{}}],["async",{"_index":1645,"title":{"218-2":{},"219-1":{},"219-2":{},"219-3":{},"231-1":{}},"name":{},"text":{"216":{},"218":{},"219":{},"229":{},"230":{},"231":{}},"component":{}}],["asynchron",{"_index":1699,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["atawmc4gccsgaqufbwibfijodhrwoi8vy3bzlnjvb3qtedeubgv0c2vuy3j5chqu",{"_index":1166,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["atom",{"_index":1745,"title":{},"name":{},"text":{"218":{}},"component":{}}],["atomiccount",{"_index":1750,"title":{},"name":{},"text":{"218":{}},"component":{}}],["attach",{"_index":108,"title":{},"name":{},"text":{"1":{},"15":{},"35":{},"56":{},"75":{},"205":{},"218":{},"234":{},"245":{},"246":{},"248":{},"268":{},"276":{},"279":{},"281":{},"285":{},"292":{},"293":{},"295":{},"296":{},"299":{},"301":{},"302":{}},"component":{}}],["attempt",{"_index":1294,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{},"214":{},"244":{},"251":{}},"component":{}}],["attent",{"_index":2703,"title":{},"name":{},"text":{"272":{},"276":{},"285":{}},"component":{}}],["attribut",{"_index":1318,"title":{"38-3":{},"38-6":{},"38-9":{},"78-3":{},"78-6":{},"78-9":{}},"name":{},"text":{"38":{},"41":{},"78":{},"80":{},"209":{},"216":{},"218":{}},"component":{}}],["attributes/extens",{"_index":1389,"title":{"41-10":{},"80-10":{},"209-10":{}},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["audienc",{"_index":968,"title":{},"name":{},"text":{"23":{},"64":{}},"component":{}}],["auth",{"_index":695,"title":{},"name":{},"text":{"14":{},"27":{},"29":{},"30":{},"37":{},"55":{},"68":{},"69":{},"70":{},"77":{},"85":{},"98":{},"114":{},"135":{},"143":{},"161":{},"169":{},"170":{},"189":{},"198":{},"199":{},"200":{},"207":{},"215":{},"266":{}},"component":{}}],["authent",{"_index":673,"title":{"15-5":{},"27-4":{},"30-3":{},"31-3":{},"37-1":{},"56-5":{},"68-4":{},"70-3":{},"71-3":{},"77-1":{},"86-4":{},"99-4":{},"115-4":{},"136-4":{},"162-4":{},"170-3":{},"171-2":{},"190-4":{},"198-4":{},"200-3":{},"201-3":{},"207-1":{}},"name":{},"text":{"14":{},"15":{},"22":{},"24":{},"27":{},"29":{},"30":{},"36":{},"37":{},"41":{},"42":{},"55":{},"56":{},"63":{},"65":{},"68":{},"69":{},"70":{},"76":{},"77":{},"80":{},"81":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"143":{},"161":{},"162":{},"169":{},"170":{},"175":{},"177":{},"189":{},"190":{},"198":{},"199":{},"200":{},"206":{},"207":{},"209":{},"210":{},"212":{},"213":{},"220":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"249":{},"251":{},"254":{},"255":{},"265":{},"266":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["authn",{"_index":789,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["author",{"_index":446,"title":{"15-5":{},"56-5":{},"86-4":{},"99-4":{},"115-4":{},"136-4":{},"162-4":{},"190-4":{}},"name":{},"text":{"8":{},"14":{},"15":{},"21":{},"22":{},"37":{},"41":{},"49":{},"55":{},"56":{},"62":{},"63":{},"77":{},"80":{},"85":{},"86":{},"93":{},"98":{},"99":{},"105":{},"109":{},"114":{},"115":{},"122":{},"126":{},"132":{},"135":{},"136":{},"142":{},"158":{},"161":{},"162":{},"168":{},"184":{},"189":{},"190":{},"196":{},"207":{},"209":{},"215":{},"265":{},"280":{},"281":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["authz",{"_index":790,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["auto",{"_index":1183,"title":{"267-5":{}},"name":{},"text":{"28":{},"67":{},"197":{},"236":{},"237":{},"254":{},"267":{}},"component":{}}],["automat",{"_index":287,"title":{},"name":{},"text":{"5":{},"13":{},"21":{},"24":{},"26":{},"46":{},"54":{},"62":{},"65":{},"84":{},"97":{},"105":{},"113":{},"119":{},"126":{},"129":{},"134":{},"142":{},"155":{},"160":{},"168":{},"181":{},"188":{},"196":{},"258":{},"259":{},"262":{},"267":{},"269":{},"282":{},"285":{},"289":{}},"component":{}}],["avail",{"_index":205,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"24":{},"36":{},"42":{},"45":{},"46":{},"47":{},"65":{},"76":{},"81":{},"90":{},"106":{},"119":{},"120":{},"129":{},"130":{},"151":{},"154":{},"155":{},"156":{},"175":{},"177":{},"180":{},"181":{},"182":{},"206":{},"210":{},"212":{},"213":{},"215":{},"218":{},"230":{},"231":{},"245":{},"258":{},"261":{},"264":{},"270":{},"273":{},"277":{},"283":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["averag",{"_index":2621,"title":{},"name":{},"text":{"268":{},"270":{},"273":{}},"component":{}}],["avg(avg(temperatur",{"_index":2687,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["avg(temp",{"_index":2723,"title":{},"name":{},"text":{"273":{}},"component":{}}],["avg(temperatur",{"_index":2737,"title":{},"name":{},"text":{"273":{}},"component":{}}],["avoid",{"_index":49,"title":{},"name":{},"text":{"1":{},"25":{},"66":{},"230":{},"262":{}},"component":{}}],["await",{"_index":1730,"title":{},"name":{},"text":{"218":{},"231":{},"280":{},"281":{}},"component":{}}],["awar",{"_index":2693,"title":{},"name":{},"text":{"270":{},"273":{},"276":{}},"component":{}}],["away",{"_index":1074,"title":{},"name":{},"text":{"26":{},"274":{}},"component":{}}],["awkward",{"_index":1782,"title":{},"name":{},"text":{"219":{}},"component":{}}],["az",{"_index":2364,"title":{},"name":{},"text":{"262":{}},"component":{}}],["azur",{"_index":2343,"title":{"262-6":{}},"name":{},"text":{"262":{}},"component":{}}],["b",{"_index":1935,"title":{},"name":{},"text":{"236":{},"251":{},"276":{},"277":{},"285":{}},"component":{}}],["b1",{"_index":2167,"title":{},"name":{},"text":{"254":{},"255":{}},"component":{}}],["b1ac",{"_index":2207,"title":{},"name":{},"text":{"258":{}},"component":{}}],["b3jnmdwga1udhwq1mdmwmaavoc2gk2h0dha6ly9jcmwuawrlbnrydxn0lmnvbs9",{"_index":1167,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["back",{"_index":23,"title":{"287-1":{}},"name":{},"text":{"1":{},"14":{},"15":{},"25":{},"26":{},"36":{},"41":{},"55":{},"56":{},"66":{},"76":{},"80":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"175":{},"189":{},"190":{},"206":{},"209":{},"214":{},"234":{},"241":{},"245":{},"249":{},"251":{},"252":{},"258":{},"261":{},"266":{},"267":{},"268":{},"270":{},"273":{},"277":{},"279":{},"280":{},"281":{},"287":{}},"component":{}}],["backend",{"_index":109,"title":{"12-18":{},"12-20":{},"53-18":{},"53-20":{}},"name":{},"text":{"1":{},"12":{},"17":{},"19":{},"26":{},"36":{},"53":{},"58":{},"60":{},"76":{},"88":{},"101":{},"103":{},"117":{},"124":{},"138":{},"140":{},"164":{},"166":{},"175":{},"192":{},"194":{},"206":{},"261":{},"262":{},"277":{}},"component":{}}],["backend.json",{"_index":617,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["background",{"_index":2266,"title":{},"name":{},"text":{"261":{},"273":{}},"component":{}}],["bad",{"_index":2846,"title":{},"name":{},"text":{"279":{}},"component":{}}],["balanc",{"_index":275,"title":{},"name":{},"text":{"5":{},"41":{},"46":{},"80":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"209":{}},"component":{}}],["bar",{"_index":1427,"title":{},"name":{},"text":{"41":{},"42":{},"80":{},"81":{},"177":{},"209":{},"210":{}},"component":{}}],["bare",{"_index":194,"title":{"4":{},"45":{},"154":{},"180":{}},"name":{"4":{},"45":{},"154":{},"180":{}},"text":{"10":{},"24":{},"51":{},"65":{},"159":{},"186":{}},"component":{}}],["base",{"_index":72,"title":{"12-10":{},"53-10":{}},"name":{},"text":{"1":{},"2":{},"3":{},"8":{},"12":{},"14":{},"15":{},"16":{},"18":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"33":{},"36":{},"37":{},"41":{},"43":{},"44":{},"49":{},"53":{},"55":{},"56":{},"57":{},"59":{},"66":{},"67":{},"69":{},"70":{},"71":{},"73":{},"76":{},"77":{},"80":{},"82":{},"83":{},"85":{},"86":{},"87":{},"89":{},"95":{},"96":{},"98":{},"99":{},"100":{},"102":{},"111":{},"112":{},"114":{},"115":{},"116":{},"118":{},"127":{},"128":{},"135":{},"136":{},"137":{},"139":{},"143":{},"144":{},"145":{},"147":{},"149":{},"150":{},"152":{},"153":{},"161":{},"162":{},"163":{},"165":{},"169":{},"170":{},"171":{},"173":{},"175":{},"176":{},"178":{},"179":{},"189":{},"190":{},"191":{},"193":{},"197":{},"199":{},"200":{},"201":{},"203":{},"206":{},"207":{},"209":{},"212":{},"218":{},"229":{},"230":{},"231":{},"237":{},"245":{},"268":{},"269":{},"279":{},"280":{},"281":{},"283":{},"287":{},"290":{}},"component":{}}],["base64",{"_index":1205,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{},"214":{},"280":{}},"component":{}}],["basic",{"_index":1141,"title":{"216":{},"40-2":{},"79-2":{},"208-2":{},"220-1":{}},"name":{},"text":{"27":{},"29":{},"31":{},"37":{},"39":{},"41":{},"42":{},"68":{},"69":{},"71":{},"77":{},"80":{},"81":{},"143":{},"151":{},"169":{},"177":{},"198":{},"199":{},"201":{},"207":{},"209":{},"210":{},"216":{},"220":{},"256":{},"258":{},"267":{},"270":{},"273":{},"281":{}},"component":{}}],["basic_appl",{"_index":1600,"title":{},"name":{"216":{}},"text":{},"component":{}}],["basis[1",{"_index":2843,"title":{},"name":{},"text":{"279":{}},"component":{}}],["batteri",{"_index":2847,"title":{},"name":{},"text":{"279":{}},"component":{}}],["baz",{"_index":1428,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["bbc",{"_index":1717,"title":{},"name":{},"text":{"216":{},"220":{},"223":{},"226":{},"228":{},"229":{},"241":{},"243":{},"244":{}},"component":{}}],["bbc:microbit",{"_index":1603,"title":{},"name":{},"text":{"216":{}},"component":{}}],["bcrypt",{"_index":1465,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["bda944dcd9db",{"_index":2473,"title":{},"name":{},"text":{"263":{}},"component":{}}],["be",{"_index":153,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"12":{},"13":{},"14":{},"15":{},"19":{},"26":{},"40":{},"42":{},"43":{},"45":{},"46":{},"53":{},"54":{},"55":{},"56":{},"60":{},"79":{},"81":{},"82":{},"84":{},"85":{},"86":{},"90":{},"95":{},"97":{},"98":{},"99":{},"103":{},"106":{},"111":{},"113":{},"114":{},"115":{},"119":{},"124":{},"127":{},"129":{},"134":{},"135":{},"136":{},"140":{},"151":{},"152":{},"154":{},"155":{},"160":{},"161":{},"162":{},"166":{},"177":{},"178":{},"180":{},"181":{},"188":{},"189":{},"190":{},"194":{},"208":{},"210":{},"213":{},"215":{},"216":{},"245":{},"261":{},"262":{}},"component":{}}],["beacon",{"_index":2094,"title":{},"name":{},"text":{"245":{}},"component":{}}],["bean",{"_index":2264,"title":{},"name":{},"text":{"261":{}},"component":{}}],["bearer",{"_index":1142,"title":{},"name":{},"text":{"27":{},"37":{},"68":{},"77":{},"198":{},"207":{},"215":{},"266":{},"269":{},"280":{},"281":{}},"component":{}}],["beauti",{"_index":2576,"title":{},"name":{},"text":{"267":{}},"component":{}}],["becom",{"_index":680,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"245":{},"266":{}},"component":{}}],["befor",{"_index":360,"title":{},"name":{},"text":{"8":{},"12":{},"14":{},"15":{},"21":{},"22":{},"26":{},"29":{},"36":{},"41":{},"49":{},"53":{},"55":{},"56":{},"62":{},"63":{},"69":{},"76":{},"80":{},"85":{},"86":{},"91":{},"93":{},"98":{},"99":{},"105":{},"107":{},"109":{},"114":{},"115":{},"122":{},"126":{},"132":{},"135":{},"136":{},"142":{},"143":{},"158":{},"161":{},"162":{},"168":{},"169":{},"175":{},"184":{},"189":{},"190":{},"196":{},"199":{},"206":{},"209":{},"213":{},"214":{},"215":{},"218":{},"251":{},"256":{},"258":{},"261":{},"262":{},"264":{},"276":{},"281":{}},"component":{}}],["begin",{"_index":1145,"title":{},"name":{},"text":{"27":{},"68":{},"198":{},"263":{}},"component":{}}],["behalf",{"_index":1088,"title":{},"name":{},"text":{"26":{},"30":{},"31":{},"38":{},"42":{},"70":{},"71":{},"78":{},"81":{},"170":{},"177":{},"200":{},"201":{},"210":{}},"component":{}}],["behalft",{"_index":1275,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["behavior",{"_index":52,"title":{},"name":{},"text":{"1":{},"25":{},"66":{},"230":{}},"component":{}}],["believ",{"_index":683,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{}},"component":{}}],["belong",{"_index":120,"title":{},"name":{},"text":{"2":{},"26":{},"38":{},"42":{},"43":{},"78":{},"81":{},"82":{},"95":{},"111":{},"127":{},"151":{},"152":{},"177":{},"178":{},"210":{},"220":{}},"component":{}}],["below",{"_index":398,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"214":{},"218":{}},"component":{}}],["belt",{"_index":1039,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["beneath",{"_index":2048,"title":{},"name":{},"text":{"245":{}},"component":{}}],["benefici",{"_index":1376,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["benefit",{"_index":723,"title":{},"name":{},"text":{"15":{},"17":{},"56":{},"58":{},"86":{},"88":{},"99":{},"101":{},"115":{},"117":{},"136":{},"138":{},"162":{},"164":{},"190":{},"192":{},"267":{}},"component":{}}],["besid",{"_index":2406,"title":{},"name":{},"text":{"263":{}},"component":{}}],["best",{"_index":542,"title":{},"name":{},"text":{"12":{},"15":{},"53":{},"56":{},"251":{},"263":{},"273":{},"274":{},"285":{}},"component":{}}],["better",{"_index":687,"title":{"273-6":{}},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"216":{},"231":{},"259":{},"267":{},"270":{},"273":{}},"component":{}}],["between",{"_index":716,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"18":{},"26":{},"37":{},"55":{},"56":{},"57":{},"59":{},"77":{},"85":{},"86":{},"87":{},"98":{},"99":{},"100":{},"114":{},"115":{},"116":{},"135":{},"136":{},"137":{},"139":{},"161":{},"162":{},"163":{},"165":{},"189":{},"190":{},"191":{},"193":{},"207":{},"262":{},"273":{},"279":{},"280":{},"281":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["bhbvo5bieebbpjovjsxqeoeo3tkqjhb7t/eo98flageyjzyilefin5ynnnwe+w5i",{"_index":1156,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["big",{"_index":957,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["bigger",{"_index":819,"title":{},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"272":{}},"component":{}}],["bill",{"_index":2366,"title":{},"name":{},"text":{"262":{}},"component":{}}],["binari",{"_index":137,"title":{"36-7":{},"76-7":{},"175-7":{},"206-7":{},"258-6":{}},"name":{},"text":{"2":{},"4":{},"18":{},"28":{},"36":{},"41":{},"43":{},"45":{},"59":{},"67":{},"76":{},"80":{},"82":{},"89":{},"95":{},"102":{},"111":{},"118":{},"127":{},"139":{},"152":{},"154":{},"165":{},"175":{},"178":{},"180":{},"193":{},"197":{},"206":{},"209":{},"214":{},"241":{},"246":{},"251":{},"258":{},"260":{},"263":{},"279":{},"285":{},"287":{}},"component":{}}],["bind",{"_index":303,"title":{},"name":{},"text":{"5":{},"12":{},"36":{},"46":{},"53":{},"76":{},"90":{},"106":{},"119":{},"129":{},"155":{},"175":{},"181":{},"206":{},"261":{}},"component":{}}],["binutil",{"_index":1979,"title":{},"name":{},"text":{"239":{},"241":{},"243":{}},"component":{}}],["bit",{"_index":2104,"title":{},"name":{},"text":{"245":{},"256":{},"259":{},"260":{},"261":{},"262":{},"263":{},"266":{},"267":{},"268":{},"270":{},"272":{},"273":{},"279":{},"287":{}},"component":{}}],["bitcoin",{"_index":1401,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"269":{}},"component":{}}],["ble",{"_index":818,"title":{"220-4":{}},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"220":{},"222":{},"229":{},"230":{},"239":{},"241":{},"243":{},"245":{}},"component":{}}],["blindli",{"_index":2216,"title":{},"name":{},"text":{"258":{}},"component":{}}],["blink",{"_index":1984,"title":{},"name":{},"text":{"239":{},"241":{},"243":{},"247":{}},"component":{}}],["blinkdanc",{"_index":2124,"title":{"247-1":{}},"name":{},"text":{},"component":{}}],["blinki",{"_index":1805,"title":{"246-1":{},"249-1":{},"252-1":{}},"name":{},"text":{"220":{},"221":{}},"component":{}}],["blinky.uf2",{"_index":2117,"title":{},"name":{},"text":{"246":{}},"component":{}}],["blob",{"_index":1553,"title":{},"name":{},"text":{"214":{}},"component":{}}],["block",{"_index":909,"title":{},"name":{},"text":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{},"214":{},"218":{},"219":{},"231":{}},"component":{}}],["blown",{"_index":811,"title":{},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{}},"component":{}}],["blue",{"_index":1944,"title":{},"name":{},"text":{"236":{},"239":{},"247":{},"248":{},"249":{},"252":{},"254":{},"255":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["blue/us",{"_index":2152,"title":{},"name":{},"text":{"251":{}},"component":{}}],["bluetooth",{"_index":815,"title":{"239":{},"241":{},"243":{},"245-1":{},"245-2":{}},"name":{},"text":{"16":{},"22":{},"57":{},"63":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"220":{},"222":{},"239":{},"241":{},"243":{},"245":{}},"component":{}}],["bluetoothd",{"_index":2030,"title":{"245-3":{}},"name":{},"text":{},"component":{}}],["bluetoothsctl",{"_index":2002,"title":{},"name":{},"text":{"241":{}},"component":{}}],["bluez",{"_index":2041,"title":{},"name":{},"text":{"245":{}},"component":{}}],["board",{"_index":920,"title":{"217":{},"229-1":{},"245-5":{}},"name":{},"text":{"22":{},"63":{},"216":{},"217":{},"220":{},"221":{},"223":{},"225":{},"226":{},"228":{},"229":{},"230":{},"232":{},"236":{},"237":{},"239":{},"243":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"265":{},"276":{},"277":{},"280":{},"281":{},"282":{},"285":{},"286":{},"287":{},"289":{}},"component":{}}],["board’",{"_index":2080,"title":{},"name":{},"text":{"245":{}},"component":{}}],["bodi",{"_index":1445,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["boilerpl",{"_index":1663,"title":{},"name":{},"text":{"216":{},"217":{},"218":{},"219":{}},"component":{}}],["book",{"_index":114,"title":{},"name":{},"text":{"231":{},"256":{}},"component":{"1":{}}}],["bool",{"_index":1658,"title":{},"name":{},"text":{"216":{}},"component":{}}],["boolean",{"_index":1333,"title":{},"name":{},"text":{"38":{},"40":{},"78":{},"79":{},"208":{}},"component":{}}],["boot",{"_index":1970,"title":{},"name":{},"text":{"238":{},"242":{},"250":{},"253":{}},"component":{}}],["bootload",{"_index":1827,"title":{"238":{},"242":{},"250":{},"253":{},"239-6":{},"241-7":{},"251-9":{}},"name":{},"text":{"220":{},"226":{},"238":{},"242":{},"246":{},"250":{},"251":{},"253":{},"255":{}},"component":{}}],["bootloader/cargo.toml",{"_index":1980,"title":{},"name":{},"text":{"239":{},"241":{},"251":{},"255":{}},"component":{}}],["bootsel",{"_index":2109,"title":{},"name":{},"text":{"246":{}},"component":{}}],["bootstrap",{"_index":208,"title":{"218-6":{}},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["bosanac",{"_index":2664,"title":{},"name":{},"text":{"269":{}},"component":{}}],["both",{"_index":478,"title":{},"name":{},"text":{"9":{},"16":{},"18":{},"19":{},"21":{},"24":{},"31":{},"36":{},"37":{},"50":{},"57":{},"59":{},"60":{},"62":{},"65":{},"71":{},"76":{},"77":{},"78":{},"87":{},"89":{},"94":{},"100":{},"102":{},"103":{},"105":{},"110":{},"116":{},"118":{},"123":{},"124":{},"126":{},"133":{},"137":{},"139":{},"140":{},"142":{},"159":{},"163":{},"165":{},"166":{},"168":{},"175":{},"185":{},"191":{},"193":{},"194":{},"196":{},"201":{},"206":{},"207":{},"212":{},"261":{},"265":{},"268":{},"269":{},"270":{},"273":{},"275":{},"281":{}},"component":{}}],["bottom",{"_index":2751,"title":{},"name":{},"text":{"274":{}},"component":{}}],["bound",{"_index":148,"title":{},"name":{},"text":{"2":{},"12":{},"43":{},"53":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{}},"component":{}}],["boundari",{"_index":944,"title":{},"name":{},"text":{"22":{},"63":{},"218":{}},"component":{}}],["box",{"_index":788,"title":{},"name":{},"text":{"15":{},"56":{},"213":{},"230":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"246":{},"247":{},"249":{},"251":{},"252":{},"254":{},"255":{},"280":{},"281":{}},"component":{}}],["branch",{"_index":320,"title":{},"name":{},"text":{"6":{},"24":{},"47":{},"65":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{}},"component":{}}],["break",{"_index":1430,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"216":{},"258":{}},"component":{}}],["breakout",{"_index":1918,"title":{},"name":{},"text":{"234":{},"235":{},"244":{}},"component":{}}],["breath",{"_index":3039,"title":{},"name":{},"text":{"287":{}},"component":{}}],["brew",{"_index":574,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["brew](https://brew.sh",{"_index":573,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["bridg",{"_index":2904,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["brief",{"_index":2256,"title":{},"name":{},"text":{"261":{}},"component":{}}],["bring",{"_index":8,"title":{},"name":{},"text":{"1":{},"17":{},"23":{},"58":{},"64":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"256":{},"258":{},"267":{}},"component":{}}],["broadcast",{"_index":2086,"title":{},"name":{},"text":{"245":{},"261":{},"281":{}},"component":{}}],["broken",{"_index":1453,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["broker",{"_index":836,"title":{},"name":{},"text":{"17":{},"31":{},"40":{},"58":{},"71":{},"79":{},"88":{},"101":{},"117":{},"138":{},"164":{},"171":{},"192":{},"201":{},"208":{},"261":{}},"component":{}}],["browser",{"_index":678,"title":{},"name":{},"text":{"14":{},"28":{},"37":{},"55":{},"67":{},"77":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"197":{},"207":{},"258":{},"259":{},"260":{},"263":{},"266":{},"267":{},"270":{},"272":{},"273":{},"280":{},"281":{},"283":{},"290":{}},"component":{}}],["bsp",{"_index":1713,"title":{},"name":{"217":{}},"text":{"216":{}},"component":{}}],["bubbl",{"_index":2246,"title":{},"name":{},"text":{"259":{}},"component":{}}],["buck",{"_index":2702,"title":{},"name":{},"text":{"272":{}},"component":{}}],["budget",{"_index":2623,"title":{},"name":{},"text":{"268":{}},"component":{}}],["buffer",{"_index":744,"title":{},"name":{},"text":{"15":{},"26":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["buffer.from(command.payload",{"_index":2957,"title":{},"name":{},"text":{"280":{}},"component":{}}],["buffer.from(json.data.uplink_message.frm_payload",{"_index":2944,"title":{},"name":{},"text":{"280":{}},"component":{}}],["bug",{"_index":3028,"title":{},"name":{},"text":{"285":{}},"component":{}}],["build",{"_index":62,"title":{"12-7":{},"53-7":{},"212-3":{},"213-5":{},"215-5":{},"215-6":{},"235-6":{},"236-6":{},"237-6":{},"246-5":{},"254-6":{},"259-1":{},"259-5":{},"304-1":{}},"name":{},"text":{"1":{},"6":{},"12":{},"24":{},"47":{},"53":{},"65":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"212":{},"213":{},"215":{},"220":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"244":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"259":{},"262":{},"263":{},"270":{},"271":{},"273":{},"276":{},"277":{},"280":{},"281":{},"288":{},"290":{},"303":{},"304":{},"305":{}},"component":{}}],["build.uri=https://github.com/drogu",{"_index":2226,"title":{},"name":{},"text":{"259":{}},"component":{}}],["build/certs/endpoints/root",{"_index":1244,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["builder",{"_index":1578,"title":{},"name":{},"text":{"215":{}},"component":{}}],["buildinfo",{"_index":3174,"title":{"305-1":{}},"name":{},"text":{"304":{}},"component":{}}],["built",{"_index":54,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"12":{},"14":{},"24":{},"44":{},"47":{},"53":{},"55":{},"65":{},"83":{},"85":{},"91":{},"96":{},"98":{},"107":{},"112":{},"114":{},"120":{},"128":{},"130":{},"135":{},"153":{},"156":{},"161":{},"179":{},"182":{},"189":{},"212":{},"215":{},"246":{},"259":{},"280":{}},"component":{}}],["builtin",{"_index":1534,"title":{},"name":{},"text":{"213":{},"231":{}},"component":{}}],["bullsey",{"_index":2034,"title":{},"name":{},"text":{"245":{}},"component":{}}],["burden",{"_index":681,"title":{},"name":{},"text":{"14":{},"22":{},"55":{},"63":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{}},"component":{}}],["busi",{"_index":922,"title":{},"name":{},"text":{"22":{},"25":{},"63":{},"66":{},"231":{},"281":{}},"component":{}}],["bust",{"_index":2697,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["button",{"_index":1608,"title":{"276-5":{}},"name":{},"text":{"216":{},"234":{},"236":{},"244":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"259":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"276":{},"279":{},"280":{},"281":{},"285":{}},"component":{}}],["button_a",{"_index":1705,"title":{},"name":{},"text":{"216":{}},"component":{}}],["buttonactor",{"_index":1706,"title":{},"name":{},"text":{"216":{}},"component":{}}],["buttonactor::new(board.btn_a",{"_index":1707,"title":{},"name":{},"text":{"216":{}},"component":{}}],["buttonev",{"_index":1639,"title":{},"name":{},"text":{"216":{},"279":{}},"component":{}}],["buttonevent::press",{"_index":2881,"title":{},"name":{},"text":{"279":{}},"component":{}}],["buttonevent::releas",{"_index":1640,"title":{},"name":{},"text":{"216":{},"279":{}},"component":{}}],["buy",{"_index":2823,"title":{},"name":{},"text":{"277":{}},"component":{}}],["buzzword",{"_index":2642,"title":{},"name":{},"text":{"269":{}},"component":{}}],["byte",{"_index":1215,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{},"261":{},"275":{},"278":{}},"component":{}}],["c",{"_index":406,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"122":{},"132":{},"158":{},"184":{},"278":{}},"component":{}}],["c3quy29tl3jvb3rzl2rzdhjvb3rjyxgzlna3yzafbgnvhsmegdawgbtep7gkeyxx",{"_index":1164,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["ca",{"_index":393,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["cabl",{"_index":1917,"title":{},"name":{},"text":{"234":{}},"component":{}}],["calcul",{"_index":1416,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["call",{"_index":145,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"15":{},"43":{},"47":{},"49":{},"56":{},"82":{},"91":{},"93":{},"95":{},"107":{},"109":{},"111":{},"120":{},"122":{},"127":{},"130":{},"132":{},"152":{},"156":{},"158":{},"178":{},"182":{},"184":{},"216":{},"231":{}},"component":{}}],["caller",{"_index":2648,"title":{},"name":{},"text":{"269":{}},"component":{}}],["camel",{"_index":1398,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["cancel",{"_index":1359,"title":{},"name":{},"text":{"39":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["can’t",{"_index":2907,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["capabl",{"_index":886,"title":{"238":{},"242":{},"251-8":{}},"name":{},"text":{"20":{},"24":{},"25":{},"42":{},"61":{},"65":{},"66":{},"81":{},"104":{},"125":{},"141":{},"151":{},"167":{},"177":{},"195":{},"210":{},"237":{},"251":{},"286":{}},"component":{}}],["card",{"_index":2625,"title":{},"name":{},"text":{"268":{}},"component":{}}],["care",{"_index":168,"title":{},"name":{},"text":{"3":{},"5":{},"15":{},"41":{},"44":{},"46":{},"56":{},"80":{},"83":{},"86":{},"96":{},"99":{},"112":{},"115":{},"119":{},"128":{},"129":{},"136":{},"153":{},"155":{},"162":{},"179":{},"181":{},"190":{},"209":{},"269":{},"272":{},"277":{},"279":{}},"component":{}}],["cargo",{"_index":578,"title":{"258-5":{}},"name":{},"text":{"12":{},"53":{},"220":{},"229":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"258":{},"276":{},"279":{},"282":{},"285":{},"287":{},"289":{},"290":{}},"component":{}}],["cargo.toml",{"_index":1998,"title":{},"name":{},"text":{"241":{}},"component":{}}],["carri",{"_index":1094,"title":{},"name":{},"text":{"26":{},"29":{},"38":{},"69":{},"78":{},"143":{},"169":{},"199":{}},"component":{}}],["cascad",{"_index":1053,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["case",{"_index":79,"title":{"23":{},"64":{}},"name":{},"text":{"1":{},"2":{},"8":{},"10":{},"12":{},"15":{},"16":{},"19":{},"23":{},"24":{},"26":{},"29":{},"31":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"49":{},"51":{},"53":{},"56":{},"57":{},"60":{},"64":{},"65":{},"69":{},"71":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"82":{},"86":{},"87":{},"93":{},"94":{},"95":{},"99":{},"100":{},"103":{},"109":{},"110":{},"111":{},"115":{},"116":{},"122":{},"123":{},"124":{},"127":{},"132":{},"133":{},"136":{},"137":{},"140":{},"143":{},"151":{},"152":{},"158":{},"159":{},"162":{},"163":{},"166":{},"169":{},"175":{},"177":{},"178":{},"184":{},"186":{},"190":{},"191":{},"194":{},"199":{},"201":{},"205":{},"206":{},"207":{},"209":{},"210":{},"216":{},"218":{},"220":{},"232":{},"256":{},"258":{},"259":{},"260":{},"261":{},"262":{},"267":{},"268":{},"269":{},"276":{},"277":{},"279":{},"280":{},"281":{},"283":{},"286":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["cat",{"_index":2051,"title":{},"name":{},"text":{"245":{}},"component":{}}],["catch",{"_index":1098,"title":{},"name":{},"text":{"26":{}},"component":{}}],["categor",{"_index":1413,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["categori",{"_index":1826,"title":{},"name":{},"text":{"220":{}},"component":{}}],["caus",{"_index":1406,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"251":{},"285":{}},"component":{}}],["caution",{"_index":1175,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["cbor",{"_index":1519,"title":{},"name":{},"text":{"212":{},"214":{}},"component":{}}],["cd",{"_index":627,"title":{},"name":{},"text":{"12":{},"53":{},"212":{},"229":{},"276":{},"285":{}},"component":{}}],["cdae10b2f5d4b87c",{"_index":2840,"title":{},"name":{},"text":{"278":{}},"component":{}}],["cdi",{"_index":2978,"title":{},"name":{},"text":{"281":{}},"component":{}}],["ced63698",{"_index":3129,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["cell",{"_index":2825,"title":{},"name":{},"text":{"277":{}},"component":{}}],["cellular",{"_index":936,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["center",{"_index":929,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["central",{"_index":799,"title":{"25-4":{},"66-4":{}},"name":{},"text":{"15":{},"22":{},"25":{},"40":{},"56":{},"63":{},"66":{},"79":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"208":{},"268":{}},"component":{}}],["cert",{"_index":260,"title":{},"name":{},"text":{"4":{},"8":{},"12":{},"45":{},"49":{},"53":{},"154":{},"180":{},"184":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["cert.pem",{"_index":1245,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["certain",{"_index":1899,"title":{},"name":{},"text":{"231":{},"272":{}},"component":{}}],["certcredenti",{"_index":3115,"title":{"293-6":{},"296-6":{},"299-6":{},"302-6":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["certif",{"_index":258,"title":{"8-9":{},"31-4":{},"42-18":{},"49-9":{},"71-4":{},"81-18":{},"93-8":{},"93-10":{},"109-8":{},"109-10":{},"122-8":{},"122-10":{},"132-8":{},"132-10":{},"151-10":{},"158-8":{},"158-10":{},"177-18":{},"184-9":{},"201-4":{},"210-18":{}},"name":{},"text":{"4":{},"8":{},"14":{},"15":{},"27":{},"28":{},"30":{},"31":{},"45":{},"49":{},"55":{},"56":{},"67":{},"68":{},"70":{},"71":{},"85":{},"86":{},"93":{},"98":{},"99":{},"109":{},"114":{},"115":{},"122":{},"132":{},"135":{},"136":{},"154":{},"158":{},"161":{},"162":{},"170":{},"171":{},"180":{},"184":{},"189":{},"190":{},"197":{},"198":{},"200":{},"201":{},"266":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["cfgclient",{"_index":2032,"title":{"245-4":{},"245-8":{}},"name":{},"text":{"245":{}},"component":{}}],["chain",{"_index":1414,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["chang",{"_index":351,"title":{"279":{},"287":{},"8-8":{},"14-3":{},"49-8":{},"55-3":{},"85-3":{},"93-7":{},"98-3":{},"109-7":{},"114-3":{},"122-7":{},"132-7":{},"135-3":{},"158-7":{},"161-3":{},"184-8":{},"189-3":{},"279-2":{},"279-3":{},"287-2":{},"287-3":{}},"name":{"279":{},"287":{}},"text":{"8":{},"9":{},"12":{},"14":{},"18":{},"19":{},"20":{},"26":{},"31":{},"38":{},"39":{},"42":{},"49":{},"50":{},"53":{},"55":{},"59":{},"60":{},"61":{},"71":{},"78":{},"81":{},"85":{},"93":{},"98":{},"103":{},"104":{},"109":{},"114":{},"122":{},"124":{},"125":{},"132":{},"135":{},"139":{},"140":{},"141":{},"151":{},"158":{},"161":{},"165":{},"166":{},"167":{},"177":{},"184":{},"185":{},"189":{},"193":{},"194":{},"195":{},"201":{},"210":{},"213":{},"231":{},"241":{},"259":{},"261":{},"262":{},"263":{},"266":{},"267":{},"270":{},"273":{},"275":{},"276":{},"279":{},"280":{},"281":{},"285":{},"287":{}},"component":{}}],["channel",{"_index":165,"title":{"41-4":{},"80-4":{},"209-4":{},"261-5":{}},"name":{},"text":{"2":{},"15":{},"26":{},"29":{},"30":{},"31":{},"38":{},"41":{},"43":{},"56":{},"69":{},"70":{},"71":{},"78":{},"80":{},"82":{},"86":{},"95":{},"99":{},"111":{},"115":{},"127":{},"136":{},"143":{},"152":{},"162":{},"169":{},"170":{},"178":{},"190":{},"199":{},"200":{},"201":{},"209":{},"214":{},"218":{},"231":{},"261":{},"263":{},"281":{}},"component":{}}],["channel.drogu",{"_index":2512,"title":{},"name":{},"text":{"263":{}},"component":{}}],["channels.drogue_inbound",{"_index":2290,"title":{},"name":{},"text":{"261":{}},"component":{}}],["channels.telemetri",{"_index":2288,"title":{},"name":{},"text":{"261":{}},"component":{}}],["chapter",{"_index":849,"title":{},"name":{},"text":{"18":{},"59":{},"89":{},"102":{},"118":{},"139":{},"165":{},"193":{},"262":{}},"component":{}}],["charact",{"_index":2752,"title":{},"name":{},"text":{"274":{}},"component":{}}],["charg",{"_index":2399,"title":{},"name":{},"text":{"262":{},"269":{}},"component":{}}],["charset=utf",{"_index":1451,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["chart",{"_index":369,"title":{"11-1":{},"12-15":{},"52-1":{},"53-15":{},"187-1":{}},"name":{},"text":{"8":{},"9":{},"11":{},"12":{},"49":{},"50":{},"52":{},"53":{},"185":{},"187":{},"259":{},"266":{},"267":{},"283":{}},"component":{}}],["chat",{"_index":974,"title":{},"name":{},"text":{"23":{},"64":{}},"component":{}}],["che",{"_index":2244,"title":{},"name":{},"text":{"259":{}},"component":{}}],["cheap",{"_index":2831,"title":{},"name":{},"text":{"277":{}},"component":{}}],["check",{"_index":318,"title":{"41-4":{},"80-4":{},"209-4":{},"275-3":{},"276-4":{},"285-4":{}},"name":{},"text":{"6":{},"8":{},"14":{},"31":{},"36":{},"41":{},"42":{},"47":{},"49":{},"55":{},"71":{},"76":{},"80":{},"81":{},"85":{},"91":{},"93":{},"98":{},"107":{},"109":{},"114":{},"120":{},"122":{},"130":{},"132":{},"135":{},"156":{},"158":{},"161":{},"177":{},"182":{},"184":{},"189":{},"201":{},"206":{},"209":{},"210":{},"214":{},"215":{},"216":{},"231":{},"243":{},"262":{},"266":{},"267":{},"269":{},"270":{},"273":{},"276":{},"277":{},"279":{},"280":{},"281":{},"282":{},"285":{},"289":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["checkout",{"_index":2765,"title":{},"name":{},"text":{"276":{}},"component":{}}],["checksum",{"_index":1509,"title":{},"name":{},"text":{"211":{},"214":{}},"component":{}}],["chip",{"_index":1786,"title":{},"name":{},"text":{"220":{},"226":{},"232":{},"237":{},"238":{},"239":{},"241":{},"242":{},"243":{},"250":{},"251":{},"253":{},"255":{},"276":{},"285":{}},"component":{}}],["chip=stm32l475vgtx",{"_index":2145,"title":{},"name":{},"text":{"251":{}},"component":{}}],["chip=stm32l4s5vi",{"_index":2142,"title":{},"name":{},"text":{"251":{}},"component":{}}],["chip_featur",{"_index":2153,"title":{},"name":{},"text":{"251":{}},"component":{}}],["chip_feature=b",{"_index":2143,"title":{},"name":{},"text":{"251":{}},"component":{}}],["chip_feature},debug",{"_index":2150,"title":{},"name":{},"text":{"251":{}},"component":{}}],["chip_feature},tls,debug",{"_index":2151,"title":{},"name":{},"text":{"251":{}},"component":{}}],["chip_feature},tls,dfu,debug",{"_index":2154,"title":{},"name":{},"text":{"251":{}},"component":{}}],["chocolatey",{"_index":571,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["choic",{"_index":2338,"title":{},"name":{},"text":{"261":{},"262":{},"283":{}},"component":{}}],["choos",{"_index":1079,"title":{"274-1":{}},"name":{},"text":{"26":{},"217":{},"263":{},"267":{},"269":{},"272":{},"274":{},"278":{},"280":{},"281":{}},"component":{}}],["chosen",{"_index":2822,"title":{},"name":{},"text":{"277":{}},"component":{}}],["chunk",{"_index":2725,"title":{},"name":{},"text":{"273":{}},"component":{}}],["ci/cd",{"_index":1517,"title":{},"name":{},"text":{"212":{}},"component":{}}],["cipher",{"_index":2713,"title":{},"name":{},"text":{"272":{}},"component":{}}],["class",{"_index":1878,"title":{},"name":{},"text":{"230":{},"261":{},"263":{},"279":{},"281":{},"283":{},"287":{}},"component":{}}],["claus",{"_index":2584,"title":{},"name":{},"text":{"267":{}},"component":{}}],["clean",{"_index":908,"title":{"262-10":{}},"name":{},"text":{"21":{},"31":{},"42":{},"62":{},"71":{},"81":{},"105":{},"126":{},"142":{},"151":{},"168":{},"171":{},"177":{},"196":{},"201":{},"210":{},"262":{}},"component":{}}],["cleanup",{"_index":1071,"title":{},"name":{},"text":{"26":{},"42":{},"81":{},"151":{},"177":{},"210":{}},"component":{}}],["clear",{"_index":767,"title":{},"name":{},"text":{"15":{},"56":{}},"component":{}}],["cli",{"_index":497,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{},"239":{},"241":{},"243":{},"281":{}},"component":{}}],["click",{"_index":1947,"title":{},"name":{},"text":{"236":{},"254":{},"255":{},"259":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"290":{}},"component":{}}],["client",{"_index":178,"title":{"31-4":{},"42-18":{},"71-4":{},"81-18":{},"151-10":{},"177-18":{},"201-4":{},"210-18":{},"258-4":{}},"name":{},"text":{"3":{},"4":{},"10":{},"14":{},"15":{},"28":{},"30":{},"31":{},"37":{},"40":{},"44":{},"45":{},"51":{},"55":{},"56":{},"67":{},"70":{},"71":{},"77":{},"79":{},"85":{},"86":{},"94":{},"98":{},"99":{},"110":{},"114":{},"115":{},"123":{},"128":{},"133":{},"135":{},"136":{},"153":{},"154":{},"159":{},"161":{},"162":{},"170":{},"171":{},"179":{},"180":{},"186":{},"189":{},"190":{},"197":{},"200":{},"201":{},"207":{},"208":{},"213":{},"214":{},"261":{},"264":{},"266":{},"272":{},"280":{},"281":{},"286":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["client.j",{"_index":2939,"title":{},"name":{},"text":{"280":{}},"component":{}}],["client.on('messag",{"_index":2940,"title":{},"name":{},"text":{"280":{}},"component":{}}],["client.publish(sendtop",{"_index":2959,"title":{},"name":{},"text":{"280":{}},"component":{}}],["client_id",{"_index":637,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["clone",{"_index":325,"title":{"276-1":{},"285-1":{},"290-1":{}},"name":{},"text":{"6":{},"47":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"213":{},"216":{},"229":{},"259":{},"261":{},"263":{},"276":{},"280":{},"281":{},"285":{},"290":{}},"component":{}}],["close",{"_index":918,"title":{},"name":{},"text":{"22":{},"37":{},"42":{},"63":{},"81":{},"151":{},"177":{},"210":{},"258":{},"270":{},"272":{},"273":{},"274":{}},"component":{}}],["closer",{"_index":76,"title":{},"name":{},"text":{"1":{},"22":{},"63":{}},"component":{}}],["cloud",{"_index":2,"title":{"3":{},"44":{},"83":{},"96":{},"112":{},"128":{},"153":{},"179":{},"259":{},"266":{},"275":{},"284":{},"291":{},"294":{},"297":{},"300":{},"1-3":{},"12-20":{},"22-4":{},"24-3":{},"53-20":{},"63-4":{},"65-3":{},"220-5":{},"233-1":{},"256-2":{},"258-3":{},"258-7":{},"259-3":{},"261-3":{},"269-3":{},"277-4":{},"279-2":{},"280-1":{},"281-1":{},"286-3":{},"287-2":{}},"name":{"259":{},"275":{},"284":{}},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"74":{},"75":{},"76":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"146":{},"148":{},"151":{},"152":{},"153":{},"154":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"174":{},"177":{},"178":{},"179":{},"180":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"204":{},"205":{},"206":{},"208":{},"209":{},"210":{},"212":{},"213":{},"214":{},"215":{},"220":{},"223":{},"229":{},"230":{},"233":{},"234":{},"244":{},"251":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"275":{},"276":{},"277":{},"279":{},"280":{},"281":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"290":{},"291":{},"292":{},"294":{},"295":{},"297":{},"298":{},"300":{},"301":{}},"component":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{}}}],["cloud.for",{"_index":3055,"title":{},"name":{},"text":{"291":{},"294":{},"297":{},"300":{}},"component":{}}],["cloud/releases/latest",{"_index":383,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["cloud/releases/tag/v0.3.0",{"_index":1488,"title":{},"name":{},"text":{"93":{},"109":{}},"component":{}}],["cloud/tree/main/serv",{"_index":626,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["cloudev",{"_index":1280,"title":{},"name":{},"text":{"34":{},"36":{},"37":{},"38":{},"41":{},"74":{},"76":{},"77":{},"80":{},"149":{},"150":{},"174":{},"175":{},"176":{},"204":{},"206":{},"207":{},"209":{},"263":{}},"component":{}}],["cloudevents.https://xxx",{"_index":1497,"title":{},"name":{},"text":{"148":{}},"component":{}}],["cloudevent{id='dec025b8",{"_index":2469,"title":{},"name":{},"text":{"263":{}},"component":{}}],["cluster",{"_index":264,"title":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"10-2":{},"51-2":{},"94-2":{},"110-2":{},"123-2":{},"133-2":{},"159-2":{},"186-2":{},"262-7":{}},"name":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{}},"text":{"5":{},"8":{},"10":{},"12":{},"13":{},"15":{},"22":{},"24":{},"25":{},"42":{},"46":{},"49":{},"51":{},"53":{},"54":{},"56":{},"63":{},"65":{},"66":{},"81":{},"84":{},"86":{},"90":{},"93":{},"94":{},"97":{},"99":{},"106":{},"109":{},"110":{},"113":{},"115":{},"119":{},"122":{},"123":{},"129":{},"132":{},"133":{},"134":{},"136":{},"151":{},"155":{},"158":{},"159":{},"160":{},"162":{},"177":{},"181":{},"184":{},"186":{},"188":{},"190":{},"210":{},"212":{},"213":{},"215":{},"258":{},"259":{},"260":{},"262":{},"264":{},"268":{},"274":{},"275":{},"280":{},"281":{},"283":{},"288":{}},"component":{}}],["cluster=kind",{"_index":1489,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{}},"component":{}}],["cluster’",{"_index":2390,"title":{},"name":{},"text":{"262":{}},"component":{}}],["cmake",{"_index":564,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["cmnoiedyb3vwmruwewydvqqdewxju1jhifjvb3qgwdewggiima0gcsqgsib3dqeb",{"_index":1150,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["co",{"_index":988,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["coap",{"_index":144,"title":{"29":{},"69":{},"143":{},"169":{},"199":{},"18-7":{},"59-7":{},"139-7":{},"165-7":{},"193-7":{}},"name":{"29":{},"69":{},"143":{},"169":{},"199":{}},"text":{"2":{},"8":{},"14":{},"15":{},"18":{},"29":{},"43":{},"49":{},"55":{},"56":{},"59":{},"69":{},"82":{},"85":{},"86":{},"95":{},"98":{},"99":{},"111":{},"114":{},"115":{},"127":{},"135":{},"136":{},"139":{},"143":{},"152":{},"161":{},"162":{},"165":{},"169":{},"178":{},"184":{},"189":{},"190":{},"193":{},"199":{},"212":{}},"component":{}}],["coap:///v1/{channel}/{subject(opt",{"_index":1188,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["coap://test",{"_index":1210,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["code",{"_index":1221,"title":{"30-5":{},"70-5":{},"170-5":{},"200-5":{},"263-1":{},"280-9":{},"281-9":{}},"name":{},"text":{"29":{},"41":{},"69":{},"80":{},"143":{},"169":{},"199":{},"209":{},"217":{},"218":{},"219":{},"229":{},"230":{},"231":{},"246":{},"259":{},"260":{},"261":{},"265":{},"268":{},"269":{},"280":{},"281":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["codereadi",{"_index":2236,"title":{},"name":{},"text":{"259":{}},"component":{}}],["coffe",{"_index":2683,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["cogwheel",{"_index":2588,"title":{},"name":{},"text":{"267":{}},"component":{}}],["collaps",{"_index":2620,"title":{},"name":{},"text":{"268":{}},"component":{}}],["collect",{"_index":914,"title":{},"name":{},"text":{"22":{},"25":{},"63":{},"66":{},"273":{}},"component":{}}],["color",{"_index":1823,"title":{},"name":{},"text":{"220":{},"224":{},"248":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["column",{"_index":2361,"title":{},"name":{},"text":{"262":{},"267":{},"280":{},"281":{}},"component":{}}],["coma",{"_index":3091,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["combin",{"_index":358,"title":{},"name":{},"text":{"8":{},"22":{},"41":{},"42":{},"49":{},"63":{},"80":{},"81":{},"177":{},"184":{},"209":{},"210":{},"230":{},"262":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["come",{"_index":15,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"18":{},"34":{},"35":{},"38":{},"41":{},"53":{},"55":{},"59":{},"74":{},"75":{},"78":{},"80":{},"85":{},"89":{},"98":{},"102":{},"114":{},"118":{},"135":{},"139":{},"148":{},"161":{},"165":{},"174":{},"189":{},"193":{},"204":{},"205":{},"209":{},"233":{},"234":{},"235":{},"236":{},"237":{},"244":{},"249":{},"251":{},"254":{},"255":{},"256":{},"260":{},"261":{},"264":{},"265":{},"266":{},"268":{},"269":{},"270":{},"272":{},"273":{},"275":{},"277":{},"279":{},"281":{},"287":{}},"component":{}}],["comfort",{"_index":2601,"title":{},"name":{},"text":{"268":{},"270":{},"281":{}},"component":{}}],["command",{"_index":176,"title":{"33":{},"73":{},"147":{},"173":{},"203":{},"10-1":{},"15-4":{},"18-10":{},"26-11":{},"31-10":{},"36-9":{},"38-11":{},"51-1":{},"56-4":{},"59-10":{},"71-10":{},"76-9":{},"78-11":{},"89-6":{},"94-1":{},"102-6":{},"110-1":{},"118-6":{},"123-1":{},"133-1":{},"139-10":{},"159-1":{},"165-10":{},"171-5":{},"171-8":{},"175-9":{},"186-1":{},"193-10":{},"201-10":{},"206-9":{},"258-4":{},"278-1":{},"281-12":{},"287-1":{},"292-76":{},"295-76":{},"298-75":{},"301-76":{}},"name":{"33":{},"73":{},"147":{},"173":{},"203":{}},"text":{"3":{},"5":{},"6":{},"8":{},"10":{},"12":{},"15":{},"22":{},"25":{},"26":{},"29":{},"31":{},"33":{},"36":{},"38":{},"42":{},"44":{},"46":{},"47":{},"49":{},"51":{},"53":{},"56":{},"63":{},"66":{},"69":{},"71":{},"73":{},"76":{},"78":{},"81":{},"86":{},"90":{},"93":{},"94":{},"99":{},"106":{},"109":{},"110":{},"115":{},"119":{},"120":{},"122":{},"123":{},"128":{},"129":{},"130":{},"132":{},"133":{},"136":{},"143":{},"147":{},"149":{},"151":{},"153":{},"155":{},"156":{},"158":{},"159":{},"162":{},"169":{},"173":{},"175":{},"177":{},"179":{},"181":{},"182":{},"184":{},"186":{},"190":{},"199":{},"201":{},"203":{},"206":{},"210":{},"213":{},"214":{},"215":{},"220":{},"225":{},"229":{},"234":{},"235":{},"236":{},"237":{},"241":{},"244":{},"245":{},"251":{},"254":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"266":{},"267":{},"272":{},"275":{},"276":{},"277":{},"279":{},"280":{},"281":{},"282":{},"285":{},"287":{},"288":{},"289":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["command.setdeviceid(event.getdeviceid",{"_index":2994,"title":{},"name":{},"text":{"281":{}},"component":{}}],["command.setpayload(this.response.getbytes(standardcharsets.utf_8",{"_index":2995,"title":{},"name":{},"text":{"281":{}},"component":{}}],["command/${appname}/${command.deviceid}/port:1",{"_index":2955,"title":{},"name":{},"text":{"280":{}},"component":{}}],["command/inbox",{"_index":1269,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["command/inbox//set",{"_index":1270,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["command/inbox/mi",{"_index":1271,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["command/mi",{"_index":1302,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["command::send",{"_index":2878,"title":{},"name":{},"text":{"279":{}},"component":{}}],["command::tick",{"_index":2883,"title":{},"name":{},"text":{"279":{}},"component":{}}],["commandnam",{"_index":3107,"title":{"293-7":{},"296-7":{},"299-7":{},"302-7":{}},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["commandobject",{"_index":3108,"title":{"293-8":{},"296-8":{},"299-8":{},"302-8":{}},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["commit",{"_index":554,"title":{},"name":{},"text":{"12":{},"53":{},"256":{},"259":{},"267":{}},"component":{}}],["common",{"_index":787,"title":{"26":{},"27":{},"68":{},"198":{}},"name":{"26":{},"27":{},"28":{},"67":{},"68":{},"197":{},"198":{}},"text":{"15":{},"27":{},"38":{},"56":{},"68":{},"198":{},"217":{},"219":{},"229":{},"268":{},"269":{},"277":{},"286":{}},"component":{}}],["commonli",{"_index":1722,"title":{},"name":{},"text":{"217":{},"231":{}},"component":{}}],["commun",{"_index":132,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"18":{},"25":{},"26":{},"29":{},"43":{},"56":{},"57":{},"59":{},"66":{},"69":{},"82":{},"86":{},"87":{},"89":{},"95":{},"99":{},"100":{},"102":{},"111":{},"115":{},"116":{},"118":{},"127":{},"136":{},"137":{},"139":{},"143":{},"152":{},"162":{},"163":{},"165":{},"169":{},"178":{},"190":{},"191":{},"193":{},"199":{},"214":{},"218":{},"231":{},"235":{},"244":{},"256":{},"258":{}},"component":{}}],["compani",{"_index":989,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["compar",{"_index":1068,"title":{},"name":{},"text":{"26":{},"231":{}},"component":{}}],["compat",{"_index":689,"title":{},"name":{},"text":{"14":{},"15":{},"18":{},"55":{},"56":{},"59":{},"85":{},"86":{},"89":{},"98":{},"99":{},"102":{},"114":{},"115":{},"118":{},"135":{},"136":{},"139":{},"161":{},"162":{},"165":{},"189":{},"190":{},"193":{}},"component":{}}],["compil",{"_index":594,"title":{"258-6":{},"276-3":{},"285-3":{}},"name":{},"text":{"12":{},"53":{},"213":{},"220":{},"229":{},"232":{},"239":{},"241":{},"243":{},"251":{},"258":{},"259":{},"263":{},"276":{},"279":{},"281":{},"282":{},"285":{},"287":{},"289":{}},"component":{}}],["complain",{"_index":2064,"title":{},"name":{},"text":{"245":{}},"component":{}}],["complet",{"_index":1360,"title":{},"name":{},"text":{"39":{},"214":{},"216":{},"256":{},"258":{},"259":{},"261":{},"263":{},"266":{},"267":{},"288":{},"292":{},"295":{},"298":{},"301":{},"305":{}},"component":{}}],["complex",{"_index":340,"title":{},"name":{},"text":{"7":{},"12":{},"17":{},"41":{},"48":{},"53":{},"58":{},"80":{},"88":{},"92":{},"101":{},"108":{},"117":{},"121":{},"131":{},"138":{},"157":{},"164":{},"183":{},"192":{},"209":{},"218":{},"231":{},"261":{},"268":{}},"component":{}}],["complic",{"_index":844,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"275":{}},"component":{}}],["compon",{"_index":88,"title":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{}},"name":{},"text":{"1":{},"8":{},"14":{},"22":{},"25":{},"27":{},"28":{},"40":{},"49":{},"55":{},"63":{},"66":{},"67":{},"68":{},"79":{},"85":{},"93":{},"98":{},"109":{},"114":{},"122":{},"132":{},"135":{},"158":{},"161":{},"184":{},"189":{},"197":{},"198":{},"208":{},"212":{},"213":{},"215":{},"218":{},"258":{},"261":{},"263":{},"267":{},"268":{},"271":{},"272":{},"282":{},"289":{}},"component":{}}],["components/schema/patch",{"_index":3098,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["compos",{"_index":226,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{},"212":{},"216":{},"230":{},"231":{}},"component":{}}],["composit",{"_index":1874,"title":{"230-3":{}},"name":{},"text":{"230":{}},"component":{}}],["compress",{"_index":2615,"title":{},"name":{},"text":{"268":{},"272":{}},"component":{}}],["comput",{"_index":810,"title":{"258-2":{}},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"234":{},"246":{},"258":{},"268":{},"276":{},"285":{}},"component":{}}],["concept",{"_index":94,"title":{"2":{},"26":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{}},"name":{"2":{},"26":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{},"218":{}},"text":{"1":{},"2":{},"14":{},"15":{},"26":{},"38":{},"43":{},"55":{},"56":{},"82":{},"85":{},"86":{},"95":{},"98":{},"99":{},"111":{},"114":{},"115":{},"127":{},"135":{},"136":{},"152":{},"161":{},"162":{},"178":{},"189":{},"190":{},"215":{},"231":{},"258":{},"261":{}},"component":{}}],["conclud",{"_index":2245,"title":{},"name":{},"text":{"259":{},"288":{}},"component":{}}],["conclus",{"_index":2699,"title":{"271":{}},"name":{},"text":{},"component":{}}],["concurr",{"_index":1906,"title":{},"name":{},"text":{"231":{}},"component":{}}],["concurrenthashmap",{"_index":2312,"title":{},"name":{},"text":{"261":{}},"component":{}}],["condit",{"_index":977,"title":{},"name":{},"text":{"24":{},"41":{},"65":{},"80":{},"209":{},"266":{}},"component":{}}],["config",{"_index":1460,"title":{},"name":{},"text":{"42":{},"81":{},"151":{},"177":{},"210":{},"213":{},"220":{},"232":{},"245":{},"276":{}},"component":{}}],["config.json",{"_index":2918,"title":{},"name":{},"text":{"280":{}},"component":{}}],["config.toml",{"_index":2135,"title":{},"name":{},"text":{"251":{}},"component":{}}],["config.yaml",{"_index":284,"title":{},"name":{},"text":{"5":{},"46":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["config=deploy/kind/clust",{"_index":283,"title":{},"name":{},"text":{"5":{},"46":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["config_db.json",{"_index":2065,"title":{},"name":{},"text":{"245":{}},"component":{}}],["config_sample.json",{"_index":2917,"title":{},"name":{},"text":{"280":{}},"component":{}}],["configur",{"_index":217,"title":{"27":{},"9-3":{},"35-1":{},"40-2":{},"41-2":{},"42-19":{},"50-3":{},"75-1":{},"79-2":{},"80-2":{},"81-19":{},"151-11":{},"177-19":{},"185-3":{},"205-1":{},"208-2":{},"209-2":{},"210-19":{},"232-1":{},"233-4":{},"234-5":{},"235-5":{},"236-5":{},"237-5":{},"244-4":{},"244-6":{},"249-5":{},"251-5":{},"254-5":{},"255-5":{},"272-3":{},"276-2":{},"285-2":{}},"name":{"27":{}},"text":{"4":{},"5":{},"8":{},"9":{},"12":{},"14":{},"15":{},"19":{},"20":{},"21":{},"22":{},"25":{},"26":{},"27":{},"30":{},"31":{},"35":{},"40":{},"41":{},"42":{},"45":{},"46":{},"49":{},"50":{},"53":{},"55":{},"56":{},"60":{},"61":{},"62":{},"63":{},"66":{},"68":{},"70":{},"71":{},"75":{},"79":{},"80":{},"81":{},"85":{},"86":{},"93":{},"98":{},"99":{},"103":{},"104":{},"105":{},"109":{},"114":{},"115":{},"119":{},"122":{},"124":{},"125":{},"126":{},"129":{},"132":{},"135":{},"136":{},"140":{},"141":{},"142":{},"151":{},"154":{},"155":{},"158":{},"161":{},"162":{},"166":{},"167":{},"168":{},"170":{},"177":{},"180":{},"181":{},"184":{},"185":{},"189":{},"190":{},"194":{},"195":{},"196":{},"198":{},"200":{},"201":{},"205":{},"208":{},"209":{},"210":{},"215":{},"218":{},"220":{},"232":{},"234":{},"241":{},"245":{},"251":{},"258":{},"261":{},"262":{},"266":{},"267":{},"269":{},"270":{},"273":{},"276":{},"279":{},"280":{},"283":{},"285":{},"291":{},"294":{},"297":{},"300":{},"303":{}},"component":{}}],["configuration.yaml",{"_index":2385,"title":{},"name":{},"text":{"262":{}},"component":{}}],["confirm",{"_index":1566,"title":{},"name":{},"text":{"214":{},"262":{},"267":{},"274":{},"285":{}},"component":{}}],["conflict",{"_index":3128,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["conform",{"_index":3127,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["congratul",{"_index":1872,"title":{},"name":{},"text":{"229":{},"267":{}},"component":{}}],["conist",{"_index":1478,"title":{},"name":{},"text":{"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["connect",{"_index":130,"title":{"28-2":{},"31-2":{},"31-13":{},"36-1":{},"36-10":{},"38-5":{},"67-2":{},"71-2":{},"71-13":{},"76-1":{},"76-10":{},"78-5":{},"171-1":{},"175-1":{},"197-2":{},"201-2":{},"201-13":{},"206-1":{},"206-10":{},"220-2":{},"220-3":{},"220-4":{},"220-5":{},"270-3":{},"272-2":{},"273-3":{}},"name":{},"text":{"2":{},"4":{},"8":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"49":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"66":{},"67":{},"69":{},"70":{},"71":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"85":{},"86":{},"87":{},"88":{},"93":{},"95":{},"98":{},"99":{},"100":{},"101":{},"103":{},"105":{},"109":{},"111":{},"114":{},"115":{},"116":{},"117":{},"122":{},"124":{},"126":{},"127":{},"132":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"142":{},"143":{},"144":{},"145":{},"152":{},"154":{},"158":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"168":{},"169":{},"170":{},"171":{},"175":{},"177":{},"178":{},"180":{},"184":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"196":{},"197":{},"199":{},"200":{},"201":{},"206":{},"207":{},"208":{},"209":{},"210":{},"212":{},"215":{},"220":{},"225":{},"229":{},"234":{},"235":{},"236":{},"237":{},"251":{},"254":{},"255":{},"258":{},"261":{},"262":{},"263":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"276":{},"277":{},"280":{},"281":{},"283":{},"285":{},"286":{},"288":{},"290":{}},"component":{}}],["connection.th",{"_index":1261,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["connector",{"_index":1044,"title":{},"name":{},"text":{"25":{},"66":{},"263":{}},"component":{}}],["connects/disconnect",{"_index":1119,"title":{},"name":{},"text":{"26":{}},"component":{}}],["connet",{"_index":1514,"title":{},"name":{},"text":{"212":{}},"component":{}}],["connexion",{"_index":1310,"title":{},"name":{},"text":{"37":{}},"component":{}}],["consid",{"_index":658,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"18":{},"21":{},"54":{},"55":{},"56":{},"59":{},"62":{},"84":{},"85":{},"86":{},"89":{},"97":{},"98":{},"99":{},"102":{},"105":{},"113":{},"114":{},"115":{},"118":{},"126":{},"134":{},"135":{},"136":{},"139":{},"142":{},"160":{},"161":{},"162":{},"165":{},"168":{},"188":{},"189":{},"190":{},"193":{},"196":{},"218":{},"256":{},"262":{},"268":{},"283":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["consider",{"_index":2186,"title":{},"name":{},"text":{"258":{}},"component":{}}],["consis",{"_index":1545,"title":{},"name":{},"text":{"214":{}},"component":{}}],["consist",{"_index":691,"title":{},"name":{},"text":{"14":{},"15":{},"18":{},"25":{},"41":{},"55":{},"56":{},"59":{},"66":{},"80":{},"85":{},"89":{},"98":{},"102":{},"114":{},"118":{},"135":{},"139":{},"161":{},"165":{},"189":{},"193":{},"209":{}},"component":{}}],["consol",{"_index":175,"title":{"213-6":{}},"name":{},"text":{"3":{},"12":{},"19":{},"39":{},"44":{},"53":{},"60":{},"83":{},"96":{},"103":{},"112":{},"124":{},"128":{},"140":{},"153":{},"166":{},"179":{},"194":{},"212":{},"213":{},"215":{},"229":{},"236":{},"237":{},"254":{},"258":{},"262":{},"266":{},"267":{},"269":{},"274":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["const",{"_index":1734,"title":{},"name":{},"text":{"218":{},"280":{}},"component":{}}],["constant",{"_index":1921,"title":{},"name":{},"text":{"234":{},"251":{},"261":{}},"component":{}}],["constantli",{"_index":759,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"279":{}},"component":{}}],["constrain",{"_index":420,"title":{},"name":{},"text":{"8":{},"15":{},"49":{},"56":{},"86":{},"99":{},"115":{},"122":{},"132":{},"136":{},"158":{},"162":{},"184":{},"190":{},"231":{}},"component":{}}],["construct",{"_index":2175,"title":{},"name":{},"text":{"256":{},"281":{}},"component":{}}],["consum",{"_index":715,"title":{"15-3":{},"37-3":{},"56-3":{},"77-2":{},"86-3":{},"99-3":{},"115-3":{},"136-3":{},"162-3":{},"190-3":{},"207-2":{},"261-6":{}},"name":{},"text":{"14":{},"15":{},"22":{},"24":{},"25":{},"26":{},"32":{},"35":{},"36":{},"37":{},"39":{},"41":{},"55":{},"56":{},"63":{},"65":{},"66":{},"72":{},"75":{},"76":{},"77":{},"80":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"146":{},"149":{},"150":{},"161":{},"162":{},"172":{},"175":{},"176":{},"189":{},"190":{},"202":{},"205":{},"206":{},"207":{},"209":{},"212":{},"256":{},"260":{},"261":{},"268":{},"269":{},"272":{},"280":{},"281":{},"286":{},"288":{},"290":{}},"component":{}}],["consumpt",{"_index":1897,"title":{},"name":{},"text":{"231":{},"260":{},"279":{}},"component":{}}],["contain",{"_index":99,"title":{"211":{},"215-3":{},"262-1":{}},"name":{},"text":{"1":{},"4":{},"6":{},"12":{},"13":{},"15":{},"25":{},"26":{},"29":{},"37":{},"38":{},"41":{},"42":{},"45":{},"47":{},"53":{},"54":{},"56":{},"66":{},"69":{},"78":{},"80":{},"81":{},"84":{},"86":{},"91":{},"97":{},"99":{},"107":{},"113":{},"115":{},"120":{},"130":{},"134":{},"136":{},"143":{},"151":{},"154":{},"156":{},"160":{},"162":{},"169":{},"177":{},"180":{},"182":{},"188":{},"190":{},"199":{},"209":{},"210":{},"211":{},"212":{},"213":{},"215":{},"216":{},"258":{},"259":{},"262":{},"264":{},"266":{},"267":{},"269":{},"272":{},"280":{},"281":{},"282":{},"289":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["container",{"_index":812,"title":{},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{}},"component":{}}],["container=dock",{"_index":590,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["container_registry=quay.io/mi",{"_index":329,"title":{},"name":{},"text":{"6":{},"47":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{}},"component":{}}],["container_registry=quay.io/rodney",{"_index":599,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["content",{"_index":152,"title":{"31-9":{},"36-7":{},"71-9":{},"76-7":{},"175-7":{},"201-9":{},"206-7":{}},"name":{},"text":{"2":{},"26":{},"29":{},"31":{},"36":{},"38":{},"41":{},"43":{},"69":{},"71":{},"76":{},"78":{},"80":{},"82":{},"95":{},"111":{},"127":{},"143":{},"152":{},"169":{},"175":{},"178":{},"199":{},"201":{},"206":{},"209":{},"256":{},"257":{},"259":{},"261":{},"272":{},"280":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["context",{"_index":294,"title":{"258-9":{}},"name":{},"text":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"218":{},"258":{},"279":{},"281":{}},"component":{}}],["context.configure(mydevic",{"_index":2864,"title":{},"name":{},"text":{"279":{}},"component":{}}],["continu",{"_index":985,"title":{},"name":{},"text":{"24":{},"41":{},"65":{},"80":{},"209":{},"212":{},"214":{},"218":{},"274":{}},"component":{}}],["contribut",{"_index":2169,"title":{"256-3":{}},"name":{},"text":{"256":{}},"component":{}}],["contributor",{"_index":1882,"title":{},"name":{},"text":{"230":{}},"component":{}}],["control",{"_index":285,"title":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"292-76":{},"295-76":{},"298-75":{},"301-76":{}},"name":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{}},"text":{"5":{},"8":{},"14":{},"17":{},"24":{},"25":{},"46":{},"49":{},"55":{},"58":{},"65":{},"66":{},"85":{},"88":{},"93":{},"98":{},"101":{},"109":{},"114":{},"117":{},"119":{},"122":{},"129":{},"132":{},"135":{},"138":{},"155":{},"158":{},"161":{},"164":{},"181":{},"184":{},"189":{},"192":{},"215":{},"229":{},"236":{},"244":{},"254":{},"255":{},"262":{},"268":{},"277":{}},"component":{}}],["controllernam",{"_index":1575,"title":{},"name":{},"text":{"215":{}},"component":{}}],["conveni",{"_index":1905,"title":{},"name":{},"text":{"231":{}},"component":{}}],["convers",{"_index":2996,"title":{},"name":{},"text":{"281":{}},"component":{}}],["convert",{"_index":2106,"title":{},"name":{},"text":{"246":{},"261":{},"265":{},"269":{},"272":{},"281":{}},"component":{}}],["conveyor",{"_index":1038,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["coordin",{"_index":1657,"title":{},"name":{},"text":{"216":{}},"component":{}}],["coordinates[y][x",{"_index":1688,"title":{},"name":{},"text":{"216":{}},"component":{}}],["copi",{"_index":2118,"title":{},"name":{},"text":{"246":{},"258":{},"259":{},"263":{},"269":{},"272":{},"274":{},"278":{},"280":{},"281":{}},"component":{}}],["core",{"_index":531,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"15":{},"18":{},"26":{},"41":{},"53":{},"54":{},"55":{},"56":{},"59":{},"80":{},"84":{},"85":{},"86":{},"89":{},"97":{},"98":{},"99":{},"102":{},"113":{},"114":{},"115":{},"118":{},"134":{},"135":{},"136":{},"139":{},"160":{},"161":{},"162":{},"165":{},"188":{},"189":{},"190":{},"193":{},"209":{},"261":{},"280":{},"281":{}},"component":{}}],["corner",{"_index":2750,"title":{},"name":{},"text":{"274":{},"280":{},"281":{}},"component":{}}],["coroutin",{"_index":1889,"title":{},"name":{},"text":{"231":{}},"component":{}}],["correcrli",{"_index":1498,"title":{},"name":{},"text":{"154":{}},"component":{}}],["correct",{"_index":771,"title":{},"name":{},"text":{"15":{},"22":{},"40":{},"56":{},"63":{},"79":{},"208":{},"239":{},"241":{},"243":{},"249":{}},"component":{}}],["correctli",{"_index":249,"title":{},"name":{},"text":{"4":{},"45":{},"180":{},"269":{}},"component":{}}],["correl",{"_index":3111,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["correlation_id",{"_index":1549,"title":{},"name":{},"text":{"214":{}},"component":{}}],["correspond",{"_index":1034,"title":{},"name":{},"text":{"25":{},"66":{},"214":{}},"component":{}}],["corrupt",{"_index":50,"title":{},"name":{},"text":{"1":{},"230":{}},"component":{}}],["cost",{"_index":1405,"title":{"268-2":{}},"name":{},"text":{"41":{},"80":{},"209":{},"262":{},"266":{},"267":{},"268":{},"269":{},"272":{}},"component":{}}],["count",{"_index":2374,"title":{},"name":{},"text":{"262":{}},"component":{}}],["counter",{"_index":1746,"title":{},"name":{},"text":{"218":{},"219":{}},"component":{}}],["countermessag",{"_index":1752,"title":{},"name":{},"text":{"218":{}},"component":{}}],["countermessage::add(valu",{"_index":1760,"title":{},"name":{},"text":{"218":{}},"component":{}}],["countermessage::incr",{"_index":1758,"title":{},"name":{},"text":{"218":{}},"component":{}}],["countri",{"_index":3083,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["cours",{"_index":22,"title":{},"name":{},"text":{"1":{},"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"258":{},"260":{},"262":{},"267":{},"268":{},"270":{},"271":{},"272":{},"273":{},"274":{}},"component":{}}],["cover",{"_index":1525,"title":{},"name":{},"text":{"213":{},"220":{},"267":{},"277":{},"288":{}},"component":{}}],["coverag",{"_index":935,"title":{"277-3":{}},"name":{},"text":{"22":{},"63":{},"277":{}},"component":{}}],["cp",{"_index":2120,"title":{},"name":{},"text":{"246":{}},"component":{}}],["cpu",{"_index":266,"title":{},"name":{},"text":{"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"258":{},"269":{},"282":{},"289":{}},"component":{}}],["crate",{"_index":1766,"title":{},"name":{},"text":{"219":{}},"component":{}}],["crates.io",{"_index":1868,"title":{},"name":{},"text":{"229":{}},"component":{}}],["creat",{"_index":30,"title":{"8-10":{},"42-2":{},"42-6":{},"49-10":{},"81-2":{},"81-6":{},"93-9":{},"109-9":{},"122-9":{},"132-9":{},"151-2":{},"151-6":{},"158-9":{},"177-2":{},"177-6":{},"184-10":{},"210-2":{},"210-6":{},"229-6":{},"258-7":{},"258-10":{},"258-11":{},"259-1":{},"262-1":{},"262-7":{},"266-1":{},"267-1":{},"267-3":{},"269-4":{},"269-5":{},"272-1":{},"274-2":{},"274-3":{},"275-1":{},"275-2":{},"278-1":{},"280-1":{},"280-2":{},"281-1":{},"281-2":{},"284-2":{},"284-3":{}},"name":{},"text":{"1":{},"4":{},"5":{},"8":{},"12":{},"14":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"35":{},"36":{},"39":{},"42":{},"45":{},"46":{},"49":{},"53":{},"55":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"75":{},"76":{},"78":{},"81":{},"85":{},"88":{},"90":{},"93":{},"98":{},"101":{},"103":{},"104":{},"105":{},"106":{},"109":{},"114":{},"117":{},"119":{},"122":{},"124":{},"125":{},"126":{},"129":{},"132":{},"135":{},"138":{},"139":{},"140":{},"141":{},"142":{},"151":{},"154":{},"155":{},"158":{},"161":{},"164":{},"165":{},"166":{},"167":{},"168":{},"175":{},"177":{},"180":{},"181":{},"184":{},"189":{},"192":{},"193":{},"194":{},"195":{},"196":{},"205":{},"206":{},"210":{},"213":{},"215":{},"216":{},"219":{},"229":{},"244":{},"245":{},"258":{},"259":{},"261":{},"262":{},"263":{},"266":{},"267":{},"268":{},"269":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"286":{},"287":{},"289":{},"290":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["create_hypertable('temperatur",{"_index":2720,"title":{},"name":{},"text":{"272":{}},"component":{}}],["create_hypertable('temperatures2",{"_index":2729,"title":{},"name":{},"text":{"273":{}},"component":{}}],["creation",{"_index":1076,"title":{},"name":{},"text":{"26":{},"259":{},"269":{},"272":{}},"component":{}}],["creationtimestamp",{"_index":2199,"title":{},"name":{},"text":{"258":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["credenti",{"_index":172,"title":{"42-9":{},"42-12":{},"42-15":{},"42-18":{},"81-9":{},"81-12":{},"81-15":{},"81-18":{},"151-9":{},"151-10":{},"177-9":{},"177-12":{},"177-15":{},"177-18":{},"210-9":{},"210-12":{},"210-15":{},"210-18":{},"270-2":{},"273-2":{}},"name":{},"text":{"3":{},"9":{},"14":{},"15":{},"21":{},"26":{},"30":{},"31":{},"40":{},"42":{},"44":{},"50":{},"55":{},"56":{},"62":{},"70":{},"71":{},"79":{},"81":{},"83":{},"85":{},"86":{},"96":{},"98":{},"99":{},"105":{},"112":{},"114":{},"115":{},"126":{},"128":{},"135":{},"136":{},"142":{},"151":{},"153":{},"161":{},"162":{},"168":{},"170":{},"177":{},"179":{},"185":{},"189":{},"190":{},"196":{},"200":{},"201":{},"208":{},"210":{},"220":{},"232":{},"234":{},"235":{},"236":{},"237":{},"244":{},"251":{},"254":{},"255":{},"258":{},"262":{},"266":{},"267":{},"270":{},"272":{},"273":{},"285":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["credentials\":{\"credentials\":[{\"pass\":\"mysecretpassword",{"_index":3021,"title":{},"name":{},"text":{"284":{}},"component":{}}],["credit",{"_index":2624,"title":{},"name":{},"text":{"268":{}},"component":{}}],["critic",{"_index":1031,"title":{},"name":{},"text":{"25":{},"66":{},"245":{}},"component":{}}],["crypt",{"_index":1471,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{}},"component":{}}],["css",{"_index":2334,"title":{},"name":{},"text":{"261":{}},"component":{}}],["ct",{"_index":1196,"title":{},"name":{},"text":{"29":{},"30":{},"69":{},"70":{},"143":{},"169":{},"170":{},"199":{},"200":{}},"component":{}}],["ct(command",{"_index":1222,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["ctrl+c",{"_index":2341,"title":{},"name":{},"text":{"261":{},"263":{},"280":{},"281":{}},"component":{}}],["cup",{"_index":2232,"title":{},"name":{},"text":{"259":{}},"component":{}}],["curiou",{"_index":2597,"title":{},"name":{},"text":{"267":{},"269":{}},"component":{}}],["curl",{"_index":558,"title":{},"name":{},"text":{"12":{},"53":{},"215":{},"234":{},"251":{},"258":{},"266":{},"280":{},"281":{},"282":{},"289":{}},"component":{}}],["current",{"_index":85,"title":{"239-5":{},"241-5":{},"243-5":{},"258-13":{},"261-7":{}},"name":{},"text":{"1":{},"8":{},"12":{},"13":{},"14":{},"15":{},"21":{},"24":{},"26":{},"29":{},"38":{},"42":{},"49":{},"53":{},"54":{},"55":{},"56":{},"62":{},"65":{},"69":{},"81":{},"84":{},"85":{},"86":{},"93":{},"97":{},"98":{},"99":{},"105":{},"109":{},"113":{},"114":{},"115":{},"122":{},"126":{},"132":{},"134":{},"135":{},"136":{},"142":{},"143":{},"158":{},"160":{},"161":{},"162":{},"168":{},"169":{},"177":{},"184":{},"188":{},"189":{},"190":{},"196":{},"199":{},"210":{},"214":{},"215":{},"216":{},"245":{},"258":{},"259":{},"263":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"279":{},"280":{},"281":{},"282":{},"288":{},"289":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["currentst",{"_index":2302,"title":{},"name":{},"text":{"261":{}},"component":{}}],["curretn",{"_index":3168,"title":{},"name":{},"text":{"298":{},"301":{}},"component":{}}],["cursor",{"_index":1604,"title":{},"name":{},"text":{"216":{}},"component":{}}],["custom",{"_index":138,"title":{"6-3":{},"8-9":{},"47-3":{},"49-9":{},"91-3":{},"93-8":{},"107-3":{},"109-8":{},"120-3":{},"122-8":{},"130-3":{},"132-8":{},"156-3":{},"158-8":{},"182-3":{},"184-9":{}},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"15":{},"43":{},"47":{},"48":{},"49":{},"56":{},"82":{},"86":{},"91":{},"92":{},"93":{},"95":{},"99":{},"107":{},"108":{},"109":{},"111":{},"115":{},"120":{},"121":{},"122":{},"127":{},"130":{},"131":{},"132":{},"136":{},"152":{},"156":{},"157":{},"158":{},"162":{},"178":{},"182":{},"183":{},"184":{},"190":{},"214":{},"267":{},"274":{},"280":{},"281":{},"283":{}},"component":{}}],["cycl",{"_index":1547,"title":{},"name":{},"text":{"214":{},"249":{},"252":{}},"component":{}}],["cyru",{"_index":562,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["d",{"_index":421,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{},"266":{}},"component":{}}],["d2ca3370",{"_index":2204,"title":{},"name":{},"text":{"258":{}},"component":{}}],["d45d6455d2cc",{"_index":3133,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["d578cb0564094cf8979c.eastus.aksapp.io",{"_index":2391,"title":{},"name":{},"text":{"262":{}},"component":{}}],["d84eb308",{"_index":3134,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["danger",{"_index":927,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["dashboard",{"_index":444,"title":{"267-3":{},"270-5":{},"273-5":{}},"name":{},"text":{"8":{},"9":{},"13":{},"14":{},"49":{},"50":{},"54":{},"55":{},"84":{},"85":{},"97":{},"98":{},"113":{},"114":{},"134":{},"135":{},"160":{},"161":{},"184":{},"185":{},"188":{},"189":{},"260":{},"261":{},"263":{},"264":{},"267":{},"270":{},"272":{},"273":{},"283":{},"286":{},"288":{},"290":{}},"component":{}}],["data",{"_index":10,"title":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"268":{},"270":{},"286":{},"26-9":{},"26-12":{},"31-8":{},"31-12":{},"36-6":{},"71-8":{},"71-12":{},"76-6":{},"78-1":{},"171-4":{},"171-7":{},"175-6":{},"201-8":{},"201-12":{},"206-6":{},"266-3":{},"270-4":{},"273-1":{},"273-4":{}},"name":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"270":{}},"text":{"1":{},"2":{},"3":{},"14":{},"15":{},"17":{},"22":{},"24":{},"25":{},"26":{},"29":{},"31":{},"36":{},"38":{},"40":{},"41":{},"43":{},"44":{},"55":{},"56":{},"58":{},"63":{},"65":{},"66":{},"69":{},"71":{},"76":{},"78":{},"79":{},"80":{},"82":{},"83":{},"85":{},"86":{},"88":{},"95":{},"96":{},"98":{},"99":{},"101":{},"111":{},"112":{},"114":{},"115":{},"117":{},"127":{},"128":{},"135":{},"136":{},"138":{},"143":{},"152":{},"153":{},"161":{},"162":{},"164":{},"169":{},"175":{},"178":{},"179":{},"189":{},"190":{},"192":{},"199":{},"201":{},"206":{},"208":{},"209":{},"214":{},"220":{},"223":{},"228":{},"237":{},"251":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"277":{},"279":{},"281":{},"283":{},"284":{},"285":{},"286":{},"288":{},"290":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["data=bytescloudeventdata{value=[123",{"_index":2481,"title":{},"name":{},"text":{"263":{}},"component":{}}],["data_schema",{"_index":1195,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["databas",{"_index":215,"title":{},"name":{},"text":{"4":{},"14":{},"24":{},"45":{},"55":{},"65":{},"85":{},"98":{},"114":{},"135":{},"154":{},"161":{},"180":{},"189":{},"265":{},"266":{},"267":{},"268":{},"269":{},"271":{},"272":{},"273":{},"283":{},"286":{}},"component":{}}],["datacontenttyp",{"_index":1325,"title":{},"name":{},"text":{"38":{},"41":{},"78":{},"80":{},"209":{}},"component":{}}],["datacontenttype='application/json",{"_index":2476,"title":{},"name":{},"text":{"263":{}},"component":{}}],["dataschema",{"_index":1326,"title":{},"name":{},"text":{"38":{},"41":{},"78":{},"80":{},"209":{}},"component":{}}],["dataschema=urn:drogue:iot:temperatur",{"_index":2477,"title":{},"name":{},"text":{"263":{}},"component":{}}],["datasourc",{"_index":2565,"title":{"267-2":{}},"name":{},"text":{"267":{}},"component":{}}],["date",{"_index":555,"title":{},"name":{},"text":{"12":{},"24":{},"53":{},"65":{},"262":{},"281":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["day",{"_index":1046,"title":{},"name":{},"text":{"25":{},"26":{},"66":{},"268":{},"269":{},"272":{},"279":{}},"component":{}}],["db",{"_index":2103,"title":{},"name":{"283":{}},"text":{"245":{}},"component":{}}],["db_vendor=h2",{"_index":246,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["deal",{"_index":784,"title":{"216-3":{}},"name":{},"text":{"15":{},"22":{},"56":{},"63":{},"216":{},"279":{},"280":{},"281":{}},"component":{}}],["debug",{"_index":1939,"title":{},"name":{},"text":{"236":{},"237":{},"245":{},"254":{},"263":{},"280":{},"281":{},"289":{}},"component":{}}],["debugg",{"_index":1938,"title":{},"name":{},"text":{"236":{},"237":{},"254":{}},"component":{}}],["debuginfo",{"_index":2770,"title":{},"name":{},"text":{"276":{}},"component":{}}],["decid",{"_index":994,"title":{},"name":{},"text":{"24":{},"41":{},"65":{},"80":{},"209":{},"241":{}},"component":{}}],["decis",{"_index":769,"title":{},"name":{},"text":{"15":{},"17":{},"22":{},"56":{},"58":{},"63":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["declar",{"_index":1615,"title":{},"name":{},"text":{"216":{},"261":{}},"component":{}}],["decod",{"_index":2518,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["decoupl",{"_index":1908,"title":{},"name":{},"text":{"231":{},"279":{}},"component":{}}],["dedic",{"_index":1085,"title":{},"name":{},"text":{"26":{},"28":{},"67":{},"197":{},"261":{},"262":{}},"component":{}}],["deeper",{"_index":1794,"title":{},"name":{},"text":{"220":{},"232":{},"267":{}},"component":{}}],["default",{"_index":207,"title":{"30-1":{},"70-1":{},"170-1":{},"200-1":{}},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"19":{},"26":{},"27":{},"30":{},"31":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"47":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"60":{},"68":{},"70":{},"71":{},"76":{},"78":{},"79":{},"80":{},"81":{},"84":{},"85":{},"86":{},"93":{},"97":{},"98":{},"99":{},"103":{},"109":{},"113":{},"114":{},"115":{},"120":{},"122":{},"124":{},"130":{},"132":{},"134":{},"135":{},"136":{},"140":{},"151":{},"154":{},"156":{},"158":{},"160":{},"161":{},"162":{},"166":{},"170":{},"175":{},"177":{},"180":{},"182":{},"184":{},"185":{},"187":{},"188":{},"189":{},"190":{},"194":{},"198":{},"200":{},"201":{},"206":{},"208":{},"209":{},"210":{},"251":{},"255":{},"259":{},"267":{},"270":{},"272":{},"273":{},"275":{},"281":{},"282":{},"285":{},"289":{},"290":{}},"component":{}}],["defin",{"_index":161,"title":{"27-1":{},"27-2":{},"68-1":{},"68-2":{},"198-1":{},"198-2":{},"216-4":{}},"name":{},"text":{"2":{},"8":{},"26":{},"27":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"49":{},"68":{},"75":{},"76":{},"78":{},"79":{},"80":{},"81":{},"82":{},"93":{},"95":{},"109":{},"111":{},"122":{},"127":{},"132":{},"151":{},"152":{},"158":{},"175":{},"177":{},"178":{},"184":{},"198":{},"205":{},"206":{},"208":{},"209":{},"210":{},"212":{},"216":{},"217":{},"219":{},"239":{},"241":{},"243":{},"261":{},"269":{}},"component":{}}],["definit",{"_index":1285,"title":{},"name":{},"text":{"35":{},"75":{},"205":{},"212":{},"215":{},"260":{},"269":{}},"component":{}}],["defmt",{"_index":1622,"title":{},"name":{},"text":{"216":{}},"component":{}}],["defmt::info!(\"start",{"_index":1654,"title":{},"name":{},"text":{"216":{}},"component":{}}],["defmt_log",{"_index":1865,"title":{},"name":{},"text":{"229":{}},"component":{}}],["defmt_log=debug",{"_index":2076,"title":{},"name":{},"text":{"245":{}},"component":{}}],["defmt_log=info",{"_index":1864,"title":{},"name":{},"text":{"229":{},"251":{},"254":{},"255":{},"285":{}},"component":{}}],["defmt_log=trac",{"_index":3034,"title":{},"name":{},"text":{"285":{}},"component":{}}],["dejan",{"_index":2663,"title":{},"name":{},"text":{"269":{}},"component":{}}],["delay",{"_index":1458,"title":{},"name":{},"text":{"42":{},"81":{},"151":{},"177":{},"210":{},"214":{}},"component":{}}],["delet",{"_index":694,"title":{"19-5":{},"20-4":{},"26-3":{},"42-4":{},"42-8":{},"60-5":{},"61-4":{},"81-4":{},"81-8":{},"103-5":{},"104-4":{},"124-5":{},"125-4":{},"140-5":{},"141-4":{},"151-4":{},"151-8":{},"166-5":{},"167-4":{},"177-4":{},"177-8":{},"194-5":{},"195-4":{},"210-4":{},"210-8":{},"258-15":{},"280-4":{},"281-4":{},"292-7":{},"292-24":{},"292-45":{},"292-60":{},"295-7":{},"295-24":{},"295-45":{},"295-60":{},"298-6":{},"298-23":{},"298-44":{},"298-59":{},"301-7":{},"301-24":{},"301-45":{},"301-60":{}},"name":{},"text":{"14":{},"19":{},"20":{},"21":{},"26":{},"39":{},"42":{},"55":{},"60":{},"61":{},"62":{},"78":{},"81":{},"85":{},"98":{},"103":{},"104":{},"105":{},"114":{},"124":{},"125":{},"126":{},"135":{},"140":{},"141":{},"142":{},"151":{},"161":{},"166":{},"167":{},"168":{},"177":{},"189":{},"194":{},"195":{},"196":{},"210":{},"258":{},"262":{},"274":{},"280":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["deletiontimestamp",{"_index":3146,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["deliv",{"_index":735,"title":{},"name":{},"text":{"15":{},"26":{},"35":{},"38":{},"41":{},"56":{},"75":{},"78":{},"80":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"205":{},"209":{},"211":{},"212":{},"215":{},"230":{},"271":{},"277":{},"281":{}},"component":{}}],["deliveri",{"_index":1512,"title":{"212-2":{},"213-4":{},"215-2":{}},"name":{},"text":{"212":{},"213":{},"215":{}},"component":{}}],["demo",{"_index":96,"title":{},"name":{},"text":{"1":{},"272":{}},"component":{}}],["demonstr",{"_index":1787,"title":{},"name":{},"text":{"220":{},"233":{},"234":{},"286":{},"288":{}},"component":{}}],["demos.apps.wonderful.iot",{"_index":2521,"title":{},"name":{},"text":{"264":{}},"component":{}}],["depend",{"_index":77,"title":{"8-6":{},"49-6":{},"93-6":{},"109-6":{},"122-6":{},"132-6":{},"158-6":{},"184-6":{}},"name":{},"text":{"1":{},"4":{},"8":{},"12":{},"15":{},"26":{},"30":{},"36":{},"42":{},"45":{},"49":{},"53":{},"56":{},"70":{},"76":{},"81":{},"86":{},"93":{},"99":{},"109":{},"115":{},"122":{},"132":{},"136":{},"154":{},"158":{},"162":{},"170":{},"175":{},"177":{},"180":{},"184":{},"190":{},"200":{},"206":{},"210":{},"213":{},"229":{},"246":{},"258":{},"259":{},"268":{},"272":{},"277":{},"283":{},"290":{}},"component":{}}],["deploy",{"_index":193,"title":{"4":{},"6":{},"7":{},"9":{},"45":{},"47":{},"48":{},"50":{},"91":{},"92":{},"107":{},"108":{},"120":{},"121":{},"130":{},"131":{},"154":{},"156":{},"157":{},"180":{},"182":{},"183":{},"185":{},"262":{},"6-2":{},"6-3":{},"9-1":{},"12-12":{},"12-14":{},"47-2":{},"47-3":{},"50-1":{},"53-12":{},"53-14":{},"91-2":{},"91-3":{},"107-2":{},"107-3":{},"120-2":{},"120-3":{},"130-2":{},"130-3":{},"156-2":{},"156-3":{},"182-2":{},"182-3":{},"185-1":{},"260-3":{},"260-4":{},"262-3":{},"262-8":{},"283-1":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"23":{},"24":{},"25":{},"36":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"64":{},"65":{},"66":{},"76":{},"84":{},"91":{},"92":{},"93":{},"94":{},"97":{},"107":{},"108":{},"109":{},"110":{},"113":{},"119":{},"120":{},"121":{},"122":{},"123":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"175":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"206":{},"212":{},"213":{},"214":{},"259":{},"260":{},"262":{},"265":{},"267":{},"269":{},"270":{},"271":{},"280":{},"281":{},"283":{},"286":{}},"component":{}}],["deploy/010",{"_index":2384,"title":{},"name":{},"text":{"262":{}},"component":{}}],["deploy/020",{"_index":2348,"title":{},"name":{},"text":{"262":{}},"component":{}}],["deploy/030",{"_index":2386,"title":{},"name":{},"text":{"262":{}},"component":{}}],["deploy/api",{"_index":1538,"title":{},"name":{},"text":{"213":{}},"component":{}}],["deploy/consol",{"_index":1542,"title":{},"name":{},"text":{"213":{}},"component":{}}],["deploy/examples/managed_kafka.yaml",{"_index":602,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["deploy/helm",{"_index":605,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["deploy/helm/profiles/.yaml",{"_index":427,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["deploy/pipelin",{"_index":1539,"title":{},"name":{},"text":{"213":{}},"component":{}}],["deploy/serv",{"_index":1537,"title":{},"name":{},"text":{"213":{}},"component":{}}],["deploy_arg",{"_index":479,"title":{},"name":{},"text":{"9":{},"12":{},"50":{},"53":{},"185":{}},"component":{}}],["deployment.yaml",{"_index":2349,"title":{},"name":{},"text":{"262":{}},"component":{}}],["deprec",{"_index":1252,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["depth",{"_index":1733,"title":{},"name":{},"text":{"218":{}},"component":{}}],["deriv",{"_index":1019,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["derive(devic",{"_index":2861,"title":{},"name":{},"text":{"279":{}},"component":{}}],["describ",{"_index":368,"title":{},"name":{},"text":{"8":{},"12":{},"26":{},"27":{},"31":{},"32":{},"35":{},"40":{},"41":{},"42":{},"49":{},"53":{},"68":{},"71":{},"72":{},"75":{},"79":{},"80":{},"81":{},"146":{},"172":{},"177":{},"198":{},"201":{},"202":{},"205":{},"208":{},"209":{},"210":{},"216":{},"257":{},"258":{},"260":{},"280":{},"281":{},"291":{},"294":{},"297":{},"300":{},"303":{}},"component":{}}],["descript",{"_index":441,"title":{},"name":{},"text":{"8":{},"30":{},"31":{},"37":{},"38":{},"40":{},"41":{},"49":{},"70":{},"71":{},"77":{},"78":{},"79":{},"80":{},"93":{},"109":{},"122":{},"132":{},"158":{},"170":{},"184":{},"200":{},"201":{},"207":{},"208":{},"209":{},"214":{},"267":{},"269":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"304":{},"305":{}},"component":{}}],["deseri",{"_index":2277,"title":{},"name":{},"text":{"261":{}},"component":{}}],["design",{"_index":675,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"212":{},"214":{}},"component":{}}],["desir",{"_index":467,"title":{},"name":{},"text":{"8":{},"14":{},"18":{},"24":{},"25":{},"26":{},"49":{},"55":{},"59":{},"65":{},"66":{},"85":{},"93":{},"98":{},"109":{},"114":{},"122":{},"132":{},"135":{},"139":{},"158":{},"161":{},"165":{},"184":{},"189":{},"193":{},"214":{},"216":{},"218":{},"279":{},"287":{}},"component":{}}],["desktop",{"_index":2182,"title":{},"name":{},"text":{"258":{}},"component":{}}],["destin",{"_index":736,"title":{},"name":{},"text":{"15":{},"41":{},"56":{},"80":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"209":{}},"component":{}}],["detail",{"_index":872,"title":{},"name":{},"text":{"19":{},"22":{},"30":{},"31":{},"36":{},"38":{},"39":{},"60":{},"63":{},"70":{},"71":{},"76":{},"78":{},"103":{},"124":{},"140":{},"166":{},"170":{},"194":{},"200":{},"201":{},"206":{},"245":{},"251":{},"267":{},"272":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["detect",{"_index":517,"title":{"12-18":{},"24-5":{},"53-18":{},"65-5":{}},"name":{},"text":{"12":{},"14":{},"24":{},"25":{},"28":{},"53":{},"55":{},"65":{},"66":{},"67":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"197":{},"236":{},"237":{},"254":{},"263":{}},"component":{}}],["dev",{"_index":1800,"title":{},"name":{},"text":{"220":{},"232":{},"235":{},"236":{},"237":{},"254":{},"255":{},"259":{},"269":{},"276":{},"281":{}},"component":{}}],["dev.apps.wonderful.iot",{"_index":634,"title":{},"name":{},"text":{"12":{},"53":{},"263":{},"281":{}},"component":{}}],["dev.properti",{"_index":2964,"title":{},"name":{},"text":{"281":{}},"component":{}}],["dev.svc.cluster.loc",{"_index":2513,"title":{},"name":{},"text":{"263":{}},"component":{}}],["dev/urandom",{"_index":2836,"title":{},"name":{},"text":{"278":{}},"component":{}}],["dev_eui",{"_index":890,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["devbox",{"_index":632,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["devel",{"_index":560,"title":{},"name":{},"text":{"12":{},"53":{},"245":{}},"component":{}}],["develop",{"_index":307,"title":{"12":{},"53":{},"6-4":{},"47-4":{},"120-4":{},"130-4":{},"156-4":{},"182-4":{},"260-2":{},"262-5":{},"290-2":{}},"name":{"6":{},"47":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{}},"text":{"9":{},"12":{},"23":{},"24":{},"50":{},"53":{},"64":{},"65":{},"185":{},"216":{},"229":{},"230":{},"231":{},"236":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"259":{},"260":{},"262":{},"268":{},"269":{},"276":{},"277":{},"285":{},"286":{},"288":{}},"component":{}}],["developer.github.io/redhat",{"_index":2225,"title":{},"name":{},"text":{"259":{}},"component":{}}],["devfil",{"_index":2237,"title":{},"name":{},"text":{"259":{}},"component":{}}],["devic",{"_index":0,"title":{"16":{},"20":{},"42":{},"57":{},"61":{},"81":{},"87":{},"100":{},"104":{},"116":{},"125":{},"137":{},"141":{},"151":{},"163":{},"167":{},"177":{},"191":{},"195":{},"210":{},"230":{},"232":{},"276":{},"285":{},"1-1":{},"2-2":{},"14-1":{},"18-1":{},"20-1":{},"20-4":{},"20-5":{},"24-2":{},"26-5":{},"26-6":{},"26-7":{},"26-8":{},"31-1":{},"38-2":{},"38-8":{},"42-5":{},"42-6":{},"42-7":{},"42-8":{},"42-19":{},"43-2":{},"55-1":{},"59-1":{},"61-1":{},"61-4":{},"61-5":{},"65-2":{},"71-1":{},"78-2":{},"78-8":{},"81-5":{},"81-6":{},"81-7":{},"81-8":{},"81-19":{},"82-2":{},"85-1":{},"95-2":{},"98-1":{},"104-1":{},"104-4":{},"104-5":{},"111-2":{},"114-1":{},"125-1":{},"125-4":{},"125-5":{},"127-2":{},"135-1":{},"139-1":{},"141-1":{},"141-4":{},"141-5":{},"151-5":{},"151-6":{},"151-7":{},"151-8":{},"151-11":{},"152-2":{},"161-1":{},"165-1":{},"167-1":{},"167-4":{},"167-5":{},"171-3":{},"171-6":{},"177-5":{},"177-6":{},"177-7":{},"177-8":{},"177-19":{},"178-2":{},"189-1":{},"193-1":{},"195-1":{},"195-4":{},"195-5":{},"201-1":{},"210-5":{},"210-6":{},"210-7":{},"210-8":{},"210-19":{},"235-1":{},"244-1":{},"247-1":{},"248-1":{},"249-1":{},"252-1":{},"258-11":{},"266-2":{},"267-6":{},"270-1":{},"275-2":{},"276-2":{},"277-2":{},"279-3":{},"284-3":{},"285-2":{},"286-2":{},"287-3":{},"293-9":{},"296-9":{},"299-9":{},"302-9":{}},"name":{"16":{},"20":{},"57":{},"61":{},"87":{},"100":{},"104":{},"116":{},"125":{},"137":{},"141":{},"163":{},"167":{},"191":{},"195":{}},"text":{"1":{},"2":{},"3":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"29":{},"30":{},"31":{},"33":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"69":{},"70":{},"71":{},"73":{},"74":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"85":{},"86":{},"87":{},"88":{},"89":{},"95":{},"96":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"111":{},"112":{},"114":{},"115":{},"116":{},"117":{},"118":{},"124":{},"125":{},"126":{},"127":{},"128":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"199":{},"200":{},"201":{},"203":{},"204":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"214":{},"215":{},"216":{},"219":{},"220":{},"223":{},"229":{},"230":{},"231":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"258":{},"259":{},"261":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"304":{},"305":{}},"component":{"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{}}}],["device#2",{"_index":1207,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["device#4",{"_index":1208,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["device.git",{"_index":1860,"title":{},"name":{},"text":{"229":{}},"component":{}}],["device.setdeviceid(deviceid.tostr",{"_index":2281,"title":{},"name":{},"text":{"261":{}},"component":{}}],["device.setlocation(payload.getgeoloc",{"_index":2285,"title":{},"name":{},"text":{"261":{}},"component":{}}],["device.settemperature(payload.gettemperatur",{"_index":2284,"title":{},"name":{},"text":{"261":{}},"component":{}}],["device.settimestamp(timestamp.toinst",{"_index":2283,"title":{},"name":{},"text":{"261":{}},"component":{}}],["device/blob/main/examples/nrf52/nrf52840",{"_index":1986,"title":{},"name":{},"text":{"239":{},"243":{}},"component":{}}],["device/main/apps/drogu",{"_index":2147,"title":{},"name":{},"text":{"251":{}},"component":{}}],["device/main/apps/wifi/server.pi",{"_index":1926,"title":{},"name":{},"text":{"234":{}},"component":{}}],["device/set",{"_index":1272,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["device/settemperatur",{"_index":1304,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["device1",{"_index":2195,"title":{},"name":{},"text":{"258":{},"266":{},"273":{},"284":{}},"component":{}}],["device1:foobar",{"_index":1249,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["device1@app1:hey",{"_index":1214,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["device1@exampl",{"_index":1241,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["device1@mi",{"_index":2548,"title":{},"name":{},"text":{"266":{}},"component":{}}],["device1@wifi",{"_index":2138,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["device=a4:c1:38:a2:6d:42",{"_index":2517,"title":{},"name":{},"text":{"263":{}},"component":{}}],["device_address",{"_index":2779,"title":{},"name":{},"text":{"276":{}},"component":{}}],["device_eui",{"_index":2780,"title":{},"name":{},"text":{"276":{}},"component":{}}],["device_id",{"_index":2556,"title":{},"name":{},"text":{"266":{},"267":{},"270":{},"272":{},"273":{}},"component":{}}],["device_id@appl",{"_index":1915,"title":{},"name":{},"text":{"233":{},"234":{},"251":{}},"component":{}}],["devicecommand",{"_index":2989,"title":{},"name":{},"text":{"281":{}},"component":{}}],["devicecredenti",{"_index":3116,"title":{"293-10":{},"296-10":{},"299-10":{},"302-10":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["deviceev",{"_index":2261,"title":{},"name":{},"text":{"261":{},"281":{}},"component":{}}],["deviceid",{"_index":2279,"title":{},"name":{},"text":{"261":{},"280":{},"298":{},"301":{}},"component":{}}],["deviceprefix",{"_index":1380,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["devices.a",{"_index":1455,"title":{},"name":{},"text":{"42":{},"81":{},"210":{}},"component":{}}],["devicespec",{"_index":3117,"title":{"293-11":{},"296-11":{},"299-11":{},"302-11":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["devicespec_credenti",{"_index":3118,"title":{"293-12":{},"296-12":{},"299-12":{},"302-12":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["devicestatu",{"_index":3119,"title":{"293-13":{},"296-13":{},"299-13":{},"302-13":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["deviceuid",{"_index":1329,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["device’",{"_index":2763,"title":{},"name":{},"text":{"276":{},"279":{},"285":{}},"component":{}}],["dfu",{"_index":1543,"title":{},"name":{},"text":{"214":{},"220":{},"222":{},"241":{},"251":{},"255":{}},"component":{}}],["dfvp7oogan6deom4+qr9sdjosykebpsr6gtpaqw4dy753ec5",{"_index":1174,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["diagnost",{"_index":1625,"title":{},"name":{},"text":{"216":{}},"component":{}}],["diagram",{"_index":831,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"214":{}},"component":{}}],["dialect",{"_index":1255,"title":{"40":{},"79":{},"208":{},"31-6":{},"31-7":{},"31-11":{},"40-3":{},"71-6":{},"71-7":{},"71-11":{},"79-3":{},"201-6":{},"201-7":{},"201-11":{},"208-3":{}},"name":{},"text":{"31":{},"40":{},"71":{},"79":{},"201":{},"208":{}},"component":{}}],["dialects.bi",{"_index":1263,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["dialog",{"_index":2538,"title":{},"name":{},"text":{"266":{},"272":{},"274":{}},"component":{}}],["didn't",{"_index":3071,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["didn’t",{"_index":219,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{},"258":{},"279":{},"287":{}},"component":{}}],["differ",{"_index":92,"title":{"26-6":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"12":{},"14":{},"15":{},"22":{},"23":{},"26":{},"28":{},"30":{},"31":{},"35":{},"37":{},"40":{},"41":{},"43":{},"47":{},"50":{},"53":{},"55":{},"56":{},"63":{},"64":{},"67":{},"70":{},"71":{},"75":{},"77":{},"78":{},"79":{},"80":{},"82":{},"85":{},"86":{},"95":{},"98":{},"99":{},"111":{},"114":{},"115":{},"120":{},"127":{},"130":{},"135":{},"136":{},"144":{},"152":{},"156":{},"161":{},"162":{},"170":{},"178":{},"182":{},"185":{},"189":{},"190":{},"197":{},"200":{},"201":{},"205":{},"207":{},"208":{},"209":{},"212":{},"219":{},"220":{},"230":{},"231":{},"237":{},"247":{},"248":{},"249":{},"252":{},"256":{},"258":{},"261":{},"262":{},"263":{},"265":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"277":{},"282":{},"285":{},"286":{},"289":{},"291":{},"293":{},"294":{},"296":{},"297":{},"299":{},"300":{},"302":{}},"component":{}}],["differenti",{"_index":1086,"title":{},"name":{},"text":{"26":{}},"component":{}}],["difficult",{"_index":1403,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["dig",{"_index":2598,"title":{},"name":{},"text":{"267":{},"269":{}},"component":{}}],["digit",{"_index":399,"title":{"24-4":{},"65-4":{}},"name":{},"text":{"8":{},"13":{},"14":{},"24":{},"49":{},"54":{},"55":{},"65":{},"84":{},"85":{},"97":{},"98":{},"113":{},"114":{},"134":{},"135":{},"160":{},"161":{},"184":{},"188":{},"189":{}},"component":{}}],["dimens",{"_index":2727,"title":{},"name":{},"text":{"273":{}},"component":{}}],["direct",{"_index":725,"title":{},"name":{},"text":{"15":{},"26":{},"31":{},"56":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"201":{},"258":{},"268":{}},"component":{}}],["directli",{"_index":311,"title":{},"name":{},"text":{"6":{},"12":{},"16":{},"22":{},"26":{},"31":{},"34":{},"38":{},"41":{},"47":{},"53":{},"57":{},"63":{},"71":{},"74":{},"78":{},"80":{},"87":{},"91":{},"100":{},"107":{},"116":{},"120":{},"130":{},"137":{},"148":{},"156":{},"163":{},"174":{},"182":{},"191":{},"201":{},"204":{},"209":{},"216":{},"261":{},"262":{},"280":{},"281":{}},"component":{}}],["directori",{"_index":621,"title":{},"name":{},"text":{"12":{},"53":{},"220":{},"232":{},"245":{},"276":{},"280":{},"285":{}},"component":{}}],["disabl",{"_index":511,"title":{"35-2":{},"75-2":{},"205-2":{}},"name":{},"text":{"11":{},"21":{},"27":{},"35":{},"52":{},"62":{},"68":{},"75":{},"105":{},"126":{},"142":{},"168":{},"187":{},"196":{},"198":{},"205":{},"245":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["disagre",{"_index":1362,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["disast",{"_index":959,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["discard",{"_index":2680,"title":{},"name":{},"text":{"270":{},"273":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["disconnect",{"_index":882,"title":{"20-5":{},"61-5":{},"104-5":{},"125-5":{},"141-5":{},"167-5":{},"195-5":{}},"name":{},"text":{"263":{},"270":{},"273":{}},"component":{}}],["discov",{"_index":2001,"title":{},"name":{},"text":{"241":{},"245":{}},"component":{}}],["discoveri",{"_index":1809,"title":{"236-1":{}},"name":{},"text":{"220":{},"221":{},"223":{},"225":{},"228":{},"229":{},"236":{},"276":{},"277":{},"286":{}},"component":{}}],["disk",{"_index":269,"title":{},"name":{},"text":{"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"212":{}},"component":{}}],["dislik",{"_index":2403,"title":{},"name":{},"text":{"263":{}},"component":{}}],["display",{"_index":1784,"title":{"220-6":{}},"name":{},"text":{"220":{},"224":{},"248":{},"283":{}},"component":{}}],["distinct",{"_index":2198,"title":{},"name":{},"text":{"258":{},"267":{}},"component":{}}],["distribut",{"_index":1875,"title":{},"name":{},"text":{"230":{}},"component":{}}],["distro",{"_index":2036,"title":{},"name":{},"text":{"245":{}},"component":{}}],["ditto",{"_index":647,"title":{"13-2":{},"54-2":{},"84-2":{},"97-2":{},"113-2":{},"134-2":{},"160-2":{},"188-2":{}},"name":{},"text":{"13":{},"14":{},"24":{},"54":{},"55":{},"65":{},"84":{},"85":{},"97":{},"98":{},"113":{},"114":{},"134":{},"135":{},"160":{},"161":{},"188":{},"189":{}},"component":{}}],["dive",{"_index":837,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"258":{}},"component":{}}],["diverg",{"_index":1024,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["divert",{"_index":1394,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["dk",{"_index":1822,"title":{},"name":{},"text":{"220":{},"222":{},"229":{},"239":{},"243":{}},"component":{}}],["dk/ble",{"_index":1987,"title":{},"name":{},"text":{"239":{},"243":{}},"component":{}}],["dkrtvcbsb290ienbifgzmb4xdtixmdeymde5mtqwm1oxdti0mdkzmde4mtqwm1ow",{"_index":1148,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["dn",{"_index":423,"title":{},"name":{},"text":{"8":{},"12":{},"30":{},"49":{},"53":{},"70":{},"122":{},"132":{},"158":{},"170":{},"184":{},"200":{},"262":{}},"component":{}}],["dnf",{"_index":557,"title":{},"name":{},"text":{"12":{},"53":{},"245":{},"272":{}},"component":{}}],["do",{"_index":1910,"title":{},"name":{},"text":{"231":{},"255":{},"256":{},"259":{},"279":{}},"component":{}}],["docker",{"_index":225,"title":{},"name":{},"text":{"4":{},"12":{},"45":{},"53":{},"94":{},"110":{},"123":{},"133":{},"154":{},"159":{},"180":{},"262":{}},"component":{}}],["docker.io",{"_index":1535,"title":{},"name":{},"text":{"213":{}},"component":{}}],["docker.io/bitnami/postgresql:13",{"_index":234,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["docker.io/jboss/keycloak:13.0.1",{"_index":243,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["docker.io/moeenz/dock",{"_index":239,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["docker.io/myorg/firmwar",{"_index":1577,"title":{},"name":{},"text":{"215":{}},"component":{}}],["docker/contain",{"_index":1522,"title":{},"name":{},"text":{"212":{}},"component":{}}],["docker/podman",{"_index":3047,"title":{},"name":{},"text":{"288":{}},"component":{}}],["document",{"_index":807,"title":{},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"217":{},"262":{},"272":{},"291":{},"294":{},"297":{},"300":{}},"component":{}}],["doesn’t",{"_index":86,"title":{},"name":{},"text":{"1":{},"12":{},"15":{},"26":{},"31":{},"36":{},"38":{},"53":{},"56":{},"71":{},"76":{},"78":{},"86":{},"99":{},"115":{},"136":{},"162":{},"175":{},"190":{},"201":{},"206":{},"231":{},"261":{},"280":{},"281":{}},"component":{}}],["domain",{"_index":422,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{},"262":{}},"component":{}}],["domin",{"_index":1372,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["done",{"_index":326,"title":{},"name":{},"text":{"6":{},"12":{},"27":{},"31":{},"42":{},"47":{},"53":{},"68":{},"71":{},"81":{},"91":{},"107":{},"120":{},"130":{},"156":{},"177":{},"182":{},"198":{},"201":{},"210":{},"214":{},"216":{},"245":{},"258":{},"261":{},"274":{},"281":{}},"component":{}}],["don’t",{"_index":411,"title":{},"name":{},"text":{"8":{},"12":{},"27":{},"40":{},"49":{},"53":{},"68":{},"79":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"198":{},"208":{},"229":{},"245":{},"258":{},"261":{},"262":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["doubl",{"_index":2400,"title":{},"name":{},"text":{"262":{},"272":{},"273":{}},"component":{}}],["doubt",{"_index":2367,"title":{},"name":{},"text":{"262":{}},"component":{}}],["down",{"_index":281,"title":{},"name":{},"text":{"5":{},"25":{},"46":{},"66":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"213":{},"258":{},"260":{},"265":{},"266":{},"267":{},"269":{},"272":{}},"component":{}}],["downlink",{"_index":1952,"title":{},"name":{},"text":{"236":{},"254":{},"255":{},"276":{},"279":{},"280":{},"281":{}},"component":{}}],["download",{"_index":345,"title":{"8-1":{},"49-1":{},"93-1":{},"109-1":{},"122-1":{},"132-1":{},"158-1":{},"184-1":{},"213-3":{},"258-6":{}},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"239":{},"241":{},"243":{},"258":{},"282":{},"289":{}},"component":{}}],["downsid",{"_index":1274,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["draw",{"_index":2564,"title":{},"name":{},"text":{"266":{},"270":{},"273":{}},"component":{}}],["drg",{"_index":254,"title":{"258-8":{}},"name":{},"text":{"4":{},"10":{},"19":{},"20":{},"39":{},"42":{},"45":{},"51":{},"60":{},"61":{},"81":{},"94":{},"103":{},"104":{},"110":{},"123":{},"124":{},"125":{},"133":{},"140":{},"141":{},"151":{},"154":{},"159":{},"166":{},"167":{},"177":{},"180":{},"186":{},"194":{},"195":{},"210":{},"213":{},"215":{},"258":{},"266":{},"275":{},"280":{},"281":{},"283":{},"284":{}},"component":{}}],["drg_g0yauq",{"_index":2910,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["drg_g0yauq_kwjrla40hrt81bbkdgbcdomlq2wasx6uyqi",{"_index":2911,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["drg_hash",{"_index":3007,"title":{},"name":{},"text":{"283":{}},"component":{}}],["drgadm",{"_index":408,"title":{},"name":{},"text":{"8":{},"9":{},"49":{},"50":{},"122":{},"132":{},"158":{},"184":{},"185":{}},"component":{}}],["drgdfu",{"_index":1994,"title":{},"name":{},"text":{"241":{}},"component":{}}],["dri",{"_index":454,"title":{},"name":{},"text":{"8":{},"49":{},"184":{}},"component":{}}],["drive",{"_index":614,"title":{},"name":{},"text":{"12":{},"15":{},"53":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"216":{}},"component":{}}],["driven",{"_index":579,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["driver",{"_index":1631,"title":{"219":{},"219-1":{},"219-3":{}},"name":{"219":{}},"text":{"216":{},"218":{},"219":{},"229":{},"230":{},"234":{},"235":{},"276":{},"277":{}},"component":{}}],["drivers::l",{"_index":2858,"title":{},"name":{},"text":{"279":{}},"component":{}}],["drivers::lora::sx127x",{"_index":2859,"title":{},"name":{},"text":{"279":{}},"component":{}}],["drogu",{"_index":3,"title":{"1":{},"3":{},"44":{},"83":{},"96":{},"112":{},"128":{},"153":{},"179":{},"212":{},"230":{},"232":{},"266":{},"275":{},"284":{},"291":{},"294":{},"297":{},"300":{},"303":{},"22-4":{},"24-3":{},"31-7":{},"40-4":{},"63-4":{},"65-3":{},"71-7":{},"79-4":{},"201-7":{},"208-4":{},"218-1":{},"220-5":{},"233-1":{},"235-1":{},"244-1":{},"247-1":{},"248-1":{},"249-1":{},"252-1":{},"256-2":{},"258-3":{},"258-7":{},"277-4":{},"280-1":{},"281-1":{},"286-3":{}},"name":{"266":{},"275":{},"284":{}},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"75":{},"76":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"146":{},"151":{},"152":{},"153":{},"154":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"177":{},"178":{},"179":{},"180":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"205":{},"206":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"218":{},"220":{},"223":{},"229":{},"230":{},"231":{},"233":{},"234":{},"244":{},"251":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"275":{},"276":{},"277":{},"280":{},"281":{},"283":{},"284":{},"285":{},"286":{},"288":{},"290":{},"291":{},"292":{},"294":{},"295":{},"297":{},"298":{},"300":{},"301":{},"303":{},"304":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{}}}],["drogue.api.key=drg_g0yauq_3z5pasdcasdei4yqop123hdsa821vatfs4x",{"_index":2967,"title":{},"name":{},"text":{"281":{}},"component":{}}],["drogue.api.token",{"_index":2921,"title":{},"name":{},"text":{"280":{}},"component":{}}],["drogue.api.us",{"_index":2920,"title":{},"name":{},"text":{"280":{}},"component":{}}],["drogue.api.user=mi",{"_index":2966,"title":{},"name":{},"text":{"281":{}},"component":{}}],["drogue.application.nam",{"_index":2919,"title":{},"name":{},"text":{"280":{}},"component":{}}],["drogue.application.name=mi",{"_index":2965,"title":{},"name":{},"text":{"281":{}},"component":{}}],["drogue.integration.mqtt.host",{"_index":2295,"title":{},"name":{},"text":{"261":{},"280":{}},"component":{}}],["drogue.integration.mqtt.host=mqtt",{"_index":2968,"title":{},"name":{},"text":{"281":{}},"component":{}}],["drogue.integration.mqtt.port",{"_index":2296,"title":{},"name":{},"text":{"261":{},"280":{}},"component":{}}],["drogue.integration.mqtt.port=443",{"_index":2969,"title":{},"name":{},"text":{"281":{}},"component":{}}],["drogue.sh",{"_index":1483,"title":{},"name":{},"text":{"91":{},"107":{}},"component":{}}],["drogue/config.toml",{"_index":1791,"title":{},"name":{},"text":{"220":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"244":{},"249":{},"251":{},"254":{},"255":{},"285":{}},"component":{}}],["drogue/v1",{"_index":1378,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["drogue_devic",{"_index":1748,"title":{},"name":{},"text":{"218":{},"279":{}},"component":{}}],["drogue_n",{"_index":432,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["drogueapplication.name=wifi",{"_index":3012,"title":{},"name":{},"text":{"283":{}},"component":{}}],["droguecloud",{"_index":509,"title":{},"name":{},"text":{"11":{},"52":{},"187":{}},"component":{}}],["droguecloudmetrics.grafana.adminpassword=654321nimda",{"_index":488,"title":{},"name":{},"text":{"9":{},"50":{},"185":{}},"component":{}}],["drop",{"_index":740,"title":{"41-9":{},"80-9":{},"209-9":{}},"name":{},"text":{"15":{},"18":{},"31":{},"41":{},"56":{},"59":{},"71":{},"80":{},"86":{},"89":{},"99":{},"102":{},"115":{},"118":{},"136":{},"139":{},"162":{},"165":{},"190":{},"193":{},"201":{},"209":{},"266":{},"267":{},"273":{}},"component":{}}],["droug",{"_index":2834,"title":{},"name":{},"text":{"277":{}},"component":{}}],["dt_socket",{"_index":2408,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["dtl",{"_index":1185,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["due",{"_index":1718,"title":{},"name":{},"text":{"216":{},"231":{}},"component":{}}],["dummi",{"_index":2581,"title":{},"name":{},"text":{"267":{}},"component":{}}],["duplic",{"_index":2722,"title":{},"name":{},"text":{"273":{}},"component":{}}],["durat",{"_index":1120,"title":{"27-1":{},"68-1":{},"198-1":{}},"name":{},"text":{"27":{},"68":{},"198":{},"279":{}},"component":{}}],["duration::from_millis(200",{"_index":1656,"title":{},"name":{},"text":{"216":{}},"component":{}}],["durationonehourandtwominut",{"_index":1129,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["durationoneminut",{"_index":1127,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["durationonesecond",{"_index":1125,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["dure",{"_index":475,"title":{},"name":{},"text":{"9":{},"11":{},"24":{},"30":{},"37":{},"40":{},"41":{},"50":{},"52":{},"65":{},"70":{},"77":{},"79":{},"80":{},"170":{},"185":{},"187":{},"200":{},"207":{},"208":{},"209":{},"214":{},"216":{},"218":{},"220":{},"232":{},"259":{}},"component":{}}],["e",{"_index":433,"title":{},"name":{},"text":{"8":{},"49":{},"184":{},"220":{},"224":{},"248":{}},"component":{}}],["e.g",{"_index":296,"title":{},"name":{},"text":{"5":{},"12":{},"19":{},"20":{},"28":{},"40":{},"41":{},"46":{},"53":{},"60":{},"61":{},"67":{},"79":{},"80":{},"90":{},"103":{},"104":{},"106":{},"119":{},"124":{},"125":{},"129":{},"140":{},"141":{},"155":{},"166":{},"167":{},"181":{},"194":{},"195":{},"197":{},"208":{},"209":{},"220":{},"232":{},"258":{},"266":{},"269":{},"274":{},"275":{},"285":{}},"component":{}}],["e2",{"_index":2178,"title":{},"name":{"257":{}},"text":{"257":{}},"component":{}}],["eabi/release/blinki",{"_index":2116,"title":{},"name":{},"text":{"246":{}},"component":{}}],["eabi/release/lora",{"_index":2768,"title":{},"name":{},"text":{"276":{}},"component":{}}],["eabihf",{"_index":2132,"title":{},"name":{},"text":{"249":{}},"component":{}}],["eabihf/release/iot01a",{"_index":2160,"title":{},"name":{},"text":{"251":{}},"component":{}}],["eabihf/release/wifi",{"_index":3027,"title":{},"name":{},"text":{"285":{}},"component":{}}],["each",{"_index":78,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"24":{},"25":{},"28":{},"36":{},"42":{},"43":{},"49":{},"65":{},"66":{},"67":{},"76":{},"81":{},"82":{},"93":{},"95":{},"109":{},"111":{},"122":{},"127":{},"132":{},"151":{},"152":{},"158":{},"175":{},"177":{},"178":{},"184":{},"197":{},"206":{},"210":{},"216":{},"218":{},"220":{},"231":{},"232":{},"248":{},"268":{},"270":{},"273":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["eachoth",{"_index":1702,"title":{},"name":{},"text":{"216":{}},"component":{}}],["earli",{"_index":2579,"title":{},"name":{},"text":{"267":{}},"component":{}}],["earlier",{"_index":906,"title":{},"name":{},"text":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{},"213":{},"262":{},"273":{},"275":{},"276":{},"279":{},"285":{}},"component":{}}],["easi",{"_index":366,"title":{},"name":{},"text":{"8":{},"12":{},"14":{},"15":{},"24":{},"40":{},"49":{},"53":{},"55":{},"56":{},"65":{},"79":{},"85":{},"86":{},"93":{},"98":{},"99":{},"109":{},"114":{},"115":{},"122":{},"132":{},"135":{},"136":{},"158":{},"161":{},"162":{},"184":{},"189":{},"190":{},"208":{},"216":{},"259":{},"261":{},"268":{},"270":{},"273":{},"279":{},"280":{},"281":{},"283":{},"287":{},"288":{}},"component":{}}],["easier",{"_index":545,"title":{},"name":{},"text":{"12":{},"22":{},"42":{},"53":{},"63":{},"81":{},"151":{},"177":{},"210":{},"217":{},"218":{},"219":{},"231":{},"280":{},"281":{}},"component":{}}],["easiest",{"_index":1847,"title":{},"name":{},"text":{"229":{}},"component":{}}],["easili",{"_index":1907,"title":{},"name":{},"text":{"231":{},"263":{},"266":{},"275":{},"280":{},"281":{}},"component":{}}],["eastu",{"_index":2372,"title":{},"name":{},"text":{"262":{}},"component":{}}],["echo",{"_index":1924,"title":{},"name":{},"text":{"234":{},"244":{},"251":{}},"component":{}}],["echo.sh",{"_index":2027,"title":{},"name":{},"text":{"244":{}},"component":{}}],["eclips",{"_index":548,"title":{"13-2":{},"54-2":{},"84-2":{},"97-2":{},"113-2":{},"134-2":{},"160-2":{},"188-2":{},"215-4":{}},"name":{},"text":{"12":{},"13":{},"14":{},"18":{},"24":{},"53":{},"54":{},"55":{},"59":{},"65":{},"84":{},"85":{},"89":{},"97":{},"98":{},"102":{},"113":{},"114":{},"118":{},"134":{},"135":{},"139":{},"160":{},"161":{},"165":{},"188":{},"189":{},"193":{},"212":{},"213":{},"215":{},"257":{},"259":{}},"component":{}}],["eclis",{"_index":1576,"title":{},"name":{},"text":{"215":{}},"component":{}}],["ecosystem",{"_index":1731,"title":{},"name":{},"text":{"218":{},"269":{}},"component":{}}],["edg",{"_index":1,"title":{"1-2":{},"22-3":{},"25-2":{},"63-3":{},"66-2":{}},"name":{},"text":{"1":{},"16":{},"22":{},"25":{},"57":{},"63":{},"66":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{}},"component":{}}],["edge/redirect",{"_index":2360,"title":{},"name":{},"text":{"262":{}},"component":{}}],["edit",{"_index":693,"title":{"258-12":{},"258-14":{}},"name":{},"text":{"14":{},"19":{},"20":{},"39":{},"42":{},"55":{},"60":{},"61":{},"81":{},"85":{},"98":{},"103":{},"104":{},"114":{},"124":{},"125":{},"135":{},"140":{},"141":{},"151":{},"161":{},"166":{},"167":{},"177":{},"189":{},"194":{},"195":{},"210":{},"213":{},"215":{},"234":{},"251":{},"258":{},"266":{},"267":{}},"component":{}}],["editor",{"_index":1457,"title":{},"name":{},"text":{"42":{},"81":{},"151":{},"177":{},"210":{},"258":{},"260":{},"261":{},"263":{},"281":{}},"component":{}}],["effici",{"_index":32,"title":{"230-2":{}},"name":{},"text":{"1":{},"230":{},"268":{},"269":{},"279":{},"287":{}},"component":{}}],["effort",{"_index":764,"title":{},"name":{},"text":{"15":{},"56":{},"268":{}},"component":{}}],["either::left((_",{"_index":1682,"title":{},"name":{},"text":{"216":{}},"component":{}}],["either::left(_",{"_index":1685,"title":{},"name":{},"text":{"216":{}},"component":{}}],["either::right((f",{"_index":1684,"title":{},"name":{},"text":{"216":{}},"component":{}}],["either::right(_",{"_index":1686,"title":{},"name":{},"text":{"216":{}},"component":{}}],["elabor",{"_index":2899,"title":{},"name":{},"text":{"279":{},"287":{}},"component":{}}],["element",{"_index":119,"title":{},"name":{},"text":{"2":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{},"267":{},"280":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["elf",{"_index":2107,"title":{},"name":{},"text":{"246":{}},"component":{}}],["elf2uf2",{"_index":2112,"title":{},"name":{},"text":{"246":{}},"component":{}}],["emac",{"_index":549,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["embassi",{"_index":1719,"title":{},"name":{},"text":{"217":{},"218":{},"229":{},"230":{},"231":{},"238":{},"242":{},"250":{},"253":{}},"component":{}}],["embassy::main",{"_index":1708,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["embassy::time::dur",{"_index":2860,"title":{},"name":{},"text":{"279":{}},"component":{}}],["embassy_executor::main",{"_index":1692,"title":{},"name":{},"text":{"216":{}},"component":{}}],["embassy_executor::spawn",{"_index":1694,"title":{},"name":{},"text":{"216":{}},"component":{}}],["embed",{"_index":35,"title":{"277-2":{},"282-2":{},"286-2":{},"289-2":{}},"name":{},"text":{"1":{},"14":{},"16":{},"17":{},"27":{},"55":{},"57":{},"58":{},"68":{},"85":{},"87":{},"88":{},"98":{},"100":{},"101":{},"114":{},"116":{},"117":{},"135":{},"137":{},"138":{},"161":{},"163":{},"164":{},"189":{},"191":{},"192":{},"198":{},"214":{},"218":{},"219":{},"229":{},"230":{},"231":{},"234":{},"277":{},"282":{},"286":{},"289":{}},"component":{}}],["emit",{"_index":1089,"title":{},"name":{},"text":{"26":{}},"component":{}}],["empow",{"_index":60,"title":{},"name":{},"text":{"1":{}},"component":{}}],["empti",{"_index":1102,"title":{},"name":{},"text":{"26":{},"31":{},"38":{},"39":{},"41":{},"71":{},"78":{},"80":{},"201":{},"209":{},"267":{},"272":{}},"component":{}}],["en",{"_index":2017,"title":{},"name":{},"text":{"244":{}},"component":{}}],["enabl",{"_index":191,"title":{"4-4":{},"45-4":{},"154-4":{},"180-4":{},"215-2":{},"215-5":{},"251-8":{}},"name":{},"text":{"4":{},"11":{},"12":{},"15":{},"16":{},"19":{},"26":{},"27":{},"28":{},"31":{},"45":{},"52":{},"53":{},"56":{},"57":{},"60":{},"67":{},"68":{},"71":{},"86":{},"87":{},"99":{},"100":{},"103":{},"115":{},"116":{},"124":{},"136":{},"137":{},"140":{},"154":{},"162":{},"163":{},"166":{},"180":{},"187":{},"190":{},"191":{},"194":{},"197":{},"198":{},"201":{},"213":{},"215":{},"219":{},"234":{},"239":{},"244":{},"245":{},"251":{},"262":{},"275":{},"288":{}},"component":{}}],["encod",{"_index":154,"title":{},"name":{},"text":{"2":{},"22":{},"29":{},"31":{},"34":{},"36":{},"37":{},"38":{},"41":{},"43":{},"63":{},"69":{},"71":{},"74":{},"76":{},"77":{},"78":{},"80":{},"82":{},"93":{},"95":{},"109":{},"111":{},"122":{},"127":{},"132":{},"143":{},"148":{},"149":{},"150":{},"152":{},"158":{},"169":{},"174":{},"175":{},"176":{},"178":{},"199":{},"201":{},"204":{},"206":{},"207":{},"209":{},"214":{},"261":{},"281":{}},"component":{}}],["encount",{"_index":648,"title":{},"name":{},"text":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"256":{}},"component":{}}],["encourag",{"_index":1444,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"271":{}},"component":{}}],["end",{"_index":779,"title":{"257":{},"277":{}},"name":{},"text":{"15":{},"22":{},"25":{},"27":{},"38":{},"56":{},"63":{},"66":{},"68":{},"78":{},"198":{},"212":{},"257":{},"263":{},"266":{},"270":{},"271":{},"272":{},"279":{},"287":{},"288":{}},"component":{}}],["end_offset",{"_index":2741,"title":{},"name":{},"text":{"273":{}},"component":{}}],["endpoint",{"_index":115,"title":{"29":{},"30":{},"31":{},"69":{},"70":{},"71":{},"143":{},"144":{},"145":{},"169":{},"170":{},"171":{},"199":{},"200":{},"201":{},"292":{},"295":{},"298":{},"301":{},"304":{},"2-3":{},"18-6":{},"18-7":{},"18-8":{},"18-9":{},"18-10":{},"27-2":{},"43-3":{},"59-6":{},"59-7":{},"59-8":{},"59-9":{},"59-10":{},"68-2":{},"82-3":{},"89-3":{},"89-4":{},"89-5":{},"89-6":{},"95-3":{},"102-3":{},"102-4":{},"102-5":{},"102-6":{},"111-3":{},"118-3":{},"118-4":{},"118-5":{},"118-6":{},"127-3":{},"139-6":{},"139-7":{},"139-8":{},"139-9":{},"139-10":{},"152-3":{},"165-6":{},"165-7":{},"165-8":{},"165-9":{},"165-10":{},"178-3":{},"193-6":{},"193-7":{},"193-8":{},"193-9":{},"193-10":{},"198-2":{},"292-92":{},"295-92":{},"298-91":{},"301-92":{}},"name":{"29":{},"30":{},"31":{},"69":{},"70":{},"71":{},"143":{},"144":{},"145":{},"169":{},"170":{},"171":{},"199":{},"200":{},"201":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"text":{"2":{},"3":{},"4":{},"8":{},"14":{},"15":{},"18":{},"22":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"35":{},"37":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"49":{},"55":{},"56":{},"59":{},"63":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"75":{},"77":{},"79":{},"80":{},"81":{},"82":{},"83":{},"85":{},"86":{},"89":{},"93":{},"95":{},"96":{},"98":{},"99":{},"102":{},"109":{},"111":{},"112":{},"114":{},"115":{},"118":{},"122":{},"127":{},"128":{},"132":{},"135":{},"136":{},"139":{},"143":{},"144":{},"145":{},"152":{},"153":{},"154":{},"158":{},"161":{},"162":{},"165":{},"169":{},"170":{},"171":{},"177":{},"178":{},"179":{},"180":{},"184":{},"189":{},"190":{},"193":{},"197":{},"198":{},"199":{},"200":{},"201":{},"205":{},"207":{},"208":{},"209":{},"210":{},"244":{},"251":{},"259":{},"261":{},"262":{},"263":{},"265":{},"266":{},"269":{},"271":{},"280":{},"281":{},"291":{},"292":{},"294":{},"295":{},"297":{},"298":{},"300":{},"301":{}},"component":{}}],["endpoint.1.2.3.4.nip.io",{"_index":1233,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["endpoint.1.2.3.4.nip.io:30443/v1/telemetri",{"_index":1247,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["endpoint.192.168.39.35.nip.io:30443/v1/foo",{"_index":1250,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["endpoint__token",{"_index":2646,"title":{},"name":{},"text":{"269":{}},"component":{}}],["energi",{"_index":817,"title":{"241":{}},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"220":{},"241":{}},"component":{}}],["enforc",{"_index":782,"title":{},"name":{},"text":{"15":{},"56":{},"78":{}},"component":{}}],["engin",{"_index":1393,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"268":{},"269":{}},"component":{}}],["enhanc",{"_index":2176,"title":{},"name":{},"text":{"256":{}},"component":{}}],["enough",{"_index":1901,"title":{},"name":{},"text":{"231":{},"245":{},"269":{}},"component":{}}],["enrich",{"_index":1390,"title":{"41-12":{},"80-12":{},"209-12":{}},"name":{},"text":{"41":{},"80":{},"209":{},"271":{}},"component":{}}],["ensur",{"_index":89,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"15":{},"22":{},"25":{},"38":{},"53":{},"55":{},"56":{},"63":{},"66":{},"78":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{},"214":{},"245":{},"262":{},"272":{},"274":{},"277":{}},"component":{}}],["enter",{"_index":1527,"title":{},"name":{},"text":{"213":{},"229":{},"251":{},"267":{},"269":{},"272":{},"274":{}},"component":{}}],["enterpris",{"_index":1035,"title":{},"name":{},"text":{"25":{},"66":{},"280":{},"281":{}},"component":{}}],["entir",{"_index":1628,"title":{},"name":{},"text":{"216":{}},"component":{}}],["entri",{"_index":1463,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{},"216":{},"218":{},"233":{},"234":{},"235":{},"236":{},"237":{},"244":{},"249":{},"251":{},"254":{},"255":{},"267":{},"269":{},"273":{},"274":{},"280":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["entrypoint",{"_index":1253,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["enum",{"_index":1633,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["env",{"_index":438,"title":{},"name":{},"text":{"8":{},"9":{},"12":{},"49":{},"50":{},"53":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"185":{},"269":{}},"component":{}}],["envelop",{"_index":947,"title":{},"name":{},"text":{"22":{},"63":{},"269":{}},"component":{}}],["environ",{"_index":197,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"12":{},"45":{},"49":{},"51":{},"53":{},"93":{},"94":{},"109":{},"110":{},"122":{},"123":{},"132":{},"133":{},"154":{},"158":{},"159":{},"180":{},"184":{},"186":{},"229":{},"231":{},"241":{},"251":{},"259":{},"263":{},"269":{},"282":{},"288":{},"289":{}},"component":{}}],["environment",{"_index":912,"title":{"22":{},"63":{}},"name":{"22":{},"63":{}},"text":{"22":{},"23":{},"63":{},"64":{}},"component":{}}],["eof",{"_index":2053,"title":{},"name":{},"text":{"245":{},"262":{}},"component":{}}],["epd",{"_index":2128,"title":{"248-1":{}},"name":{},"text":{},"component":{}}],["equal",{"_index":738,"title":{},"name":{},"text":{"15":{},"36":{},"56":{},"76":{},"86":{},"99":{},"115":{},"136":{},"162":{},"175":{},"190":{},"206":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["equival",{"_index":2404,"title":{},"name":{},"text":{"263":{}},"component":{}}],["eras",{"_index":1972,"title":{"239-5":{},"241-5":{},"243-5":{}},"name":{},"text":{"239":{},"241":{},"243":{}},"component":{}}],["err",{"_index":1642,"title":{},"name":{},"text":{"216":{}},"component":{}}],["error",{"_index":1043,"title":{"216-3":{}},"name":{},"text":{"25":{},"29":{},"41":{},"42":{},"66":{},"69":{},"80":{},"81":{},"143":{},"151":{},"169":{},"177":{},"199":{},"209":{},"210":{},"216":{},"245":{},"251":{},"259":{},"261":{},"285":{}},"component":{}}],["es",{"_index":3031,"title":{},"name":{},"text":{"285":{}},"component":{}}],["esp8266",{"_index":1811,"title":{"234-1":{},"244-1":{}},"name":{},"text":{"220":{},"223":{},"228":{},"232":{},"234":{},"244":{}},"component":{}}],["especi",{"_index":665,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"276":{}},"component":{}}],["establish",{"_index":1180,"title":{},"name":{},"text":{"28":{},"31":{},"67":{},"71":{},"197":{},"201":{},"263":{},"281":{}},"component":{}}],["etc",{"_index":729,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"245":{}},"component":{}}],["etc/apt/preferences.d",{"_index":2049,"title":{},"name":{},"text":{"245":{}},"component":{}}],["etc/apt/preferences.d/pref",{"_index":2052,"title":{},"name":{},"text":{"245":{}},"component":{}}],["etc/apt/sources.list",{"_index":2047,"title":{},"name":{},"text":{"245":{}},"component":{}}],["eu1",{"_index":864,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{},"274":{},"275":{}},"component":{}}],["eu1.cloud.thethings.network",{"_index":865,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{}},"component":{}}],["eu_863_870_ttn",{"_index":895,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["eui",{"_index":884,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"220":{},"232":{},"235":{},"236":{},"237":{},"254":{},"255":{},"276":{},"278":{}},"component":{}}],["europ",{"_index":3081,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["evalu",{"_index":970,"title":{},"name":{},"text":{"23":{},"26":{},"31":{},"41":{},"64":{},"71":{},"80":{},"201":{},"209":{},"279":{},"287":{}},"component":{}}],["even",{"_index":317,"title":{},"name":{},"text":{"6":{},"26":{},"38":{},"40":{},"41":{},"47":{},"79":{},"80":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"208":{},"209":{},"231":{},"258":{},"259":{},"260":{},"261":{},"265":{},"269":{},"273":{},"280":{},"281":{},"287":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["event",{"_index":136,"title":{"41":{},"80":{},"209":{},"14-3":{},"26-10":{},"36-5":{},"38-1":{},"38-2":{},"38-5":{},"38-8":{},"41-11":{},"41-12":{},"55-3":{},"76-5":{},"78-2":{},"78-5":{},"78-8":{},"80-11":{},"80-12":{},"85-3":{},"98-3":{},"114-3":{},"135-3":{},"161-3":{},"175-5":{},"189-3":{},"206-5":{},"209-11":{},"209-12":{},"261-1":{},"261-2":{},"261-3":{},"261-4":{},"261-6":{},"261-8":{},"281-11":{}},"name":{},"text":{"2":{},"3":{},"13":{},"14":{},"15":{},"18":{},"22":{},"24":{},"25":{},"26":{},"31":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"54":{},"55":{},"56":{},"59":{},"63":{},"65":{},"66":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"82":{},"83":{},"84":{},"85":{},"86":{},"89":{},"95":{},"96":{},"97":{},"98":{},"99":{},"102":{},"111":{},"112":{},"113":{},"114":{},"115":{},"118":{},"127":{},"128":{},"134":{},"135":{},"136":{},"139":{},"148":{},"149":{},"150":{},"152":{},"153":{},"160":{},"161":{},"162":{},"165":{},"174":{},"175":{},"176":{},"178":{},"179":{},"188":{},"189":{},"190":{},"193":{},"201":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"214":{},"216":{},"218":{},"231":{},"234":{},"251":{},"261":{},"263":{},"265":{},"266":{},"269":{},"276":{},"277":{},"279":{},"280":{},"281":{},"285":{},"288":{},"290":{}},"component":{}}],["event.deviceid",{"_index":2950,"title":{},"name":{},"text":{"280":{}},"component":{}}],["event.getpayload",{"_index":2991,"title":{},"name":{},"text":{"281":{}},"component":{}}],["event.getpayload().split",{"_index":2848,"title":{},"name":{},"text":{"279":{}},"component":{}}],["event.getpayload().startswith(\"p",{"_index":2993,"title":{},"name":{},"text":{"281":{}},"component":{}}],["event.payload.startswith('p",{"_index":2949,"title":{},"name":{},"text":{"280":{}},"component":{}}],["eventformatprovid",{"_index":2268,"title":{},"name":{},"text":{"261":{}},"component":{}}],["eventloop",{"_index":2433,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["eventsresourc",{"_index":2310,"title":{},"name":{},"text":{"261":{}},"component":{}}],["eventu",{"_index":1105,"title":{},"name":{},"text":{"26":{}},"component":{}}],["event’",{"_index":2286,"title":{},"name":{},"text":{"261":{}},"component":{}}],["everyon",{"_index":61,"title":{},"name":{},"text":{"1":{}},"component":{}}],["everyth",{"_index":364,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"271":{},"281":{}},"component":{}}],["exactli",{"_index":123,"title":{},"name":{},"text":{"2":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{}},"component":{}}],["exampl",{"_index":350,"title":{"220":{},"232":{},"239":{},"241":{},"243":{},"8-7":{},"22-1":{},"24-1":{},"25-1":{},"49-7":{},"63-1":{},"65-1":{},"66-1":{},"184-7":{},"220-1":{},"220-2":{},"220-3":{},"220-4":{},"220-5":{},"220-6":{},"220-7":{},"220-8":{},"229-1":{},"229-5":{},"233-1":{},"234-1":{},"235-1":{},"236-1":{},"237-1":{},"244-1":{},"245-1":{},"246-1":{},"247-1":{},"248-1":{},"249-1":{},"251-1":{},"252-1":{},"254-1":{},"255-1":{}},"name":{"220":{}},"text":{"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"22":{},"23":{},"25":{},"26":{},"27":{},"29":{},"31":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"49":{},"50":{},"53":{},"54":{},"55":{},"56":{},"57":{},"63":{},"64":{},"66":{},"68":{},"69":{},"71":{},"76":{},"78":{},"80":{},"81":{},"84":{},"85":{},"86":{},"87":{},"93":{},"97":{},"98":{},"99":{},"100":{},"109":{},"113":{},"114":{},"115":{},"116":{},"122":{},"132":{},"134":{},"135":{},"136":{},"137":{},"143":{},"151":{},"158":{},"160":{},"161":{},"162":{},"163":{},"169":{},"175":{},"177":{},"184":{},"185":{},"188":{},"189":{},"190":{},"191":{},"198":{},"199":{},"201":{},"206":{},"209":{},"210":{},"211":{},"213":{},"214":{},"215":{},"216":{},"220":{},"222":{},"223":{},"228":{},"229":{},"230":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"257":{},"258":{},"259":{},"261":{},"262":{},"263":{},"268":{},"270":{},"273":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"286":{},"287":{},"288":{},"289":{},"290":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["example@1.0.0",{"_index":2927,"title":{},"name":{},"text":{"280":{}},"component":{}}],["examples/nrf52/microbit/jukebox",{"_index":1863,"title":{},"name":{},"text":{"229":{}},"component":{}}],["examples/std/pingpong",{"_index":1861,"title":{},"name":{},"text":{"229":{}},"component":{}}],["examples/stm32l0xx/lora",{"_index":2766,"title":{},"name":{},"text":{"276":{}},"component":{}}],["examples/wifi",{"_index":3022,"title":{},"name":{},"text":{"285":{}},"component":{}}],["examples_bas",{"_index":1829,"title":{},"name":{"221":{}},"text":{},"component":{}}],["examples_bl",{"_index":1830,"title":{},"name":{"222":{}},"text":{},"component":{}}],["examples_cloud",{"_index":1831,"title":{},"name":{"223":{}},"text":{},"component":{}}],["examples_display",{"_index":1832,"title":{},"name":{"224":{}},"text":{},"component":{}}],["examples_lorawan",{"_index":1833,"title":{},"name":{"225":{}},"text":{},"component":{}}],["examples_oth",{"_index":1834,"title":{},"name":{"226":{}},"text":{},"component":{}}],["examples_uart",{"_index":1835,"title":{},"name":{"227":{}},"text":{},"component":{}}],["examples_wifi",{"_index":1836,"title":{},"name":{"228":{}},"text":{},"component":{}}],["except",{"_index":1382,"title":{},"name":{},"text":{"40":{},"79":{},"208":{},"265":{}},"component":{}}],["exclus",{"_index":1727,"title":{},"name":{},"text":{"218":{}},"component":{}}],["execut",{"_index":282,"title":{},"name":{},"text":{"5":{},"12":{},"15":{},"26":{},"41":{},"46":{},"53":{},"56":{},"80":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"209":{},"220":{},"231":{},"232":{},"258":{},"262":{},"263":{},"267":{},"269":{},"272":{},"273":{},"276":{},"282":{},"285":{},"289":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["executor",{"_index":1744,"title":{},"name":{},"text":{"218":{},"231":{}},"component":{}}],["exist",{"_index":111,"title":{"245-3":{}},"name":{},"text":{"1":{},"2":{},"8":{},"12":{},"15":{},"17":{},"19":{},"20":{},"22":{},"30":{},"31":{},"41":{},"42":{},"43":{},"49":{},"53":{},"56":{},"58":{},"60":{},"61":{},"63":{},"70":{},"71":{},"80":{},"81":{},"82":{},"86":{},"88":{},"93":{},"95":{},"99":{},"101":{},"103":{},"104":{},"109":{},"111":{},"115":{},"117":{},"122":{},"124":{},"125":{},"127":{},"132":{},"136":{},"138":{},"140":{},"141":{},"151":{},"152":{},"158":{},"162":{},"164":{},"166":{},"167":{},"170":{},"171":{},"177":{},"178":{},"184":{},"190":{},"192":{},"194":{},"195":{},"200":{},"201":{},"209":{},"210":{},"213":{},"215":{},"260":{},"261":{},"265":{},"269":{},"270":{},"273":{},"274":{},"280":{},"281":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["exist.multipl",{"_index":3089,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["exit",{"_index":2586,"title":{},"name":{},"text":{"267":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["expand",{"_index":1762,"title":{},"name":{},"text":{"218":{},"231":{},"267":{}},"component":{}}],["expect",{"_index":348,"title":{"264":{},"8-3":{},"49-3":{},"93-3":{},"109-3":{},"122-3":{},"132-3":{},"158-3":{},"184-3":{}},"name":{},"text":{"26":{},"40":{},"79":{},"208":{},"212":{},"214":{},"215":{},"216":{},"220":{},"232":{},"241":{},"244":{},"246":{},"258":{},"261":{},"279":{},"281":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["expens",{"_index":1781,"title":{},"name":{},"text":{"219":{}},"component":{}}],["experi",{"_index":842,"title":{},"name":{},"text":{"17":{},"42":{},"58":{},"81":{},"88":{},"101":{},"117":{},"138":{},"151":{},"164":{},"177":{},"192":{},"210":{},"230":{},"251":{},"267":{},"269":{},"283":{},"285":{}},"component":{}}],["experienc",{"_index":1941,"title":{},"name":{},"text":{"236":{},"237":{},"244":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"285":{}},"component":{}}],["expir",{"_index":1292,"title":{},"name":{},"text":{"36":{},"37":{},"76":{},"175":{},"206":{},"258":{},"280":{},"281":{}},"component":{}}],["explain",{"_index":117,"title":{},"name":{},"text":{"2":{},"8":{},"17":{},"18":{},"43":{},"49":{},"58":{},"59":{},"82":{},"88":{},"89":{},"91":{},"95":{},"101":{},"102":{},"107":{},"111":{},"117":{},"118":{},"127":{},"138":{},"139":{},"152":{},"164":{},"165":{},"178":{},"184":{},"192":{},"193":{},"256":{},"270":{},"273":{}},"component":{}}],["explicit",{"_index":1176,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["explicitli",{"_index":128,"title":{},"name":{},"text":{"2":{},"19":{},"31":{},"42":{},"43":{},"60":{},"71":{},"81":{},"82":{},"95":{},"103":{},"111":{},"124":{},"127":{},"140":{},"151":{},"152":{},"166":{},"177":{},"178":{},"194":{},"201":{},"210":{},"267":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["explor",{"_index":2235,"title":{},"name":{},"text":{"259":{}},"component":{}}],["export",{"_index":289,"title":{},"name":{},"text":{"5":{},"46":{},"119":{},"129":{},"155":{},"181":{},"251":{}},"component":{}}],["expos",{"_index":1339,"title":{},"name":{},"text":{"38":{}},"component":{}}],["express",{"_index":2593,"title":{},"name":{},"text":{"267":{}},"component":{}}],["ext",{"_index":1434,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["extens",{"_index":1327,"title":{},"name":{},"text":{"38":{},"41":{},"78":{},"80":{},"209":{}},"component":{}}],["extensions={knativehistory=iot",{"_index":2510,"title":{},"name":{},"text":{"263":{}},"component":{}}],["extern",{"_index":692,"title":{"238":{},"242":{},"22-6":{},"27-2":{},"41-11":{},"41-12":{},"63-6":{},"68-2":{},"80-11":{},"80-12":{},"198-2":{},"209-11":{},"209-12":{}},"name":{},"text":{"14":{},"15":{},"18":{},"22":{},"25":{},"26":{},"27":{},"35":{},"41":{},"55":{},"56":{},"59":{},"63":{},"66":{},"68":{},"75":{},"80":{},"85":{},"86":{},"89":{},"98":{},"99":{},"102":{},"114":{},"115":{},"118":{},"135":{},"136":{},"139":{},"161":{},"162":{},"165":{},"189":{},"190":{},"193":{},"198":{},"205":{},"209":{},"213":{},"220":{},"258":{},"279":{},"287":{}},"component":{}}],["external/endpoint",{"_index":1139,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["externalendpoint",{"_index":1136,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["extract",{"_index":388,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"213":{},"261":{},"269":{},"281":{}},"component":{}}],["f",{"_index":459,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"184":{},"213":{},"216":{},"262":{}},"component":{}}],["f8:56:35:45:1c:3c",{"_index":2006,"title":{},"name":{},"text":{"241":{}},"component":{}}],["face",{"_index":133,"title":{},"name":{},"text":{"2":{},"14":{},"15":{},"29":{},"30":{},"31":{},"41":{},"43":{},"55":{},"56":{},"69":{},"70":{},"71":{},"80":{},"82":{},"85":{},"86":{},"95":{},"98":{},"99":{},"111":{},"114":{},"115":{},"127":{},"135":{},"136":{},"143":{},"144":{},"145":{},"152":{},"161":{},"162":{},"169":{},"170":{},"171":{},"178":{},"189":{},"190":{},"199":{},"200":{},"201":{},"209":{},"291":{},"294":{},"297":{},"300":{}},"component":{}}],["facil",{"_index":1036,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["fact",{"_index":370,"title":{},"name":{},"text":{"8":{},"26":{},"49":{}},"component":{}}],["factor",{"_index":2617,"title":{},"name":{},"text":{"268":{}},"component":{}}],["factori",{"_index":966,"title":{"25":{},"66":{},"25-3":{},"66-3":{}},"name":{"25":{},"66":{}},"text":{"23":{},"25":{},"64":{},"66":{},"245":{}},"component":{}}],["fail",{"_index":337,"title":{"245-6":{}},"name":{},"text":{"6":{},"25":{},"26":{},"29":{},"47":{},"66":{},"69":{},"120":{},"130":{},"143":{},"156":{},"169":{},"182":{},"199":{},"245":{},"276":{}},"component":{}}],["failur",{"_index":975,"title":{"24-5":{},"65-5":{}},"name":{},"text":{"25":{},"66":{}},"component":{}}],["fake",{"_index":3037,"title":{},"name":{},"text":{"287":{}},"component":{}}],["fals",{"_index":1287,"title":{},"name":{},"text":{"35":{},"40":{},"41":{},"75":{},"79":{},"80":{},"205":{},"208":{},"209":{},"216":{},"279":{}},"component":{}}],["famili",{"_index":1846,"title":{},"name":{},"text":{"229":{},"232":{},"237":{}},"component":{}}],["familiar",{"_index":1032,"title":{},"name":{},"text":{"25":{},"66":{},"231":{},"258":{}},"component":{}}],["fanci",{"_index":2700,"title":{},"name":{},"text":{"271":{},"272":{}},"component":{}}],["far",{"_index":2221,"title":{},"name":{},"text":{"259":{}},"component":{}}],["fast",{"_index":1876,"title":{},"name":{},"text":{"230":{}},"component":{}}],["fastifi",{"_index":2937,"title":{},"name":{},"text":{"280":{}},"component":{}}],["fault",{"_index":984,"title":{},"name":{},"text":{"24":{},"65":{},"216":{}},"component":{}}],["favorit",{"_index":1524,"title":{},"name":{},"text":{"213":{},"265":{},"272":{},"281":{}},"component":{}}],["fcnt",{"_index":2814,"title":{},"name":{},"text":{"276":{}},"component":{}}],["fcntdown=0",{"_index":2815,"title":{},"name":{},"text":{"276":{}},"component":{}}],["fdf4dc",{"_index":3144,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["feather",{"_index":1820,"title":{"239":{}},"name":{},"text":{"220":{},"222":{},"239":{}},"component":{}}],["featur",{"_index":401,"title":{},"name":{},"text":{"8":{},"12":{},"15":{},"22":{},"24":{},"25":{},"31":{},"49":{},"53":{},"56":{},"63":{},"65":{},"66":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"184":{},"190":{},"201":{},"216":{},"219":{},"234":{},"236":{},"250":{},"251":{},"253":{},"254":{},"255":{},"266":{},"267":{},"271":{},"281":{},"285":{}},"component":{}}],["feature(type_alias_impl_trait",{"_index":1619,"title":{},"name":{},"text":{"216":{},"218":{},"219":{}},"component":{}}],["features.temperature.valu",{"_index":2658,"title":{},"name":{},"text":{"269":{}},"component":{}}],["fed",{"_index":1054,"title":{},"name":{},"text":{"25":{},"66":{},"259":{}},"component":{}}],["fedora",{"_index":512,"title":{"12-4":{},"53-4":{}},"name":{},"text":{"12":{},"53":{},"272":{}},"component":{}}],["feed",{"_index":2083,"title":{},"name":{},"text":{"245":{},"261":{}},"component":{}}],["feedback",{"_index":777,"title":{},"name":{},"text":{"15":{},"25":{},"26":{},"56":{},"66":{},"256":{}},"component":{}}],["feel",{"_index":1385,"title":{},"name":{},"text":{"40":{},"79":{},"208":{},"267":{},"270":{},"281":{},"283":{},"290":{}},"component":{}}],["fetch",{"_index":1521,"title":{},"name":{},"text":{"212":{},"258":{}},"component":{}}],["few",{"_index":359,"title":{},"name":{},"text":{"8":{},"10":{},"15":{},"18":{},"27":{},"39":{},"40":{},"49":{},"51":{},"56":{},"59":{},"68":{},"79":{},"86":{},"89":{},"93":{},"94":{},"99":{},"102":{},"109":{},"110":{},"115":{},"118":{},"122":{},"123":{},"132":{},"133":{},"136":{},"139":{},"158":{},"159":{},"162":{},"165":{},"184":{},"186":{},"190":{},"193":{},"198":{},"208":{},"213":{},"216":{},"229":{},"245":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"279":{},"282":{},"289":{}},"component":{}}],["field",{"_index":656,"title":{},"name":{},"text":{"13":{},"19":{},"25":{},"27":{},"35":{},"40":{},"41":{},"54":{},"60":{},"66":{},"68":{},"75":{},"78":{},"79":{},"80":{},"84":{},"97":{},"103":{},"113":{},"124":{},"134":{},"140":{},"160":{},"166":{},"188":{},"194":{},"198":{},"205":{},"208":{},"209":{},"213":{},"214":{},"266":{},"267":{},"269":{},"274":{},"280":{},"281":{},"290":{}},"component":{}}],["field_temperatur",{"_index":2657,"title":{},"name":{},"text":{"269":{}},"component":{}}],["fifo",{"_index":1735,"title":{},"name":{},"text":{"218":{}},"component":{}}],["figur",{"_index":2527,"title":{},"name":{},"text":{"265":{},"266":{},"267":{},"269":{},"272":{}},"component":{}}],["file",{"_index":227,"title":{"93-10":{},"109-10":{},"122-10":{},"132-10":{},"158-10":{},"213-3":{}},"name":{},"text":{"4":{},"8":{},"12":{},"45":{},"49":{},"53":{},"122":{},"132":{},"154":{},"158":{},"180":{},"184":{},"211":{},"213":{},"215":{},"220":{},"232":{},"241":{},"245":{},"251":{},"261":{},"262":{},"272":{},"279":{},"280":{},"281":{},"282":{},"285":{},"287":{},"289":{}},"component":{}}],["filet",{"_index":3078,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["fill",{"_index":2567,"title":{},"name":{},"text":{"267":{}},"component":{}}],["filter",{"_index":1295,"title":{"267-6":{}},"name":{},"text":{"36":{},"76":{},"175":{},"206":{},"267":{},"273":{},"281":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["final",{"_index":1072,"title":{},"name":{},"text":{"26":{},"39":{},"41":{},"80":{},"209":{},"214":{},"216":{},"220":{},"232":{},"258":{},"260":{},"261":{},"262":{},"266":{},"269":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["find",{"_index":480,"title":{"280-5":{},"281-5":{}},"name":{},"text":{"9":{},"50":{},"185":{},"236":{},"237":{},"244":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"262":{},"267":{},"269":{},"280":{},"281":{},"283":{},"285":{}},"component":{}}],["fine",{"_index":472,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"258":{},"259":{},"272":{},"282":{},"283":{},"289":{}},"component":{}}],["finger",{"_index":2125,"title":{},"name":{},"text":{"247":{},"248":{},"249":{},"252":{}},"component":{}}],["finish",{"_index":1459,"title":{},"name":{},"text":{"42":{},"81":{},"151":{},"177":{},"210":{},"241":{},"258":{},"259":{},"262":{},"276":{}},"component":{}}],["fire",{"_index":2059,"title":{},"name":{},"text":{"245":{}},"component":{}}],["firmwar",{"_index":838,"title":{"276":{},"285":{},"24-6":{},"65-6":{},"212-2":{},"212-3":{},"213-4":{},"213-5":{},"215-2":{},"215-5":{},"241-9":{},"251-8":{}},"name":{"276":{},"285":{}},"text":{"17":{},"24":{},"58":{},"65":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"211":{},"212":{},"213":{},"214":{},"215":{},"220":{},"225":{},"229":{},"234":{},"235":{},"236":{},"237":{},"241":{},"244":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"257":{},"276":{},"277":{},"279":{},"282":{},"285":{},"286":{},"287":{},"288":{},"289":{},"303":{},"304":{}},"component":{}}],["firmware.bin",{"_index":1504,"title":{},"name":{},"text":{"211":{}},"component":{}}],["firmware.json",{"_index":1505,"title":{},"name":{},"text":{"211":{}},"component":{}}],["firmware:latest",{"_index":1571,"title":{},"name":{},"text":{"215":{}},"component":{}}],["first",{"_index":265,"title":{"245-3":{},"259-5":{},"267-4":{}},"name":{},"text":{"5":{},"24":{},"26":{},"31":{},"40":{},"42":{},"46":{},"65":{},"71":{},"79":{},"81":{},"90":{},"106":{},"119":{},"129":{},"151":{},"155":{},"177":{},"181":{},"201":{},"208":{},"210":{},"216":{},"229":{},"230":{},"241":{},"246":{},"247":{},"248":{},"249":{},"252":{},"255":{},"256":{},"258":{},"259":{},"262":{},"263":{},"266":{},"267":{},"268":{},"272":{},"276":{},"279":{},"283":{},"287":{},"288":{},"290":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["fit",{"_index":670,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"230":{},"231":{}},"component":{}}],["fix",{"_index":1011,"title":{},"name":{},"text":{"24":{},"65":{},"256":{},"260":{}},"component":{}}],["flag",{"_index":1930,"title":{},"name":{},"text":{"234":{},"251":{}},"component":{}}],["flag1",{"_index":1585,"title":{},"name":{},"text":{"215":{}},"component":{}}],["flag2",{"_index":1586,"title":{},"name":{},"text":{"215":{}},"component":{}}],["flaki",{"_index":2044,"title":{},"name":{},"text":{"245":{}},"component":{}}],["flash",{"_index":1789,"title":{"238":{},"242":{},"236-7":{},"237-7":{},"239-6":{},"239-7":{},"239-8":{},"241-6":{},"241-7":{},"241-8":{},"241-9":{},"243-6":{},"243-7":{},"246-6":{},"251-9":{},"276-3":{},"285-3":{}},"name":{},"text":{"220":{},"229":{},"232":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"276":{},"279":{},"282":{},"285":{},"287":{},"289":{}},"component":{}}],["flat",{"_index":2698,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["flavor",{"_index":2826,"title":{},"name":{},"text":{"277":{}},"component":{}}],["fleet",{"_index":986,"title":{},"name":{},"text":{"24":{},"65":{},"214":{}},"component":{}}],["float",{"_index":2660,"title":{},"name":{},"text":{"269":{}},"component":{}}],["flotta",{"_index":941,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["flow",{"_index":179,"title":{},"name":{},"text":{"3":{},"15":{},"26":{},"44":{},"56":{},"83":{},"86":{},"96":{},"99":{},"112":{},"115":{},"128":{},"136":{},"153":{},"162":{},"179":{},"190":{},"244":{},"258":{},"261":{},"290":{}},"component":{}}],["fluent",{"_index":1738,"title":{},"name":{},"text":{"218":{}},"component":{}}],["fn",{"_index":1637,"title":{},"name":{},"text":{"216":{},"218":{},"219":{},"279":{}},"component":{}}],["focu",{"_index":151,"title":{},"name":{},"text":{"2":{},"14":{},"15":{},"43":{},"55":{},"56":{},"82":{},"85":{},"86":{},"95":{},"98":{},"99":{},"111":{},"114":{},"115":{},"127":{},"135":{},"136":{},"152":{},"161":{},"162":{},"178":{},"189":{},"190":{},"216":{},"230":{},"260":{},"263":{},"265":{},"267":{},"268":{},"269":{},"270":{},"273":{},"280":{},"281":{},"282":{},"289":{}},"component":{}}],["focus",{"_index":2170,"title":{},"name":{},"text":{"256":{},"260":{},"262":{},"270":{},"273":{},"277":{},"286":{}},"component":{}}],["folder",{"_index":387,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"213":{},"215":{},"229":{},"262":{}},"component":{}}],["follow",{"_index":204,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"12":{},"17":{},"18":{},"20":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"36":{},"38":{},"40":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"58":{},"59":{},"61":{},"63":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"76":{},"78":{},"79":{},"80":{},"81":{},"88":{},"89":{},"90":{},"92":{},"101":{},"102":{},"104":{},"106":{},"108":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"125":{},"129":{},"130":{},"131":{},"132":{},"138":{},"139":{},"141":{},"143":{},"151":{},"154":{},"155":{},"156":{},"157":{},"158":{},"164":{},"165":{},"167":{},"169":{},"170":{},"175":{},"177":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"192":{},"193":{},"195":{},"198":{},"199":{},"200":{},"201":{},"206":{},"208":{},"209":{},"210":{},"211":{},"214":{},"215":{},"216":{},"218":{},"219":{},"229":{},"236":{},"237":{},"244":{},"245":{},"246":{},"251":{},"254":{},"258":{},"259":{},"261":{},"262":{},"263":{},"264":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"285":{},"287":{},"289":{}},"component":{}}],["foo",{"_index":1077,"title":{},"name":{},"text":{"26":{},"27":{},"41":{},"68":{},"80":{},"198":{},"209":{}},"component":{}}],["foobar",{"_index":1462,"title":{},"name":{},"text":{"42":{},"81":{},"151":{},"177":{},"210":{}},"component":{}}],["footprint",{"_index":1515,"title":{},"name":{},"text":{"212":{}},"component":{}}],["forc",{"_index":589,"title":{},"name":{},"text":{"12":{},"15":{},"53":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["force_reset",{"_index":2102,"title":{},"name":{},"text":{"245":{}},"component":{}}],["foreach",{"_index":610,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["forecast",{"_index":923,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["foreground",{"_index":2063,"title":{},"name":{},"text":{"245":{}},"component":{}}],["forget",{"_index":2585,"title":{},"name":{},"text":{"267":{},"269":{}},"component":{}}],["fork",{"_index":593,"title":{},"name":{},"text":{"12":{},"53":{},"263":{}},"component":{}}],["form",{"_index":202,"title":{},"name":{},"text":{"4":{},"12":{},"38":{},"45":{},"53":{},"78":{},"154":{},"180":{},"233":{},"234":{},"251":{},"267":{},"269":{}},"component":{}}],["format",{"_index":732,"title":{"211":{},"36-6":{},"76-6":{},"175-6":{},"206-6":{}},"name":{"211":{}},"text":{"15":{},"18":{},"22":{},"26":{},"27":{},"29":{},"36":{},"38":{},"40":{},"42":{},"56":{},"59":{},"63":{},"68":{},"69":{},"76":{},"78":{},"79":{},"81":{},"86":{},"89":{},"99":{},"102":{},"115":{},"118":{},"136":{},"139":{},"143":{},"151":{},"162":{},"165":{},"169":{},"175":{},"177":{},"190":{},"193":{},"198":{},"199":{},"206":{},"208":{},"210":{},"212":{},"215":{},"239":{},"241":{},"243":{},"246":{},"261":{},"263":{},"265":{},"269":{},"279":{},"280":{},"281":{},"287":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["format.deserialize(rawmessage.getpayload",{"_index":2271,"title":{},"name":{},"text":{"261":{}},"component":{}}],["forward",{"_index":728,"title":{},"name":{},"text":{"15":{},"16":{},"25":{},"26":{},"41":{},"56":{},"57":{},"66":{},"80":{},"86":{},"87":{},"99":{},"100":{},"115":{},"116":{},"136":{},"137":{},"162":{},"163":{},"190":{},"191":{},"209":{},"261":{},"281":{},"288":{}},"component":{}}],["found",{"_index":1004,"title":{},"name":{},"text":{"24":{},"65":{},"213":{},"216":{},"217":{},"229":{},"241":{},"245":{},"263":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["fqsdj43qlwwypntkhetzbrl8xurgubn8q5n0s8p0544faqjqmnrbcta0b7rbmdbc",{"_index":1159,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["framepayload",{"_index":2943,"title":{},"name":{},"text":{"280":{}},"component":{}}],["framepayload.tostring('utf8",{"_index":2947,"title":{},"name":{},"text":{"280":{}},"component":{}}],["framework",{"_index":53,"title":{},"name":{},"text":{"1":{},"22":{},"63":{},"218":{}},"component":{}}],["franc",{"_index":3084,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["free",{"_index":1721,"title":{},"name":{},"text":{"217":{},"218":{},"266":{},"267":{},"268":{},"269":{},"272":{},"275":{},"281":{},"283":{},"290":{}},"component":{}}],["freedom",{"_index":2600,"title":{},"name":{},"text":{"268":{}},"component":{}}],["frequenc",{"_index":894,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"237":{},"275":{}},"component":{}}],["frequency_plan_id",{"_index":891,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["frequent",{"_index":754,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["fresh",{"_index":2194,"title":{},"name":{},"text":{"258":{},"280":{},"281":{}},"component":{}}],["friendli",{"_index":170,"title":{},"name":{},"text":{"3":{},"44":{},"83":{},"96":{},"112":{},"128":{},"153":{},"179":{}},"component":{}}],["from(ev",{"_index":2880,"title":{},"name":{},"text":{"279":{}},"component":{}}],["frontend",{"_index":516,"title":{"12-17":{},"53-17":{}},"name":{},"text":{"12":{},"14":{},"53":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"259":{},"261":{},"262":{},"281":{}},"component":{}}],["frontend.d578cb0564094cf8979c.eastus.aksapp.io",{"_index":2394,"title":{},"name":{},"text":{"262":{}},"component":{}}],["frontend/dev/endpoints/backend.json",{"_index":618,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["frontend/dev/endpoints/backend.local.json",{"_index":620,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["full",{"_index":582,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"42":{},"53":{},"56":{},"57":{},"81":{},"86":{},"87":{},"99":{},"100":{},"115":{},"116":{},"136":{},"137":{},"151":{},"162":{},"163":{},"177":{},"190":{},"191":{},"210":{},"216":{},"261":{},"265":{},"269":{},"274":{}},"component":{}}],["fulli",{"_index":1732,"title":{},"name":{},"text":{"218":{}},"component":{}}],["fun",{"_index":2563,"title":{},"name":{},"text":{"266":{},"267":{},"272":{}},"component":{}}],["function",{"_index":706,"title":{},"name":{},"text":{"14":{},"15":{},"26":{},"27":{},"31":{},"41":{},"55":{},"56":{},"68":{},"71":{},"80":{},"85":{},"98":{},"114":{},"135":{},"161":{},"171":{},"189":{},"198":{},"201":{},"209":{},"212":{},"216":{},"218":{},"230":{},"231":{},"237":{},"244":{},"259":{},"269":{},"271":{},"280":{}},"component":{}}],["funtion",{"_index":1696,"title":{},"name":{},"text":{"216":{}},"component":{}}],["further",{"_index":910,"title":{},"name":{},"text":{"21":{},"41":{},"62":{},"80":{},"105":{},"126":{},"142":{},"168":{},"196":{},"209":{},"269":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["futur",{"_index":661,"title":{},"name":{},"text":{"13":{},"15":{},"26":{},"38":{},"54":{},"56":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"216":{},"218":{},"219":{},"231":{},"256":{},"269":{},"274":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["g",{"_index":615,"title":{},"name":{},"text":{"12":{},"53":{},"244":{}},"component":{}}],["game",{"_index":1598,"title":{"216-5":{}},"name":{},"text":{"216":{}},"component":{}}],["game::new(board.display",{"_index":1704,"title":{},"name":{},"text":{"216":{}},"component":{}}],["gamemessag",{"_index":1634,"title":{},"name":{},"text":{"216":{}},"component":{}}],["gamemessage::toggl",{"_index":1666,"title":{},"name":{},"text":{"216":{}},"component":{}}],["gap",{"_index":2684,"title":{},"name":{},"text":{"270":{},"273":{},"280":{},"281":{}},"component":{}}],["gat",{"_index":1770,"title":{},"name":{},"text":{"219":{}},"component":{}}],["gateway",{"_index":95,"title":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"31-1":{},"42-19":{},"71-1":{},"81-19":{},"151-11":{},"171-6":{},"177-19":{},"201-1":{},"210-19":{}},"name":{},"text":{"1":{},"15":{},"16":{},"17":{},"21":{},"22":{},"26":{},"31":{},"38":{},"42":{},"56":{},"57":{},"58":{},"62":{},"63":{},"71":{},"78":{},"81":{},"86":{},"87":{},"88":{},"99":{},"100":{},"101":{},"105":{},"115":{},"116":{},"117":{},"126":{},"136":{},"137":{},"138":{},"142":{},"151":{},"162":{},"163":{},"164":{},"168":{},"177":{},"190":{},"191":{},"192":{},"196":{},"201":{},"210":{},"214":{},"277":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["gateway01",{"_index":1260,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["gatewayselector",{"_index":1258,"title":{"293-14":{},"296-14":{},"299-14":{},"302-14":{}},"name":{},"text":{"31":{},"42":{},"71":{},"81":{},"177":{},"201":{},"210":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["gather",{"_index":976,"title":{"274-4":{},"278-3":{}},"name":{},"text":{"24":{},"65":{},"279":{}},"component":{}}],["gatt",{"_index":2005,"title":{},"name":{},"text":{"241":{}},"component":{}}],["gb",{"_index":2674,"title":{},"name":{},"text":{"269":{}},"component":{}}],["gcc",{"_index":561,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["gener",{"_index":155,"title":{"278":{},"273-1":{}},"name":{},"text":{"2":{},"8":{},"10":{},"14":{},"15":{},"18":{},"31":{},"38":{},"43":{},"49":{},"51":{},"55":{},"56":{},"59":{},"71":{},"78":{},"82":{},"85":{},"86":{},"89":{},"93":{},"94":{},"95":{},"98":{},"99":{},"102":{},"109":{},"110":{},"111":{},"114":{},"115":{},"118":{},"122":{},"123":{},"127":{},"132":{},"133":{},"135":{},"136":{},"139":{},"152":{},"158":{},"159":{},"161":{},"162":{},"165":{},"171":{},"178":{},"184":{},"186":{},"189":{},"190":{},"193":{},"201":{},"213":{},"215":{},"218":{},"219":{},"231":{},"237":{},"241":{},"258":{},"261":{},"262":{},"267":{},"270":{},"273":{},"275":{},"278":{},"279":{},"281":{},"283":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["generated/set",{"_index":1540,"title":{},"name":{},"text":{"213":{}},"component":{}}],["geoloc",{"_index":2523,"title":{},"name":{},"text":{"264":{}},"component":{}}],["germani",{"_index":3085,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["get",{"_index":1441,"title":{"229":{},"258":{},"229-1":{},"259-4":{},"263-1":{}},"name":{},"text":{"41":{},"42":{},"78":{},"80":{},"81":{},"151":{},"177":{},"209":{},"210":{},"245":{},"256":{},"269":{},"280":{},"281":{},"283":{},"287":{},"288":{}},"component":{}}],["getinst",{"_index":2269,"title":{},"name":{},"text":{"261":{}},"component":{}}],["getlastev",{"_index":2309,"title":{},"name":{},"text":{"261":{}},"component":{}}],["getpayload(ev",{"_index":2951,"title":{},"name":{},"text":{"280":{}},"component":{}}],["getting/read",{"_index":707,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{}},"component":{}}],["getting_start",{"_index":1841,"title":{},"name":{"229":{}},"text":{},"component":{}}],["ghcr.io/drogu",{"_index":2353,"title":{},"name":{},"text":{"262":{},"269":{}},"component":{}}],["git",{"_index":324,"title":{"276-1":{},"285-1":{},"290-1":{}},"name":{},"text":{"6":{},"12":{},"47":{},"53":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"213":{},"215":{},"229":{},"259":{},"261":{},"263":{},"276":{},"277":{},"280":{},"281":{},"285":{},"286":{},"290":{}},"component":{}}],["github",{"_index":379,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"213":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"228":{},"229":{},"258":{},"262":{},"263":{},"268":{},"274":{},"286":{}},"component":{}}],["give",{"_index":473,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"216":{},"218":{},"262":{},"263":{},"267":{},"268":{},"274":{},"276":{},"280":{},"281":{}},"component":{}}],["given",{"_index":1342,"title":{},"name":{},"text":{"39":{},"214":{},"215":{},"216":{},"218":{},"251":{}},"component":{}}],["global",{"_index":508,"title":{},"name":{},"text":{"11":{},"25":{},"52":{},"66":{},"187":{},"218":{},"261":{}},"component":{}}],["global.domain=.$(minikub",{"_index":3010,"title":{},"name":{},"text":{"283":{}},"component":{}}],["gnd",{"_index":2025,"title":{},"name":{},"text":{"244":{}},"component":{}}],["gnu",{"_index":527,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["go",{"_index":465,"title":{"245-10":{}},"name":{},"text":{"8":{},"26":{},"31":{},"39":{},"49":{},"71":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"201":{},"216":{},"229":{},"231":{},"251":{},"259":{},"261":{},"263":{},"266":{},"268":{},"269":{},"272":{},"277":{},"280":{},"281":{},"282":{},"285":{},"288":{},"289":{}},"component":{}}],["goal",{"_index":662,"title":{},"name":{},"text":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{}},"component":{}}],["goe",{"_index":1047,"title":{},"name":{},"text":{"25":{},"66":{},"245":{}},"component":{}}],["gone",{"_index":1716,"title":{},"name":{},"text":{"216":{}},"component":{}}],["good",{"_index":669,"title":{},"name":{},"text":{"14":{},"15":{},"22":{},"55":{},"56":{},"63":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{},"214":{},"216":{},"231":{},"262":{},"266":{},"277":{}},"component":{}}],["goroutin",{"_index":1890,"title":{},"name":{},"text":{"231":{}},"component":{}}],["gpio13",{"_index":2015,"title":{},"name":{},"text":{"244":{}},"component":{}}],["gpio15",{"_index":2013,"title":{},"name":{},"text":{"244":{}},"component":{}}],["grab",{"_index":2682,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["gracefulli",{"_index":1095,"title":{},"name":{},"text":{"26":{}},"component":{}}],["grafana",{"_index":477,"title":{"267":{},"283":{},"13-1":{},"54-1":{},"84-1":{},"97-1":{},"113-1":{},"134-1":{},"160-1":{},"188-1":{}},"name":{"267":{},"283":{}},"text":{"9":{},"13":{},"14":{},"50":{},"54":{},"55":{},"84":{},"85":{},"97":{},"98":{},"113":{},"114":{},"134":{},"135":{},"160":{},"161":{},"185":{},"188":{},"189":{},"265":{},"267":{},"268":{},"270":{},"271":{},"273":{},"283":{},"286":{},"288":{}},"component":{}}],["grafana.192.168.64.86.nip.io",{"_index":3015,"title":{},"name":{},"text":{"283":{}},"component":{}}],["grant",{"_index":701,"title":{},"name":{},"text":{"14":{},"15":{},"42":{},"55":{},"56":{},"81":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"177":{},"189":{},"190":{},"210":{},"272":{},"273":{},"274":{}},"component":{}}],["graph",{"_index":2438,"title":{},"name":{},"text":{"263":{},"286":{},"290":{}},"component":{}}],["graphic",{"_index":1474,"title":{},"name":{},"text":{"83":{},"96":{},"112":{}},"component":{}}],["great",{"_index":677,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"229":{},"230":{},"231":{},"270":{},"273":{},"281":{},"283":{},"287":{}},"component":{}}],["green",{"_index":1950,"title":{},"name":{},"text":{"236":{},"249":{},"252":{},"254":{},"255":{},"280":{},"281":{}},"component":{}}],["green_l",{"_index":2868,"title":{},"name":{},"text":{"279":{}},"component":{}}],["ground",{"_index":2026,"title":{},"name":{},"text":{"244":{}},"component":{}}],["group",{"_index":743,"title":{"37-3":{},"77-2":{},"207-2":{}},"name":{},"text":{"15":{},"36":{},"37":{},"56":{},"76":{},"77":{},"86":{},"99":{},"115":{},"136":{},"162":{},"175":{},"190":{},"206":{},"207":{},"220":{},"232":{},"262":{},"270":{},"273":{}},"component":{}}],["group/app/mi",{"_index":1299,"title":{},"name":{},"text":{"36":{},"76":{}},"component":{}}],["group/mi",{"_index":1499,"title":{},"name":{},"text":{"175":{},"206":{}},"component":{}}],["group_id",{"_index":1314,"title":{},"name":{},"text":{"37":{},"77":{},"207":{}},"component":{}}],["grouped_temp",{"_index":2724,"title":{},"name":{},"text":{"273":{}},"component":{}}],["grow",{"_index":845,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["guarante",{"_index":748,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["guess",{"_index":1898,"title":{},"name":{},"text":{"231":{}},"component":{}}],["guid",{"_index":518,"title":{"12":{},"32":{},"53":{},"72":{},"146":{},"172":{},"202":{},"213":{},"215":{}},"name":{},"text":{"12":{},"32":{},"42":{},"53":{},"72":{},"81":{},"146":{},"151":{},"172":{},"177":{},"202":{},"210":{},"213":{},"215":{},"235":{},"236":{},"237":{},"254":{},"255":{},"274":{}},"component":{}}],["h",{"_index":1591,"title":{},"name":{},"text":{"215":{},"266":{},"280":{},"281":{}},"component":{}}],["h743",{"_index":1808,"title":{},"name":{},"text":{"220":{},"221":{},"224":{}},"component":{}}],["h743zi",{"_index":2123,"title":{"247-1":{},"248-1":{},"249-1":{}},"name":{},"text":{"247":{},"248":{},"249":{}},"component":{}}],["hae",{"_index":1355,"title":{},"name":{},"text":{"39":{}},"component":{}}],["hah",{"_index":220,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["hal",{"_index":1767,"title":{},"name":{},"text":{"219":{}},"component":{}}],["hand",{"_index":945,"title":{},"name":{},"text":{"22":{},"41":{},"63":{},"80":{},"209":{},"216":{},"256":{},"259":{},"260":{},"269":{}},"component":{}}],["handi",{"_index":536,"title":{},"name":{},"text":{"12":{},"41":{},"53":{},"80":{},"209":{},"261":{}},"component":{}}],["handl",{"_index":110,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"24":{},"55":{},"56":{},"65":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{},"216":{},"218":{},"231":{},"261":{},"268":{},"276":{},"279":{},"280":{},"287":{},"288":{}},"component":{}}],["handshak",{"_index":1237,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["happen",{"_index":791,"title":{"259-6":{}},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"245":{},"276":{},"279":{}},"component":{}}],["happi",{"_index":2088,"title":{},"name":{},"text":{"245":{}},"component":{}}],["hard",{"_index":2401,"title":{},"name":{},"text":{"262":{},"269":{}},"component":{}}],["hardwar",{"_index":1801,"title":{"234-3":{},"235-3":{},"236-3":{},"237-3":{},"239-2":{},"241-2":{},"243-2":{},"244-3":{},"246-3":{},"247-3":{},"248-3":{},"249-3":{},"251-3":{},"252-3":{},"254-3":{},"255-3":{}},"name":{},"text":{"220":{},"230":{},"276":{},"277":{},"285":{},"286":{}},"component":{}}],["hash",{"_index":1402,"title":{"42-22":{},"42-23":{},"81-22":{},"81-23":{},"177-22":{},"177-23":{},"210-22":{},"210-23":{}},"name":{},"text":{"41":{},"42":{},"80":{},"81":{},"177":{},"209":{},"210":{},"266":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["hat",{"_index":2363,"title":{},"name":{},"text":{"262":{}},"component":{}}],["have",{"_index":93,"title":{},"name":{},"text":{"1":{},"12":{},"23":{},"26":{},"53":{},"64":{},"216":{},"220":{},"230":{},"232":{},"265":{},"283":{}},"component":{}}],["hawkbit",{"_index":1010,"title":{"215-4":{}},"name":{},"text":{"24":{},"65":{},"212":{},"213":{},"215":{}},"component":{}}],["he8y4iws6wy7bckjcwdcrqjmehg76fso3txe+fiyruq9ruwhif1myv4q6w+cybfc",{"_index":1173,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["head",{"_index":2835,"title":{},"name":{},"text":{"278":{}},"component":{}}],["header",{"_index":1122,"title":{"27-5":{},"68-5":{},"198-5":{},"292-84":{},"295-84":{},"298-83":{},"301-84":{}},"name":{},"text":{"27":{},"29":{},"31":{},"37":{},"41":{},"68":{},"69":{},"71":{},"77":{},"80":{},"143":{},"169":{},"198":{},"199":{},"201":{},"207":{},"209":{}},"component":{}}],["health",{"_index":2983,"title":{},"name":{},"text":{"281":{}},"component":{}}],["heater",{"_index":3040,"title":{},"name":{},"text":{"287":{}},"component":{}}],["heavi",{"_index":1888,"title":{},"name":{},"text":{"231":{}},"component":{}}],["helm",{"_index":357,"title":{"11-1":{},"12-15":{},"52-1":{},"53-15":{},"187-1":{},"259-1":{},"260-4":{}},"name":{},"text":{"8":{},"9":{},"10":{},"11":{},"12":{},"49":{},"50":{},"51":{},"52":{},"53":{},"122":{},"123":{},"132":{},"133":{},"158":{},"159":{},"184":{},"185":{},"186":{},"187":{},"259":{},"260":{},"283":{}},"component":{}}],["help",{"_index":39,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"12":{},"15":{},"23":{},"41":{},"45":{},"46":{},"53":{},"56":{},"64":{},"80":{},"90":{},"106":{},"119":{},"129":{},"154":{},"155":{},"180":{},"181":{},"209":{},"216":{},"245":{},"268":{},"272":{},"282":{},"289":{}},"component":{}}],["here",{"_index":224,"title":{},"name":{},"text":{"4":{},"12":{},"15":{},"29":{},"37":{},"38":{},"39":{},"45":{},"53":{},"56":{},"69":{},"78":{},"86":{},"99":{},"115":{},"136":{},"143":{},"154":{},"162":{},"169":{},"180":{},"190":{},"199":{},"214":{},"216":{},"229":{},"231":{},"239":{},"241":{},"243":{},"261":{},"264":{},"269":{},"270":{},"272":{},"273":{},"279":{},"280":{},"281":{},"282":{},"287":{},"289":{}},"component":{}}],["here[1",{"_index":2905,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["heurist",{"_index":1561,"title":{},"name":{},"text":{"214":{}},"component":{}}],["hex",{"_index":1983,"title":{},"name":{},"text":{"239":{},"241":{},"243":{},"275":{}},"component":{}}],["high",{"_index":2606,"title":{},"name":{},"text":{"268":{},"287":{}},"component":{}}],["higher",{"_index":139,"title":{},"name":{},"text":{"2":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{},"231":{}},"component":{}}],["highli",{"_index":2675,"title":{},"name":{},"text":{"269":{}},"component":{}}],["highlight",{"_index":964,"title":{},"name":{},"text":{"23":{},"64":{}},"component":{}}],["hint",{"_index":2596,"title":{},"name":{},"text":{"267":{}},"component":{}}],["hold",{"_index":1048,"title":{},"name":{},"text":{"25":{},"66":{},"216":{},"246":{},"272":{}},"component":{}}],["home",{"_index":1000,"title":{},"name":{},"text":{"24":{},"65":{},"220":{},"232":{},"279":{},"280":{},"281":{}},"component":{}}],["home/.drogue/config.toml",{"_index":1793,"title":{},"name":{},"text":{"220":{},"232":{},"276":{}},"component":{}}],["home/myexampl",{"_index":1871,"title":{},"name":{},"text":{"229":{}},"component":{}}],["home/pi/.config/meshcfg/config_db.json",{"_index":2068,"title":{},"name":{},"text":{"245":{}},"component":{}}],["homepag",{"_index":66,"title":{},"name":{},"text":{"1":{},"282":{},"289":{}},"component":{}}],["hono",{"_index":853,"title":{},"name":{},"text":{"18":{},"59":{},"89":{},"102":{},"118":{},"139":{},"165":{},"193":{}},"component":{}}],["hood",{"_index":2519,"title":{},"name":{},"text":{"263":{}},"component":{}}],["hook",{"_index":733,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"270":{}},"component":{}}],["hop",{"_index":1110,"title":{},"name":{},"text":{"26":{}},"component":{}}],["hope",{"_index":2637,"title":{},"name":{},"text":{"268":{}},"component":{}}],["hopefulli",{"_index":2095,"title":{},"name":{},"text":{"245":{}},"component":{}}],["host",{"_index":514,"title":{"12-9":{},"53-9":{}},"name":{},"text":{"12":{},"17":{},"41":{},"53":{},"58":{},"80":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"209":{},"234":{},"251":{},"256":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"267":{},"268":{},"269":{},"271":{},"276":{},"282":{},"283":{},"285":{},"289":{}},"component":{}}],["host/port",{"_index":2356,"title":{},"name":{},"text":{"262":{}},"component":{}}],["host:1234",{"_index":2569,"title":{},"name":{},"text":{"267":{}},"component":{}}],["hostnam",{"_index":1232,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{},"213":{},"251":{},"262":{},"267":{},"269":{},"280":{},"281":{},"285":{}},"component":{}}],["hot",{"_index":2339,"title":{},"name":{},"text":{"261":{}},"component":{}}],["hour",{"_index":1134,"title":{},"name":{},"text":{"27":{},"68":{},"198":{},"272":{}},"component":{}}],["html",{"_index":2333,"title":{},"name":{},"text":{"261":{}},"component":{}}],["http",{"_index":143,"title":{"30":{},"33":{},"70":{},"73":{},"144":{},"147":{},"170":{},"173":{},"200":{},"203":{},"18-8":{},"27-3":{},"27-5":{},"30-1":{},"59-8":{},"68-3":{},"68-5":{},"70-1":{},"89-4":{},"102-4":{},"118-4":{},"139-8":{},"144-1":{},"165-8":{},"170-1":{},"193-8":{},"198-3":{},"198-5":{},"200-1":{}},"name":{"30":{},"70":{},"144":{},"170":{},"200":{}},"text":{"2":{},"8":{},"10":{},"14":{},"15":{},"18":{},"27":{},"29":{},"30":{},"33":{},"37":{},"40":{},"41":{},"42":{},"43":{},"49":{},"51":{},"55":{},"56":{},"59":{},"68":{},"69":{},"70":{},"73":{},"77":{},"79":{},"80":{},"81":{},"82":{},"85":{},"86":{},"89":{},"93":{},"94":{},"95":{},"98":{},"99":{},"102":{},"109":{},"110":{},"111":{},"114":{},"115":{},"118":{},"122":{},"123":{},"127":{},"132":{},"133":{},"135":{},"136":{},"139":{},"143":{},"144":{},"147":{},"152":{},"158":{},"159":{},"161":{},"162":{},"165":{},"169":{},"170":{},"173":{},"177":{},"178":{},"184":{},"186":{},"189":{},"190":{},"193":{},"198":{},"199":{},"200":{},"203":{},"207":{},"208":{},"209":{},"210":{},"212":{},"220":{},"232":{},"233":{},"234":{},"249":{},"251":{},"258":{},"262":{},"263":{},"266":{},"267":{},"269":{},"280":{},"281":{},"282":{},"285":{},"286":{},"289":{}},"component":{}}],["http.sandbox.drogue.cloud",{"_index":2136,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["http://0.0.0.0:8080",{"_index":2929,"title":{},"name":{},"text":{"280":{}},"component":{}}],["http://localhost:10001",{"_index":256,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["http://localhost:8080",{"_index":211,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{},"263":{},"281":{},"290":{}},"component":{}}],["http://web",{"_index":2396,"title":{},"name":{},"text":{"262":{}},"component":{}}],["httpie",{"_index":496,"title":{},"name":{},"text":{"10":{},"12":{},"51":{},"53":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{},"280":{},"281":{}},"component":{}}],["https://api",{"_index":633,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["https://api.sandbox.drogue.cloud",{"_index":2192,"title":{},"name":{},"text":{"258":{},"284":{}},"component":{}}],["https://build",{"_index":1592,"title":{},"name":{},"text":{"215":{}},"component":{}}],["https://code.visualstudio.com/docs/cpp/config",{"_index":570,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["https://console.cloud.thethings.network",{"_index":2746,"title":{},"name":{},"text":{"274":{}},"component":{}}],["https://developers.redhat.com/develop",{"_index":2628,"title":{},"name":{},"text":{"268":{}},"component":{}}],["https://docs.microsoft.com/en",{"_index":2368,"title":{},"name":{},"text":{"262":{}},"component":{}}],["https://docs.rs/humantime/latest/humantime/fn.parse_duration.html",{"_index":1135,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["https://drogu",{"_index":3008,"title":{},"name":{},"text":{"283":{},"290":{}},"component":{}}],["https://github.com/drogu",{"_index":381,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"229":{},"258":{},"261":{},"263":{},"269":{},"276":{},"280":{},"281":{},"285":{},"290":{}},"component":{}}],["https://github.com/myorg/exampl",{"_index":1581,"title":{},"name":{},"text":{"215":{}},"component":{}}],["https://grafana.com/auth/sign",{"_index":2634,"title":{},"name":{},"text":{"268":{}},"component":{}}],["https://grafana_ingress_host",{"_index":3019,"title":{},"name":{},"text":{"283":{}},"component":{}}],["https://http",{"_index":1246,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["https://http.sandbox.drogue.cloud/v1/st",{"_index":2550,"title":{},"name":{},"text":{"266":{}},"component":{}}],["https://kind.sigs.k8s.io/docs/user/quick",{"_index":502,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["https://kubernetes.io/docs/concepts/overview/work",{"_index":3149,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["https://kubernetes.io/docs/tasks/tools/instal",{"_index":498,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["https://metrics.192.168.64.131.nip.io",{"_index":484,"title":{},"name":{},"text":{"9":{},"50":{},"185":{}},"component":{}}],["https://mi",{"_index":1138,"title":{},"name":{},"text":{"27":{},"35":{},"68":{},"75":{},"198":{},"205":{}},"component":{}}],["https://minikube.sigs.k8s.io/docs/start",{"_index":501,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["https://pusher.your",{"_index":2539,"title":{},"name":{},"text":{"266":{}},"component":{}}],["https://quarku",{"_index":2362,"title":{},"name":{},"text":{"262":{},"264":{}},"component":{}}],["https://raw.githubusercontent.com/drogu",{"_index":1925,"title":{},"name":{},"text":{"234":{},"251":{},"259":{}},"component":{}}],["https://redhat",{"_index":2224,"title":{},"name":{},"text":{"259":{}},"component":{}}],["https://sandbox.drogue.cloud",{"_index":2191,"title":{},"name":{},"text":{"258":{},"268":{}},"component":{}}],["https://sh.rustup.r",{"_index":3003,"title":{},"name":{},"text":{"282":{},"289":{}},"component":{}}],["https://sso",{"_index":639,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["https://www.eclipse.org/packages/packages/telemetri",{"_index":2181,"title":{},"name":{},"text":{"257":{}},"component":{}}],["https://www.ibm.com/cloud/fre",{"_index":2631,"title":{},"name":{},"text":{"268":{}},"component":{}}],["https://www.okd.io",{"_index":505,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["https://www.openshift.com",{"_index":504,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["https://www.thethingsindustries.com/docs/reference/frequ",{"_index":896,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["https://www.timescale.com/timescal",{"_index":2632,"title":{},"name":{},"text":{"268":{}},"component":{}}],["httpserver",{"_index":2936,"title":{},"name":{},"text":{"280":{}},"component":{}}],["human",{"_index":992,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["humantim",{"_index":1123,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["humid",{"_index":3035,"title":{},"name":{},"text":{"286":{}},"component":{}}],["hypert",{"_index":2719,"title":{},"name":{},"text":{"272":{},"273":{}},"component":{}}],["i.",{"_index":1697,"title":{},"name":{},"text":{"216":{},"232":{},"285":{}},"component":{}}],["i/o",{"_index":1887,"title":{},"name":{},"text":{"231":{}},"component":{}}],["ibm",{"_index":2630,"title":{"269-3":{}},"name":{},"text":{"268":{},"269":{}},"component":{}}],["id",{"_index":125,"title":{"12-10":{},"37-3":{},"53-10":{},"77-2":{},"207-2":{},"259-3":{}},"name":{},"text":{"2":{},"12":{},"14":{},"15":{},"19":{},"20":{},"26":{},"29":{},"31":{},"37":{},"38":{},"40":{},"42":{},"43":{},"53":{},"55":{},"56":{},"60":{},"61":{},"69":{},"71":{},"77":{},"78":{},"79":{},"81":{},"82":{},"85":{},"86":{},"95":{},"98":{},"99":{},"103":{},"104":{},"111":{},"114":{},"115":{},"124":{},"125":{},"127":{},"135":{},"136":{},"140":{},"141":{},"143":{},"152":{},"161":{},"162":{},"166":{},"167":{},"169":{},"177":{},"178":{},"189":{},"190":{},"194":{},"195":{},"199":{},"201":{},"207":{},"208":{},"210":{},"213":{},"214":{},"259":{},"260":{},"263":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["ide/editor",{"_index":2402,"title":{"263-2":{}},"name":{},"text":{},"component":{}}],["idea",{"_index":1091,"title":{"279-5":{},"287-5":{}},"name":{},"text":{"26":{},"218":{},"261":{},"262":{},"266":{},"267":{},"277":{},"279":{},"280":{},"281":{},"287":{}},"component":{}}],["ideal",{"_index":720,"title":{},"name":{},"text":{"15":{},"31":{},"56":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"201":{},"269":{},"277":{}},"component":{}}],["ident",{"_index":1062,"title":{"26-7":{}},"name":{},"text":{"26":{},"258":{},"280":{},"281":{}},"component":{}}],["identifi",{"_index":126,"title":{},"name":{},"text":{"2":{},"13":{},"26":{},"36":{},"38":{},"42":{},"43":{},"54":{},"76":{},"78":{},"81":{},"82":{},"84":{},"95":{},"97":{},"111":{},"113":{},"127":{},"134":{},"152":{},"160":{},"175":{},"177":{},"178":{},"188":{},"206":{},"210":{},"214":{},"241":{},"275":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["idl",{"_index":2641,"title":{},"name":{},"text":{"269":{}},"component":{}}],["ignor",{"_index":1449,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["imag",{"_index":233,"title":{"211":{},"6-2":{},"6-3":{},"12-11":{},"47-2":{},"47-3":{},"53-11":{},"91-2":{},"91-3":{},"107-2":{},"107-3":{},"120-2":{},"120-3":{},"130-2":{},"130-3":{},"156-2":{},"156-3":{},"182-2":{},"182-3":{},"262-2":{}},"name":{"211":{}},"text":{"4":{},"6":{},"12":{},"45":{},"47":{},"53":{},"91":{},"107":{},"120":{},"130":{},"154":{},"156":{},"180":{},"182":{},"211":{},"212":{},"213":{},"215":{},"259":{},"262":{},"269":{}},"component":{}}],["image:latest",{"_index":1579,"title":{},"name":{},"text":{"215":{}},"component":{}}],["imagepullbackoff",{"_index":2230,"title":{},"name":{},"text":{"259":{}},"component":{}}],["imagepullpolici",{"_index":2355,"title":{},"name":{},"text":{"262":{}},"component":{}}],["imagin",{"_index":1400,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["immedi",{"_index":2603,"title":{},"name":{},"text":{"268":{}},"component":{}}],["impact",{"_index":1023,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["impl",{"_index":1635,"title":{},"name":{},"text":{"216":{},"218":{},"219":{}},"component":{}}],["implement",{"_index":134,"title":{},"name":{},"text":{"2":{},"14":{},"15":{},"26":{},"30":{},"38":{},"43":{},"55":{},"56":{},"70":{},"78":{},"82":{},"85":{},"86":{},"95":{},"98":{},"99":{},"111":{},"114":{},"115":{},"127":{},"135":{},"136":{},"152":{},"161":{},"162":{},"170":{},"178":{},"189":{},"190":{},"200":{},"216":{},"218":{},"219":{},"231":{},"277":{},"280":{},"281":{},"288":{}},"component":{}}],["implementor",{"_index":1778,"title":{},"name":{},"text":{"219":{}},"component":{}}],["impli",{"_index":316,"title":{},"name":{},"text":{"6":{},"15":{},"19":{},"47":{},"56":{},"60":{},"86":{},"91":{},"99":{},"103":{},"107":{},"115":{},"120":{},"124":{},"130":{},"136":{},"140":{},"156":{},"162":{},"166":{},"182":{},"190":{},"194":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["implicitli",{"_index":1364,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["import",{"_index":48,"title":{"274-4":{},"278-3":{}},"name":{},"text":{"1":{},"15":{},"16":{},"26":{},"31":{},"56":{},"57":{},"71":{},"87":{},"100":{},"116":{},"137":{},"163":{},"171":{},"191":{},"201":{},"230":{},"259":{},"261":{},"267":{},"269":{},"272":{},"275":{},"279":{}},"component":{}}],["impos",{"_index":1273,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["improv",{"_index":1060,"title":{"270-5":{},"273-5":{}},"name":{},"text":{"25":{},"66":{},"280":{},"281":{},"288":{}},"component":{}}],["inbound",{"_index":2287,"title":{},"name":{},"text":{"261":{}},"component":{}}],["inbox",{"_index":1648,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["inbox.next",{"_index":1673,"title":{},"name":{},"text":{"216":{}},"component":{}}],["inbox.next().await",{"_index":1756,"title":{},"name":{},"text":{"218":{}},"component":{}}],["includ",{"_index":391,"title":{},"name":{},"text":{"8":{},"10":{},"12":{},"21":{},"36":{},"39":{},"49":{},"51":{},"53":{},"62":{},"76":{},"93":{},"94":{},"105":{},"109":{},"110":{},"122":{},"123":{},"126":{},"132":{},"133":{},"142":{},"158":{},"159":{},"168":{},"175":{},"184":{},"186":{},"196":{},"206":{},"245":{},"256":{},"263":{},"267":{},"268":{},"272":{}},"component":{}}],["incom",{"_index":737,"title":{"26-10":{},"38-1":{},"78-1":{}},"name":{},"text":{"15":{},"24":{},"26":{},"29":{},"38":{},"41":{},"56":{},"65":{},"69":{},"78":{},"80":{},"86":{},"99":{},"115":{},"136":{},"143":{},"162":{},"169":{},"190":{},"199":{},"209":{},"216":{},"261":{},"263":{},"280":{},"281":{}},"component":{}}],["incoming(\"ev",{"_index":2987,"title":{},"name":{},"text":{"281":{}},"component":{}}],["incoming(channels.drogue_inbound",{"_index":2259,"title":{},"name":{},"text":{"261":{}},"component":{}}],["incoming(channels.telemetri",{"_index":2305,"title":{},"name":{},"text":{"261":{}},"component":{}}],["incomplet",{"_index":3029,"title":{},"name":{},"text":{"285":{}},"component":{}}],["incorrect",{"_index":794,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["increas",{"_index":1904,"title":{},"name":{},"text":{"231":{}},"component":{}}],["increment",{"_index":1753,"title":{},"name":{},"text":{"218":{}},"component":{}}],["increment(&'m",{"_index":1772,"title":{},"name":{},"text":{"219":{}},"component":{}}],["incrementfutur",{"_index":1771,"title":{},"name":{},"text":{"219":{}},"component":{}}],["inde",{"_index":2214,"title":{},"name":{},"text":{"258":{},"262":{},"265":{},"266":{},"271":{}},"component":{}}],["independ",{"_index":1022,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["index",{"_index":5,"title":{},"name":{"1":{},"3":{},"7":{},"12":{},"17":{},"21":{},"23":{},"32":{},"44":{},"48":{},"53":{},"58":{},"62":{},"64":{},"72":{},"83":{},"88":{},"92":{},"96":{},"101":{},"105":{},"108":{},"112":{},"117":{},"121":{},"126":{},"128":{},"131":{},"138":{},"142":{},"146":{},"153":{},"157":{},"164":{},"168":{},"172":{},"179":{},"183":{},"192":{},"196":{},"202":{},"212":{},"230":{},"256":{},"258":{},"260":{},"268":{},"277":{},"286":{},"291":{},"294":{},"297":{},"300":{},"303":{}},"text":{},"component":{}}],["index.html",{"_index":2934,"title":{},"name":{},"text":{"280":{}},"component":{}}],["index.j",{"_index":2928,"title":{},"name":{},"text":{"280":{}},"component":{}}],["indic",{"_index":1103,"title":{},"name":{},"text":{"26":{},"31":{},"38":{},"40":{},"71":{},"78":{},"79":{},"201":{},"208":{},"214":{},"263":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["indirectli",{"_index":961,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["individu",{"_index":1610,"title":{},"name":{},"text":{"216":{},"247":{}},"component":{}}],["indoor",{"_index":2832,"title":{},"name":{},"text":{"277":{}},"component":{}}],["industri",{"_index":2827,"title":{},"name":{},"text":{"277":{}},"component":{}}],["inequ",{"_index":3074,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["inf/resources/index.html",{"_index":2337,"title":{},"name":{},"text":{"261":{}},"component":{}}],["infer",{"_index":1059,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["influenc",{"_index":1429,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["influxdb",{"_index":1475,"title":{"84-1":{},"97-1":{},"113-1":{}},"name":{},"text":{"84":{},"97":{},"113":{}},"component":{}}],["info",{"_index":2407,"title":{},"name":{},"text":{"263":{},"276":{},"281":{},"285":{}},"component":{}}],["inform",{"_index":356,"title":{"8-12":{},"49-12":{},"93-12":{},"109-12":{},"122-12":{},"132-12":{},"158-12":{},"184-12":{},"274-4":{},"278-3":{},"292-89":{},"295-89":{},"298-88":{},"301-89":{}},"name":{},"text":{"8":{},"14":{},"15":{},"17":{},"19":{},"20":{},"22":{},"26":{},"29":{},"30":{},"31":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"49":{},"55":{},"56":{},"58":{},"60":{},"61":{},"63":{},"69":{},"70":{},"71":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"85":{},"86":{},"88":{},"93":{},"98":{},"99":{},"101":{},"103":{},"104":{},"109":{},"114":{},"115":{},"117":{},"122":{},"124":{},"125":{},"132":{},"135":{},"136":{},"138":{},"140":{},"141":{},"143":{},"151":{},"158":{},"161":{},"162":{},"164":{},"166":{},"167":{},"169":{},"170":{},"175":{},"177":{},"184":{},"189":{},"190":{},"192":{},"194":{},"195":{},"199":{},"200":{},"201":{},"206":{},"207":{},"208":{},"209":{},"210":{},"214":{},"258":{},"259":{},"261":{},"262":{},"263":{},"264":{},"266":{},"267":{},"268":{},"269":{},"272":{},"274":{},"276":{},"278":{},"285":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["infrastructur",{"_index":660,"title":{},"name":{},"text":{"13":{},"16":{},"25":{},"38":{},"54":{},"57":{},"66":{},"78":{},"84":{},"87":{},"97":{},"100":{},"113":{},"116":{},"134":{},"137":{},"160":{},"163":{},"188":{},"191":{},"269":{},"277":{}},"component":{}}],["ingest",{"_index":931,"title":{},"name":{},"text":{"22":{},"25":{},"63":{},"66":{},"271":{}},"component":{}}],["ingress",{"_index":273,"title":{"262-9":{}},"name":{},"text":{"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"213":{},"262":{},"283":{}},"component":{}}],["init",{"_index":608,"title":{},"name":{},"text":{"12":{},"39":{},"53":{}},"component":{}}],["init_l",{"_index":2870,"title":{},"name":{},"text":{"279":{}},"component":{}}],["initi",{"_index":606,"title":{},"name":{},"text":{"12":{},"15":{},"26":{},"39":{},"42":{},"53":{},"56":{},"81":{},"86":{},"99":{},"115":{},"136":{},"151":{},"162":{},"177":{},"190":{},"210":{},"214":{},"216":{},"218":{},"259":{},"263":{},"279":{},"285":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["input",{"_index":1912,"title":{},"name":{},"text":{"231":{}},"component":{}}],["insecur",{"_index":1144,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["insert",{"_index":2530,"title":{},"name":{},"text":{"265":{},"272":{},"273":{},"280":{},"281":{}},"component":{}}],["insid",{"_index":534,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"37":{},"53":{},"55":{},"56":{},"57":{},"77":{},"85":{},"86":{},"87":{},"98":{},"99":{},"100":{},"114":{},"115":{},"116":{},"135":{},"136":{},"137":{},"161":{},"162":{},"163":{},"189":{},"190":{},"191":{},"207":{},"259":{},"275":{},"280":{},"281":{},"284":{}},"component":{}}],["inspect",{"_index":993,"title":{},"name":{},"text":{"24":{},"41":{},"65":{},"80":{},"209":{},"212":{}},"component":{}}],["instal",{"_index":306,"title":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"6-4":{},"8-1":{},"8-4":{},"8-5":{},"8-6":{},"8-7":{},"8-11":{},"47-4":{},"49-1":{},"49-4":{},"49-5":{},"49-6":{},"49-7":{},"49-11":{},"93-1":{},"93-4":{},"93-5":{},"93-6":{},"93-11":{},"109-1":{},"109-4":{},"109-5":{},"109-6":{},"109-11":{},"120-4":{},"122-1":{},"122-4":{},"122-5":{},"122-6":{},"122-11":{},"130-4":{},"132-1":{},"132-4":{},"132-5":{},"132-6":{},"132-11":{},"156-4":{},"158-1":{},"158-4":{},"158-5":{},"158-6":{},"158-11":{},"182-4":{},"184-1":{},"184-4":{},"184-5":{},"184-6":{},"184-7":{},"184-11":{},"213-1":{},"213-3":{},"258-4":{},"258-5":{},"282-1":{},"282-2":{},"289-1":{},"289-2":{},"290-2":{}},"name":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"213":{}},"text":{"6":{},"7":{},"8":{},"9":{},"12":{},"17":{},"22":{},"30":{},"47":{},"48":{},"49":{},"50":{},"53":{},"58":{},"63":{},"70":{},"88":{},"91":{},"92":{},"93":{},"101":{},"107":{},"108":{},"109":{},"117":{},"120":{},"121":{},"122":{},"130":{},"131":{},"132":{},"138":{},"156":{},"157":{},"158":{},"164":{},"170":{},"182":{},"183":{},"184":{},"185":{},"192":{},"200":{},"213":{},"215":{},"220":{},"229":{},"232":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"258":{},"259":{},"260":{},"262":{},"267":{},"272":{},"280":{},"281":{},"282":{},"283":{},"288":{},"289":{},"290":{}},"component":{}}],["install_dep",{"_index":410,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["install_deps=fals",{"_index":1490,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{}},"component":{}}],["install_keycloak_oper",{"_index":443,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["install_kn",{"_index":1491,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{}},"component":{}}],["install_strimzi",{"_index":442,"title":{},"name":{},"text":{"8":{},"49":{},"184":{}},"component":{}}],["install_strimzi=fals",{"_index":440,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"184":{}},"component":{}}],["instanc",{"_index":200,"title":{"12-13":{},"53-13":{},"258-3":{},"267-1":{},"272-1":{},"272-3":{}},"name":{},"text":{"4":{},"8":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"21":{},"25":{},"26":{},"38":{},"45":{},"49":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"62":{},"66":{},"78":{},"84":{},"85":{},"86":{},"88":{},"93":{},"97":{},"98":{},"99":{},"101":{},"105":{},"109":{},"113":{},"114":{},"115":{},"117":{},"122":{},"126":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"142":{},"154":{},"158":{},"160":{},"161":{},"162":{},"164":{},"165":{},"168":{},"180":{},"184":{},"188":{},"189":{},"190":{},"192":{},"193":{},"196":{},"213":{},"216":{},"218":{},"232":{},"234":{},"251":{},"256":{},"258":{},"259":{},"260":{},"261":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"277":{},"285":{},"286":{},"290":{}},"component":{}}],["instance=drogu",{"_index":2514,"title":{},"name":{},"text":{"263":{}},"component":{}}],["instead",{"_index":309,"title":{},"name":{},"text":{"6":{},"19":{},"28":{},"36":{},"42":{},"47":{},"60":{},"67":{},"76":{},"78":{},"81":{},"91":{},"103":{},"107":{},"120":{},"124":{},"130":{},"140":{},"156":{},"166":{},"175":{},"177":{},"182":{},"194":{},"197":{},"206":{},"210":{},"251":{},"259":{},"260":{},"263":{},"267":{},"268":{},"270":{},"272":{},"273":{},"277":{},"279":{},"288":{}},"component":{}}],["instruct",{"_index":447,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"246":{},"262":{},"268":{}},"component":{}}],["integ",{"_index":1240,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["integr",{"_index":100,"title":{"21":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"62":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"105":{},"126":{},"142":{},"147":{},"148":{},"149":{},"150":{},"168":{},"173":{},"174":{},"175":{},"176":{},"196":{},"203":{},"204":{},"205":{},"206":{},"207":{},"260":{},"2-4":{},"14-3":{},"18-11":{},"18-12":{},"43-4":{},"55-3":{},"59-11":{},"59-12":{},"82-4":{},"85-3":{},"89-7":{},"89-8":{},"95-4":{},"98-3":{},"102-7":{},"102-8":{},"111-4":{},"114-3":{},"118-7":{},"118-8":{},"127-4":{},"135-3":{},"139-11":{},"139-12":{},"152-4":{},"161-3":{},"165-11":{},"165-12":{},"178-4":{},"189-3":{},"193-11":{},"193-12":{},"275-2":{}},"name":{"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"147":{},"148":{},"149":{},"150":{},"173":{},"174":{},"175":{},"176":{},"203":{},"204":{},"205":{},"206":{},"207":{}},"text":{"1":{},"2":{},"3":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"21":{},"22":{},"24":{},"26":{},"28":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"41":{},"43":{},"44":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"67":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"82":{},"84":{},"85":{},"86":{},"88":{},"89":{},"95":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"105":{},"111":{},"113":{},"114":{},"115":{},"117":{},"118":{},"124":{},"126":{},"127":{},"128":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"142":{},"147":{},"148":{},"149":{},"150":{},"152":{},"153":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"168":{},"173":{},"174":{},"175":{},"176":{},"178":{},"179":{},"188":{},"189":{},"190":{},"192":{},"193":{},"194":{},"196":{},"197":{},"203":{},"204":{},"205":{},"206":{},"207":{},"209":{},"213":{},"244":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"275":{},"280":{},"281":{},"286":{},"288":{},"290":{}},"component":{}}],["integration.sandbox.drogue.cloud",{"_index":2930,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["integration.sandbox.drogue.cloud\",(4",{"_index":2923,"title":{},"name":{},"text":{"280":{}},"component":{}}],["intellij",{"_index":550,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["intend",{"_index":841,"title":{},"name":{},"text":{"17":{},"26":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"279":{},"291":{},"294":{},"297":{},"300":{},"303":{}},"component":{}}],["intendend",{"_index":967,"title":{},"name":{},"text":{"23":{},"64":{}},"component":{}}],["intens",{"_index":1892,"title":{},"name":{},"text":{"231":{}},"component":{}}],["interact",{"_index":722,"title":{},"name":{},"text":{"15":{},"17":{},"56":{},"58":{},"86":{},"88":{},"99":{},"101":{},"115":{},"117":{},"136":{},"138":{},"162":{},"164":{},"190":{},"192":{},"216":{},"238":{},"242":{},"250":{},"253":{},"258":{}},"component":{}}],["interchang",{"_index":1353,"title":{},"name":{},"text":{"39":{}},"component":{}}],["interest",{"_index":163,"title":{},"name":{},"text":{"2":{},"41":{},"43":{},"80":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{},"209":{},"259":{},"265":{},"287":{}},"component":{}}],["interfac",{"_index":730,"title":{},"name":{},"text":{"15":{},"18":{},"56":{},"59":{},"86":{},"89":{},"99":{},"102":{},"115":{},"118":{},"136":{},"139":{},"162":{},"165":{},"190":{},"193":{},"280":{},"281":{}},"component":{}}],["interfer",{"_index":1367,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["intermedi",{"_index":824,"title":{},"name":{},"text":{"16":{},"26":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{}},"component":{}}],["intern",{"_index":333,"title":{},"name":{"261":{}},"text":{"6":{},"14":{},"15":{},"18":{},"25":{},"38":{},"47":{},"55":{},"56":{},"59":{},"66":{},"85":{},"86":{},"89":{},"98":{},"99":{},"102":{},"114":{},"115":{},"118":{},"120":{},"130":{},"135":{},"136":{},"139":{},"156":{},"161":{},"162":{},"165":{},"182":{},"189":{},"190":{},"193":{},"236":{},"254":{},"255":{},"259":{},"261":{},"270":{},"273":{}},"component":{}}],["internet",{"_index":12,"title":{},"name":{},"text":{"1":{},"258":{}},"component":{}}],["interpret",{"_index":781,"title":{},"name":{},"text":{"15":{},"26":{},"38":{},"40":{},"56":{},"78":{},"79":{},"208":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["interrupt",{"_index":2098,"title":{},"name":{},"text":{"245":{}},"component":{}}],["interv",{"_index":1224,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{},"216":{},"267":{},"273":{}},"component":{}}],["introduct",{"_index":826,"title":{"17":{},"58":{},"138":{},"164":{},"192":{},"231":{},"256":{},"40-1":{},"79-1":{},"208-1":{},"268-1":{}},"name":{"231":{}},"text":{},"component":{}}],["invalid",{"_index":1422,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"279":{},"287":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["invent",{"_index":1396,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["invert",{"_index":1386,"title":{"41-5":{},"80-5":{},"209-5":{}},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["involv",{"_index":913,"title":{},"name":{},"text":{"22":{},"24":{},"63":{},"65":{},"212":{},"218":{},"267":{},"268":{}},"component":{}}],["io.dro.iot.dem.int.receiv",{"_index":2468,"title":{},"name":{},"text":{"263":{}},"component":{}}],["io.drogue.connection.v1",{"_index":1332,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["io.drogue.event.v1",{"_index":1323,"title":{},"name":{},"text":{"38":{},"41":{},"78":{},"80":{},"209":{}},"component":{}}],["io.drogue.iot.demo.integration.receiv",{"_index":2997,"title":{},"name":{},"text":{"281":{}},"component":{}}],["io.drogue.iot.demo.integration.send",{"_index":2998,"title":{},"name":{},"text":{"281":{}},"component":{}}],["io.drogue.iot.demo.processor",{"_index":2986,"title":{},"name":{},"text":{"281":{}},"component":{}}],["io.drogue.iot.demo.ui.eventsresourc",{"_index":2422,"title":{},"name":{},"text":{"263":{}},"component":{}}],["io.drogue.registry.v1",{"_index":1336,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["io.quarku",{"_index":2456,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["io.sma.rea.mes.mqt.ses.imp.mqttclientsessionimpl",{"_index":2431,"title":{},"name":{},"text":{"263":{}},"component":{}}],["io.sma.rea.mes.provid",{"_index":2424,"title":{},"name":{},"text":{"263":{}},"component":{}}],["io.und.websocket",{"_index":2420,"title":{},"name":{},"text":{"263":{}},"component":{}}],["io.ver.mqt.imp.mqttclientimpl",{"_index":2453,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["iot",{"_index":4,"title":{"1":{},"275":{},"284":{},"230-4":{},"256-2":{},"258-3":{},"258-7":{},"280-1":{},"281-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"8":{},"15":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"30":{},"35":{},"43":{},"44":{},"49":{},"56":{},"58":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"70":{},"75":{},"82":{},"83":{},"86":{},"88":{},"89":{},"93":{},"95":{},"96":{},"99":{},"101":{},"102":{},"103":{},"105":{},"109":{},"111":{},"112":{},"115":{},"117":{},"118":{},"122":{},"124":{},"126":{},"127":{},"128":{},"132":{},"136":{},"138":{},"139":{},"140":{},"142":{},"152":{},"153":{},"158":{},"162":{},"164":{},"165":{},"166":{},"168":{},"170":{},"178":{},"179":{},"184":{},"190":{},"192":{},"193":{},"194":{},"196":{},"200":{},"205":{},"212":{},"220":{},"221":{},"223":{},"228":{},"229":{},"233":{},"234":{},"244":{},"256":{},"257":{},"258":{},"260":{},"261":{},"264":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"273":{},"275":{},"277":{},"280":{},"281":{},"283":{},"286":{},"291":{},"294":{},"297":{},"300":{}},"component":{}}],["iot.github.io/drogu",{"_index":3009,"title":{},"name":{},"text":{"283":{}},"component":{}}],["iot.github.io/wasm",{"_index":3050,"title":{},"name":{},"text":{"290":{}},"component":{}}],["iot/drg#instal",{"_index":2189,"title":{},"name":{},"text":{"258":{}},"component":{}}],["iot/drogu",{"_index":382,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"229":{},"234":{},"239":{},"243":{},"251":{},"269":{},"276":{},"285":{}},"component":{}}],["iot/nodej",{"_index":2916,"title":{},"name":{},"text":{"280":{}},"component":{}}],["iot/postgresql",{"_index":2665,"title":{},"name":{},"text":{"269":{}},"component":{}}],["iot/quarku",{"_index":2227,"title":{},"name":{},"text":{"259":{},"261":{},"262":{},"263":{},"281":{}},"component":{}}],["iot/wasm",{"_index":3051,"title":{},"name":{},"text":{"290":{}},"component":{}}],["iot01a",{"_index":1813,"title":{"251-1":{}},"name":{},"text":{"220":{},"223":{},"226":{},"228":{},"251":{},"285":{}},"component":{}}],["iot02a",{"_index":2164,"title":{"252-1":{}},"name":{},"text":{"252":{}},"component":{}}],["ip",{"_index":71,"title":{},"name":{},"text":{"1":{},"16":{},"30":{},"57":{},"70":{},"87":{},"100":{},"116":{},"137":{},"163":{},"170":{},"191":{},"200":{},"234":{},"251":{}},"component":{}}],["ip).nip.io",{"_index":3011,"title":{},"name":{},"text":{"283":{}},"component":{}}],["ischannel",{"_index":1424,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["isn’t",{"_index":731,"title":{},"name":{},"text":{"15":{},"26":{},"40":{},"56":{},"79":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"208":{},"259":{},"279":{}},"component":{}}],["isol",{"_index":121,"title":{},"name":{},"text":{"2":{},"22":{},"24":{},"43":{},"63":{},"65":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{},"218":{},"231":{},"262":{}},"component":{}}],["issu",{"_index":1112,"title":{},"name":{},"text":{"26":{},"29":{},"38":{},"69":{},"78":{},"143":{},"169":{},"199":{},"251":{},"256":{},"268":{},"285":{}},"component":{}}],["issuer",{"_index":1541,"title":{},"name":{},"text":{"213":{}},"component":{}}],["issuer_url",{"_index":638,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["itali",{"_index":3087,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["iter",{"_index":1419,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["itself",{"_index":876,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{},"212":{},"216":{},"217":{},"218":{},"257":{},"259":{},"265":{}},"component":{}}],["itself[1",{"_index":1368,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["it’",{"_index":1343,"title":{},"name":{},"text":{"39":{},"214":{},"216":{},"218":{},"290":{}},"component":{}}],["jackson",{"_index":2982,"title":{},"name":{},"text":{"281":{}},"component":{}}],["jaeger",{"_index":507,"title":{},"name":{},"text":{"11":{},"52":{},"187":{}},"component":{}}],["jar",{"_index":2970,"title":{},"name":{},"text":{"281":{}},"component":{}}],["java",{"_index":2249,"title":{},"name":{},"text":{"260":{},"261":{},"277":{},"281":{}},"component":{}}],["javascript",{"_index":2335,"title":{},"name":{},"text":{"261":{},"265":{},"277":{}},"component":{}}],["jdk",{"_index":2251,"title":{},"name":{},"text":{"260":{}},"component":{}}],["job",{"_index":2535,"title":{},"name":{},"text":{"265":{}},"component":{}}],["join",{"_index":973,"title":{},"name":{},"text":{"23":{},"64":{},"236":{},"237":{},"244":{},"251":{},"254":{},"255":{},"276":{},"285":{}},"component":{}}],["joining/configur",{"_index":1968,"title":{},"name":{},"text":{"237":{}},"component":{}}],["jq",{"_index":2906,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["json",{"_index":457,"title":{},"name":{},"text":{"8":{},"13":{},"26":{},"31":{},"37":{},"38":{},"41":{},"42":{},"49":{},"54":{},"71":{},"78":{},"80":{},"81":{},"84":{},"97":{},"113":{},"134":{},"151":{},"160":{},"177":{},"184":{},"188":{},"201":{},"209":{},"210":{},"214":{},"261":{},"269":{},"280":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["json.devic",{"_index":2945,"title":{},"name":{},"text":{"280":{}},"component":{}}],["json.parse(messag",{"_index":2942,"title":{},"name":{},"text":{"280":{}},"component":{}}],["json.tim",{"_index":2946,"title":{},"name":{},"text":{"280":{}},"component":{}}],["jsonobject",{"_index":2326,"title":{},"name":{},"text":{"261":{}},"component":{}}],["jsonobject.mapfrom(event)).tostr",{"_index":2329,"title":{},"name":{},"text":{"261":{}},"component":{}}],["jsonpath",{"_index":2643,"title":{},"name":{},"text":{"269":{}},"component":{}}],["jvm",{"_index":2459,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["jvm:latest",{"_index":2354,"title":{},"name":{},"text":{"262":{}},"component":{}}],["k",{"_index":409,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["kafka",{"_index":184,"title":{"34":{},"74":{},"148":{},"174":{},"204":{}},"name":{"34":{},"74":{},"148":{},"174":{},"204":{}},"text":{"3":{},"4":{},"8":{},"15":{},"18":{},"22":{},"24":{},"25":{},"26":{},"34":{},"36":{},"37":{},"41":{},"44":{},"45":{},"49":{},"56":{},"59":{},"63":{},"65":{},"66":{},"74":{},"76":{},"77":{},"80":{},"83":{},"86":{},"93":{},"96":{},"99":{},"109":{},"112":{},"115":{},"122":{},"128":{},"132":{},"136":{},"139":{},"148":{},"153":{},"154":{},"158":{},"162":{},"165":{},"174":{},"175":{},"179":{},"180":{},"184":{},"190":{},"193":{},"204":{},"206":{},"207":{},"209":{},"257":{},"280":{},"281":{},"288":{}},"component":{}}],["keep",{"_index":601,"title":{},"name":{},"text":{"12":{},"20":{},"37":{},"40":{},"41":{},"53":{},"61":{},"79":{},"80":{},"104":{},"125":{},"141":{},"167":{},"195":{},"208":{},"209":{},"245":{},"261":{},"265":{},"268":{},"270":{},"273":{},"276":{},"280":{},"281":{},"285":{},"287":{}},"component":{}}],["kept",{"_index":991,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["kernel",{"_index":2037,"title":{},"name":{},"text":{"245":{}},"component":{}}],["key",{"_index":259,"title":{"278":{},"36-4":{},"76-4":{},"93-10":{},"109-10":{},"122-10":{},"132-10":{},"158-10":{},"175-4":{},"206-4":{},"274-3":{}},"name":{"278":{}},"text":{"4":{},"8":{},"14":{},"19":{},"20":{},"36":{},"37":{},"45":{},"49":{},"55":{},"60":{},"61":{},"76":{},"77":{},"85":{},"93":{},"98":{},"103":{},"104":{},"109":{},"114":{},"122":{},"124":{},"125":{},"132":{},"135":{},"140":{},"141":{},"154":{},"158":{},"161":{},"166":{},"167":{},"175":{},"180":{},"184":{},"189":{},"194":{},"195":{},"206":{},"207":{},"220":{},"232":{},"235":{},"236":{},"237":{},"251":{},"254":{},"255":{},"262":{},"274":{},"275":{},"276":{},"278":{},"285":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["keycloak",{"_index":185,"title":{},"name":{},"text":{"3":{},"4":{},"8":{},"14":{},"15":{},"22":{},"44":{},"45":{},"49":{},"55":{},"56":{},"63":{},"83":{},"85":{},"86":{},"93":{},"96":{},"98":{},"99":{},"109":{},"112":{},"114":{},"115":{},"122":{},"128":{},"132":{},"135":{},"136":{},"153":{},"154":{},"158":{},"161":{},"162":{},"179":{},"180":{},"184":{},"189":{},"190":{}},"component":{}}],["keycloak_password=admin123456",{"_index":245,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["keycloak_user=admin",{"_index":244,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["kib",{"_index":2774,"title":{},"name":{},"text":{"276":{},"285":{}},"component":{}}],["kind",{"_index":262,"title":{"5-2":{},"46-2":{},"90-2":{},"106-2":{},"119-2":{},"129-2":{},"155-2":{},"181-2":{}},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"16":{},"26":{},"46":{},"49":{},"51":{},"53":{},"57":{},"87":{},"90":{},"93":{},"94":{},"100":{},"106":{},"109":{},"110":{},"116":{},"119":{},"122":{},"123":{},"129":{},"132":{},"133":{},"137":{},"155":{},"158":{},"159":{},"163":{},"181":{},"184":{},"186":{},"191":{},"258":{},"260":{},"262":{},"263":{},"267":{},"269":{}},"component":{}}],["kit",{"_index":1838,"title":{"229-2":{},"229-3":{},"229-4":{}},"name":{},"text":{"229":{},"236":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"277":{},"286":{}},"component":{}}],["km",{"_index":2830,"title":{},"name":{},"text":{"277":{}},"component":{}}],["kn",{"_index":2511,"title":{},"name":{},"text":{"263":{}},"component":{}}],["knativ",{"_index":135,"title":{"35":{},"75":{},"205":{},"269":{}},"name":{"35":{},"75":{},"205":{},"269":{}},"text":{"2":{},"3":{},"8":{},"14":{},"15":{},"22":{},"35":{},"41":{},"43":{},"44":{},"49":{},"55":{},"56":{},"63":{},"75":{},"80":{},"82":{},"83":{},"85":{},"86":{},"93":{},"95":{},"96":{},"98":{},"99":{},"109":{},"111":{},"112":{},"114":{},"115":{},"122":{},"127":{},"128":{},"132":{},"135":{},"136":{},"152":{},"153":{},"158":{},"161":{},"162":{},"178":{},"179":{},"184":{},"189":{},"190":{},"205":{},"209":{},"265":{},"266":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["knativereadi",{"_index":2542,"title":{},"name":{},"text":{"266":{}},"component":{}}],["know",{"_index":1369,"title":{},"name":{},"text":{"40":{},"79":{},"208":{},"216":{},"237":{},"245":{},"256":{},"263":{},"267":{},"268":{},"269":{},"273":{},"280":{},"281":{}},"component":{}}],["known",{"_index":2043,"title":{},"name":{},"text":{"245":{},"258":{},"261":{},"292":{},"295":{},"298":{},"301":{},"305":{}},"component":{}}],["known/drogu",{"_index":3068,"title":{"292-90":{},"292-92":{},"295-90":{},"295-92":{},"298-89":{},"298-91":{},"301-90":{},"301-92":{}},"name":{},"text":{},"component":{}}],["kraft:latest",{"_index":240,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["kraft_container_host_name=localhost",{"_index":242,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["kubectl",{"_index":295,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"46":{},"49":{},"51":{},"53":{},"90":{},"93":{},"94":{},"106":{},"109":{},"110":{},"119":{},"122":{},"123":{},"129":{},"132":{},"133":{},"155":{},"158":{},"159":{},"181":{},"184":{},"186":{},"213":{},"259":{},"260":{},"262":{},"283":{}},"component":{}}],["kubernet",{"_index":181,"title":{"262":{},"10-2":{},"12-13":{},"51-2":{},"53-13":{},"94-2":{},"110-2":{},"123-2":{},"133-2":{},"159-2":{},"186-2":{},"260-3":{},"260-4":{},"262-6":{},"262-11":{}},"name":{"262":{}},"text":{"3":{},"4":{},"5":{},"8":{},"10":{},"12":{},"22":{},"25":{},"26":{},"44":{},"45":{},"46":{},"49":{},"51":{},"53":{},"63":{},"66":{},"83":{},"93":{},"94":{},"96":{},"109":{},"110":{},"112":{},"119":{},"122":{},"123":{},"128":{},"129":{},"132":{},"133":{},"153":{},"154":{},"155":{},"158":{},"159":{},"179":{},"180":{},"181":{},"184":{},"186":{},"212":{},"213":{},"258":{},"260":{},"262":{},"283":{},"288":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["kubernetes.io/ingress.class",{"_index":2393,"title":{},"name":{},"text":{"262":{}},"component":{}}],["kustom",{"_index":1487,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{}},"component":{}}],["l072z",{"_index":1936,"title":{},"name":{},"text":{"236":{},"276":{},"277":{}},"component":{}}],["l475e",{"_index":2146,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["l4s5i",{"_index":2141,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["l4s5vi",{"_index":3024,"title":{},"name":{},"text":{"285":{}},"component":{}}],["label",{"_index":2589,"title":{},"name":{},"text":{"267":{},"274":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["labels.also",{"_index":3148,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["languag",{"_index":58,"title":{},"name":{},"text":{"1":{},"230":{},"231":{},"265":{},"269":{}},"component":{}}],["larg",{"_index":1900,"title":{},"name":{},"text":{"231":{}},"component":{}}],["larger",{"_index":840,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["last",{"_index":1562,"title":{},"name":{},"text":{"214":{},"261":{},"273":{},"280":{},"281":{},"305":{}},"component":{}}],["lastev",{"_index":2304,"title":{},"name":{},"text":{"261":{}},"component":{}}],["later",{"_index":1050,"title":{},"name":{},"text":{"25":{},"35":{},"41":{},"66":{},"75":{},"80":{},"205":{},"209":{},"262":{},"268":{},"269":{},"272":{},"274":{},"277":{},"280":{},"281":{}},"component":{}}],["latest",{"_index":312,"title":{},"name":{},"text":{"6":{},"24":{},"47":{},"65":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"239":{},"241":{},"243":{},"280":{}},"component":{}}],["layer",{"_index":38,"title":{},"name":{},"text":{"1":{},"15":{},"22":{},"24":{},"25":{},"26":{},"28":{},"56":{},"63":{},"65":{},"66":{},"67":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"197":{},"230":{},"266":{}},"component":{}}],["lead",{"_index":1316,"title":{},"name":{},"text":{"37":{},"77":{},"207":{},"251":{},"272":{},"278":{},"285":{}},"component":{}}],["leak",{"_index":2753,"title":{},"name":{},"text":{"274":{},"279":{},"287":{}},"component":{}}],["learn",{"_index":1005,"title":{},"name":{},"text":{"24":{},"25":{},"65":{},"66":{},"229":{},"231":{},"256":{},"261":{},"271":{},"272":{},"282":{},"289":{}},"component":{}}],["leav",{"_index":953,"title":{},"name":{},"text":{"22":{},"63":{},"245":{},"259":{},"261":{},"267":{}},"component":{}}],["led",{"_index":1606,"title":{"236-9":{},"254-9":{},"255-8":{}},"name":{},"text":{"216":{},"236":{},"237":{},"239":{},"241":{},"247":{},"249":{},"252":{},"254":{},"255":{},"279":{},"280":{},"281":{},"287":{}},"component":{}}],["led).ok",{"_index":2890,"title":{},"name":{},"text":{"279":{}},"component":{}}],["led1",{"_index":2869,"title":{},"name":{},"text":{"279":{}},"component":{}}],["led2",{"_index":2867,"title":{},"name":{},"text":{"279":{}},"component":{}}],["led3",{"_index":2873,"title":{},"name":{},"text":{"279":{}},"component":{}}],["led4",{"_index":2871,"title":{},"name":{},"text":{"279":{}},"component":{}}],["led:off",{"_index":1954,"title":{},"name":{},"text":{"236":{},"254":{}},"component":{}}],["led:on",{"_index":1953,"title":{},"name":{},"text":{"236":{},"254":{},"280":{},"281":{}},"component":{}}],["led_matrix",{"_index":1715,"title":{},"name":{},"text":{"216":{}},"component":{}}],["ledmatrix",{"_index":1644,"title":{},"name":{},"text":{"216":{}},"component":{}}],["left",{"_index":2299,"title":{},"name":{},"text":{"261":{},"267":{},"280":{}},"component":{}}],["lend",{"_index":2824,"title":{},"name":{},"text":{"277":{}},"component":{}}],["less",{"_index":543,"title":{},"name":{},"text":{"12":{},"53":{},"231":{},"256":{},"258":{}},"component":{}}],["let",{"_index":1411,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"216":{},"219":{},"268":{},"270":{},"273":{},"287":{}},"component":{}}],["letter",{"_index":1992,"title":{},"name":{},"text":{"241":{}},"component":{}}],["let’",{"_index":1602,"title":{},"name":{},"text":{"216":{},"258":{},"259":{},"261":{},"266":{},"267":{},"269":{},"270":{},"273":{},"279":{},"280":{},"281":{},"283":{},"287":{}},"component":{}}],["levarag",{"_index":1476,"title":{},"name":{},"text":{"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["level",{"_index":140,"title":{},"name":{},"text":{"2":{},"13":{},"21":{},"22":{},"26":{},"30":{},"31":{},"39":{},"40":{},"41":{},"43":{},"54":{},"62":{},"63":{},"70":{},"71":{},"79":{},"80":{},"82":{},"84":{},"95":{},"97":{},"105":{},"111":{},"113":{},"126":{},"127":{},"134":{},"142":{},"152":{},"160":{},"168":{},"170":{},"178":{},"188":{},"196":{},"200":{},"201":{},"208":{},"209":{},"214":{},"220":{},"232":{},"245":{}},"component":{}}],["leverag",{"_index":724,"title":{},"name":{},"text":{"15":{},"56":{},"265":{},"266":{},"288":{}},"component":{}}],["li",{"_index":1201,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["lib/mqtt",{"_index":2938,"title":{},"name":{},"text":{"280":{}},"component":{}}],["libpq",{"_index":565,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["librari",{"_index":575,"title":{},"name":{},"text":{"12":{},"53":{},"233":{}},"component":{}}],["libudev",{"_index":2078,"title":{},"name":{},"text":{"245":{}},"component":{}}],["licens",{"_index":1879,"title":{},"name":{},"text":{"230":{}},"component":{}}],["life",{"_index":980,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["lifecycl",{"_index":1724,"title":{"218-5":{}},"name":{},"text":{},"component":{}}],["lifespan",{"_index":1309,"title":{},"name":{},"text":{"37":{}},"component":{}}],["light",{"_index":1949,"title":{},"name":{},"text":{"236":{},"254":{},"255":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["lighter",{"_index":1891,"title":{},"name":{},"text":{"231":{}},"component":{}}],["like",{"_index":3020,"title":{},"name":{},"text":{"283":{}},"component":{}}],["limit",{"_index":666,"title":{},"name":{},"text":{"14":{},"26":{},"36":{},"55":{},"76":{},"85":{},"98":{},"114":{},"135":{},"161":{},"175":{},"189":{},"206":{},"219":{},"265":{},"268":{},"269":{},"279":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["line",{"_index":177,"title":{"10-1":{},"51-1":{},"94-1":{},"110-1":{},"123-1":{},"133-1":{},"159-1":{},"186-1":{},"258-4":{},"278-1":{}},"name":{},"text":{"3":{},"10":{},"42":{},"44":{},"51":{},"81":{},"94":{},"110":{},"123":{},"128":{},"133":{},"151":{},"153":{},"159":{},"177":{},"179":{},"186":{},"210":{},"213":{},"215":{},"245":{},"258":{},"259":{},"263":{},"266":{},"269":{},"270":{},"273":{},"275":{},"276":{},"280":{},"281":{}},"component":{}}],["link",{"_index":713,"title":{},"name":{},"text":{"14":{},"26":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"257":{},"262":{},"263":{},"268":{},"270":{},"273":{}},"component":{}}],["link:https://github.com/drogu",{"_index":1985,"title":{},"name":{},"text":{"239":{},"243":{}},"component":{}}],["linux",{"_index":519,"title":{},"name":{},"text":{"12":{},"16":{},"17":{},"53":{},"57":{},"58":{},"87":{},"88":{},"100":{},"101":{},"116":{},"117":{},"137":{},"138":{},"163":{},"164":{},"191":{},"192":{},"235":{},"245":{},"256":{},"258":{},"289":{}},"component":{}}],["linux/unix",{"_index":491,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["list",{"_index":643,"title":{"280-3":{},"281-3":{}},"name":{},"text":{"12":{},"18":{},"26":{},"31":{},"38":{},"39":{},"42":{},"53":{},"59":{},"71":{},"78":{},"81":{},"89":{},"102":{},"118":{},"139":{},"165":{},"177":{},"193":{},"201":{},"210":{},"245":{},"258":{},"259":{},"280":{},"281":{},"290":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"304":{}},"component":{}}],["listen",{"_index":2028,"title":{},"name":{},"text":{"244":{},"263":{},"269":{},"280":{},"281":{}},"component":{}}],["lit",{"_index":1611,"title":{},"name":{},"text":{"216":{},"237":{}},"component":{}}],["liter",{"_index":2676,"title":{},"name":{},"text":{"269":{}},"component":{}}],["literal=mqtt",{"_index":1532,"title":{},"name":{},"text":{"213":{}},"component":{}}],["literal=prefix=quay.io/myorg",{"_index":1536,"title":{},"name":{},"text":{"213":{}},"component":{}}],["literal=registri",{"_index":1531,"title":{},"name":{},"text":{"213":{}},"component":{}}],["literal=token",{"_index":1529,"title":{},"name":{},"text":{"213":{}},"component":{}}],["literal=us",{"_index":1530,"title":{},"name":{},"text":{"213":{}},"component":{}}],["live",{"_index":750,"title":{},"name":{},"text":{"15":{},"26":{},"31":{},"56":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"201":{},"216":{},"281":{},"286":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["load",{"_index":274,"title":{},"name":{},"text":{"5":{},"12":{},"15":{},"37":{},"46":{},"53":{},"56":{},"77":{},"86":{},"90":{},"99":{},"106":{},"115":{},"119":{},"129":{},"136":{},"155":{},"162":{},"181":{},"190":{},"207":{},"258":{},"261":{},"270":{},"273":{}},"component":{}}],["loadbalanc",{"_index":301,"title":{},"name":{},"text":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["loader",{"_index":1932,"title":{},"name":{},"text":{"235":{}},"component":{}}],["local",{"_index":206,"title":{"263":{},"12-19":{},"53-19":{},"93-10":{},"109-10":{},"122-10":{},"132-10":{},"158-10":{},"258-2":{},"260-2":{},"263-3":{}},"name":{"263":{}},"text":{"4":{},"7":{},"8":{},"10":{},"12":{},"16":{},"30":{},"45":{},"48":{},"49":{},"51":{},"53":{},"57":{},"70":{},"87":{},"92":{},"93":{},"94":{},"100":{},"108":{},"109":{},"110":{},"116":{},"121":{},"122":{},"123":{},"131":{},"132":{},"133":{},"137":{},"154":{},"157":{},"158":{},"159":{},"163":{},"170":{},"180":{},"183":{},"184":{},"186":{},"191":{},"200":{},"212":{},"215":{},"220":{},"232":{},"234":{},"236":{},"237":{},"244":{},"251":{},"254":{},"255":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"271":{},"277":{},"280":{},"281":{},"286":{},"290":{}},"component":{}}],["localhost",{"_index":628,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["localhost:9092",{"_index":209,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["locat",{"_index":463,"title":{"274-1":{}},"name":{},"text":{"8":{},"12":{},"24":{},"27":{},"30":{},"40":{},"49":{},"53":{},"65":{},"68":{},"70":{},"79":{},"170":{},"184":{},"198":{},"200":{},"208":{},"214":{},"216":{},"261":{},"262":{},"263":{},"268":{},"269":{},"274":{},"276":{},"280":{},"281":{},"285":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["lock",{"_index":1728,"title":{},"name":{},"text":{"218":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["log",{"_index":390,"title":{"258-8":{},"284-1":{}},"name":{},"text":{"8":{},"12":{},"36":{},"42":{},"49":{},"53":{},"76":{},"81":{},"93":{},"109":{},"122":{},"132":{},"151":{},"158":{},"175":{},"177":{},"184":{},"206":{},"210":{},"215":{},"229":{},"244":{},"245":{},"251":{},"258":{},"259":{},"260":{},"263":{},"266":{},"267":{},"269":{},"279":{},"280":{},"281":{},"284":{},"286":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["log.info(\"ne",{"_index":2854,"title":{},"name":{},"text":{"279":{}},"component":{}}],["log.info(\"receiv",{"_index":2992,"title":{},"name":{},"text":{"281":{}},"component":{}}],["log::info!(\"messag",{"_index":2891,"title":{},"name":{},"text":{"279":{}},"component":{}}],["logic",{"_index":75,"title":{"216-5":{}},"name":{},"text":{"1":{},"26":{},"41":{},"80":{},"209":{},"216":{},"218":{},"230":{},"231":{},"261":{},"279":{},"281":{},"283":{}},"component":{}}],["logic).await",{"_index":1681,"title":{},"name":{},"text":{"216":{}},"component":{}}],["login",{"_index":255,"title":{},"name":{},"text":{"4":{},"5":{},"9":{},"12":{},"45":{},"46":{},"50":{},"53":{},"90":{},"106":{},"119":{},"129":{},"154":{},"155":{},"180":{},"181":{},"185":{},"258":{},"274":{},"283":{},"284":{}},"component":{}}],["long",{"_index":19,"title":{},"name":{},"text":{"1":{},"22":{},"26":{},"31":{},"63":{},"71":{},"201":{},"211":{},"214":{},"245":{},"269":{},"288":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["longer",{"_index":772,"title":{},"name":{},"text":{"15":{},"56":{},"218":{},"269":{},"274":{},"280":{},"281":{}},"component":{}}],["look",{"_index":83,"title":{},"name":{},"text":{"1":{},"4":{},"10":{},"19":{},"26":{},"29":{},"42":{},"45":{},"51":{},"60":{},"69":{},"81":{},"103":{},"124":{},"140":{},"143":{},"154":{},"159":{},"166":{},"169":{},"177":{},"180":{},"186":{},"194":{},"199":{},"210":{},"211":{},"215":{},"219":{},"220":{},"232":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"257":{},"258":{},"259":{},"261":{},"264":{},"265":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"276":{},"279":{},"280":{},"281":{},"283":{},"285":{},"287":{}},"component":{}}],["loop",{"_index":1021,"title":{},"name":{},"text":{"25":{},"66":{},"216":{},"218":{},"231":{}},"component":{}}],["loos",{"_index":1096,"title":{},"name":{},"text":{"26":{}},"component":{}}],["lora",{"_index":823,"title":{"236-1":{},"277-2":{}},"name":{},"text":{"16":{},"20":{},"21":{},"57":{},"61":{},"62":{},"87":{},"100":{},"104":{},"105":{},"116":{},"125":{},"126":{},"137":{},"141":{},"142":{},"163":{},"167":{},"168":{},"191":{},"195":{},"196":{},"220":{},"225":{},"229":{},"236":{},"254":{},"255":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{}},"component":{}}],["lora_mod",{"_index":2777,"title":{},"name":{},"text":{"276":{}},"component":{}}],["loraconfig",{"_index":2775,"title":{},"name":{},"text":{"276":{}},"component":{}}],["lorawan",{"_index":705,"title":{"277":{},"220-3":{}},"name":{},"text":{"14":{},"16":{},"22":{},"26":{},"55":{},"57":{},"63":{},"85":{},"87":{},"98":{},"100":{},"114":{},"116":{},"135":{},"137":{},"161":{},"163":{},"189":{},"191":{},"212":{},"220":{},"225":{},"230":{},"236":{},"237":{},"254":{},"255":{},"279":{}},"component":{}}],["lorawan_phy_vers",{"_index":892,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["lorawan_vers",{"_index":893,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["lost",{"_index":776,"title":{},"name":{},"text":{"15":{},"56":{},"245":{},"258":{}},"component":{}}],["lot",{"_index":530,"title":{},"name":{},"text":{"12":{},"41":{},"53":{},"80":{},"209":{},"218":{},"256":{},"272":{},"288":{}},"component":{}}],["low",{"_index":816,"title":{"241":{}},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"212":{},"220":{},"229":{},"231":{},"241":{}},"component":{}}],["lower",{"_index":1896,"title":{},"name":{},"text":{"231":{},"267":{}},"component":{}}],["lowest",{"_index":1796,"title":{},"name":{},"text":{"220":{},"232":{}},"component":{}}],["lpwan",{"_index":1965,"title":{},"name":{},"text":{"237":{}},"component":{}}],["lrwan1",{"_index":1937,"title":{},"name":{},"text":{"236":{},"276":{},"277":{}},"component":{}}],["lsusb",{"_index":1943,"title":{},"name":{},"text":{"236":{},"237":{},"244":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"285":{}},"component":{}}],["lte",{"_index":996,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["ltfjv4yadlbal9a4jxsdccebdfiwppqprt3ay6vrfk/cjhflfs8l6p+1dy70sntk",{"_index":1154,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["luckili",{"_index":1630,"title":{},"name":{},"text":{"216":{}},"component":{}}],["m",{"_index":415,"title":{},"name":{},"text":{"8":{},"9":{},"24":{},"49":{},"50":{},"65":{},"122":{},"132":{},"158":{},"184":{},"185":{},"216":{},"218":{},"219":{},"266":{}},"component":{}}],["m.messag",{"_index":1757,"title":{},"name":{},"text":{"218":{}},"component":{}}],["m1",{"_index":524,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["m2.ll9k.p1.openshiftapps.com",{"_index":2359,"title":{},"name":{},"text":{"262":{}},"component":{}}],["ma0gcsqgsib3dqebcwuaa4ibaqakcwbslm7/dllqrt2m51ogrs+o44+/yqodfvdc",{"_index":1169,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["mac",{"_index":492,"title":{"12-6":{},"53-6":{}},"name":{},"text":{"10":{},"12":{},"51":{},"53":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{},"241":{}},"component":{}}],["mac_v1_0",{"_index":898,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["machin",{"_index":490,"title":{},"name":{},"text":{"10":{},"12":{},"16":{},"24":{},"25":{},"51":{},"53":{},"57":{},"65":{},"66":{},"87":{},"94":{},"100":{},"110":{},"116":{},"123":{},"133":{},"137":{},"159":{},"163":{},"186":{},"191":{},"258":{},"259":{},"260":{},"262":{},"263":{},"277":{},"280":{},"281":{},"283":{}},"component":{}}],["maco",{"_index":2172,"title":{},"name":{},"text":{"256":{},"258":{}},"component":{}}],["macro",{"_index":1709,"title":{},"name":{},"text":{"216":{},"267":{}},"component":{}}],["macro_us",{"_index":1618,"title":{},"name":{},"text":{"216":{}},"component":{}}],["made",{"_index":770,"title":{},"name":{},"text":{"15":{},"29":{},"38":{},"56":{},"69":{},"78":{},"143":{},"169":{},"199":{},"218":{},"258":{},"270":{},"273":{}},"component":{}}],["magic",{"_index":363,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["main",{"_index":314,"title":{"216-1":{},"216-6":{}},"name":{},"text":{"6":{},"12":{},"17":{},"22":{},"24":{},"41":{},"47":{},"53":{},"58":{},"63":{},"65":{},"80":{},"88":{},"91":{},"101":{},"107":{},"117":{},"120":{},"130":{},"138":{},"156":{},"164":{},"182":{},"192":{},"209":{},"212":{},"215":{},"216":{},"258":{},"263":{},"281":{},"290":{}},"component":{}}],["main(spawn",{"_index":1693,"title":{},"name":{},"text":{"216":{}},"component":{}}],["main.r",{"_index":2101,"title":{},"name":{},"text":{"245":{},"279":{},"287":{}},"component":{}}],["main/src/main/resources/meta",{"_index":2336,"title":{},"name":{},"text":{"261":{}},"component":{}}],["mainli",{"_index":2612,"title":{},"name":{},"text":{"268":{}},"component":{}}],["maintain",{"_index":603,"title":{},"name":{},"text":{"12":{},"53":{},"231":{},"268":{}},"component":{}}],["mainten",{"_index":921,"title":{"24":{},"65":{}},"name":{"24":{},"65":{}},"text":{"22":{},"23":{},"24":{},"63":{},"64":{},"65":{}},"component":{}}],["major",{"_index":1825,"title":{},"name":{},"text":{"220":{}},"component":{}}],["make",{"_index":106,"title":{"279":{},"287":{},"279-1":{},"279-4":{},"287-4":{}},"name":{"279":{},"287":{}},"text":{"1":{},"4":{},"6":{},"7":{},"9":{},"12":{},"14":{},"15":{},"17":{},"22":{},"24":{},"26":{},"27":{},"31":{},"36":{},"39":{},"42":{},"45":{},"47":{},"48":{},"50":{},"53":{},"55":{},"56":{},"58":{},"63":{},"65":{},"68":{},"71":{},"76":{},"81":{},"85":{},"86":{},"88":{},"91":{},"92":{},"98":{},"99":{},"101":{},"107":{},"108":{},"114":{},"115":{},"117":{},"120":{},"121":{},"130":{},"131":{},"135":{},"136":{},"138":{},"151":{},"154":{},"156":{},"157":{},"161":{},"162":{},"164":{},"175":{},"177":{},"180":{},"182":{},"183":{},"185":{},"189":{},"190":{},"192":{},"198":{},"201":{},"206":{},"210":{},"212":{},"214":{},"215":{},"217":{},"218":{},"219":{},"230":{},"231":{},"239":{},"241":{},"243":{},"249":{},"258":{},"259":{},"261":{},"262":{},"263":{},"266":{},"267":{},"269":{},"270":{},"273":{},"274":{},"275":{},"279":{},"280":{},"281":{},"283":{},"287":{},"288":{},"289":{},"290":{}},"component":{}}],["makefil",{"_index":327,"title":{},"name":{},"text":{"6":{},"12":{},"47":{},"53":{},"120":{},"130":{},"156":{},"182":{}},"component":{}}],["manag",{"_index":27,"title":{"19":{},"20":{},"42":{},"60":{},"61":{},"81":{},"103":{},"104":{},"124":{},"125":{},"140":{},"141":{},"151":{},"166":{},"167":{},"177":{},"194":{},"195":{},"210":{},"268":{},"18-2":{},"59-2":{},"89-2":{},"102-2":{},"118-2":{},"139-2":{},"165-2":{},"193-2":{},"258-9":{}},"name":{"39":{},"40":{},"41":{},"42":{},"79":{},"80":{},"81":{},"151":{},"177":{},"208":{},"209":{},"210":{}},"text":{"1":{},"3":{},"12":{},"14":{},"18":{},"21":{},"22":{},"24":{},"25":{},"26":{},"39":{},"40":{},"42":{},"44":{},"53":{},"55":{},"59":{},"62":{},"63":{},"65":{},"66":{},"79":{},"81":{},"83":{},"85":{},"89":{},"96":{},"98":{},"102":{},"105":{},"112":{},"114":{},"118":{},"126":{},"128":{},"135":{},"139":{},"142":{},"151":{},"153":{},"161":{},"165":{},"168":{},"177":{},"179":{},"189":{},"193":{},"196":{},"208":{},"210":{},"212":{},"214":{},"230":{},"263":{},"265":{},"267":{},"268":{},"271":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{}},"component":{}}],["mandatori",{"_index":1518,"title":{},"name":{},"text":{"212":{}},"component":{}}],["mani",{"_index":91,"title":{},"name":{},"text":{"1":{},"23":{},"26":{},"64":{},"229":{},"230":{},"256":{},"259":{},"265":{},"268":{},"288":{}},"component":{}}],["manifest",{"_index":1506,"title":{},"name":{},"text":{"211":{},"213":{},"220":{},"232":{},"239":{},"241":{},"251":{},"255":{}},"component":{}}],["manner",{"_index":756,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["manual",{"_index":352,"title":{"8-10":{},"49-10":{},"93-9":{},"109-9":{},"122-9":{},"132-9":{},"158-9":{},"184-10":{},"245-3":{}},"name":{},"text":{"8":{},"12":{},"39":{},"49":{},"53":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"262":{},"278":{},"285":{}},"component":{}}],["manufactur",{"_index":1017,"title":{},"name":{},"text":{"25":{},"66":{},"275":{}},"component":{}}],["map",{"_index":704,"title":{"261-5":{}},"name":{},"text":{"14":{},"15":{},"26":{},"36":{},"55":{},"56":{},"76":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"175":{},"189":{},"190":{},"206":{},"216":{},"217":{},"261":{},"262":{},"264":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["mapdata",{"_index":2273,"title":{},"name":{},"text":{"261":{}},"component":{}}],["mappedmessag",{"_index":2272,"title":{},"name":{},"text":{"261":{}},"component":{}}],["mappedmessage.getvalu",{"_index":2276,"title":{},"name":{},"text":{"261":{}},"component":{}}],["mapper",{"_index":2278,"title":{},"name":{},"text":{"261":{}},"component":{}}],["mark",{"_index":1070,"title":{},"name":{},"text":{"26":{},"35":{},"42":{},"75":{},"81":{},"151":{},"177":{},"205":{},"210":{},"214":{},"218":{},"243":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["marker",{"_index":2524,"title":{},"name":{},"text":{"264":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["mass",{"_index":2111,"title":{},"name":{},"text":{"246":{}},"component":{}}],["massiv",{"_index":2604,"title":{},"name":{},"text":{"268":{}},"component":{}}],["match",{"_index":384,"title":{"41-6":{},"80-6":{},"209-6":{}},"name":{},"text":{"8":{},"41":{},"49":{},"80":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"209":{},"216":{},"217":{},"218":{},"267":{},"276":{},"279":{},"285":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["matcher",{"_index":1425,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["matchnam",{"_index":1259,"title":{},"name":{},"text":{"31":{},"42":{},"71":{},"81":{},"177":{},"201":{},"210":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["materi",{"_index":449,"title":{"273-7":{}},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"263":{},"273":{}},"component":{}}],["mathemat",{"_index":2614,"title":{},"name":{},"text":{"268":{}},"component":{}}],["matrix",{"_index":1607,"title":{},"name":{},"text":{"216":{},"241":{}},"component":{}}],["maven",{"_index":2243,"title":{},"name":{},"text":{"259":{},"262":{},"263":{},"277":{},"281":{}},"component":{}}],["maximum",{"_index":3092,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["mayb",{"_index":537,"title":{},"name":{},"text":{"12":{},"16":{},"22":{},"53":{},"57":{},"63":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"259":{},"260":{},"261":{},"268":{},"270":{},"271":{},"273":{},"279":{},"287":{}},"component":{}}],["mcu",{"_index":1852,"title":{},"name":{},"text":{"229":{}},"component":{}}],["mean",{"_index":751,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"21":{},"26":{},"31":{},"56":{},"57":{},"58":{},"62":{},"71":{},"86":{},"87":{},"88":{},"99":{},"100":{},"101":{},"105":{},"115":{},"116":{},"117":{},"126":{},"136":{},"137":{},"138":{},"142":{},"162":{},"163":{},"164":{},"168":{},"190":{},"191":{},"192":{},"196":{},"201":{},"214":{},"231":{},"268":{},"277":{},"280":{},"281":{},"286":{}},"component":{}}],["meant",{"_index":903,"title":{},"name":{},"text":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{}},"component":{}}],["measur",{"_index":1404,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"268":{},"270":{},"273":{},"285":{}},"component":{}}],["mechan",{"_index":1236,"title":{},"name":{},"text":{"30":{},"36":{},"70":{},"76":{},"170":{},"175":{},"200":{},"206":{},"229":{},"271":{}},"component":{}}],["member",{"_index":1340,"title":{"39-1":{}},"name":{"39":{}},"text":{"39":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["memberentri",{"_index":3120,"title":{"293-15":{},"296-15":{},"299-15":{},"302-15":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["memori",{"_index":45,"title":{},"name":{},"text":{"1":{},"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"230":{},"231":{},"279":{},"287":{}},"component":{}}],["mental",{"_index":1723,"title":{},"name":{},"text":{"217":{}},"component":{}}],["mention",{"_index":538,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"41":{},"53":{},"55":{},"56":{},"80":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{},"209":{},"245":{},"264":{},"267":{},"279":{}},"component":{}}],["menu",{"_index":2092,"title":{},"name":{},"text":{"245":{},"267":{},"269":{},"274":{},"280":{},"281":{}},"component":{}}],["merg",{"_index":1012,"title":{},"name":{},"text":{"24":{},"65":{},"220":{},"232":{}},"component":{}}],["mesh",{"_index":939,"title":{"239":{},"243":{},"245-1":{},"245-4":{},"245-8":{}},"name":{},"text":{"22":{},"63":{},"220":{},"222":{},"239":{},"243":{},"245":{}},"component":{}}],["mesh/readme.adoc[nrf52840",{"_index":1988,"title":{},"name":{},"text":{"239":{},"243":{}},"component":{}}],["meshd",{"_index":2058,"title":{},"name":{},"text":{"245":{}},"component":{}}],["messag",{"_index":696,"title":{"15-2":{},"15-3":{},"56-2":{},"56-3":{},"86-2":{},"86-3":{},"99-2":{},"99-3":{},"115-2":{},"115-3":{},"136-2":{},"136-3":{},"162-2":{},"162-3":{},"190-2":{},"190-3":{},"218-3":{}},"name":{},"text":{"14":{},"15":{},"16":{},"18":{},"21":{},"22":{},"23":{},"31":{},"36":{},"38":{},"40":{},"55":{},"56":{},"57":{},"59":{},"62":{},"63":{},"64":{},"71":{},"76":{},"78":{},"79":{},"85":{},"86":{},"87":{},"89":{},"98":{},"99":{},"100":{},"102":{},"105":{},"114":{},"115":{},"116":{},"118":{},"126":{},"135":{},"136":{},"137":{},"139":{},"142":{},"161":{},"162":{},"163":{},"165":{},"168":{},"175":{},"189":{},"190":{},"191":{},"193":{},"196":{},"201":{},"206":{},"208":{},"214":{},"216":{},"218":{},"231":{},"233":{},"234":{},"236":{},"237":{},"244":{},"251":{},"254":{},"255":{},"261":{},"263":{},"264":{},"276":{},"279":{},"280":{},"281":{},"285":{},"287":{}},"component":{}}],["message.getextension(\"devic",{"_index":2280,"title":{},"name":{},"text":{"261":{}},"component":{}}],["message.gettim",{"_index":2282,"title":{},"name":{},"text":{"261":{}},"component":{}}],["messages/ev",{"_index":1321,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["messga",{"_index":1477,"title":{},"name":{},"text":{"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["meta",{"_index":1479,"title":{},"name":{},"text":{"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["metadata",{"_index":739,"title":{"293-16":{},"296-16":{},"299-16":{},"302-16":{}},"name":{},"text":{"15":{},"22":{},"31":{},"36":{},"40":{},"41":{},"42":{},"56":{},"63":{},"71":{},"76":{},"79":{},"80":{},"81":{},"86":{},"99":{},"115":{},"136":{},"162":{},"175":{},"177":{},"190":{},"201":{},"206":{},"208":{},"209":{},"210":{},"211":{},"241":{},"258":{},"261":{},"262":{},"263":{},"269":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["metadata.deletiontimestamp",{"_index":1073,"title":{},"name":{},"text":{"26":{}},"component":{}}],["metal",{"_index":195,"title":{"4":{},"45":{},"154":{},"180":{}},"name":{"4":{},"45":{},"154":{},"180":{}},"text":{"10":{},"24":{},"51":{},"65":{},"159":{},"186":{}},"component":{}}],["method",{"_index":1121,"title":{"27-3":{},"68-3":{},"198-3":{}},"name":{},"text":{"27":{},"68":{},"198":{},"216":{},"218":{},"261":{},"281":{}},"component":{}}],["metric",{"_index":434,"title":{},"name":{},"text":{"8":{},"9":{},"24":{},"25":{},"49":{},"50":{},"65":{},"66":{},"184":{},"185":{},"267":{},"270":{},"273":{}},"component":{}}],["metrics=tru",{"_index":481,"title":{},"name":{},"text":{"9":{},"50":{},"185":{}},"component":{}}],["micro",{"_index":839,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["micro:bit",{"_index":1629,"title":{},"name":{},"text":{"216":{},"220":{},"223":{},"226":{},"228":{},"229":{},"241":{},"243":{},"244":{}},"component":{}}],["microbit",{"_index":1714,"title":{"241":{},"243":{},"244-1":{}},"name":{},"text":{"216":{},"220":{},"222":{},"229":{},"232":{},"241":{},"244":{}},"component":{}}],["microcontrol",{"_index":41,"title":{},"name":{},"text":{"1":{},"218":{},"229":{},"257":{},"288":{}},"component":{}}],["microncontrol",{"_index":1955,"title":{},"name":{},"text":{"237":{}},"component":{}}],["middl",{"_index":25,"title":{},"name":{},"text":{"1":{},"280":{}},"component":{}}],["migrat",{"_index":251,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["miifydccbeigawibagiqqaf3itfu6uk47naqpgqktzanbgkqhkig9w0baqsfada",{"_index":1146,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["mime",{"_index":1331,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["min",{"_index":2572,"title":{},"name":{},"text":{"267":{}},"component":{}}],["mine",{"_index":2640,"title":{},"name":{},"text":{"269":{}},"component":{}}],["mingw",{"_index":568,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["minikub",{"_index":261,"title":{"5-1":{},"46-1":{},"90-1":{},"106-1":{},"119-1":{},"129-1":{},"155-1":{},"181-1":{}},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"46":{},"49":{},"51":{},"53":{},"90":{},"93":{},"94":{},"106":{},"109":{},"110":{},"119":{},"122":{},"123":{},"129":{},"132":{},"133":{},"155":{},"158":{},"159":{},"181":{},"184":{},"186":{},"258":{},"260":{},"262":{},"283":{}},"component":{}}],["minim",{"_index":416,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{},"212":{}},"component":{}}],["minut",{"_index":1132,"title":{},"name":{},"text":{"27":{},"68":{},"198":{},"259":{},"267":{},"270":{},"273":{},"280":{},"281":{}},"component":{}}],["minute'::interv",{"_index":2691,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["mirror",{"_index":1055,"title":{},"name":{},"text":{"25":{},"26":{},"66":{}},"component":{}}],["mirrormak",{"_index":1051,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["mismatch",{"_index":2897,"title":{},"name":{},"text":{"279":{}},"component":{}}],["miss",{"_index":1099,"title":{},"name":{},"text":{"26":{},"37":{},"77":{},"207":{},"245":{},"270":{},"273":{},"279":{},"280":{},"281":{}},"component":{}}],["mix",{"_index":1182,"title":{},"name":{},"text":{"28":{},"67":{},"197":{},"265":{},"288":{}},"component":{}}],["mobil",{"_index":2184,"title":{},"name":{},"text":{"258":{}},"component":{}}],["mod",{"_index":2038,"title":{},"name":{},"text":{"245":{}},"component":{}}],["mode",{"_index":622,"title":{"36-7":{},"76-7":{},"175-7":{},"206-7":{}},"name":{},"text":{"12":{},"15":{},"18":{},"36":{},"41":{},"53":{},"56":{},"59":{},"76":{},"80":{},"86":{},"89":{},"94":{},"99":{},"102":{},"110":{},"115":{},"118":{},"123":{},"133":{},"136":{},"139":{},"159":{},"162":{},"165":{},"175":{},"190":{},"193":{},"206":{},"209":{},"259":{},"263":{},"267":{},"280":{},"281":{}},"component":{}}],["model",{"_index":641,"title":{"218-1":{}},"name":{},"text":{"12":{},"15":{},"22":{},"24":{},"25":{},"31":{},"41":{},"53":{},"56":{},"63":{},"65":{},"66":{},"71":{},"80":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"201":{},"209":{},"216":{},"230":{},"258":{},"265":{},"268":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["modem",{"_index":2818,"title":{"277-2":{}},"name":{},"text":{"277":{},"286":{}},"component":{}}],["modestli",{"_index":1903,"title":{},"name":{},"text":{"231":{}},"component":{}}],["modif",{"_index":711,"title":{},"name":{},"text":{"14":{},"42":{},"55":{},"81":{},"85":{},"98":{},"114":{},"135":{},"151":{},"161":{},"177":{},"189":{},"210":{},"259":{}},"component":{}}],["modifi",{"_index":709,"title":{"42-3":{},"42-7":{},"81-3":{},"81-7":{},"151-3":{},"151-7":{},"177-3":{},"177-7":{},"210-3":{},"210-7":{}},"name":{},"text":{"14":{},"41":{},"55":{},"80":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"209":{},"215":{},"241":{},"259":{},"261":{},"288":{}},"component":{}}],["modul",{"_index":1810,"title":{},"name":{},"text":{"220":{},"232":{},"234":{},"235":{},"244":{},"269":{}},"component":{}}],["moment",{"_index":2231,"title":{},"name":{},"text":{"259":{}},"component":{}}],["money",{"_index":2365,"title":{},"name":{},"text":{"262":{},"268":{},"269":{},"272":{}},"component":{}}],["monitor",{"_index":474,"title":{"9":{},"22":{},"50":{},"63":{},"185":{}},"name":{"9":{},"22":{},"50":{},"63":{},"185":{}},"text":{"9":{},"17":{},"22":{},"23":{},"25":{},"50":{},"58":{},"63":{},"64":{},"66":{},"88":{},"101":{},"117":{},"138":{},"164":{},"185":{},"192":{},"269":{},"282":{},"288":{},"289":{}},"component":{}}],["monitoring,http_application_rout",{"_index":2375,"title":{},"name":{},"text":{"262":{}},"component":{}}],["month",{"_index":2740,"title":{},"name":{},"text":{"273":{}},"component":{}}],["more",{"_index":47,"title":{"273":{},"279-5":{},"287-5":{}},"name":{"273":{}},"text":{"1":{},"2":{},"8":{},"12":{},"14":{},"15":{},"16":{},"17":{},"22":{},"25":{},"26":{},"30":{},"31":{},"36":{},"38":{},"41":{},"42":{},"43":{},"49":{},"53":{},"55":{},"56":{},"57":{},"58":{},"63":{},"66":{},"70":{},"71":{},"76":{},"80":{},"81":{},"82":{},"85":{},"86":{},"87":{},"88":{},"95":{},"98":{},"99":{},"100":{},"101":{},"111":{},"114":{},"115":{},"116":{},"117":{},"122":{},"127":{},"132":{},"135":{},"136":{},"137":{},"138":{},"152":{},"158":{},"161":{},"162":{},"163":{},"164":{},"170":{},"177":{},"178":{},"184":{},"189":{},"190":{},"191":{},"192":{},"200":{},"201":{},"206":{},"209":{},"210":{},"218":{},"219":{},"220":{},"229":{},"230":{},"231":{},"245":{},"256":{},"258":{},"259":{},"260":{},"261":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"279":{},"280":{},"281":{},"282":{},"285":{},"287":{},"288":{},"289":{},"290":{}},"component":{}}],["mostli",{"_index":500,"title":{},"name":{},"text":{"10":{},"30":{},"51":{},"70":{},"94":{},"110":{},"123":{},"133":{},"159":{},"170":{},"186":{},"200":{},"256":{}},"component":{}}],["mount",{"_index":586,"title":{},"name":{},"text":{"12":{},"53":{},"216":{},"218":{},"277":{}},"component":{}}],["mount(…​)`",{"_index":1743,"title":{},"name":{},"text":{"218":{}},"component":{}}],["move",{"_index":1765,"title":{"259":{}},"name":{},"text":{"218":{},"219":{},"259":{},"268":{},"270":{},"273":{}},"component":{}}],["mp",{"_index":2292,"title":{},"name":{},"text":{"261":{}},"component":{}}],["mqtt",{"_index":142,"title":{"31":{},"36":{},"40":{},"71":{},"76":{},"79":{},"145":{},"149":{},"171":{},"175":{},"201":{},"206":{},"208":{},"260":{},"18-9":{},"18-12":{},"28-1":{},"59-9":{},"59-12":{},"67-1":{},"89-5":{},"89-8":{},"102-5":{},"102-8":{},"118-5":{},"118-8":{},"139-9":{},"139-12":{},"165-9":{},"165-12":{},"193-9":{},"193-12":{},"197-1":{},"261-2":{}},"name":{"28":{},"31":{},"36":{},"40":{},"67":{},"71":{},"76":{},"79":{},"145":{},"149":{},"171":{},"175":{},"197":{},"201":{},"206":{},"208":{}},"text":{"2":{},"8":{},"10":{},"14":{},"15":{},"17":{},"18":{},"22":{},"28":{},"31":{},"35":{},"36":{},"38":{},"40":{},"43":{},"49":{},"51":{},"55":{},"56":{},"58":{},"59":{},"63":{},"67":{},"71":{},"75":{},"76":{},"78":{},"79":{},"82":{},"85":{},"86":{},"88":{},"89":{},"93":{},"94":{},"95":{},"98":{},"99":{},"101":{},"102":{},"109":{},"110":{},"111":{},"114":{},"115":{},"117":{},"118":{},"122":{},"123":{},"127":{},"132":{},"133":{},"135":{},"136":{},"138":{},"139":{},"145":{},"149":{},"152":{},"158":{},"159":{},"161":{},"162":{},"164":{},"165":{},"171":{},"175":{},"178":{},"184":{},"186":{},"189":{},"190":{},"192":{},"193":{},"197":{},"201":{},"205":{},"206":{},"208":{},"212":{},"220":{},"223":{},"228":{},"244":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"266":{},"267":{},"269":{},"270":{},"271":{},"273":{},"280":{},"281":{},"288":{}},"component":{}}],["mqtt.sandbox.drogue.cloud",{"_index":2552,"title":{},"name":{},"text":{"266":{}},"component":{}}],["mqtt/websocket",{"_index":956,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["mqtts://mqtt",{"_index":2922,"title":{},"name":{},"text":{"280":{}},"component":{}}],["msqwigydvqqkexteawdpdgfsifnpz25hdhvyzsbucnvzdcbdby4xfzavbgnvbamt",{"_index":1147,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["mtu",{"_index":1551,"title":{},"name":{},"text":{"214":{}},"component":{}}],["much",{"_index":753,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"231":{},"245":{},"264":{},"269":{},"270":{},"273":{}},"component":{}}],["multi",{"_index":843,"title":{},"name":{},"text":{"17":{},"18":{},"58":{},"59":{},"88":{},"89":{},"101":{},"102":{},"117":{},"118":{},"138":{},"139":{},"164":{},"165":{},"192":{},"193":{},"267":{}},"component":{}}],["multipl",{"_index":199,"title":{},"name":{},"text":{"4":{},"8":{},"15":{},"18":{},"22":{},"25":{},"40":{},"41":{},"42":{},"45":{},"49":{},"56":{},"59":{},"63":{},"66":{},"79":{},"80":{},"81":{},"86":{},"89":{},"99":{},"102":{},"115":{},"118":{},"122":{},"132":{},"136":{},"139":{},"151":{},"154":{},"158":{},"162":{},"165":{},"177":{},"180":{},"184":{},"190":{},"193":{},"208":{},"209":{},"210":{},"214":{},"218":{},"220":{},"231":{},"232":{},"251":{},"256":{},"267":{},"280":{},"281":{},"285":{}},"component":{}}],["mut",{"_index":1647,"title":{},"name":{},"text":{"216":{},"218":{},"219":{},"279":{}},"component":{}}],["mutini",{"_index":2979,"title":{},"name":{},"text":{"281":{}},"component":{}}],["mvn",{"_index":2252,"title":{},"name":{},"text":{"260":{},"261":{},"262":{},"263":{},"281":{}},"component":{}}],["mvnw",{"_index":2405,"title":{},"name":{},"text":{"263":{}},"component":{}}],["myaccount",{"_index":2345,"title":{},"name":{},"text":{"262":{}},"component":{}}],["myapp",{"_index":2863,"title":{},"name":{},"text":{"279":{}},"component":{}}],["myartifact.bin",{"_index":1587,"title":{},"name":{},"text":{"215":{}},"component":{}}],["mycount",{"_index":1751,"title":{},"name":{},"text":{"218":{},"219":{}},"component":{}}],["mydevic",{"_index":2862,"title":{},"name":{},"text":{"279":{}},"component":{}}],["mysecretpassword",{"_index":2140,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["myupdat",{"_index":1999,"title":{},"name":{},"text":{"241":{}},"component":{}}],["n",{"_index":431,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{},"262":{}},"component":{}}],["name",{"_index":216,"title":{"26-4":{}},"name":{},"text":{"4":{},"8":{},"12":{},"19":{},"21":{},"26":{},"27":{},"29":{},"30":{},"31":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"45":{},"49":{},"53":{},"60":{},"62":{},"68":{},"69":{},"70":{},"71":{},"76":{},"77":{},"78":{},"80":{},"81":{},"93":{},"103":{},"105":{},"109":{},"122":{},"124":{},"126":{},"132":{},"140":{},"142":{},"143":{},"151":{},"154":{},"158":{},"166":{},"168":{},"169":{},"170":{},"175":{},"177":{},"180":{},"184":{},"194":{},"196":{},"198":{},"199":{},"200":{},"201":{},"206":{},"207":{},"209":{},"210":{},"215":{},"216":{},"217":{},"219":{},"258":{},"261":{},"262":{},"263":{},"266":{},"267":{},"269":{},"274":{},"275":{},"276":{},"280":{},"281":{},"283":{},"285":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["name(opt",{"_index":1192,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["namespac",{"_index":298,"title":{"8-8":{},"49-8":{},"93-7":{},"109-7":{},"122-7":{},"132-7":{},"158-7":{},"184-8":{}},"name":{},"text":{"5":{},"8":{},"13":{},"26":{},"46":{},"49":{},"54":{},"84":{},"90":{},"93":{},"97":{},"106":{},"109":{},"113":{},"119":{},"122":{},"129":{},"132":{},"134":{},"155":{},"158":{},"160":{},"181":{},"184":{},"188":{},"259":{},"262":{},"269":{}},"component":{}}],["narrow",{"_index":1725,"title":{},"name":{},"text":{"218":{}},"component":{}}],["nativ",{"_index":576,"title":{},"name":{},"text":{"12":{},"53":{},"218":{}},"component":{}}],["natur",{"_index":1909,"title":{},"name":{},"text":{"231":{}},"component":{}}],["navig",{"_index":2190,"title":{},"name":{},"text":{"258":{},"259":{},"263":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["nb",{"_index":997,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["ncat",{"_index":1920,"title":{},"name":{},"text":{"234":{}},"component":{}}],["nd",{"_index":2062,"title":{},"name":{},"text":{"245":{}},"component":{}}],["near",{"_index":3109,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["necessari",{"_index":766,"title":{},"name":{},"text":{"15":{},"26":{},"27":{},"56":{},"68":{},"198":{},"214":{},"218":{},"269":{}},"component":{}}],["necessarili",{"_index":535,"title":{},"name":{},"text":{"12":{},"15":{},"53":{},"56":{},"265":{}},"component":{}}],["need",{"_index":17,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"8":{},"10":{},"12":{},"15":{},"19":{},"20":{},"22":{},"24":{},"25":{},"26":{},"29":{},"30":{},"31":{},"36":{},"37":{},"40":{},"42":{},"45":{},"46":{},"47":{},"49":{},"51":{},"53":{},"56":{},"60":{},"61":{},"63":{},"65":{},"66":{},"69":{},"70":{},"71":{},"76":{},"77":{},"79":{},"81":{},"86":{},"90":{},"91":{},"94":{},"99":{},"103":{},"104":{},"106":{},"107":{},"110":{},"115":{},"119":{},"120":{},"123":{},"124":{},"125":{},"129":{},"130":{},"133":{},"136":{},"140":{},"141":{},"143":{},"151":{},"154":{},"155":{},"156":{},"159":{},"162":{},"166":{},"167":{},"169":{},"170":{},"175":{},"177":{},"180":{},"181":{},"182":{},"186":{},"190":{},"194":{},"195":{},"199":{},"200":{},"201":{},"206":{},"207":{},"208":{},"210":{},"213":{},"214":{},"216":{},"219":{},"229":{},"233":{},"234":{},"235":{},"236":{},"237":{},"241":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"256":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"289":{},"290":{}},"component":{}}],["neg",{"_index":3077,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["network",{"_index":73,"title":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{},"18-5":{},"30-7":{},"30-8":{},"59-5":{},"70-7":{},"70-8":{},"139-5":{},"144-2":{},"144-3":{},"165-5":{},"170-7":{},"170-8":{},"193-5":{},"200-7":{},"200-8":{},"277-3":{}},"name":{},"text":{"1":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"29":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"69":{},"85":{},"86":{},"87":{},"89":{},"98":{},"99":{},"100":{},"102":{},"103":{},"104":{},"105":{},"114":{},"115":{},"116":{},"118":{},"124":{},"125":{},"126":{},"135":{},"136":{},"137":{},"139":{},"140":{},"141":{},"142":{},"143":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"169":{},"189":{},"190":{},"191":{},"193":{},"194":{},"195":{},"196":{},"199":{},"220":{},"225":{},"232":{},"234":{},"236":{},"237":{},"244":{},"251":{},"254":{},"255":{},"259":{},"276":{},"277":{},"279":{},"280":{},"281":{},"285":{},"286":{}},"component":{}}],["networking.k8s.io/v1",{"_index":2392,"title":{},"name":{},"text":{"262":{}},"component":{}}],["never",{"_index":1426,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["new",{"_index":277,"title":{"19-1":{},"20-1":{},"42-2":{},"42-6":{},"60-1":{},"61-1":{},"81-2":{},"81-6":{},"103-1":{},"104-1":{},"124-1":{},"125-1":{},"140-1":{},"141-1":{},"151-2":{},"151-6":{},"166-1":{},"167-1":{},"177-2":{},"177-6":{},"194-1":{},"195-1":{},"210-2":{},"210-6":{},"241-9":{},"258-10":{},"258-11":{},"269-4":{},"275-1":{},"280-2":{},"281-2":{},"284-2":{}},"name":{},"text":{"5":{},"8":{},"15":{},"19":{},"20":{},"22":{},"26":{},"35":{},"41":{},"42":{},"46":{},"49":{},"56":{},"60":{},"61":{},"63":{},"75":{},"80":{},"81":{},"90":{},"93":{},"103":{},"104":{},"106":{},"109":{},"119":{},"122":{},"124":{},"125":{},"129":{},"132":{},"140":{},"141":{},"151":{},"155":{},"158":{},"166":{},"167":{},"177":{},"181":{},"184":{},"194":{},"195":{},"205":{},"209":{},"210":{},"214":{},"215":{},"219":{},"230":{},"241":{},"245":{},"256":{},"258":{},"259":{},"261":{},"262":{},"264":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"280":{},"281":{},"283":{},"284":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["new(matrix",{"_index":1643,"title":{},"name":{},"text":{"216":{}},"component":{}}],["newer",{"_index":642,"title":{},"name":{},"text":{"12":{},"53":{},"234":{},"244":{}},"component":{}}],["newli",{"_index":2544,"title":{},"name":{},"text":{"266":{}},"component":{}}],["newlyl",{"_index":2590,"title":{},"name":{},"text":{"267":{}},"component":{}}],["newus",{"_index":3151,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["next",{"_index":623,"title":{"229-7":{},"259-7":{},"261-9":{},"262-12":{},"263-5":{},"264-2":{},"266-4":{},"267-7":{},"269-6":{},"271-1":{},"272-4":{},"288-1":{}},"name":{},"text":{"12":{},"15":{},"41":{},"53":{},"56":{},"80":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"209":{},"214":{},"218":{},"255":{},"258":{},"259":{},"261":{},"262":{},"263":{},"267":{},"272":{},"274":{},"275":{},"276":{},"279":{},"280":{},"281":{},"283":{},"284":{},"285":{},"290":{}},"component":{}}],["nextev",{"_index":2325,"title":{},"name":{},"text":{"261":{}},"component":{}}],["nfc",{"_index":1854,"title":{},"name":{},"text":{"229":{}},"component":{}}],["nginx",{"_index":288,"title":{},"name":{},"text":{"5":{},"46":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["nice",{"_index":2188,"title":{},"name":{},"text":{"258":{},"266":{},"273":{},"288":{}},"component":{}}],["nightli",{"_index":1596,"title":{"216-2":{}},"name":{},"text":{"216":{},"219":{},"229":{},"234":{},"249":{},"289":{}},"component":{}}],["nip.io",{"_index":1229,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["no_main",{"_index":1617,"title":{},"name":{},"text":{"216":{}},"component":{}}],["no_std",{"_index":1616,"title":{},"name":{},"text":{"216":{}},"component":{}}],["node",{"_index":81,"title":{},"name":{},"text":{"1":{},"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"220":{},"225":{},"229":{},"237":{},"245":{},"262":{},"280":{}},"component":{}}],["node.j",{"_index":2821,"title":{"280":{}},"name":{},"text":{"277":{},"280":{}},"component":{}}],["nodej",{"_index":2901,"title":{},"name":{"280":{}},"text":{"280":{}},"component":{}}],["nodepool1",{"_index":2378,"title":{},"name":{},"text":{"262":{}},"component":{}}],["non",{"_index":814,"title":{"26-2":{}},"name":{},"text":{"16":{},"30":{},"36":{},"57":{},"70":{},"76":{},"87":{},"100":{},"116":{},"137":{},"163":{},"170":{},"175":{},"191":{},"200":{},"206":{},"218":{},"231":{},"245":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["none",{"_index":2115,"title":{},"name":{},"text":{"246":{},"249":{},"251":{},"262":{},"266":{},"267":{},"276":{},"279":{},"285":{}},"component":{}}],["nonscopedmetadata",{"_index":3121,"title":{"293-17":{},"296-17":{},"299-17":{},"302-17":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["nordic",{"_index":1977,"title":{},"name":{},"text":{"239":{},"241":{},"243":{}},"component":{}}],["normal",{"_index":171,"title":{"15-1":{},"56-1":{},"86-1":{},"99-1":{},"115-1":{},"136-1":{},"162-1":{},"190-1":{}},"name":{},"text":{"3":{},"15":{},"21":{},"24":{},"26":{},"27":{},"28":{},"41":{},"44":{},"56":{},"62":{},"65":{},"67":{},"68":{},"80":{},"83":{},"86":{},"96":{},"99":{},"105":{},"112":{},"115":{},"126":{},"128":{},"136":{},"142":{},"153":{},"162":{},"168":{},"179":{},"190":{},"196":{},"197":{},"198":{},"209":{},"258":{},"259":{},"262":{},"265":{},"266":{},"267":{},"272":{}},"component":{}}],["north",{"_index":166,"title":{},"name":{},"text":{"2":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{}},"component":{}}],["note",{"_index":797,"title":{},"name":{},"text":{"15":{},"28":{},"56":{},"67":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"197":{},"213":{},"245":{},"259":{},"269":{},"274":{},"278":{},"280":{},"281":{}},"component":{}}],["noteworthi",{"_index":848,"title":{"18":{},"59":{},"89":{},"102":{},"118":{},"139":{},"165":{},"193":{}},"name":{},"text":{},"component":{}}],["noth",{"_index":2089,"title":{},"name":{},"text":{"245":{},"272":{},"281":{}},"component":{}}],["notic",{"_index":1614,"title":{},"name":{},"text":{"216":{},"218":{},"219":{},"279":{},"287":{}},"component":{}}],["notifi",{"_index":1649,"title":{},"name":{},"text":{"216":{},"259":{}},"component":{}}],["notify(msg",{"_index":1737,"title":{},"name":{},"text":{"218":{}},"component":{}}],["notin",{"_index":3079,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["now",{"_index":663,"title":{},"name":{},"text":{"13":{},"31":{},"54":{},"71":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"201":{},"216":{},"245":{},"258":{},"259":{},"263":{},"264":{},"266":{},"267":{},"269":{},"270":{},"271":{},"273":{},"274":{},"276":{},"279":{},"281":{},"283":{},"285":{},"287":{},"290":{}},"component":{}}],["npm",{"_index":528,"title":{},"name":{},"text":{"12":{},"53":{},"280":{},"286":{},"290":{}},"component":{}}],["nrf",{"_index":1837,"title":{"238":{},"242":{},"229-2":{},"239-7":{},"241-6":{},"243-6":{},"245-1":{}},"name":{},"text":{"231":{},"239":{},"241":{},"243":{},"245":{}},"component":{}}],["nrf52",{"_index":1848,"title":{},"name":{},"text":{"229":{},"232":{}},"component":{}}],["nrf52/microbit/esp8266",{"_index":1914,"title":{},"name":{},"text":{"232":{}},"component":{}}],["nrf52833_xxaa",{"_index":1990,"title":{},"name":{},"text":{"241":{},"242":{},"243":{}},"component":{}}],["nrf52840",{"_index":1821,"title":{"239":{}},"name":{},"text":{"220":{},"222":{},"226":{},"239":{}},"component":{}}],["nrf52840_xxaa",{"_index":1971,"title":{},"name":{},"text":{"238":{},"239":{}},"component":{}}],["nrf9160",{"_index":1849,"title":{},"name":{},"text":{"229":{}},"component":{}}],["ns",{"_index":2443,"title":{},"name":{},"text":{"263":{}},"component":{}}],["nucleo",{"_index":1807,"title":{"247-1":{},"248-1":{},"249-1":{},"254-1":{},"255-1":{}},"name":{},"text":{"220":{},"221":{},"224":{},"225":{},"229":{},"247":{},"248":{},"249":{},"254":{},"255":{}},"component":{}}],["null",{"_index":2315,"title":{},"name":{},"text":{"261":{},"270":{},"272":{},"273":{},"279":{},"281":{}},"component":{}}],["num",{"_index":1946,"title":{},"name":{},"text":{"236":{},"254":{},"255":{}},"component":{}}],["number",{"_index":581,"title":{},"name":{},"text":{"12":{},"29":{},"53":{},"69":{},"143":{},"169":{},"199":{},"236":{},"237":{},"254":{},"255":{},"263":{},"267":{},"268":{},"278":{},"280":{},"281":{},"285":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["number_partit",{"_index":2731,"title":{},"name":{},"text":{"273":{}},"component":{}}],["nutshel",{"_index":2692,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["nvm",{"_index":2926,"title":{},"name":{},"text":{"280":{}},"component":{}}],["o",{"_index":456,"title":{},"name":{},"text":{"8":{},"49":{},"184":{},"241":{},"262":{}},"component":{}}],["oauth",{"_index":667,"title":{},"name":{},"text":{"14":{},"37":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"280":{},"281":{}},"component":{}}],["oauth2",{"_index":1289,"title":{"36-3":{},"37-2":{},"76-3":{},"175-3":{},"206-3":{}},"name":{},"text":{"36":{},"37":{},"76":{},"77":{},"175":{},"206":{},"207":{},"258":{}},"component":{}}],["objcopi",{"_index":1996,"title":{},"name":{},"text":{"241":{}},"component":{}}],["object",{"_index":657,"title":{},"name":{},"text":{"13":{},"38":{},"39":{},"41":{},"54":{},"78":{},"80":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"209":{},"214":{},"218":{},"231":{},"261":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["objects/label",{"_index":3150,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["oc",{"_index":297,"title":{},"name":{},"text":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"259":{}},"component":{}}],["occasion",{"_index":2580,"title":{},"name":{},"text":{"267":{},"277":{}},"component":{}}],["occur",{"_index":2155,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["oci",{"_index":1570,"title":{},"name":{},"text":{"215":{}},"component":{}}],["ocm",{"_index":1045,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["od",{"_index":2837,"title":{},"name":{},"text":{"278":{}},"component":{}}],["oen",{"_index":1500,"title":{},"name":{},"text":{"208":{}},"component":{}}],["offer",{"_index":169,"title":{},"name":{},"text":{"3":{},"28":{},"29":{},"30":{},"31":{},"38":{},"41":{},"44":{},"67":{},"69":{},"70":{},"71":{},"80":{},"83":{},"96":{},"112":{},"128":{},"143":{},"144":{},"145":{},"153":{},"169":{},"170":{},"171":{},"179":{},"197":{},"199":{},"200":{},"201":{},"209":{},"212":{},"258":{},"259":{},"265":{},"266":{},"267":{},"268":{},"269":{},"271":{}},"component":{}}],["offici",{"_index":1432,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["offset",{"_index":1558,"title":{},"name":{},"text":{"214":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["oidc",{"_index":253,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{},"213":{},"281":{}},"component":{}}],["ok",{"_index":2574,"title":{},"name":{},"text":{"267":{}},"component":{}}],["ok(gamemessage::toggl",{"_index":1641,"title":{},"name":{},"text":{"216":{}},"component":{}}],["okd",{"_index":503,"title":{},"name":{},"text":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"component":{}}],["olm",{"_index":395,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["omit",{"_index":1461,"title":{},"name":{},"text":{"42":{},"81":{},"151":{},"177":{},"210":{},"261":{},"280":{},"281":{},"285":{}},"component":{}}],["omp",{"_index":1033,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["on",{"_index":124,"title":{"263-4":{}},"name":{},"text":{"2":{},"8":{},"14":{},"15":{},"17":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"36":{},"37":{},"40":{},"41":{},"42":{},"43":{},"49":{},"55":{},"56":{},"58":{},"66":{},"67":{},"68":{},"70":{},"71":{},"76":{},"77":{},"79":{},"80":{},"81":{},"82":{},"85":{},"86":{},"88":{},"93":{},"95":{},"98":{},"99":{},"101":{},"109":{},"111":{},"114":{},"115":{},"117":{},"122":{},"127":{},"132":{},"135":{},"136":{},"138":{},"152":{},"158":{},"161":{},"162":{},"164":{},"170":{},"175":{},"177":{},"178":{},"184":{},"189":{},"190":{},"192":{},"197":{},"198":{},"200":{},"201":{},"206":{},"207":{},"209":{},"210":{},"213":{},"216":{},"219":{},"220":{},"229":{},"231":{},"241":{},"245":{},"256":{},"258":{},"259":{},"261":{},"264":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"276":{},"277":{},"286":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["on/off",{"_index":3036,"title":{},"name":{},"text":{"287":{}},"component":{}}],["on_mount",{"_index":1661,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["on_mount(&mut",{"_index":1646,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["onboard",{"_index":69,"title":{},"name":{},"text":{"1":{}},"component":{}}],["onc",{"_index":164,"title":{},"name":{},"text":{"2":{},"5":{},"12":{},"14":{},"15":{},"26":{},"39":{},"42":{},"43":{},"46":{},"53":{},"55":{},"56":{},"81":{},"82":{},"85":{},"86":{},"90":{},"95":{},"98":{},"99":{},"106":{},"111":{},"114":{},"115":{},"119":{},"127":{},"129":{},"135":{},"136":{},"151":{},"152":{},"155":{},"161":{},"162":{},"177":{},"178":{},"181":{},"189":{},"190":{},"210":{},"214":{},"216":{},"218":{},"234":{},"236":{},"237":{},"239":{},"241":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"258":{},"259":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"279":{},"280":{},"281":{},"285":{},"290":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["onclos",{"_index":2318,"title":{},"name":{},"text":{"261":{}},"component":{}}],["onclose(sess",{"_index":2319,"title":{},"name":{},"text":{"261":{}},"component":{}}],["onerror",{"_index":2321,"title":{},"name":{},"text":{"261":{}},"component":{}}],["onerror(sess",{"_index":2322,"title":{},"name":{},"text":{"261":{}},"component":{}}],["onlin",{"_index":1544,"title":{},"name":{},"text":{"214":{}},"component":{}}],["onmountfutur",{"_index":1763,"title":{},"name":{},"text":{"218":{}},"component":{}}],["onopen",{"_index":2313,"title":{},"name":{},"text":{"261":{}},"component":{}}],["onopen(sess",{"_index":2314,"title":{},"name":{},"text":{"261":{}},"component":{}}],["onto",{"_index":2075,"title":{},"name":{},"text":{"245":{}},"component":{}}],["op",{"_index":1436,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"268":{}},"component":{}}],["opaqu",{"_index":1550,"title":{},"name":{},"text":{"214":{}},"component":{}}],["opc",{"_index":718,"title":{},"name":{},"text":{"15":{},"25":{},"56":{},"66":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["open",{"_index":674,"title":{"230-5":{}},"name":{},"text":{"14":{},"15":{},"25":{},"42":{},"55":{},"56":{},"66":{},"81":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"151":{},"161":{},"162":{},"177":{},"189":{},"190":{},"210":{},"229":{},"230":{},"236":{},"237":{},"254":{},"258":{},"259":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"276":{},"277":{},"285":{},"290":{}},"component":{}}],["openid",{"_index":636,"title":{},"name":{},"text":{"12":{},"53":{},"258":{}},"component":{}}],["openocd",{"_index":1843,"title":{},"name":{},"text":{"229":{}},"component":{}}],["openshift",{"_index":299,"title":{"262-4":{},"262-5":{},"269-2":{}},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"46":{},"49":{},"51":{},"53":{},"90":{},"93":{},"94":{},"106":{},"109":{},"110":{},"119":{},"122":{},"123":{},"129":{},"132":{},"133":{},"155":{},"158":{},"159":{},"181":{},"184":{},"186":{},"259":{},"260":{},"262":{},"268":{},"269":{},"280":{},"281":{},"288":{}},"component":{}}],["openssl",{"_index":559,"title":{},"name":{},"text":{"12":{},"53":{},"275":{}},"component":{}}],["oper",{"_index":46,"title":{"12-3":{},"18-3":{},"18-4":{},"18-5":{},"41-8":{},"53-3":{},"59-3":{},"59-4":{},"59-5":{},"80-8":{},"139-3":{},"139-4":{},"139-5":{},"165-3":{},"165-4":{},"165-5":{},"193-3":{},"193-4":{},"193-5":{},"209-8":{},"256-1":{}},"name":{},"text":{"1":{},"8":{},"12":{},"14":{},"16":{},"18":{},"22":{},"24":{},"25":{},"31":{},"41":{},"42":{},"49":{},"53":{},"55":{},"57":{},"59":{},"63":{},"65":{},"66":{},"71":{},"80":{},"81":{},"85":{},"87":{},"93":{},"98":{},"100":{},"109":{},"114":{},"116":{},"122":{},"132":{},"135":{},"137":{},"139":{},"151":{},"158":{},"161":{},"163":{},"165":{},"177":{},"184":{},"189":{},"191":{},"193":{},"201":{},"209":{},"210":{},"214":{},"230":{},"231":{},"251":{},"256":{},"261":{},"263":{},"272":{},"276":{},"280":{},"281":{},"282":{},"285":{},"289":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["opinion",{"_index":371,"title":{},"name":{},"text":{"8":{},"15":{},"38":{},"49":{},"56":{},"262":{}},"component":{}}],["opt",{"_index":396,"title":{},"name":{},"text":{"8":{},"26":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["optim",{"_index":2610,"title":{},"name":{},"text":{"268":{},"272":{},"273":{},"276":{}},"component":{}}],["optimist",{"_index":3097,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["option",{"_index":190,"title":{"4-2":{},"8-5":{},"12-2":{},"45-2":{},"49-5":{},"53-2":{},"93-5":{},"109-5":{},"122-5":{},"132-5":{},"154-2":{},"158-5":{},"180-2":{},"184-5":{}},"name":{},"text":{"4":{},"7":{},"8":{},"12":{},"19":{},"26":{},"27":{},"29":{},"31":{},"40":{},"41":{},"45":{},"48":{},"49":{},"53":{},"60":{},"68":{},"69":{},"71":{},"79":{},"80":{},"92":{},"93":{},"103":{},"108":{},"109":{},"121":{},"122":{},"124":{},"131":{},"132":{},"140":{},"143":{},"154":{},"157":{},"158":{},"166":{},"169":{},"180":{},"183":{},"184":{},"194":{},"198":{},"199":{},"201":{},"208":{},"209":{},"212":{},"213":{},"214":{},"231":{},"267":{},"268":{},"269":{},"274":{},"275":{},"279":{},"280":{},"281":{},"288":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["option(obtain",{"_index":1216,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["order",{"_index":131,"title":{},"name":{},"text":{"2":{},"4":{},"9":{},"10":{},"12":{},"14":{},"15":{},"18":{},"24":{},"26":{},"36":{},"41":{},"42":{},"43":{},"45":{},"50":{},"51":{},"53":{},"55":{},"56":{},"59":{},"65":{},"76":{},"78":{},"80":{},"81":{},"82":{},"85":{},"86":{},"89":{},"94":{},"95":{},"98":{},"99":{},"102":{},"110":{},"111":{},"114":{},"115":{},"118":{},"123":{},"127":{},"133":{},"135":{},"136":{},"139":{},"152":{},"154":{},"159":{},"161":{},"162":{},"165":{},"175":{},"177":{},"178":{},"180":{},"185":{},"186":{},"189":{},"190":{},"193":{},"206":{},"209":{},"210":{},"213":{},"216":{},"218":{},"234":{},"258":{},"261":{},"262":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"277":{},"280":{},"281":{},"282":{},"289":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["org",{"_index":875,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{}},"component":{}}],["org.bluez.mesh.management1",{"_index":2074,"title":{},"name":{},"text":{"245":{}},"component":{}}],["org.bluez.mesh.network1",{"_index":2069,"title":{},"name":{},"text":{"245":{}},"component":{}}],["org.bluez.mesh.node1",{"_index":2072,"title":{},"name":{},"text":{"245":{}},"component":{}}],["org/bluez/mesh",{"_index":2070,"title":{},"name":{},"text":{"245":{}},"component":{}}],["org/bluez/mesh/node326d83779e8ccbaf254d4b604dfec674",{"_index":2073,"title":{},"name":{},"text":{"245":{}},"component":{}}],["organ",{"_index":859,"title":{"19-4":{},"60-4":{},"103-4":{},"124-4":{},"140-4":{},"166-4":{},"194-4":{}},"name":{},"text":{"19":{},"23":{},"60":{},"64":{},"103":{},"124":{},"140":{},"166":{},"194":{},"268":{}},"component":{}}],["orient",{"_index":755,"title":{},"name":{},"text":{"15":{},"38":{},"56":{},"78":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["origin",{"_index":611,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"26":{},"31":{},"38":{},"41":{},"53":{},"56":{},"57":{},"71":{},"78":{},"80":{},"86":{},"87":{},"99":{},"100":{},"115":{},"116":{},"136":{},"137":{},"162":{},"163":{},"190":{},"191":{},"201":{},"209":{},"259":{},"262":{},"263":{}},"component":{}}],["os",{"_index":493,"title":{"12-6":{},"53-6":{}},"name":{},"text":{"10":{},"12":{},"51":{},"53":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{},"246":{}},"component":{}}],["oscil",{"_index":1962,"title":{},"name":{},"text":{"237":{}},"component":{}}],["ota",{"_index":1817,"title":{},"name":{},"text":{"220":{},"225":{},"255":{}},"component":{}}],["otaa",{"_index":1790,"title":{},"name":{},"text":{"220":{},"232":{},"235":{},"236":{},"237":{},"254":{},"255":{}},"component":{}}],["other",{"_index":84,"title":{},"name":{},"text":{"1":{},"22":{},"63":{},"234":{},"258":{}},"component":{}}],["otherwis",{"_index":798,"title":{},"name":{},"text":{"15":{},"26":{},"28":{},"31":{},"56":{},"67":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"197":{},"201":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["ourselv",{"_index":2819,"title":{},"name":{},"text":{"277":{}},"component":{}}],["out",{"_index":319,"title":{"280-8":{},"281-8":{}},"name":{},"text":{"6":{},"8":{},"9":{},"13":{},"14":{},"15":{},"23":{},"27":{},"29":{},"31":{},"36":{},"38":{},"40":{},"41":{},"47":{},"49":{},"50":{},"54":{},"55":{},"56":{},"64":{},"68":{},"69":{},"71":{},"76":{},"78":{},"79":{},"80":{},"84":{},"85":{},"86":{},"91":{},"93":{},"97":{},"98":{},"99":{},"107":{},"109":{},"113":{},"114":{},"115":{},"120":{},"122":{},"130":{},"132":{},"134":{},"135":{},"136":{},"143":{},"156":{},"158":{},"160":{},"161":{},"162":{},"169":{},"182":{},"184":{},"185":{},"188":{},"189":{},"190":{},"198":{},"199":{},"201":{},"206":{},"208":{},"209":{},"212":{},"213":{},"214":{},"216":{},"230":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"246":{},"247":{},"249":{},"251":{},"252":{},"254":{},"255":{},"256":{},"258":{},"259":{},"261":{},"262":{},"263":{},"266":{},"267":{},"269":{},"270":{},"271":{},"272":{},"273":{},"276":{},"277":{},"279":{},"281":{},"283":{},"285":{},"287":{}},"component":{}}],["outbound",{"_index":2254,"title":{"261-4":{}},"name":{},"text":{"261":{}},"component":{}}],["outcom",{"_index":1420,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"268":{}},"component":{}}],["outer",{"_index":1695,"title":{},"name":{},"text":{"216":{}},"component":{}}],["outgo",{"_index":1064,"title":{"26-11":{}},"name":{},"text":{"26":{},"38":{},"41":{},"80":{},"209":{},"261":{},"263":{},"280":{},"281":{}},"component":{}}],["outgoing(\"devic",{"_index":2988,"title":{},"name":{},"text":{"281":{}},"component":{}}],["outgoing(channels.telemetri",{"_index":2260,"title":{},"name":{},"text":{"261":{}},"component":{}}],["output",{"_index":1940,"title":{},"name":{},"text":{"236":{},"237":{},"245":{},"254":{},"262":{},"263":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["outsid",{"_index":499,"title":{},"name":{},"text":{"10":{},"13":{},"14":{},"15":{},"25":{},"51":{},"54":{},"55":{},"56":{},"66":{},"84":{},"85":{},"86":{},"97":{},"98":{},"99":{},"113":{},"114":{},"115":{},"134":{},"135":{},"136":{},"159":{},"160":{},"161":{},"162":{},"186":{},"188":{},"189":{},"190":{},"288":{}},"component":{}}],["ov71am72ae8o295ohmxek7axy/0uemu/h9lqmzshftezplpi9d1537o4/xlxizpl",{"_index":1152,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["over",{"_index":832,"title":{"28-1":{},"31-13":{},"36-10":{},"67-1":{},"71-13":{},"76-10":{},"197-1":{},"201-13":{},"206-10":{}},"name":{},"text":{"17":{},"28":{},"29":{},"31":{},"36":{},"40":{},"41":{},"58":{},"67":{},"69":{},"71":{},"76":{},"79":{},"80":{},"88":{},"101":{},"117":{},"138":{},"143":{},"164":{},"169":{},"192":{},"197":{},"199":{},"201":{},"206":{},"208":{},"209":{},"220":{},"232":{},"235":{},"236":{},"237":{},"241":{},"254":{},"255":{},"267":{},"268":{},"270":{},"273":{},"277":{},"278":{}},"component":{}}],["overal",{"_index":1418,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"265":{}},"component":{}}],["overhead",{"_index":1520,"title":{},"name":{},"text":{"212":{},"231":{}},"component":{}}],["overlap",{"_index":1788,"title":{},"name":{},"text":{"220":{}},"component":{}}],["overrid",{"_index":407,"title":{"27-3":{},"68-3":{},"198-3":{}},"name":{},"text":{"8":{},"21":{},"27":{},"30":{},"40":{},"49":{},"62":{},"68":{},"70":{},"79":{},"93":{},"105":{},"109":{},"122":{},"126":{},"132":{},"142":{},"158":{},"168":{},"170":{},"184":{},"196":{},"198":{},"200":{},"208":{},"275":{}},"component":{}}],["overridden",{"_index":619,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["overview",{"_index":1511,"title":{"212-1":{}},"name":{},"text":{"261":{},"265":{},"269":{}},"component":{}}],["overwrit",{"_index":1410,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["own",{"_index":122,"title":{},"name":{},"text":{"2":{},"19":{},"43":{},"60":{},"82":{},"95":{},"103":{},"111":{},"124":{},"127":{},"140":{},"152":{},"166":{},"178":{},"194":{},"305":{}},"component":{}}],["owner",{"_index":870,"title":{},"name":{},"text":{"19":{},"39":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{},"275":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["ownership",{"_index":1341,"title":{"39-3":{},"292-53":{},"292-56":{},"292-60":{},"292-63":{},"295-53":{},"295-56":{},"295-60":{},"295-63":{},"298-52":{},"298-55":{},"298-59":{},"298-62":{},"301-53":{},"301-56":{},"301-60":{},"301-63":{}},"name":{},"text":{"39":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["p",{"_index":425,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{},"266":{}},"component":{}}],["p1",{"_index":2012,"title":{},"name":{},"text":{"244":{}},"component":{}}],["p14",{"_index":2020,"title":{},"name":{},"text":{"244":{}},"component":{}}],["p15",{"_index":2022,"title":{},"name":{},"text":{"244":{}},"component":{}}],["p2",{"_index":2014,"title":{},"name":{},"text":{"244":{}},"component":{}}],["p8",{"_index":2016,"title":{},"name":{},"text":{"244":{}},"component":{}}],["p9",{"_index":2018,"title":{},"name":{},"text":{"244":{}},"component":{}}],["pace",{"_index":1015,"title":{},"name":{},"text":{"24":{},"65":{},"212":{},"214":{}},"component":{}}],["packag",{"_index":346,"title":{"217":{},"8-1":{},"49-1":{},"93-1":{},"109-1":{},"122-1":{},"132-1":{},"158-1":{},"184-1":{},"218-7":{}},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"91":{},"93":{},"107":{},"109":{},"122":{},"132":{},"158":{},"184":{},"216":{},"217":{},"218":{},"245":{},"257":{},"262":{}},"component":{}}],["packet",{"_index":1117,"title":{},"name":{},"text":{"26":{},"245":{}},"component":{}}],["page",{"_index":1350,"title":{},"name":{},"text":{"39":{},"213":{},"258":{},"261":{},"264":{},"269":{},"270":{},"272":{},"273":{},"274":{},"280":{},"281":{}},"component":{}}],["pair",{"_index":952,"title":{},"name":{},"text":{"22":{},"63":{},"258":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["panel",{"_index":2566,"title":{"267-4":{}},"name":{},"text":{"267":{},"270":{},"273":{}},"component":{}}],["panic",{"_index":1620,"title":{},"name":{},"text":{"216":{}},"component":{}}],["panic_prob",{"_index":1626,"title":{},"name":{},"text":{"216":{}},"component":{}}],["paper",{"_index":1824,"title":{},"name":{},"text":{"220":{},"224":{},"248":{}},"component":{}}],["paragraph",{"_index":795,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["parallel",{"_index":1001,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["paramet",{"_index":1056,"title":{"30-4":{},"70-4":{},"170-4":{},"200-4":{},"292-5":{},"292-8":{},"292-12":{},"292-18":{},"292-21":{},"292-25":{},"292-28":{},"292-32":{},"292-35":{},"292-39":{},"292-42":{},"292-46":{},"292-49":{},"292-54":{},"292-57":{},"292-61":{},"292-64":{},"292-67":{},"292-70":{},"292-78":{},"292-82":{},"292-86":{},"295-5":{},"295-8":{},"295-12":{},"295-18":{},"295-21":{},"295-25":{},"295-28":{},"295-32":{},"295-35":{},"295-39":{},"295-42":{},"295-46":{},"295-49":{},"295-54":{},"295-57":{},"295-61":{},"295-64":{},"295-67":{},"295-70":{},"295-78":{},"295-82":{},"295-86":{},"298-7":{},"298-11":{},"298-17":{},"298-20":{},"298-24":{},"298-27":{},"298-31":{},"298-34":{},"298-38":{},"298-41":{},"298-45":{},"298-48":{},"298-53":{},"298-56":{},"298-60":{},"298-63":{},"298-66":{},"298-69":{},"298-77":{},"298-81":{},"298-85":{},"301-5":{},"301-8":{},"301-12":{},"301-18":{},"301-21":{},"301-25":{},"301-28":{},"301-32":{},"301-35":{},"301-39":{},"301-42":{},"301-46":{},"301-49":{},"301-54":{},"301-57":{},"301-61":{},"301-64":{},"301-67":{},"301-70":{},"301-78":{},"301-82":{},"301-86":{}},"name":{},"text":{"25":{},"29":{},"30":{},"37":{},"41":{},"42":{},"66":{},"69":{},"70":{},"77":{},"80":{},"81":{},"143":{},"169":{},"170":{},"177":{},"199":{},"200":{},"207":{},"209":{},"210":{},"215":{},"216":{},"255":{},"280":{},"281":{}},"component":{}}],["parent",{"_index":1792,"title":{},"name":{},"text":{"220":{},"232":{}},"component":{}}],["pars",{"_index":1266,"title":{},"name":{},"text":{"31":{},"71":{},"201":{},"261":{}},"component":{}}],["part",{"_index":90,"title":{},"name":{},"text":{"1":{},"8":{},"12":{},"13":{},"19":{},"22":{},"24":{},"25":{},"30":{},"33":{},"36":{},"40":{},"41":{},"42":{},"49":{},"53":{},"54":{},"60":{},"63":{},"65":{},"66":{},"70":{},"73":{},"76":{},"79":{},"80":{},"81":{},"84":{},"93":{},"97":{},"103":{},"109":{},"113":{},"122":{},"124":{},"132":{},"134":{},"140":{},"151":{},"158":{},"160":{},"166":{},"170":{},"175":{},"177":{},"184":{},"188":{},"194":{},"200":{},"206":{},"208":{},"209":{},"210":{},"231":{},"257":{},"258":{},"263":{},"265":{},"266":{},"267":{},"269":{},"270":{},"273":{},"277":{},"279":{},"280":{},"281":{}},"component":{}}],["parti",{"_index":983,"title":{},"name":{},"text":{"24":{},"65":{},"220":{}},"component":{}}],["particular",{"_index":1554,"title":{},"name":{},"text":{"214":{},"216":{},"217":{}},"component":{}}],["partit",{"_index":2690,"title":{"273-6":{}},"name":{},"text":{"270":{},"273":{}},"component":{}}],["partitioning_column",{"_index":2730,"title":{},"name":{},"text":{"273":{}},"component":{}}],["partitionkey=drogue%2dpublic%2dtemperature/a4%3ac1%3a38%3aa2%3a6d%3a42",{"_index":2515,"title":{},"name":{},"text":{"263":{}},"component":{}}],["parts.length",{"_index":2849,"title":{},"name":{},"text":{"279":{}},"component":{}}],["parts[0].startswith(\"p",{"_index":2850,"title":{},"name":{},"text":{"279":{}},"component":{}}],["parts[1].equals(this.respons",{"_index":2853,"title":{},"name":{},"text":{"279":{}},"component":{}}],["parts[1].startswith(\"l",{"_index":2851,"title":{},"name":{},"text":{"279":{}},"component":{}}],["pass",{"_index":257,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"15":{},"26":{},"29":{},"36":{},"37":{},"41":{},"42":{},"45":{},"47":{},"53":{},"56":{},"69":{},"76":{},"80":{},"81":{},"86":{},"99":{},"115":{},"120":{},"130":{},"136":{},"143":{},"151":{},"154":{},"156":{},"162":{},"169":{},"175":{},"177":{},"180":{},"182":{},"190":{},"199":{},"206":{},"209":{},"210":{},"215":{},"216":{},"218":{},"231":{},"241":{},"266":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["passcredenti",{"_index":3122,"title":{"293-18":{},"296-18":{},"299-18":{},"302-18":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["passiv",{"_index":760,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["password",{"_index":213,"title":{"42-9":{},"42-22":{},"81-9":{},"81-22":{},"151-9":{},"177-9":{},"177-22":{},"210-9":{},"210-22":{},"293-19":{},"296-19":{},"299-19":{},"302-19":{}},"name":{},"text":{"4":{},"9":{},"14":{},"15":{},"21":{},"27":{},"31":{},"36":{},"42":{},"45":{},"50":{},"55":{},"56":{},"62":{},"68":{},"71":{},"76":{},"81":{},"85":{},"86":{},"98":{},"99":{},"105":{},"114":{},"115":{},"126":{},"135":{},"136":{},"142":{},"154":{},"161":{},"162":{},"168":{},"175":{},"177":{},"180":{},"185":{},"189":{},"190":{},"196":{},"198":{},"201":{},"206":{},"210":{},"220":{},"232":{},"233":{},"234":{},"244":{},"249":{},"251":{},"258":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"285":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["past",{"_index":2239,"title":{},"name":{},"text":{"259":{},"272":{}},"component":{}}],["patch",{"_index":2925,"title":{"292-27":{},"292-48":{},"295-27":{},"295-48":{},"298-26":{},"298-47":{},"301-27":{},"301-48":{}},"name":{},"text":{"280":{},"281":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["path",{"_index":462,"title":{},"name":{},"text":{"8":{},"12":{},"30":{},"41":{},"49":{},"53":{},"70":{},"80":{},"170":{},"184":{},"200":{},"209":{},"215":{},"239":{},"241":{},"245":{},"246":{},"251":{},"255":{},"262":{},"263":{},"269":{},"272":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["path_to_cert",{"_index":460,"title":{},"name":{},"text":{"8":{},"49":{},"184":{}},"component":{}}],["path_to_cert/tls.crt",{"_index":453,"title":{},"name":{},"text":{"8":{},"49":{},"184":{}},"component":{}}],["path_to_cert/tls.key",{"_index":452,"title":{},"name":{},"text":{"8":{},"49":{},"184":{}},"component":{}}],["pathtyp",{"_index":2395,"title":{},"name":{},"text":{"262":{}},"component":{}}],["patienc",{"_index":532,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["patient",{"_index":2007,"title":{},"name":{},"text":{"241":{}},"component":{}}],["pattern",{"_index":672,"title":{},"name":{},"text":{"14":{},"24":{},"31":{},"55":{},"65":{},"71":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"201":{},"219":{},"261":{},"268":{},"270":{},"273":{}},"component":{}}],["pay",{"_index":2537,"title":{},"name":{},"text":{"265":{},"268":{},"269":{},"272":{},"276":{},"285":{}},"component":{}}],["payload",{"_index":654,"title":{"31-9":{},"38-4":{},"38-7":{},"38-10":{},"71-9":{},"78-4":{},"78-7":{},"78-10":{},"201-9":{}},"name":{},"text":{"13":{},"15":{},"26":{},"29":{},"31":{},"36":{},"37":{},"38":{},"40":{},"41":{},"54":{},"56":{},"69":{},"71":{},"76":{},"78":{},"79":{},"80":{},"84":{},"86":{},"97":{},"99":{},"113":{},"115":{},"134":{},"136":{},"143":{},"160":{},"162":{},"169":{},"175":{},"188":{},"190":{},"199":{},"201":{},"206":{},"208":{},"209":{},"214":{},"234":{},"251":{},"261":{},"263":{},"265":{},"268":{},"269":{},"272":{},"279":{},"280":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["payload.class",{"_index":2275,"title":{},"name":{},"text":{"261":{}},"component":{}}],["pb",{"_index":2039,"title":{},"name":{},"text":{"245":{}},"component":{}}],["pc",{"_index":1818,"title":{},"name":{},"text":{"220":{},"229":{},"231":{},"234":{},"235":{}},"component":{}}],["peak",{"_index":746,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["peek",{"_index":2520,"title":{},"name":{"264":{}},"text":{},"component":{}}],["pem",{"_index":1495,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{}},"component":{}}],["pend",{"_index":3099,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["people’",{"_index":2622,"title":{},"name":{},"text":{"268":{}},"component":{}}],["per",{"_index":904,"title":{},"name":{},"text":{"21":{},"26":{},"39":{},"42":{},"62":{},"81":{},"105":{},"126":{},"142":{},"168":{},"177":{},"196":{},"210":{},"261":{},"268":{},"272":{},"279":{}},"component":{}}],["percentag",{"_index":1209,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["perform",{"_index":250,"title":{},"name":{},"text":{"4":{},"12":{},"14":{},"15":{},"22":{},"25":{},"26":{},"31":{},"41":{},"42":{},"45":{},"53":{},"55":{},"56":{},"63":{},"66":{},"71":{},"80":{},"81":{},"85":{},"98":{},"114":{},"135":{},"151":{},"154":{},"161":{},"177":{},"180":{},"189":{},"201":{},"209":{},"210":{},"231":{},"266":{},"267":{},"269":{}},"component":{}}],["period",{"_index":773,"title":{},"name":{},"text":{"15":{},"24":{},"26":{},"56":{},"65":{},"267":{},"268":{},"269":{},"270":{},"273":{},"277":{},"279":{},"280":{},"281":{}},"component":{}}],["peripher",{"_index":1711,"title":{},"name":{},"text":{"216":{},"217":{},"220":{},"231":{},"237":{},"251":{}},"component":{}}],["perist",{"_index":1480,"title":{},"name":{},"text":{"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["permiss",{"_index":866,"title":{},"name":{},"text":{"19":{},"42":{},"60":{},"81":{},"103":{},"124":{},"140":{},"166":{},"177":{},"194":{},"210":{},"272":{}},"component":{}}],["perpiher",{"_index":1966,"title":{},"name":{},"text":{"237":{}},"component":{}}],["persist",{"_index":690,"title":{"15-2":{},"56-2":{},"86-2":{},"99-2":{},"115-2":{},"136-2":{},"162-2":{},"190-2":{}},"name":{},"text":{"14":{},"15":{},"26":{},"55":{},"56":{},"83":{},"85":{},"96":{},"98":{},"112":{},"114":{},"135":{},"161":{},"189":{},"214":{},"265":{},"270":{},"273":{}},"component":{}}],["persistentvolum",{"_index":302,"title":{},"name":{},"text":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["person",{"_index":2749,"title":{},"name":{},"text":{"274":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["perspect",{"_index":821,"title":{},"name":{},"text":{"16":{},"32":{},"57":{},"72":{},"87":{},"100":{},"116":{},"137":{},"146":{},"163":{},"172":{},"191":{},"202":{},"259":{}},"component":{}}],["phase",{"_index":1371,"title":{},"name":{},"text":{"40":{},"79":{},"208":{},"286":{}},"component":{}}],["phi",{"_index":2809,"title":{},"name":{},"text":{"276":{}},"component":{}}],["phone",{"_index":999,"title":{},"name":{},"text":{"24":{},"65":{},"220":{},"258":{},"279":{}},"component":{}}],["phy_v1_0",{"_index":897,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["physic",{"_index":978,"title":{},"name":{},"text":{"24":{},"25":{},"26":{},"65":{},"66":{},"266":{}},"component":{}}],["pi",{"_index":1803,"title":{"245-2":{},"245-4":{},"245-8":{},"246-1":{}},"name":{},"text":{"220":{},"221":{},"229":{},"245":{},"246":{},"277":{}},"component":{}}],["pi@raspberrypi",{"_index":2066,"title":{},"name":{},"text":{"245":{}},"component":{}}],["pick",{"_index":2174,"title":{},"name":{},"text":{"256":{},"259":{},"269":{},"274":{}},"component":{}}],["picker",{"_index":2745,"title":{},"name":{},"text":{"274":{}},"component":{}}],["pico",{"_index":1804,"title":{"246-1":{}},"name":{},"text":{"220":{},"221":{},"229":{},"246":{}},"component":{}}],["pico_sdk_path/build/elf2uf2/elf2uf2",{"_index":2113,"title":{},"name":{},"text":{"246":{}},"component":{}}],["piec",{"_index":1399,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"274":{},"278":{},"280":{},"281":{}},"component":{}}],["piggyback",{"_index":1198,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["pin",{"_index":1720,"title":{"244-4":{}},"name":{},"text":{"217":{},"245":{}},"component":{}}],["pin_mut!(ev",{"_index":1675,"title":{},"name":{},"text":{"216":{}},"component":{}}],["pin_mut!(tick",{"_index":1679,"title":{},"name":{},"text":{"216":{}},"component":{}}],["pin_mut!(timeout",{"_index":1674,"title":{},"name":{},"text":{"216":{}},"component":{}}],["ping",{"_index":1945,"title":{},"name":{},"text":{"236":{},"254":{},"255":{}},"component":{}}],["ping:1",{"_index":2813,"title":{},"name":{},"text":{"276":{}},"component":{}}],["ping:{},l",{"_index":2888,"title":{},"name":{},"text":{"279":{}},"component":{}}],["pipelin",{"_index":1049,"title":{},"name":{},"text":{"25":{},"66":{},"212":{},"213":{},"215":{}},"component":{}}],["place",{"_index":822,"title":{},"name":{},"text":{"16":{},"22":{},"24":{},"25":{},"26":{},"57":{},"63":{},"65":{},"66":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"231":{},"259":{},"269":{},"281":{}},"component":{}}],["plain",{"_index":1179,"title":{"31-11":{},"40-5":{},"71-11":{},"79-5":{},"201-11":{},"208-5":{},"234-6":{},"251-6":{}},"name":{},"text":{"28":{},"31":{},"42":{},"67":{},"71":{},"81":{},"177":{},"197":{},"201":{},"210":{},"251":{},"266":{},"281":{},"288":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["plaintop",{"_index":1379,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["plan",{"_index":385,"title":{"269-1":{},"279-1":{}},"name":{},"text":{"8":{},"20":{},"49":{},"61":{},"93":{},"104":{},"109":{},"122":{},"125":{},"132":{},"141":{},"158":{},"167":{},"184":{},"195":{},"267":{},"268":{},"272":{},"275":{},"280":{},"281":{}},"component":{}}],["plane",{"_index":664,"title":{"14":{},"15":{},"55":{},"56":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{}},"name":{},"text":{"17":{},"25":{},"58":{},"66":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["platform",{"_index":521,"title":{},"name":{},"text":{"12":{},"25":{},"41":{},"53":{},"66":{},"80":{},"209":{}},"component":{}}],["play",{"_index":682,"title":{},"name":{},"text":{"14":{},"16":{},"55":{},"57":{},"85":{},"87":{},"98":{},"100":{},"114":{},"116":{},"135":{},"137":{},"161":{},"163":{},"189":{},"191":{},"267":{},"269":{},"272":{},"283":{},"290":{}},"component":{}}],["playground.org",{"_index":635,"title":{},"name":{},"text":{"12":{},"53":{},"264":{}},"component":{}}],["playground.org/realms/drogu",{"_index":640,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["playground.org:443",{"_index":2454,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["pleas",{"_index":2087,"title":{},"name":{},"text":{"245":{},"263":{},"268":{},"285":{}},"component":{}}],["plenti",{"_index":2903,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["plot",{"_index":3053,"title":{},"name":{},"text":{"290":{}},"component":{}}],["plu",{"_index":1346,"title":{},"name":{},"text":{"39":{},"262":{}},"component":{}}],["plugin",{"_index":2242,"title":{},"name":{},"text":{"259":{}},"component":{}}],["plugin:1.13.2.final:dev",{"_index":2971,"title":{},"name":{},"text":{"281":{}},"component":{}}],["podman",{"_index":526,"title":{},"name":{},"text":{"12":{},"53":{},"94":{},"110":{},"123":{},"133":{},"159":{},"262":{}},"component":{}}],["point",{"_index":461,"title":{},"name":{},"text":{"8":{},"12":{},"18":{},"26":{},"49":{},"53":{},"59":{},"89":{},"93":{},"102":{},"109":{},"118":{},"122":{},"132":{},"139":{},"158":{},"165":{},"184":{},"193":{},"216":{},"218":{},"234":{},"251":{},"267":{},"280":{},"283":{},"285":{}},"component":{}}],["pointer",{"_index":2638,"title":{},"name":{},"text":{"268":{},"279":{},"287":{}},"component":{}}],["pojocloudeventdatamapper.from(this.objectmapp",{"_index":2274,"title":{},"name":{},"text":{"261":{}},"component":{}}],["polici",{"_index":2845,"title":{},"name":{},"text":{"279":{}},"component":{}}],["polish",{"_index":2578,"title":{},"name":{},"text":{"267":{}},"component":{}}],["poll",{"_index":1555,"title":{},"name":{},"text":{"214":{},"231":{},"251":{}},"component":{}}],["pollut",{"_index":928,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["popul",{"_index":630,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["popular",{"_index":3006,"title":{},"name":{},"text":{"283":{},"288":{}},"component":{}}],["port",{"_index":229,"title":{},"name":{},"text":{"4":{},"5":{},"14":{},"45":{},"46":{},"55":{},"85":{},"98":{},"114":{},"119":{},"129":{},"135":{},"154":{},"155":{},"161":{},"180":{},"181":{},"189":{},"234":{},"251":{},"261":{},"262":{},"267":{},"269":{},"280":{},"281":{},"283":{},"285":{},"290":{}},"component":{}}],["portfolio",{"_index":2534,"title":{},"name":{},"text":{"265":{}},"component":{}}],["portion",{"_index":2650,"title":{},"name":{},"text":{"269":{},"273":{}},"component":{}}],["possibl",{"_index":196,"title":{},"name":{},"text":{"4":{},"7":{},"8":{},"14":{},"15":{},"17":{},"19":{},"26":{},"27":{},"28":{},"31":{},"36":{},"37":{},"39":{},"41":{},"42":{},"45":{},"48":{},"49":{},"55":{},"56":{},"58":{},"60":{},"67":{},"68":{},"71":{},"76":{},"77":{},"80":{},"81":{},"85":{},"86":{},"88":{},"92":{},"93":{},"98":{},"99":{},"101":{},"103":{},"108":{},"109":{},"114":{},"115":{},"117":{},"121":{},"122":{},"124":{},"131":{},"132":{},"135":{},"136":{},"138":{},"140":{},"151":{},"154":{},"157":{},"158":{},"161":{},"162":{},"164":{},"166":{},"175":{},"177":{},"180":{},"183":{},"184":{},"189":{},"190":{},"192":{},"194":{},"197":{},"198":{},"201":{},"206":{},"207":{},"209":{},"210":{},"219":{},"258":{},"261":{},"265":{},"280":{},"281":{}},"component":{}}],["possible[2",{"_index":1373,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["post",{"_index":1234,"title":{"292-4":{},"292-14":{},"292-34":{},"292-77":{},"292-85":{},"295-4":{},"295-14":{},"295-34":{},"295-77":{},"295-85":{},"298-4":{},"298-13":{},"298-33":{},"298-76":{},"298-84":{},"301-4":{},"301-14":{},"301-34":{},"301-77":{},"301-85":{},"304-5":{},"304-7":{}},"name":{},"text":{"30":{},"70":{},"170":{},"200":{},"215":{}},"component":{}}],["postgr",{"_index":232,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{},"283":{}},"component":{}}],["postgres://tsdbadmin@af4k0qkmbz.yo2nkz74j4.tsdb.cloud.timescale.com:37249/tsdb?sslmode=requir",{"_index":2705,"title":{},"name":{},"text":{"272":{}},"component":{}}],["postgresql",{"_index":201,"title":{},"name":{},"text":{"4":{},"12":{},"14":{},"22":{},"25":{},"45":{},"53":{},"55":{},"63":{},"66":{},"85":{},"98":{},"114":{},"135":{},"154":{},"161":{},"180":{},"189":{},"267":{},"268":{},"269":{},"272":{}},"component":{}}],["postgresql__connection__dbnam",{"_index":2652,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postgresql__connection__host",{"_index":2649,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postgresql__connection__password",{"_index":2654,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postgresql__connection__port",{"_index":2651,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postgresql__connection__us",{"_index":2653,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postgresql__t",{"_index":2655,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postgresql__time_column",{"_index":2656,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postgresql_database=drogu",{"_index":237,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["postgresql_password=admin123456",{"_index":236,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["postgresql_username=admin",{"_index":235,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["postgressql",{"_index":2639,"title":{},"name":{},"text":{"269":{}},"component":{}}],["postresql",{"_index":2568,"title":{},"name":{},"text":{"267":{}},"component":{}}],["potenti",{"_index":915,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["power",{"_index":809,"title":{},"name":{},"text":{"16":{},"25":{},"57":{},"66":{},"229":{},"231":{},"234":{},"236":{},"237":{},"244":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"263":{},"266":{},"272":{},"279":{},"281":{},"285":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["powerful",{"_index":1482,"title":{},"name":{},"text":{"87":{},"100":{},"116":{},"137":{},"163":{},"191":{}},"component":{}}],["practic",{"_index":1621,"title":{},"name":{},"text":{"216":{},"235":{},"236":{},"237":{},"254":{},"255":{}},"component":{}}],["pre",{"_index":188,"title":{"10":{},"41":{},"51":{},"80":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{},"209":{},"4-1":{},"4-2":{},"6-1":{},"12-1":{},"19-2":{},"20-2":{},"42-10":{},"42-13":{},"42-16":{},"42-20":{},"45-1":{},"45-2":{},"47-1":{},"53-1":{},"60-2":{},"61-2":{},"81-10":{},"81-13":{},"81-16":{},"81-20":{},"91-1":{},"103-2":{},"104-2":{},"107-1":{},"120-1":{},"124-2":{},"125-2":{},"130-1":{},"140-2":{},"141-2":{},"154-1":{},"154-2":{},"156-1":{},"166-2":{},"167-2":{},"177-10":{},"177-13":{},"177-16":{},"177-20":{},"180-1":{},"180-2":{},"182-1":{},"194-2":{},"195-2":{},"210-10":{},"210-13":{},"210-16":{},"210-20":{},"258-1":{},"258-6":{},"260-1":{},"268-3":{},"277-1":{},"286-1":{}},"name":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"text":{"12":{},"14":{},"41":{},"53":{},"55":{},"80":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"209":{},"251":{},"258":{},"259":{},"260":{},"270":{},"271":{},"273":{},"277":{},"285":{},"286":{},"290":{}},"component":{}}],["preced",{"_index":1795,"title":{},"name":{},"text":{"220":{},"232":{},"270":{},"273":{}},"component":{}}],["precis",{"_index":2718,"title":{},"name":{},"text":{"272":{},"273":{}},"component":{}}],["predefin",{"_index":1652,"title":{},"name":{},"text":{"216":{}},"component":{}}],["predict",{"_index":926,"title":{"24":{},"65":{}},"name":{"24":{},"65":{}},"text":{"22":{},"23":{},"24":{},"25":{},"63":{},"64":{},"65":{},"66":{},"268":{},"270":{},"273":{}},"component":{}}],["prefer",{"_index":584,"title":{},"name":{},"text":{"12":{},"53":{},"266":{}},"component":{}}],["prefix",{"_index":437,"title":{},"name":{},"text":{"8":{},"31":{},"49":{},"71":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"201":{},"262":{},"279":{},"280":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["preformat",{"_index":2332,"title":{},"name":{},"text":{"261":{}},"component":{}}],["premis",{"_index":930,"title":{},"name":{},"text":{"22":{},"63":{},"259":{}},"component":{}}],["prepar",{"_index":263,"title":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"280-6":{},"281-6":{}},"name":{},"text":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"229":{},"256":{},"279":{},"287":{}},"component":{}}],["prerequisit",{"_index":223,"title":{"213-2":{},"215-1":{},"233-2":{},"234-2":{},"235-2":{},"236-2":{},"237-2":{},"239-1":{},"241-1":{},"243-1":{},"244-2":{},"246-2":{},"247-2":{},"248-2":{},"249-2":{},"251-2":{},"252-2":{},"254-2":{},"255-2":{}},"name":{},"text":{"4":{},"45":{},"154":{},"180":{},"290":{}},"component":{}}],["present",{"_index":585,"title":{},"name":{},"text":{"12":{},"29":{},"53":{},"69":{},"143":{},"169":{},"199":{},"211":{},"246":{},"258":{},"269":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["press",{"_index":1650,"title":{"276-5":{}},"name":{},"text":{"216":{},"236":{},"244":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"261":{},"267":{},"269":{},"270":{},"273":{},"274":{},"276":{},"279":{},"280":{},"281":{},"285":{}},"component":{}}],["pretti",{"_index":1395,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"266":{},"268":{},"269":{},"270":{},"272":{},"273":{},"279":{},"280":{},"281":{},"287":{}},"component":{}}],["prevent",{"_index":2721,"title":{},"name":{},"text":{"273":{}},"component":{}}],["previou",{"_index":1565,"title":{},"name":{},"text":{"214":{},"219":{},"261":{},"262":{},"264":{},"266":{},"267":{},"269":{},"280":{},"281":{},"283":{}},"component":{}}],["previous",{"_index":2582,"title":{},"name":{},"text":{"267":{},"283":{}},"component":{}}],["primari",{"_index":1726,"title":{},"name":{},"text":{"218":{},"245":{}},"component":{}}],["primarili",{"_index":1069,"title":{},"name":{},"text":{"26":{}},"component":{}}],["print",{"_index":482,"title":{},"name":{},"text":{"9":{},"50":{},"185":{},"216":{},"241":{},"244":{},"251":{},"258":{},"262":{}},"component":{}}],["prioriti",{"_index":1797,"title":{},"name":{},"text":{"220":{},"232":{},"245":{}},"component":{}}],["privat",{"_index":2303,"title":{},"name":{},"text":{"261":{}},"component":{}}],["privileg",{"_index":3049,"title":{},"name":{},"text":{"289":{}},"component":{}}],["prmp6zjzzn7ikw0kkp/32+ivqtqi0cdd4xn+godwik1o5tmlosbdj1fu/7xk9tnd",{"_index":1161,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["probe",{"_index":1624,"title":{},"name":{},"text":{"216":{},"220":{},"229":{},"232":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"276":{},"282":{},"285":{},"289":{}},"component":{}}],["probe_run_chip",{"_index":3025,"title":{},"name":{},"text":{"285":{}},"component":{}}],["probe_run_chip=${chip",{"_index":2149,"title":{},"name":{},"text":{"251":{}},"component":{}}],["probe_run_chip=stm32l475vg",{"_index":3023,"title":{},"name":{},"text":{"285":{}},"component":{}}],["probe_run_chip=stm32l4s5vi",{"_index":3026,"title":{},"name":{},"text":{"285":{}},"component":{}}],["proberli",{"_index":1929,"title":{},"name":{},"text":{"234":{}},"component":{}}],["problem",{"_index":101,"title":{},"name":{},"text":{"1":{},"17":{},"25":{},"37":{},"58":{},"66":{},"77":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"207":{},"231":{},"236":{},"237":{},"244":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"279":{},"285":{}},"component":{}}],["proce",{"_index":2747,"title":{},"name":{},"text":{"274":{},"275":{},"284":{}},"component":{}}],["procedur",{"_index":858,"title":{"19-3":{},"20-3":{},"42-11":{},"42-14":{},"42-17":{},"42-21":{},"60-3":{},"61-3":{},"81-11":{},"81-14":{},"81-17":{},"81-21":{},"103-3":{},"104-3":{},"124-3":{},"125-3":{},"140-3":{},"141-3":{},"166-3":{},"167-3":{},"177-11":{},"177-14":{},"177-17":{},"177-21":{},"194-3":{},"195-3":{},"210-11":{},"210-14":{},"210-17":{},"210-21":{}},"name":{},"text":{"22":{},"63":{},"266":{}},"component":{}}],["proceed",{"_index":1528,"title":{},"name":{},"text":{"213":{}},"component":{}}],["proces",{"_index":1442,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["process",{"_index":74,"title":{"41":{},"80":{},"209":{},"261-3":{},"280-10":{},"281-10":{}},"name":{},"text":{"1":{},"7":{},"9":{},"15":{},"19":{},"25":{},"26":{},"41":{},"42":{},"48":{},"50":{},"56":{},"60":{},"66":{},"80":{},"81":{},"86":{},"92":{},"99":{},"103":{},"108":{},"115":{},"121":{},"124":{},"131":{},"136":{},"140":{},"151":{},"157":{},"162":{},"166":{},"177":{},"183":{},"185":{},"190":{},"194":{},"209":{},"210":{},"218":{},"231":{},"241":{},"245":{},"257":{},"259":{},"260":{},"261":{},"262":{},"265":{},"267":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"277":{},"279":{},"281":{},"285":{},"287":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["process(deviceev",{"_index":2990,"title":{},"name":{},"text":{"281":{}},"component":{}}],["process(messag",{"_index":2262,"title":{},"name":{},"text":{"261":{}},"component":{}}],["processes.onc",{"_index":1501,"title":{},"name":{},"text":{"210":{}},"component":{}}],["processor",{"_index":1729,"title":{},"name":{},"text":{"218":{},"279":{},"281":{},"287":{}},"component":{}}],["product",{"_index":981,"title":{},"name":{},"text":{"24":{},"25":{},"29":{},"65":{},"66":{},"69":{},"143":{},"169":{},"199":{},"237":{}},"component":{}}],["profil",{"_index":1184,"title":{},"name":{},"text":{"28":{},"67":{},"197":{},"281":{}},"component":{}}],["program",{"_index":57,"title":{},"name":{},"text":{"1":{},"220":{},"230":{},"231":{},"232":{},"236":{},"254":{},"255":{},"265":{},"276":{},"285":{}},"component":{}}],["progress",{"_index":577,"title":{},"name":{},"text":{"12":{},"13":{},"53":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"218":{},"237":{},"273":{}},"component":{}}],["project",{"_index":6,"title":{"229-6":{},"269-4":{}},"name":{},"text":{"1":{},"3":{},"12":{},"41":{},"44":{},"53":{},"80":{},"83":{},"96":{},"112":{},"128":{},"153":{},"179":{},"209":{},"215":{},"229":{},"230":{},"257":{},"269":{},"281":{}},"component":{}}],["prolong",{"_index":979,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["prometheu",{"_index":476,"title":{},"name":{},"text":{"9":{},"50":{},"185":{}},"component":{}}],["promis",{"_index":59,"title":{},"name":{},"text":{"1":{}},"component":{}}],["promptli",{"_index":1200,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["propag",{"_index":1002,"title":{},"name":{},"text":{"24":{},"65":{},"281":{}},"component":{}}],["proper",{"_index":546,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["properli",{"_index":587,"title":{},"name":{},"text":{"12":{},"28":{},"42":{},"53":{},"67":{},"81":{},"151":{},"177":{},"197":{},"210":{},"261":{},"262":{},"269":{},"283":{},"289":{}},"component":{}}],["properti",{"_index":173,"title":{},"name":{},"text":{"3":{},"31":{},"36":{},"38":{},"40":{},"44":{},"71":{},"76":{},"78":{},"79":{},"83":{},"96":{},"112":{},"128":{},"153":{},"175":{},"179":{},"201":{},"206":{},"208":{},"293":{},"296":{},"299":{},"302":{},"305":{}},"component":{}}],["proto",{"_index":3000,"title":{},"name":{},"text":{"282":{},"289":{}},"component":{}}],["protocol",{"_index":129,"title":{"29":{},"30":{},"31":{},"69":{},"70":{},"71":{},"143":{},"144":{},"145":{},"169":{},"170":{},"171":{},"199":{},"200":{},"201":{},"214":{},"15-1":{},"31-6":{},"56-1":{},"71-6":{},"86-1":{},"99-1":{},"115-1":{},"136-1":{},"162-1":{},"190-1":{},"201-6":{}},"name":{"214":{}},"text":{"2":{},"3":{},"4":{},"14":{},"15":{},"16":{},"18":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"38":{},"40":{},"42":{},"43":{},"44":{},"45":{},"55":{},"56":{},"57":{},"59":{},"63":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"78":{},"79":{},"81":{},"82":{},"83":{},"85":{},"86":{},"87":{},"89":{},"95":{},"96":{},"98":{},"99":{},"100":{},"102":{},"111":{},"112":{},"114":{},"115":{},"116":{},"118":{},"127":{},"128":{},"135":{},"136":{},"137":{},"139":{},"143":{},"144":{},"145":{},"152":{},"153":{},"154":{},"161":{},"162":{},"163":{},"165":{},"169":{},"170":{},"171":{},"177":{},"178":{},"179":{},"180":{},"189":{},"190":{},"191":{},"193":{},"197":{},"198":{},"199":{},"200":{},"201":{},"208":{},"210":{},"212":{},"214":{},"239":{},"241":{},"243":{},"269":{},"272":{},"291":{},"294":{},"297":{},"300":{}},"component":{}}],["protocol.ev",{"_index":1306,"title":{},"name":{},"text":{"37":{},"77":{},"150":{},"176":{},"207":{}},"component":{}}],["prove",{"_index":2599,"title":{},"name":{},"text":{"268":{}},"component":{}}],["provid",{"_index":28,"title":{"8-9":{},"14-2":{},"49-9":{},"55-2":{},"85-2":{},"93-8":{},"98-2":{},"109-8":{},"114-2":{},"122-8":{},"132-8":{},"135-2":{},"158-8":{},"161-2":{},"184-9":{},"189-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"8":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{},"22":{},"25":{},"26":{},"28":{},"30":{},"31":{},"33":{},"36":{},"37":{},"41":{},"42":{},"43":{},"45":{},"49":{},"53":{},"55":{},"56":{},"58":{},"59":{},"60":{},"63":{},"66":{},"67":{},"70":{},"71":{},"73":{},"76":{},"77":{},"80":{},"81":{},"82":{},"85":{},"86":{},"88":{},"89":{},"93":{},"95":{},"98":{},"99":{},"101":{},"102":{},"103":{},"109":{},"111":{},"114":{},"115":{},"117":{},"118":{},"122":{},"124":{},"127":{},"132":{},"135":{},"136":{},"138":{},"139":{},"140":{},"147":{},"151":{},"152":{},"154":{},"158":{},"161":{},"162":{},"164":{},"165":{},"166":{},"170":{},"171":{},"173":{},"175":{},"177":{},"178":{},"180":{},"184":{},"189":{},"190":{},"192":{},"193":{},"194":{},"197":{},"200":{},"201":{},"203":{},"206":{},"207":{},"209":{},"210":{},"212":{},"213":{},"214":{},"216":{},"218":{},"230":{},"234":{},"258":{},"261":{},"262":{},"267":{},"268":{},"269":{},"275":{},"277":{},"280":{},"281":{},"283":{},"286":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["provis",{"_index":1974,"title":{"239-9":{},"243-8":{},"245-7":{}},"name":{},"text":{"239":{},"243":{},"245":{},"272":{}},"component":{}}],["proxi",{"_index":813,"title":{},"name":{},"text":{"16":{},"26":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"245":{}},"component":{}}],["proxim",{"_index":919,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["psql",{"_index":2554,"title":{},"name":{},"text":{"266":{},"269":{},"272":{},"273":{}},"component":{}}],["pub",{"_index":1632,"title":{},"name":{},"text":{"216":{},"218":{},"219":{},"266":{},"279":{}},"component":{}}],["public",{"_index":376,"title":{},"name":{},"text":{"8":{},"29":{},"49":{},"69":{},"143":{},"169":{},"199":{},"251":{},"259":{},"260":{},"261":{},"263":{},"266":{},"268":{},"269":{},"272":{},"273":{},"274":{},"280":{},"281":{},"288":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["publicli",{"_index":2525,"title":{"277-4":{}},"name":{},"text":{"264":{},"277":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["publish",{"_index":515,"title":{"12-11":{},"30-2":{},"31-8":{},"31-12":{},"36-9":{},"53-11":{},"70-2":{},"71-8":{},"71-12":{},"76-9":{},"170-2":{},"171-4":{},"171-7":{},"175-9":{},"200-2":{},"201-8":{},"201-12":{},"206-9":{}},"name":{},"text":{"12":{},"14":{},"15":{},"25":{},"29":{},"31":{},"35":{},"36":{},"40":{},"41":{},"53":{},"55":{},"56":{},"66":{},"69":{},"71":{},"75":{},"76":{},"79":{},"80":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"143":{},"161":{},"162":{},"169":{},"175":{},"189":{},"190":{},"199":{},"201":{},"205":{},"206":{},"208":{},"209":{},"214":{},"215":{},"244":{},"270":{},"273":{},"279":{},"280":{},"281":{}},"component":{}}],["publishes/send",{"_index":2961,"title":{},"name":{},"text":{"280":{}},"component":{}}],["pull",{"_index":160,"title":{},"name":{},"text":{"2":{},"12":{},"15":{},"43":{},"53":{},"56":{},"82":{},"86":{},"95":{},"99":{},"111":{},"115":{},"127":{},"136":{},"152":{},"162":{},"178":{},"190":{},"256":{}},"component":{}}],["pure",{"_index":367,"title":{},"name":{},"text":{"8":{},"49":{}},"component":{}}],["purpos",{"_index":827,"title":{},"name":{},"text":{"17":{},"18":{},"31":{},"58":{},"59":{},"71":{},"88":{},"89":{},"101":{},"102":{},"117":{},"118":{},"138":{},"139":{},"164":{},"165":{},"171":{},"192":{},"193":{},"201":{},"214":{},"231":{},"283":{}},"component":{}}],["push",{"_index":159,"title":{"262-2":{}},"name":{},"text":{"2":{},"6":{},"12":{},"15":{},"18":{},"43":{},"47":{},"53":{},"56":{},"59":{},"82":{},"86":{},"89":{},"91":{},"95":{},"99":{},"102":{},"107":{},"111":{},"115":{},"118":{},"120":{},"127":{},"130":{},"136":{},"139":{},"152":{},"156":{},"162":{},"165":{},"178":{},"182":{},"190":{},"193":{},"212":{},"215":{},"247":{},"248":{},"249":{},"252":{},"259":{},"262":{},"263":{},"265":{},"267":{},"270":{},"271":{},"273":{},"274":{},"279":{}},"component":{}}],["pusher",{"_index":2644,"title":{},"name":{},"text":{"269":{},"272":{},"273":{}},"component":{}}],["pusher:0.2.1",{"_index":2666,"title":{},"name":{},"text":{"269":{}},"component":{}}],["put",{"_index":2110,"title":{"292-20":{},"292-41":{},"292-56":{},"292-63":{},"292-69":{},"295-20":{},"295-41":{},"295-56":{},"295-63":{},"295-69":{},"298-19":{},"298-40":{},"298-55":{},"298-62":{},"298-68":{},"301-20":{},"301-41":{},"301-56":{},"301-63":{},"301-69":{}},"name":{},"text":{"246":{},"264":{},"268":{}},"component":{}}],["put(\"payload",{"_index":2328,"title":{},"name":{},"text":{"261":{}},"component":{}}],["put(\"typ",{"_index":2327,"title":{},"name":{},"text":{"261":{}},"component":{}}],["puzzl",{"_index":2902,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["pw",{"_index":2553,"title":{},"name":{},"text":{"266":{}},"component":{}}],["python",{"_index":1923,"title":{},"name":{},"text":{"234":{},"251":{}},"component":{}}],["python3",{"_index":1927,"title":{},"name":{},"text":{"234":{},"251":{}},"component":{}}],["qo",{"_index":1264,"title":{},"name":{},"text":{"31":{},"71":{},"201":{},"280":{}},"component":{}}],["qos_0",{"_index":2450,"title":{},"name":{},"text":{"263":{}},"component":{}}],["qos_at_least_onc",{"_index":2960,"title":{},"name":{},"text":{"280":{}},"component":{}}],["qualiti",{"_index":1042,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["quantiz",{"_index":2609,"title":{},"name":{},"text":{"268":{}},"component":{}}],["quarku",{"_index":2219,"title":{"260":{},"281":{},"259-1":{}},"name":{"281":{}},"text":{"259":{},"262":{},"263":{},"264":{},"277":{},"281":{}},"component":{}}],["quarkus:dev",{"_index":2342,"title":{},"name":{},"text":{"261":{},"263":{},"281":{}},"component":{}}],["quay.io",{"_index":597,"title":{},"name":{},"text":{"12":{},"53":{},"262":{}},"component":{}}],["quay.io/myaccount/mi",{"_index":2346,"title":{},"name":{},"text":{"262":{}},"component":{}}],["quay.io](https://quay.io",{"_index":595,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["queri",{"_index":1194,"title":{"270-5":{},"273-5":{},"273-7":{}},"name":{},"text":{"29":{},"30":{},"37":{},"42":{},"69":{},"70":{},"77":{},"81":{},"143":{},"169":{},"170":{},"177":{},"199":{},"200":{},"207":{},"210":{},"215":{},"262":{},"265":{},"267":{},"268":{},"270":{},"271":{},"273":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["question",{"_index":972,"title":{},"name":{},"text":{"23":{},"64":{}},"component":{}}],["qui",{"_index":2767,"title":{},"name":{},"text":{"276":{}},"component":{}}],["quick",{"_index":1409,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"262":{},"269":{},"280":{},"281":{}},"component":{}}],["quickli",{"_index":378,"title":{},"name":{},"text":{"8":{},"12":{},"13":{},"41":{},"49":{},"53":{},"54":{},"80":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"209":{}},"component":{}}],["quit",{"_index":2079,"title":{},"name":{},"text":{"245":{}},"component":{}}],["race",{"_index":1671,"title":{},"name":{},"text":{"216":{}},"component":{}}],["radio",{"_index":1959,"title":{},"name":{},"text":{"237":{}},"component":{}}],["rak811",{"_index":1814,"title":{"235-1":{},"237-1":{}},"name":{},"text":{"220":{},"225":{},"229":{},"235":{},"237":{}},"component":{}}],["ram",{"_index":2187,"title":{},"name":{},"text":{"258":{}},"component":{}}],["ran",{"_index":2229,"title":{},"name":{},"text":{"259":{},"288":{}},"component":{}}],["rand",{"_index":2759,"title":{},"name":{},"text":{"275":{}},"component":{}}],["random",{"_index":907,"title":{},"name":{},"text":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{},"237":{},"269":{},"278":{}},"component":{}}],["randomli",{"_index":2127,"title":{},"name":{},"text":{"247":{},"275":{}},"component":{}}],["rang",{"_index":934,"title":{},"name":{},"text":{"22":{},"63":{},"212":{},"267":{},"268":{},"270":{},"273":{}},"component":{}}],["raspberri",{"_index":1802,"title":{"245-2":{},"246-1":{}},"name":{},"text":{"220":{},"221":{},"229":{},"246":{},"277":{}},"component":{}}],["raspbian",{"_index":2035,"title":{},"name":{},"text":{"245":{}},"component":{}}],["raw",{"_index":1447,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"261":{},"270":{},"273":{}},"component":{}}],["rawmessag",{"_index":2263,"title":{},"name":{},"text":{"261":{}},"component":{}}],["re",{"_index":354,"title":{"8-11":{},"49-11":{},"93-11":{},"109-11":{},"122-11":{},"132-11":{},"158-11":{},"184-11":{}},"name":{},"text":{"8":{},"19":{},"21":{},"22":{},"26":{},"37":{},"41":{},"49":{},"60":{},"62":{},"63":{},"77":{},"78":{},"80":{},"93":{},"103":{},"105":{},"109":{},"122":{},"124":{},"126":{},"132":{},"140":{},"142":{},"158":{},"166":{},"168":{},"184":{},"194":{},"196":{},"207":{},"209":{},"258":{},"259":{},"260":{},"261":{},"262":{},"265":{},"267":{},"273":{},"274":{},"277":{},"278":{},"280":{},"281":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["reach",{"_index":21,"title":{},"name":{},"text":{"1":{},"15":{},"26":{},"27":{},"56":{},"68":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"198":{},"256":{},"277":{}},"component":{}}],["reachabl",{"_index":1651,"title":{},"name":{},"text":{"216":{}},"component":{}}],["reactiv",{"_index":2981,"title":{},"name":{},"text":{"281":{}},"component":{}}],["read",{"_index":67,"title":{},"name":{},"text":{"1":{},"13":{},"14":{},"29":{},"39":{},"54":{},"55":{},"69":{},"84":{},"85":{},"97":{},"98":{},"113":{},"114":{},"134":{},"135":{},"143":{},"160":{},"161":{},"169":{},"188":{},"189":{},"199":{},"220":{},"231":{},"232":{},"258":{},"261":{},"272":{},"280":{},"281":{},"290":{},"304":{}},"component":{}}],["readabl",{"_index":2908,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["reader",{"_index":1344,"title":{},"name":{},"text":{"39":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["readi",{"_index":698,"title":{"230-4":{},"259-4":{}},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"230":{},"231":{},"245":{},"251":{},"259":{},"262":{},"263":{},"266":{},"267":{},"269":{},"272":{},"279":{},"280":{},"281":{},"283":{},"285":{},"287":{}},"component":{}}],["readm",{"_index":1913,"title":{},"name":{"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{}},"text":{},"component":{}}],["real",{"_index":828,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"268":{},"270":{},"273":{},"279":{}},"component":{}}],["realist",{"_index":2844,"title":{},"name":{},"text":{"279":{}},"component":{}}],["realli",{"_index":2090,"title":{},"name":{},"text":{"245":{},"256":{},"259":{},"262":{},"274":{}},"component":{}}],["realm",{"_index":806,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["realms[2",{"_index":792,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["reason",{"_index":1084,"title":{},"name":{},"text":{"26":{},"27":{},"29":{},"41":{},"68":{},"69":{},"80":{},"143":{},"169":{},"198":{},"199":{},"209":{},"218":{},"262":{},"272":{},"274":{}},"component":{}}],["rebuild",{"_index":1993,"title":{"259-2":{}},"name":{},"text":{"241":{}},"component":{}}],["recal",{"_index":2647,"title":{},"name":{},"text":{"269":{},"272":{}},"component":{}}],["receiv",{"_index":157,"title":{"261-1":{},"281-11":{}},"name":{},"text":{"2":{},"15":{},"18":{},"21":{},"22":{},"24":{},"25":{},"26":{},"29":{},"31":{},"36":{},"39":{},"42":{},"43":{},"56":{},"59":{},"62":{},"63":{},"65":{},"66":{},"69":{},"71":{},"76":{},"81":{},"82":{},"86":{},"89":{},"95":{},"99":{},"102":{},"105":{},"111":{},"115":{},"118":{},"126":{},"127":{},"136":{},"139":{},"142":{},"143":{},"151":{},"152":{},"162":{},"165":{},"168":{},"169":{},"175":{},"177":{},"178":{},"190":{},"193":{},"196":{},"199":{},"201":{},"206":{},"210":{},"214":{},"216":{},"218":{},"234":{},"251":{},"255":{},"258":{},"261":{},"263":{},"264":{},"265":{},"269":{},"276":{},"277":{},"280":{},"281":{},"285":{},"286":{}},"component":{}}],["receiver.java",{"_index":2257,"title":{},"name":{},"text":{"261":{}},"component":{}}],["receivetop",{"_index":2941,"title":{},"name":{},"text":{"280":{}},"component":{}}],["recent",{"_index":2077,"title":{},"name":{},"text":{"245":{},"256":{},"264":{}},"component":{}}],["recept",{"_index":1391,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["recommend",{"_index":339,"title":{},"name":{},"text":{"6":{},"29":{},"47":{},"69":{},"120":{},"130":{},"143":{},"156":{},"169":{},"182":{},"199":{},"256":{},"258":{},"286":{}},"component":{}}],["reconcil",{"_index":470,"title":{},"name":{},"text":{"8":{},"14":{},"18":{},"49":{},"55":{},"59":{},"85":{},"93":{},"98":{},"109":{},"114":{},"122":{},"132":{},"135":{},"139":{},"158":{},"161":{},"165":{},"184":{},"189":{},"193":{},"275":{}},"component":{}}],["reconcili",{"_index":765,"title":{},"name":{},"text":{"15":{},"19":{},"26":{},"56":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{},"275":{}},"component":{}}],["reconnect",{"_index":1097,"title":{},"name":{},"text":{"26":{},"251":{},"270":{},"273":{},"285":{}},"component":{}}],["record",{"_index":380,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"261":{}},"component":{}}],["recov",{"_index":2704,"title":{},"name":{},"text":{"272":{},"280":{},"281":{}},"component":{}}],["recoveri",{"_index":960,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["red",{"_index":1948,"title":{},"name":{},"text":{"236":{},"239":{},"249":{},"252":{},"254":{},"255":{},"262":{}},"component":{}}],["redirect",{"_index":2193,"title":{},"name":{},"text":{"258":{}},"component":{}}],["reduc",{"_index":417,"title":{},"name":{},"text":{"8":{},"12":{},"22":{},"49":{},"53":{},"63":{},"122":{},"132":{},"158":{},"184":{},"245":{}},"component":{}}],["redund",{"_index":2616,"title":{},"name":{},"text":{"268":{}},"component":{}}],["refer",{"_index":757,"title":{},"name":{},"text":{"15":{},"24":{},"25":{},"38":{},"56":{},"65":{},"66":{},"78":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"213":{},"215":{},"241":{}},"component":{}}],["refresh",{"_index":1293,"title":{"37-2":{}},"name":{},"text":{"36":{},"37":{},"76":{},"175":{},"206":{},"216":{},"258":{},"267":{},"280":{},"281":{}},"component":{}}],["refreshaccesstoken",{"_index":1312,"title":{},"name":{},"text":{"37":{}},"component":{}}],["refreshaccesstoken\":\"eyjhbgcio[...]srqg7xt_jzb_tg",{"_index":1313,"title":{},"name":{},"text":{"37":{}},"component":{}}],["regardless",{"_index":3088,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["region",{"_index":863,"title":{},"name":{},"text":{"19":{},"22":{},"60":{},"63":{},"103":{},"124":{},"140":{},"166":{},"194":{},"259":{},"267":{},"272":{},"275":{},"276":{},"277":{}},"component":{}}],["regist",{"_index":883,"title":{"266-2":{}},"name":{},"text":{"20":{},"22":{},"29":{},"61":{},"63":{},"69":{},"104":{},"125":{},"141":{},"143":{},"167":{},"169":{},"195":{},"199":{},"216":{},"266":{},"268":{},"274":{},"275":{},"284":{}},"component":{}}],["registr",{"_index":2748,"title":{},"name":{},"text":{"274":{}},"component":{}}],["registri",{"_index":336,"title":{"14-1":{},"18-1":{},"38-8":{},"55-1":{},"59-1":{},"78-8":{},"85-1":{},"98-1":{},"114-1":{},"135-1":{},"139-1":{},"161-1":{},"165-1":{},"189-1":{},"193-1":{},"215-3":{},"292-10":{},"295-10":{},"298-9":{},"301-10":{}},"name":{},"text":{"6":{},"14":{},"15":{},"18":{},"21":{},"22":{},"24":{},"30":{},"31":{},"38":{},"47":{},"55":{},"56":{},"59":{},"62":{},"63":{},"65":{},"70":{},"71":{},"78":{},"85":{},"86":{},"89":{},"98":{},"99":{},"102":{},"105":{},"114":{},"115":{},"118":{},"120":{},"126":{},"130":{},"135":{},"136":{},"139":{},"142":{},"156":{},"161":{},"162":{},"165":{},"168":{},"170":{},"182":{},"189":{},"190":{},"193":{},"196":{},"200":{},"201":{},"211":{},"212":{},"213":{},"214":{},"215":{},"259":{},"262":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["regular",{"_index":1007,"title":{},"name":{},"text":{"24":{},"26":{},"38":{},"65":{},"78":{},"245":{},"279":{}},"component":{}}],["reject",{"_index":1104,"title":{"41-9":{},"80-9":{},"209-9":{}},"name":{},"text":{"26":{},"31":{},"41":{},"71":{},"80":{},"201":{},"209":{}},"component":{}}],["rel",{"_index":1573,"title":{},"name":{},"text":{"215":{},"231":{}},"component":{}}],["relam",{"_index":1481,"title":{},"name":{},"text":{"86":{},"99":{}},"component":{}}],["relat",{"_index":987,"title":{},"name":{},"text":{"24":{},"65":{},"268":{}},"component":{}}],["releas",{"_index":310,"title":{},"name":{},"text":{"6":{},"8":{},"24":{},"47":{},"49":{},"65":{},"91":{},"93":{},"107":{},"109":{},"120":{},"122":{},"130":{},"132":{},"156":{},"158":{},"182":{},"184":{},"213":{},"229":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"258":{},"276":{},"279":{},"285":{},"287":{}},"component":{}}],["relev",{"_index":825,"title":{},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"219":{}},"component":{}}],["reli",{"_index":747,"title":{},"name":{},"text":{"15":{},"22":{},"26":{},"38":{},"56":{},"63":{},"78":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"216":{},"219":{},"244":{}},"component":{}}],["reliabl",{"_index":63,"title":{},"name":{},"text":{"1":{}},"component":{}}],["reload",{"_index":2340,"title":{"267-5":{}},"name":{},"text":{"261":{},"266":{},"267":{}},"component":{}}],["rememb",{"_index":862,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{},"261":{},"266":{},"273":{}},"component":{}}],["remind",{"_index":2215,"title":{},"name":{},"text":{"258":{}},"component":{}}],["remot",{"_index":1082,"title":{},"name":{},"text":{"26":{},"27":{},"68":{},"198":{},"259":{}},"component":{}}],["remov",{"_index":899,"title":{},"name":{},"text":{"20":{},"26":{},"35":{},"39":{},"41":{},"61":{},"75":{},"80":{},"104":{},"125":{},"141":{},"167":{},"195":{},"205":{},"209":{},"217":{},"245":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["removeextens",{"_index":1435,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["renam",{"_index":900,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"273":{}},"component":{}}],["rend",{"_index":1700,"title":{},"name":{},"text":{"216":{}},"component":{}}],["render",{"_index":1668,"title":{},"name":{},"text":{"216":{},"280":{}},"component":{}}],["render.next",{"_index":1678,"title":{},"name":{},"text":{"216":{}},"component":{}}],["repeat",{"_index":413,"title":{},"name":{},"text":{"8":{},"49":{},"122":{},"132":{},"158":{},"184":{},"214":{},"245":{},"268":{}},"component":{}}],["replac",{"_index":749,"title":{},"name":{},"text":{"15":{},"24":{},"25":{},"26":{},"56":{},"65":{},"66":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"237":{},"251":{},"259":{},"262":{},"264":{},"266":{},"280":{},"281":{},"285":{}},"component":{}}],["repli",{"_index":1564,"title":{},"name":{},"text":{"214":{}},"component":{}}],["replic",{"_index":2526,"title":{},"name":{},"text":{"264":{}},"component":{}}],["replica",{"_index":700,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{}},"component":{}}],["repo",{"_index":330,"title":{},"name":{},"text":{"6":{},"47":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"245":{},"259":{},"283":{}},"component":{}}],["repo/sub/fold",{"_index":1582,"title":{},"name":{},"text":{"215":{}},"component":{}}],["report",{"_index":703,"title":{},"name":{},"text":{"14":{},"24":{},"25":{},"26":{},"55":{},"65":{},"66":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"214":{},"220":{},"223":{},"228":{},"239":{},"241":{},"243":{},"245":{},"270":{},"273":{},"277":{},"279":{},"285":{},"286":{},"287":{}},"component":{}}],["repositori",{"_index":308,"title":{"6":{},"47":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"276-1":{},"285-1":{},"290-1":{}},"name":{},"text":{"6":{},"8":{},"12":{},"13":{},"47":{},"49":{},"53":{},"54":{},"84":{},"91":{},"93":{},"97":{},"107":{},"109":{},"113":{},"120":{},"122":{},"130":{},"132":{},"134":{},"156":{},"158":{},"160":{},"182":{},"184":{},"188":{},"212":{},"213":{},"215":{},"229":{},"256":{},"258":{},"259":{},"261":{},"263":{},"276":{},"285":{},"290":{}},"component":{}}],["repres",{"_index":1213,"title":{},"name":{},"text":{"29":{},"38":{},"69":{},"143":{},"169":{},"199":{},"218":{}},"component":{}}],["represent",{"_index":990,"title":{},"name":{},"text":{"24":{},"38":{},"65":{},"214":{}},"component":{}}],["repsitori",{"_index":1484,"title":{},"name":{},"text":{"91":{},"107":{}},"component":{}}],["req",{"_index":489,"title":{},"name":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{}},"text":{},"component":{}}],["request",{"_index":419,"title":{"29-1":{},"69-1":{},"143-1":{},"169-1":{},"199-1":{},"292-15":{},"292-22":{},"292-29":{},"292-36":{},"292-43":{},"292-50":{},"292-58":{},"292-71":{},"292-79":{},"292-87":{},"295-15":{},"295-22":{},"295-29":{},"295-36":{},"295-43":{},"295-50":{},"295-58":{},"295-71":{},"295-79":{},"295-87":{},"298-14":{},"298-21":{},"298-28":{},"298-35":{},"298-42":{},"298-49":{},"298-57":{},"298-70":{},"298-78":{},"298-86":{},"301-15":{},"301-22":{},"301-29":{},"301-36":{},"301-43":{},"301-50":{},"301-58":{},"301-71":{},"301-79":{},"301-87":{}},"name":{},"text":{"8":{},"14":{},"15":{},"26":{},"27":{},"29":{},"36":{},"41":{},"49":{},"55":{},"56":{},"68":{},"69":{},"76":{},"80":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"122":{},"132":{},"135":{},"136":{},"143":{},"158":{},"161":{},"162":{},"169":{},"175":{},"184":{},"189":{},"190":{},"198":{},"199":{},"206":{},"209":{},"214":{},"231":{},"256":{},"263":{},"276":{},"285":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["request(msg",{"_index":1736,"title":{},"name":{},"text":{"218":{}},"component":{}}],["requestbodyapiadminv1alpha1appsappidtransferownershipputapplicationjson",{"_index":3167,"title":{"299-20":{},"302-20":{}},"name":{},"text":{"298":{},"301":{}},"component":{}}],["requestbodyapiadminv1alpha1appsapplicationtransferownershipputapplicationjson",{"_index":3101,"title":{"293-20":{},"296-20":{}},"name":{},"text":{"292":{},"295":{}},"component":{}}],["requir",{"_index":68,"title":{"12-2":{},"53-2":{}},"name":{},"text":{"1":{},"4":{},"5":{},"7":{},"8":{},"12":{},"15":{},"18":{},"22":{},"25":{},"26":{},"27":{},"30":{},"38":{},"42":{},"45":{},"46":{},"48":{},"49":{},"53":{},"56":{},"59":{},"63":{},"66":{},"68":{},"70":{},"78":{},"81":{},"86":{},"90":{},"92":{},"93":{},"99":{},"106":{},"108":{},"109":{},"115":{},"119":{},"121":{},"122":{},"129":{},"131":{},"132":{},"136":{},"139":{},"151":{},"154":{},"155":{},"157":{},"158":{},"162":{},"165":{},"170":{},"177":{},"180":{},"181":{},"183":{},"184":{},"190":{},"193":{},"198":{},"200":{},"210":{},"215":{},"216":{},"218":{},"220":{},"230":{},"231":{},"232":{},"233":{},"234":{},"244":{},"245":{},"251":{},"256":{},"258":{},"259":{},"261":{},"263":{},"267":{},"268":{},"272":{},"277":{},"280":{},"281":{},"282":{},"286":{},"289":{}},"component":{}}],["requisit",{"_index":189,"title":{"10":{},"51":{},"94":{},"110":{},"123":{},"133":{},"159":{},"186":{},"4-1":{},"4-2":{},"6-1":{},"12-1":{},"19-2":{},"20-2":{},"42-10":{},"42-13":{},"42-16":{},"42-20":{},"45-1":{},"45-2":{},"47-1":{},"53-1":{},"60-2":{},"61-2":{},"81-10":{},"81-13":{},"81-16":{},"81-20":{},"91-1":{},"103-2":{},"104-2":{},"107-1":{},"120-1":{},"124-2":{},"125-2":{},"130-1":{},"140-2":{},"141-2":{},"154-1":{},"154-2":{},"156-1":{},"166-2":{},"167-2":{},"177-10":{},"177-13":{},"177-16":{},"177-20":{},"180-1":{},"180-2":{},"182-1":{},"194-2":{},"195-2":{},"210-10":{},"210-13":{},"210-16":{},"210-20":{},"258-1":{},"260-1":{},"268-3":{},"277-1":{},"286-1":{}},"name":{},"text":{"12":{},"53":{},"260":{},"277":{},"286":{}},"component":{}}],["resend",{"_index":774,"title":{},"name":{},"text":{"15":{},"56":{}},"component":{}}],["reset",{"_index":1928,"title":{},"name":{},"text":{"234":{},"236":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"258":{},"272":{},"276":{}},"component":{}}],["resili",{"_index":3044,"title":{},"name":{},"text":{"288":{}},"component":{}}],["resolut",{"_index":2439,"title":{},"name":{},"text":{"263":{},"268":{}},"component":{}}],["resolv",{"_index":1230,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["resolveformat(jsonformat.content_typ",{"_index":2270,"title":{},"name":{},"text":{"261":{}},"component":{}}],["resourc",{"_index":418,"title":{"26-1":{},"258-12":{},"258-14":{},"258-15":{}},"name":{},"text":{"8":{},"12":{},"14":{},"21":{},"22":{},"26":{},"40":{},"41":{},"42":{},"49":{},"53":{},"55":{},"62":{},"63":{},"79":{},"80":{},"81":{},"85":{},"98":{},"105":{},"114":{},"122":{},"126":{},"132":{},"135":{},"142":{},"151":{},"158":{},"161":{},"168":{},"177":{},"184":{},"189":{},"196":{},"208":{},"209":{},"210":{},"215":{},"218":{},"230":{},"258":{},"262":{},"269":{},"272":{},"275":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["resourcevers",{"_index":2203,"title":{},"name":{},"text":{"258":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["respect",{"_index":1187,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["respond",{"_index":1030,"title":{},"name":{},"text":{"25":{},"41":{},"66":{},"80":{},"209":{}},"component":{}}],["respons",{"_index":742,"title":{"29-2":{},"69-2":{},"143-2":{},"169-2":{},"199-2":{},"292-3":{},"292-6":{},"292-9":{},"292-13":{},"292-16":{},"292-19":{},"292-23":{},"292-26":{},"292-30":{},"292-33":{},"292-37":{},"292-40":{},"292-44":{},"292-47":{},"292-51":{},"292-55":{},"292-59":{},"292-62":{},"292-65":{},"292-68":{},"292-72":{},"292-75":{},"292-80":{},"292-83":{},"292-88":{},"292-91":{},"292-93":{},"295-3":{},"295-6":{},"295-9":{},"295-13":{},"295-16":{},"295-19":{},"295-23":{},"295-26":{},"295-30":{},"295-33":{},"295-37":{},"295-40":{},"295-44":{},"295-47":{},"295-51":{},"295-55":{},"295-59":{},"295-62":{},"295-65":{},"295-68":{},"295-72":{},"295-75":{},"295-80":{},"295-83":{},"295-88":{},"295-91":{},"295-93":{},"298-3":{},"298-5":{},"298-8":{},"298-12":{},"298-15":{},"298-18":{},"298-22":{},"298-25":{},"298-29":{},"298-32":{},"298-36":{},"298-39":{},"298-43":{},"298-46":{},"298-50":{},"298-54":{},"298-58":{},"298-61":{},"298-64":{},"298-67":{},"298-71":{},"298-74":{},"298-79":{},"298-82":{},"298-87":{},"298-90":{},"298-92":{},"301-3":{},"301-6":{},"301-9":{},"301-13":{},"301-16":{},"301-19":{},"301-23":{},"301-26":{},"301-30":{},"301-33":{},"301-37":{},"301-40":{},"301-44":{},"301-47":{},"301-51":{},"301-55":{},"301-59":{},"301-62":{},"301-65":{},"301-68":{},"301-72":{},"301-75":{},"301-80":{},"301-83":{},"301-88":{},"301-91":{},"301-93":{},"304-3":{},"304-6":{},"304-8":{}},"name":{},"text":{"15":{},"29":{},"41":{},"56":{},"69":{},"80":{},"86":{},"99":{},"115":{},"136":{},"143":{},"162":{},"169":{},"190":{},"199":{},"209":{},"218":{},"245":{},"279":{},"280":{},"281":{},"285":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["responseapiadminv1alpha1appsappidtransferownershipget200applicationjson",{"_index":3166,"title":{"299-21":{},"302-21":{}},"name":{},"text":{"298":{},"301":{}},"component":{}}],["responseapiadminv1alpha1appsapplicationtransferownershipget200applicationjson",{"_index":3100,"title":{"293-21":{},"296-21":{}},"name":{},"text":{"292":{},"295":{}},"component":{}}],["responseapiadminv1alpha1userwhoamiget200applicationjson",{"_index":3105,"title":{"293-22":{},"296-22":{},"299-22":{},"302-22":{}},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["responseapitokensv1alpha1get200applicationjsonitem",{"_index":3069,"title":{"293-23":{},"296-23":{},"299-23":{},"302-23":{}},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["responseapitokensv1alpha1post200applicationjson",{"_index":3070,"title":{"293-24":{},"296-24":{},"299-24":{},"302-24":{}},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["responsepayload",{"_index":2956,"title":{},"name":{},"text":{"280":{}},"component":{}}],["responsewellknowndrogueversionget200applicationjson",{"_index":3112,"title":{"293-25":{},"296-25":{},"299-25":{},"302-25":{}},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["response—th",{"_index":1199,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["rest",{"_index":679,"title":{},"name":{},"text":{"14":{},"22":{},"55":{},"63":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"212":{},"258":{},"268":{}},"component":{}}],["restart",{"_index":2010,"title":{},"name":{},"text":{"241":{}},"component":{}}],["resteasi",{"_index":2980,"title":{},"name":{},"text":{"281":{}},"component":{}}],["restor",{"_index":2156,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["restrict",{"_index":937,"title":{},"name":{},"text":{"22":{},"31":{},"63":{},"71":{},"201":{},"279":{}},"component":{}}],["result",{"_index":1003,"title":{"275-3":{},"276-4":{},"285-4":{}},"name":{},"text":{"24":{},"26":{},"65":{},"216":{},"261":{},"262":{},"268":{},"280":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["resum",{"_index":1286,"title":{},"name":{},"text":{"35":{},"75":{},"205":{}},"component":{}}],["retent",{"_index":1106,"title":{},"name":{},"text":{"26":{}},"component":{}}],["retransmit",{"_index":2097,"title":{},"name":{},"text":{"245":{}},"component":{}}],["retri",{"_index":780,"title":{},"name":{},"text":{"15":{},"56":{}},"component":{}}],["retriev",{"_index":1572,"title":{},"name":{},"text":{"215":{},"251":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["return",{"_index":1431,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"216":{},"219":{},"261":{},"263":{},"279":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"304":{}},"component":{}}],["reus",{"_index":1877,"title":{},"name":{},"text":{"230":{},"231":{}},"component":{}}],["rev",{"_index":1583,"title":{},"name":{},"text":{"215":{}},"component":{}}],["revert",{"_index":591,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["revis",{"_index":1014,"title":{"241-9":{}},"name":{},"text":{"24":{},"65":{},"215":{},"241":{}},"component":{}}],["revision=myupd",{"_index":1995,"title":{},"name":{},"text":{"241":{}},"component":{}}],["rfc3339",{"_index":1324,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["right",{"_index":334,"title":{},"name":{},"text":{"6":{},"26":{},"39":{},"41":{},"47":{},"80":{},"120":{},"130":{},"156":{},"182":{},"209":{},"245":{},"259":{},"268":{},"269":{},"270":{},"273":{},"274":{},"280":{},"281":{}},"component":{}}],["rise",{"_index":3038,"title":{},"name":{},"text":{"287":{}},"component":{}}],["robot",{"_index":1040,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["robust",{"_index":1873,"title":{"230-1":{}},"name":{},"text":{},"component":{}}],["rodney",{"_index":598,"title":{},"name":{},"text":{"12":{},"29":{},"53":{},"69":{},"143":{},"169":{},"199":{},"248":{}},"component":{}}],["role",{"_index":1137,"title":{"39-1":{}},"name":{},"text":{"27":{},"39":{},"68":{},"198":{},"262":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["roll",{"_index":1523,"title":{},"name":{},"text":{"212":{},"259":{}},"component":{}}],["rollout",{"_index":1516,"title":{},"name":{},"text":{"212":{},"259":{}},"component":{}}],["roof",{"_index":2829,"title":{},"name":{},"text":{"277":{}},"component":{}}],["root",{"_index":580,"title":{},"name":{},"text":{"12":{},"13":{},"41":{},"53":{},"54":{},"80":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"209":{},"211":{},"245":{},"289":{}},"component":{}}],["rootless",{"_index":1496,"title":{},"name":{},"text":{"94":{},"110":{},"123":{},"133":{},"159":{}},"component":{}}],["round",{"_index":1337,"title":{},"name":{},"text":{"38":{}},"component":{}}],["rout",{"_index":300,"title":{"262-9":{}},"name":{},"text":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"259":{},"262":{},"280":{},"281":{}},"component":{}}],["row",{"_index":2561,"title":{},"name":{},"text":{"266":{},"267":{}},"component":{}}],["rp2",{"_index":2122,"title":{},"name":{},"text":{"246":{}},"component":{}}],["rp2040",{"_index":1839,"title":{"229-4":{}},"name":{},"text":{},"component":{}}],["rs",{"_index":1976,"title":{},"name":{},"text":{"239":{},"241":{},"243":{}},"component":{}}],["rst",{"_index":2019,"title":{},"name":{},"text":{"244":{}},"component":{}}],["rto",{"_index":1895,"title":{},"name":{},"text":{"231":{}},"component":{}}],["rtt",{"_index":1623,"title":{},"name":{},"text":{"216":{},"244":{},"251":{}},"component":{}}],["rug",{"_index":2828,"title":{},"name":{},"text":{"277":{}},"component":{}}],["rule",{"_index":1193,"title":{"41-3":{},"80-3":{},"209-3":{}},"name":{"41":{},"80":{},"209":{}},"text":{"29":{},"31":{},"41":{},"69":{},"71":{},"80":{},"143":{},"169":{},"199":{},"201":{},"209":{},"262":{},"289":{}},"component":{}}],["run",{"_index":97,"title":{"263":{},"4-3":{},"8-4":{},"8-11":{},"12-9":{},"12-14":{},"12-19":{},"12-20":{},"45-3":{},"49-4":{},"49-11":{},"53-9":{},"53-14":{},"53-19":{},"53-20":{},"93-4":{},"93-11":{},"109-4":{},"109-11":{},"122-4":{},"122-11":{},"132-4":{},"132-11":{},"154-3":{},"158-4":{},"158-11":{},"180-3":{},"184-4":{},"184-11":{},"229-5":{},"233-5":{},"234-6":{},"234-7":{},"241-4":{},"244-7":{},"245-8":{},"247-5":{},"248-5":{},"249-6":{},"251-6":{},"251-7":{},"251-10":{},"252-5":{},"254-7":{},"255-6":{},"290-3":{}},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"22":{},"24":{},"25":{},"28":{},"44":{},"45":{},"46":{},"47":{},"49":{},"50":{},"51":{},"53":{},"54":{},"56":{},"57":{},"63":{},"65":{},"66":{},"67":{},"83":{},"84":{},"86":{},"87":{},"90":{},"91":{},"93":{},"96":{},"97":{},"99":{},"100":{},"106":{},"107":{},"109":{},"112":{},"113":{},"115":{},"116":{},"119":{},"120":{},"122":{},"128":{},"129":{},"130":{},"132":{},"134":{},"136":{},"137":{},"153":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"162":{},"163":{},"179":{},"180":{},"181":{},"182":{},"184":{},"185":{},"186":{},"188":{},"190":{},"191":{},"197":{},"212":{},"213":{},"214":{},"216":{},"218":{},"220":{},"229":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"256":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"268":{},"269":{},"270":{},"272":{},"273":{},"276":{},"277":{},"279":{},"280":{},"281":{},"282":{},"283":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{}},"component":{}}],["run/media/myuser/rpi",{"_index":2121,"title":{},"name":{},"text":{"246":{}},"component":{}}],["run=client",{"_index":455,"title":{},"name":{},"text":{"8":{},"49":{},"184":{}},"component":{}}],["runtim",{"_index":583,"title":{},"name":{},"text":{"12":{},"53":{},"213":{},"230":{},"269":{}},"component":{}}],["rust",{"_index":56,"title":{"216-2":{}},"name":{},"text":{"1":{},"12":{},"29":{},"53":{},"69":{},"143":{},"169":{},"199":{},"216":{},"218":{},"219":{},"229":{},"230":{},"231":{},"233":{},"245":{},"249":{},"258":{},"269":{},"279":{},"282":{},"286":{},"287":{},"289":{}},"component":{}}],["rust_log=info",{"_index":1862,"title":{},"name":{},"text":{"229":{},"233":{},"235":{}},"component":{}}],["rustup",{"_index":539,"title":{"282-1":{},"289-1":{}},"name":{},"text":{"12":{},"53":{},"229":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"244":{},"246":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"282":{},"289":{}},"component":{}}],["rx",{"_index":2021,"title":{},"name":{},"text":{"244":{}},"component":{}}],["s",{"_index":412,"title":{},"name":{},"text":{"8":{},"9":{},"49":{},"50":{},"122":{},"132":{},"158":{},"184":{},"185":{},"234":{},"251":{},"266":{},"280":{},"281":{}},"component":{}}],["s.getasyncremote().sendobject(nextev",{"_index":2331,"title":{},"name":{},"text":{"261":{}},"component":{}}],["s113_nrf52_7.3.0_softdevice.hex",{"_index":1991,"title":{},"name":{},"text":{"241":{}},"component":{}}],["s140_nrf52_7.3.0_softdevice.hex",{"_index":1982,"title":{},"name":{},"text":{"239":{},"243":{}},"component":{}}],["safe",{"_index":31,"title":{},"name":{},"text":{"1":{},"230":{},"267":{},"274":{}},"component":{}}],["safeguard",{"_index":1563,"title":{},"name":{},"text":{"214":{}},"component":{}}],["sake",{"_index":2545,"title":{},"name":{},"text":{"266":{}},"component":{}}],["same",{"_index":313,"title":{},"name":{},"text":{"6":{},"12":{},"15":{},"21":{},"24":{},"26":{},"28":{},"31":{},"36":{},"37":{},"39":{},"40":{},"42":{},"47":{},"53":{},"56":{},"62":{},"65":{},"67":{},"71":{},"76":{},"77":{},"78":{},"79":{},"81":{},"86":{},"91":{},"99":{},"105":{},"107":{},"115":{},"120":{},"126":{},"130":{},"136":{},"142":{},"151":{},"156":{},"162":{},"168":{},"175":{},"177":{},"182":{},"190":{},"196":{},"197":{},"201":{},"206":{},"207":{},"208":{},"210":{},"213":{},"215":{},"230":{},"244":{},"258":{},"259":{},"262":{},"263":{},"265":{},"266":{},"267":{},"268":{},"269":{},"271":{},"280":{},"281":{},"286":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["sampl",{"_index":1206,"title":{"30-5":{},"70-5":{},"170-5":{},"200-5":{}},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{},"269":{}},"component":{}}],["sandbox",{"_index":377,"title":{"262-5":{}},"name":{},"text":{"8":{},"13":{},"49":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"213":{},"215":{},"233":{},"234":{},"244":{},"251":{},"256":{},"258":{},"259":{},"260":{},"262":{},"263":{},"264":{},"266":{},"268":{},"269":{},"280":{},"281":{},"283":{},"284":{},"285":{},"286":{},"288":{}},"component":{}}],["sandbox/get",{"_index":2629,"title":{},"name":{},"text":{"268":{}},"component":{}}],["sasl",{"_index":563,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["sass",{"_index":613,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["sass@1.52.3",{"_index":616,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["save",{"_index":1574,"title":{},"name":{},"text":{"215":{},"258":{},"267":{},"270":{},"273":{},"283":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["saw",{"_index":2289,"title":{},"name":{},"text":{"261":{},"288":{}},"component":{}}],["scalabl",{"_index":103,"title":{},"name":{},"text":{"1":{},"269":{}},"component":{}}],["scale",{"_index":847,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"265":{},"269":{}},"component":{}}],["scan",{"_index":2003,"title":{},"name":{},"text":{"241":{},"245":{},"281":{}},"component":{}}],["scenario",{"_index":995,"title":{},"name":{},"text":{"24":{},"65":{},"271":{},"279":{},"288":{}},"component":{}}],["schedul",{"_index":1319,"title":{},"name":{},"text":{"38":{},"78":{},"231":{},"265":{}},"component":{}}],["schedule_interv",{"_index":2742,"title":{},"name":{},"text":{"273":{}},"component":{}}],["schema",{"_index":252,"title":{"293":{},"296":{},"299":{},"302":{},"305":{}},"name":{"293":{},"296":{},"299":{},"302":{},"305":{}},"text":{"4":{},"29":{},"38":{},"41":{},"45":{},"69":{},"78":{},"80":{},"143":{},"154":{},"169":{},"180":{},"199":{},"209":{},"272":{},"273":{}},"component":{}}],["scheme",{"_index":1204,"title":{},"name":{},"text":{"29":{},"42":{},"69":{},"81":{},"143":{},"169":{},"177":{},"199":{},"210":{}},"component":{}}],["scientist",{"_index":950,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["scope",{"_index":118,"title":{"26-2":{},"41-1":{},"80-1":{},"209-1":{}},"name":{},"text":{"2":{},"26":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{},"258":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["scopedmetadata",{"_index":3123,"title":{"293-26":{},"296-26":{},"299-26":{},"302-26":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["scratch",{"_index":2100,"title":{},"name":{},"text":{"245":{}},"component":{}}],["screen",{"_index":2240,"title":{},"name":{},"text":{"259":{},"267":{},"269":{},"270":{},"273":{},"274":{}},"component":{}}],["screenshot",{"_index":2522,"title":{},"name":{},"text":{"264":{},"267":{},"280":{}},"component":{}}],["script",{"_index":286,"title":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"6-4":{},"47-4":{},"120-4":{},"130-4":{},"156-4":{},"182-4":{}},"name":{},"text":{"5":{},"6":{},"8":{},"9":{},"12":{},"46":{},"47":{},"49":{},"50":{},"53":{},"91":{},"93":{},"107":{},"109":{},"119":{},"120":{},"122":{},"129":{},"130":{},"132":{},"155":{},"156":{},"158":{},"181":{},"182":{},"184":{},"185":{},"220":{},"232":{},"244":{},"265":{},"278":{},"280":{}},"component":{}}],["script/drgadm",{"_index":402,"title":{},"name":{},"text":{"8":{},"9":{},"49":{},"50":{},"122":{},"132":{},"158":{},"184":{},"185":{}},"component":{}}],["script/drogue.sh",{"_index":1485,"title":{},"name":{},"text":{"91":{},"93":{},"107":{},"109":{}},"component":{}}],["scripts/drgadm",{"_index":332,"title":{},"name":{},"text":{"6":{},"9":{},"47":{},"50":{},"120":{},"130":{},"156":{},"182":{},"185":{}},"component":{}}],["sdk",{"_index":2105,"title":{},"name":{},"text":{"246":{}},"component":{}}],["seamless",{"_index":3046,"title":{},"name":{},"text":{"288":{}},"component":{}}],["searching.label",{"_index":3147,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["second",{"_index":1028,"title":{},"name":{},"text":{"25":{},"26":{},"27":{},"66":{},"68":{},"198":{},"237":{},"241":{},"243":{},"245":{},"267":{},"268":{},"276":{},"279":{},"280":{},"281":{},"285":{},"286":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["secondli",{"_index":2031,"title":{"245-4":{}},"name":{},"text":{},"component":{}}],["secret",{"_index":353,"title":{"8-10":{},"49-10":{},"93-9":{},"109-9":{},"122-9":{},"132-9":{},"158-9":{},"184-10":{}},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"213":{},"275":{}},"component":{}}],["section",{"_index":116,"title":{},"name":{},"text":{"2":{},"7":{},"12":{},"14":{},"17":{},"18":{},"20":{},"27":{},"30":{},"31":{},"35":{},"36":{},"40":{},"42":{},"43":{},"48":{},"53":{},"55":{},"58":{},"59":{},"61":{},"68":{},"70":{},"71":{},"75":{},"76":{},"79":{},"81":{},"82":{},"85":{},"88":{},"89":{},"92":{},"95":{},"98":{},"101":{},"102":{},"104":{},"108":{},"111":{},"114":{},"117":{},"118":{},"121":{},"125":{},"127":{},"131":{},"135":{},"138":{},"139":{},"141":{},"151":{},"152":{},"157":{},"161":{},"164":{},"165":{},"167":{},"170":{},"177":{},"178":{},"183":{},"189":{},"192":{},"193":{},"195":{},"198":{},"200":{},"201":{},"205":{},"206":{},"208":{},"210":{},"215":{},"219":{},"245":{},"256":{},"261":{},"263":{},"266":{},"267":{},"269":{},"272":{},"275":{},"280":{},"281":{},"283":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["secur",{"_index":104,"title":{},"name":{},"text":{"1":{},"22":{},"63":{},"272":{}},"component":{}}],["see",{"_index":397,"title":{"264-1":{},"271-2":{}},"name":{},"text":{"8":{},"12":{},"19":{},"20":{},"26":{},"27":{},"30":{},"31":{},"38":{},"40":{},"42":{},"49":{},"53":{},"60":{},"61":{},"68":{},"70":{},"71":{},"79":{},"81":{},"93":{},"103":{},"104":{},"109":{},"122":{},"124":{},"125":{},"132":{},"140":{},"141":{},"158":{},"166":{},"167":{},"170":{},"177":{},"184":{},"194":{},"195":{},"198":{},"200":{},"201":{},"208":{},"210":{},"214":{},"215":{},"229":{},"233":{},"234":{},"236":{},"237":{},"239":{},"243":{},"244":{},"245":{},"251":{},"254":{},"258":{},"261":{},"262":{},"263":{},"264":{},"266":{},"267":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"279":{},"280":{},"281":{},"282":{},"285":{},"289":{},"290":{},"291":{},"293":{},"294":{},"296":{},"297":{},"299":{},"300":{},"302":{}},"component":{}}],["seem",{"_index":525,"title":{},"name":{},"text":{"12":{},"40":{},"53":{},"79":{},"208":{}},"component":{}}],["seen",{"_index":3041,"title":{},"name":{},"text":{"288":{}},"component":{}}],["segment",{"_index":1277,"title":{},"name":{},"text":{"31":{},"40":{},"71":{},"79":{},"201":{},"208":{}},"component":{}}],["select",{"_index":1143,"title":{},"name":{},"text":{"27":{},"31":{},"40":{},"41":{},"42":{},"68":{},"71":{},"79":{},"80":{},"81":{},"151":{},"177":{},"198":{},"201":{},"208":{},"209":{},"210":{},"216":{},"231":{},"258":{},"266":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{}},"component":{}}],["select(tick",{"_index":1680,"title":{},"name":{},"text":{"216":{}},"component":{}}],["select(timeout",{"_index":1676,"title":{},"name":{},"text":{"216":{}},"component":{}}],["selector",{"_index":3073,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["selectors.label",{"_index":3072,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["self",{"_index":955,"title":{},"name":{},"text":{"22":{},"63":{},"216":{},"218":{},"219":{},"256":{},"258":{},"268":{},"271":{}},"component":{}}],["self.config.user_led.state().unwrap_or_default",{"_index":2886,"title":{},"name":{},"text":{"279":{}},"component":{}}],["self.count",{"_index":2889,"title":{},"name":{},"text":{"279":{}},"component":{}}],["self.counter.add(*value).await",{"_index":1761,"title":{},"name":{},"text":{"218":{}},"component":{}}],["self.counter.increment().await",{"_index":1759,"title":{},"name":{},"text":{"218":{}},"component":{}}],["self.matrix.off(x",{"_index":1690,"title":{},"name":{},"text":{"216":{}},"component":{}}],["self.matrix.on(x",{"_index":1670,"title":{},"name":{},"text":{"216":{}},"component":{}}],["self.matrix.rend",{"_index":1683,"title":{},"name":{},"text":{"216":{}},"component":{}}],["self.valu",{"_index":1779,"title":{},"name":{},"text":{"219":{}},"component":{}}],["self::addfutur",{"_index":1777,"title":{},"name":{},"text":{"219":{}},"component":{}}],["self::incrementfutur",{"_index":1773,"title":{},"name":{},"text":{"219":{}},"component":{}}],["self::onmountfutur",{"_index":1764,"title":{},"name":{},"text":{"218":{}},"component":{}}],["semant",{"_index":783,"title":{},"name":{},"text":{"15":{},"56":{},"218":{}},"component":{}}],["semiconductor",{"_index":1978,"title":{},"name":{},"text":{"239":{},"241":{},"243":{}},"component":{}}],["semtech",{"_index":1957,"title":{},"name":{},"text":{"237":{}},"component":{}}],["send",{"_index":708,"title":{"266-3":{},"270-4":{},"273-4":{},"281-12":{},"287-1":{}},"name":{},"text":{"14":{},"15":{},"22":{},"25":{},"26":{},"29":{},"30":{},"31":{},"33":{},"35":{},"36":{},"37":{},"38":{},"41":{},"55":{},"56":{},"63":{},"66":{},"69":{},"70":{},"71":{},"73":{},"75":{},"76":{},"78":{},"80":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"143":{},"147":{},"149":{},"161":{},"162":{},"169":{},"170":{},"173":{},"175":{},"189":{},"190":{},"199":{},"200":{},"201":{},"203":{},"205":{},"206":{},"209":{},"214":{},"216":{},"218":{},"220":{},"223":{},"231":{},"233":{},"234":{},"236":{},"237":{},"244":{},"251":{},"254":{},"255":{},"261":{},"266":{},"269":{},"270":{},"273":{},"276":{},"277":{},"279":{},"280":{},"281":{},"285":{},"286":{},"287":{},"288":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["sender",{"_index":758,"title":{},"name":{},"text":{"15":{},"38":{},"41":{},"56":{},"78":{},"80":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"209":{},"218":{}},"component":{}}],["senderuid",{"_index":1330,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["sending/transmit",{"_index":1063,"title":{"26-8":{}},"name":{},"text":{},"component":{}}],["sendtop",{"_index":2954,"title":{},"name":{},"text":{"280":{}},"component":{}}],["sens",{"_index":768,"title":{},"name":{},"text":{"15":{},"26":{},"31":{},"56":{},"71":{},"201":{},"241":{},"258":{}},"component":{}}],["sensit",{"_index":1029,"title":{},"name":{},"text":{"25":{},"29":{},"66":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["sensor",{"_index":16,"title":{"286":{},"22-2":{},"63-2":{}},"name":{},"text":{"1":{},"17":{},"22":{},"25":{},"42":{},"58":{},"63":{},"66":{},"81":{},"88":{},"101":{},"117":{},"138":{},"164":{},"177":{},"192":{},"210":{},"220":{},"222":{},"223":{},"228":{},"230":{},"239":{},"243":{},"251":{},"268":{},"270":{},"273":{},"279":{},"285":{},"287":{},"288":{}},"component":{}}],["sensor01",{"_index":1257,"title":{},"name":{},"text":{"31":{},"71":{},"201":{}},"component":{}}],["sent",{"_index":752,"title":{},"name":{},"text":{"15":{},"26":{},"29":{},"38":{},"41":{},"42":{},"56":{},"69":{},"78":{},"80":{},"81":{},"86":{},"99":{},"115":{},"136":{},"143":{},"151":{},"162":{},"169":{},"177":{},"190":{},"199":{},"209":{},"210":{},"214":{},"218":{},"261":{},"268":{},"276":{},"279":{},"280":{},"281":{},"285":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["separ",{"_index":600,"title":{},"name":{},"text":{"12":{},"24":{},"53":{},"65":{},"234":{},"280":{},"281":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["sequenc",{"_index":1546,"title":{},"name":{},"text":{"214":{}},"component":{}}],["sequenti",{"_index":1100,"title":{},"name":{},"text":{"26":{}},"component":{}}],["seri",{"_index":1859,"title":{"268":{}},"name":{},"text":{"229":{},"268":{},"271":{},"272":{},"283":{}},"component":{}}],["serial",{"_index":1454,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"220":{},"223":{},"228":{},"234":{}},"component":{}}],["serv",{"_index":629,"title":{},"name":{},"text":{"12":{},"25":{},"35":{},"41":{},"53":{},"66":{},"75":{},"80":{},"205":{},"209":{},"212":{},"265":{},"269":{},"280":{},"290":{}},"component":{}}],["server",{"_index":198,"title":{"12-19":{},"53-19":{}},"name":{},"text":{"4":{},"12":{},"15":{},"25":{},"28":{},"41":{},"42":{},"45":{},"53":{},"56":{},"66":{},"67":{},"80":{},"81":{},"86":{},"99":{},"115":{},"136":{},"151":{},"154":{},"162":{},"177":{},"180":{},"190":{},"197":{},"209":{},"210":{},"213":{},"214":{},"215":{},"234":{},"251":{},"260":{},"261":{},"263":{},"272":{},"280":{}},"component":{}}],["server(a",{"_index":1975,"title":{},"name":{},"text":{"239":{},"243":{}},"component":{}}],["server](https://github.com/drogu",{"_index":625,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["serverendpoint(\"/w",{"_index":2311,"title":{},"name":{},"text":{"261":{}},"component":{}}],["serverless",{"_index":949,"title":{},"name":{},"text":{"22":{},"63":{},"269":{},"271":{},"288":{}},"component":{}}],["servic",{"_index":113,"title":{"16":{},"18":{},"57":{},"59":{},"87":{},"89":{},"100":{},"102":{},"116":{},"118":{},"137":{},"139":{},"163":{},"165":{},"191":{},"193":{},"268":{},"14-2":{},"22-6":{},"55-2":{},"63-6":{},"85-2":{},"98-2":{},"114-2":{},"135-2":{},"161-2":{},"189-2":{},"262-6":{}},"name":{"18":{},"59":{},"89":{},"102":{},"118":{},"139":{},"165":{},"193":{}},"text":{"1":{},"4":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"22":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"36":{},"41":{},"45":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"63":{},"65":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"76":{},"80":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"143":{},"144":{},"145":{},"146":{},"154":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"169":{},"170":{},"171":{},"172":{},"175":{},"180":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"197":{},"199":{},"200":{},"201":{},"202":{},"206":{},"209":{},"212":{},"213":{},"215":{},"220":{},"233":{},"234":{},"241":{},"245":{},"262":{},"265":{},"267":{},"268":{},"269":{},"271":{},"272":{},"279":{},"280":{},"281":{},"287":{}},"component":{}}],["service.yaml",{"_index":2387,"title":{},"name":{},"text":{"262":{}},"component":{}}],["serving.knative.dev/v1",{"_index":2662,"title":{},"name":{},"text":{"269":{}},"component":{}}],["servlerless/kn",{"_index":3045,"title":{},"name":{},"text":{"288":{}},"component":{}}],["session",{"_index":1181,"title":{},"name":{},"text":{"28":{},"31":{},"67":{},"71":{},"171":{},"197":{},"201":{},"261":{},"276":{}},"component":{}}],["session.getasyncremote().sendobject(lastev",{"_index":2316,"title":{},"name":{},"text":{"261":{}},"component":{}}],["sessions.put(session.getid",{"_index":2317,"title":{},"name":{},"text":{"261":{}},"component":{}}],["sessions.remove(session.getid",{"_index":2320,"title":{},"name":{},"text":{"261":{}},"component":{}}],["sessions.values().foreach(",{"_index":2330,"title":{},"name":{},"text":{"261":{}},"component":{}}],["set",{"_index":361,"title":{"19-1":{},"20-1":{},"42-9":{},"42-12":{},"42-15":{},"42-18":{},"60-1":{},"61-1":{},"81-9":{},"81-12":{},"81-15":{},"81-18":{},"103-1":{},"104-1":{},"124-1":{},"125-1":{},"140-1":{},"141-1":{},"151-9":{},"151-10":{},"166-1":{},"167-1":{},"177-9":{},"177-12":{},"177-15":{},"177-18":{},"194-1":{},"195-1":{},"210-9":{},"210-12":{},"210-15":{},"210-18":{},"239-5":{},"241-5":{},"243-5":{}},"name":{},"text":{"8":{},"9":{},"11":{},"12":{},"13":{},"17":{},"18":{},"19":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"35":{},"37":{},"40":{},"41":{},"42":{},"49":{},"50":{},"52":{},"53":{},"54":{},"58":{},"59":{},"60":{},"65":{},"67":{},"68":{},"69":{},"71":{},"75":{},"77":{},"79":{},"80":{},"81":{},"84":{},"88":{},"93":{},"94":{},"97":{},"101":{},"103":{},"109":{},"110":{},"113":{},"117":{},"122":{},"123":{},"124":{},"132":{},"133":{},"134":{},"138":{},"139":{},"140":{},"143":{},"151":{},"158":{},"159":{},"160":{},"164":{},"165":{},"166":{},"169":{},"177":{},"184":{},"185":{},"187":{},"188":{},"192":{},"193":{},"194":{},"197":{},"198":{},"199":{},"201":{},"205":{},"207":{},"208":{},"209":{},"210":{},"213":{},"214":{},"216":{},"219":{},"220":{},"229":{},"236":{},"237":{},"241":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"258":{},"259":{},"260":{},"267":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"281":{},"282":{},"283":{},"285":{},"289":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["set/unset",{"_index":1687,"title":{},"name":{},"text":{"216":{}},"component":{}}],["setextens",{"_index":1433,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["setstat",{"_index":2435,"title":{},"name":{},"text":{"263":{}},"component":{}}],["settemperatur",{"_index":1300,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["setting/remov",{"_index":1388,"title":{"41-10":{},"80-10":{},"209-10":{}},"name":{},"text":{},"component":{}}],["setup",{"_index":405,"title":{"274":{},"275":{},"282":{},"284":{},"289":{},"260-2":{},"280-7":{},"281-7":{}},"name":{"274":{}},"text":{"8":{},"17":{},"49":{},"58":{},"88":{},"93":{},"101":{},"109":{},"117":{},"122":{},"132":{},"138":{},"158":{},"164":{},"184":{},"192":{},"216":{},"229":{},"259":{},"260":{},"262":{},"267":{},"274":{},"277":{},"278":{},"288":{}},"component":{}}],["sever",{"_index":544,"title":{},"name":{},"text":{"12":{},"14":{},"22":{},"25":{},"36":{},"39":{},"53":{},"55":{},"63":{},"66":{},"76":{},"85":{},"98":{},"114":{},"135":{},"161":{},"175":{},"189":{},"206":{},"220":{}},"component":{}}],["sh",{"_index":3004,"title":{},"name":{},"text":{"282":{},"289":{}},"component":{}}],["sha512",{"_index":1470,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["share",{"_index":684,"title":{"39":{},"36-8":{},"76-8":{},"175-8":{},"206-8":{}},"name":{},"text":{"14":{},"15":{},"17":{},"26":{},"36":{},"37":{},"39":{},"55":{},"56":{},"58":{},"76":{},"77":{},"85":{},"86":{},"88":{},"98":{},"99":{},"101":{},"114":{},"115":{},"117":{},"135":{},"136":{},"138":{},"161":{},"162":{},"164":{},"175":{},"189":{},"190":{},"192":{},"206":{},"207":{},"251":{},"285":{}},"component":{}}],["share//app",{"_index":1297,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["share/mi",{"_index":1298,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["shell",{"_index":450,"title":{"30-6":{},"70-6":{},"170-6":{},"200-6":{}},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"184":{},"263":{},"278":{}},"component":{}}],["shop",{"_index":2177,"title":{},"name":{},"text":{"256":{}},"component":{}}],["short",{"_index":1108,"title":{},"name":{},"text":{"26":{},"36":{},"37":{},"76":{},"175":{},"206":{},"280":{},"281":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["shouldn’t",{"_index":846,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["show",{"_index":344,"title":{},"name":{},"text":{"7":{},"8":{},"17":{},"39":{},"48":{},"49":{},"58":{},"88":{},"92":{},"93":{},"101":{},"108":{},"109":{},"117":{},"121":{},"122":{},"131":{},"132":{},"138":{},"157":{},"158":{},"164":{},"183":{},"184":{},"192":{},"220":{},"236":{},"248":{},"254":{},"255":{},"257":{},"259":{},"261":{},"262":{},"263":{},"264":{},"267":{},"273":{},"274":{},"275":{},"280":{},"281":{},"283":{}},"component":{}}],["shown",{"_index":1747,"title":{},"name":{},"text":{"218":{},"264":{},"280":{}},"component":{}}],["shut",{"_index":280,"title":{},"name":{},"text":{"5":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"272":{}},"component":{}}],["shutdown",{"_index":1052,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["side",{"_index":36,"title":{"279-2":{},"287-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"14":{},"15":{},"18":{},"21":{},"34":{},"38":{},"41":{},"43":{},"44":{},"55":{},"56":{},"59":{},"62":{},"74":{},"78":{},"80":{},"82":{},"83":{},"85":{},"86":{},"89":{},"95":{},"96":{},"98":{},"99":{},"102":{},"105":{},"111":{},"112":{},"114":{},"115":{},"118":{},"126":{},"127":{},"128":{},"135":{},"136":{},"139":{},"142":{},"148":{},"152":{},"153":{},"161":{},"162":{},"165":{},"168":{},"174":{},"178":{},"179":{},"189":{},"190":{},"193":{},"196":{},"204":{},"209":{},"244":{},"245":{},"257":{},"258":{},"259":{},"260":{},"268":{},"269":{},"270":{},"273":{},"277":{},"279":{},"287":{},"288":{},"291":{},"294":{},"297":{},"300":{}},"component":{}}],["sidebar",{"_index":2575,"title":{},"name":{},"text":{"267":{}},"component":{}}],["sigfox",{"_index":820,"title":{},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"229":{}},"component":{}}],["sign",{"_index":187,"title":{"14-4":{},"55-4":{},"85-4":{},"98-4":{},"114-4":{},"135-4":{},"161-4":{},"189-4":{}},"name":{},"text":{"3":{},"14":{},"15":{},"30":{},"31":{},"44":{},"55":{},"56":{},"70":{},"71":{},"83":{},"85":{},"86":{},"96":{},"98":{},"99":{},"112":{},"114":{},"115":{},"128":{},"135":{},"136":{},"153":{},"161":{},"162":{},"170":{},"179":{},"189":{},"190":{},"200":{},"201":{},"258":{},"267":{},"268":{}},"component":{}}],["signal",{"_index":778,"title":{},"name":{},"text":{"15":{},"26":{},"56":{},"287":{}},"component":{}}],["signup",{"_index":2633,"title":{},"name":{},"text":{"268":{}},"component":{}}],["silent",{"_index":1109,"title":{},"name":{},"text":{"26":{},"41":{},"80":{},"209":{},"245":{}},"component":{}}],["similar",{"_index":451,"title":{},"name":{},"text":{"8":{},"26":{},"38":{},"41":{},"49":{},"80":{},"184":{},"209":{},"220":{},"232":{},"258":{},"283":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["simpl",{"_index":107,"title":{"31-1":{},"71-1":{},"144-1":{},"171-3":{},"201-1":{}},"name":{},"text":{"1":{},"7":{},"14":{},"15":{},"17":{},"27":{},"31":{},"33":{},"37":{},"41":{},"48":{},"55":{},"56":{},"58":{},"68":{},"71":{},"73":{},"77":{},"80":{},"85":{},"86":{},"88":{},"92":{},"98":{},"99":{},"101":{},"108":{},"114":{},"115":{},"117":{},"121":{},"131":{},"135":{},"136":{},"138":{},"145":{},"147":{},"150":{},"157":{},"161":{},"162":{},"164":{},"171":{},"173":{},"176":{},"183":{},"189":{},"190":{},"192":{},"198":{},"201":{},"203":{},"207":{},"209":{},"216":{},"262":{},"264":{},"268":{},"269":{},"272":{},"280":{},"281":{},"286":{},"288":{}},"component":{}}],["simpler",{"_index":222,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{},"262":{}},"component":{}}],["simplest",{"_index":624,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["simpli",{"_index":373,"title":{},"name":{},"text":{"8":{},"15":{},"20":{},"21":{},"26":{},"27":{},"28":{},"41":{},"49":{},"56":{},"61":{},"62":{},"67":{},"68":{},"80":{},"86":{},"93":{},"99":{},"104":{},"105":{},"109":{},"115":{},"122":{},"125":{},"126":{},"132":{},"136":{},"141":{},"142":{},"158":{},"162":{},"167":{},"168":{},"184":{},"190":{},"195":{},"196":{},"197":{},"198":{},"209":{},"216":{},"258":{},"259":{},"261":{},"262":{},"268":{},"270":{},"272":{},"273":{},"275":{},"277":{},"279":{},"284":{}},"component":{}}],["simplic",{"_index":1922,"title":{},"name":{},"text":{"234":{},"251":{},"266":{}},"component":{}}],["simplifi",{"_index":833,"title":{},"name":{},"text":{"17":{},"22":{},"58":{},"63":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"216":{}},"component":{}}],["simul",{"_index":1080,"title":{"270":{},"270-1":{}},"name":{"270":{}},"text":{"26":{},"266":{},"268":{},"270":{},"273":{}},"component":{}}],["sine",{"_index":2677,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["singl",{"_index":186,"title":{"14-4":{},"55-4":{},"85-4":{},"98-4":{},"114-4":{},"135-4":{},"161-4":{},"189-4":{}},"name":{},"text":{"3":{},"4":{},"14":{},"15":{},"16":{},"17":{},"24":{},"25":{},"42":{},"44":{},"45":{},"55":{},"56":{},"57":{},"58":{},"65":{},"66":{},"81":{},"83":{},"85":{},"86":{},"87":{},"88":{},"96":{},"98":{},"99":{},"100":{},"101":{},"112":{},"114":{},"115":{},"116":{},"117":{},"128":{},"135":{},"136":{},"137":{},"138":{},"151":{},"153":{},"154":{},"161":{},"162":{},"163":{},"164":{},"177":{},"179":{},"180":{},"189":{},"190":{},"191":{},"192":{},"210":{},"218":{},"220":{},"267":{}},"component":{}}],["sink",{"_index":2297,"title":{},"name":{},"text":{"261":{}},"component":{}}],["sit",{"_index":2896,"title":{},"name":{},"text":{"279":{},"287":{}},"component":{}}],["site",{"_index":2060,"title":{},"name":{},"text":{"245":{}},"component":{}}],["situat",{"_index":1392,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"288":{}},"component":{}}],["size",{"_index":270,"title":{},"name":{},"text":{"5":{},"12":{},"26":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"211":{},"214":{},"231":{},"275":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["skip",{"_index":349,"title":{"8-6":{},"49-6":{},"93-6":{},"109-6":{},"122-6":{},"132-6":{},"158-6":{},"184-6":{}},"name":{},"text":{"8":{},"26":{},"49":{},"184":{},"259":{},"270":{},"273":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["slave",{"_index":699,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{}},"component":{}}],["sleco5imfwckoqmpgsy6vymeg6kda0gh1gxxg8k28kh8hjtgqegqinx2mna/h2ql",{"_index":1160,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["sleep",{"_index":2932,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["small",{"_index":938,"title":{"263-4":{}},"name":{},"text":{"22":{},"63":{},"214":{},"230":{},"261":{}},"component":{}}],["smallest",{"_index":2670,"title":{},"name":{},"text":{"269":{}},"component":{}}],["smallry",{"_index":2293,"title":{},"name":{},"text":{"261":{},"263":{},"281":{}},"component":{}}],["smart",{"_index":965,"title":{"25":{},"66":{}},"name":{"25":{},"66":{}},"text":{"23":{},"25":{},"64":{},"66":{}},"component":{}}],["smoother",{"_index":2695,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["snapshot",{"_index":2458,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["snippet",{"_index":2613,"title":{},"name":{},"text":{"268":{}},"component":{}}],["socket",{"_index":727,"title":{},"name":{},"text":{"15":{},"37":{},"56":{},"77":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"207":{},"218":{},"288":{}},"component":{}}],["soft",{"_index":877,"title":{},"name":{},"text":{"19":{},"21":{},"26":{},"60":{},"62":{},"103":{},"105":{},"124":{},"126":{},"140":{},"142":{},"166":{},"168":{},"194":{},"196":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["softdevic",{"_index":1973,"title":{"239-7":{},"241-6":{},"243-6":{}},"name":{},"text":{"239":{},"241":{},"243":{},"245":{}},"component":{}}],["softwar",{"_index":64,"title":{"233-3":{},"234-4":{},"235-4":{},"236-4":{},"237-4":{},"239-3":{},"241-3":{},"243-3":{},"244-5":{},"246-4":{},"247-4":{},"248-4":{},"249-4":{},"251-4":{},"252-4":{},"254-4":{},"255-4":{}},"name":{},"text":{"1":{},"22":{},"24":{},"63":{},"65":{},"230":{},"231":{}},"component":{}}],["solut",{"_index":33,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"15":{},"48":{},"54":{},"56":{},"84":{},"86":{},"92":{},"97":{},"99":{},"108":{},"113":{},"115":{},"121":{},"131":{},"134":{},"136":{},"157":{},"160":{},"162":{},"183":{},"188":{},"190":{},"262":{},"265":{}},"component":{}}],["solv",{"_index":102,"title":{},"name":{},"text":{"1":{}},"component":{}}],["some(appkey([241",{"_index":2794,"title":{},"name":{},"text":{"276":{}},"component":{}}],["some(command::tick",{"_index":2882,"title":{},"name":{},"text":{"279":{}},"component":{}}],["some(config",{"_index":2874,"title":{},"name":{},"text":{"279":{}},"component":{}}],["some(eu868",{"_index":2776,"title":{},"name":{},"text":{"276":{}},"component":{}}],["some(eui([0",{"_index":2781,"title":{},"name":{},"text":{"276":{}},"component":{}}],["some(eui([112",{"_index":2788,"title":{},"name":{},"text":{"276":{}},"component":{}}],["some(mut",{"_index":1755,"title":{},"name":{},"text":{"218":{}},"component":{}}],["some(wan",{"_index":2778,"title":{},"name":{},"text":{"276":{}},"component":{}}],["somehow",{"_index":1384,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["someon",{"_index":1347,"title":{},"name":{},"text":{"39":{},"41":{},"80":{},"209":{},"268":{},"272":{}},"component":{}}],["someth",{"_index":464,"title":{},"name":{},"text":{"8":{},"9":{},"26":{},"29":{},"49":{},"50":{},"69":{},"93":{},"109":{},"122":{},"132":{},"143":{},"158":{},"169":{},"184":{},"185":{},"199":{},"258":{},"260":{},"269":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["sometim",{"_index":82,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"40":{},"43":{},"47":{},"79":{},"82":{},"95":{},"111":{},"120":{},"127":{},"130":{},"152":{},"156":{},"178":{},"182":{},"208":{}},"component":{}}],["somewhat",{"_index":1437,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"219":{}},"component":{}}],["somewher",{"_index":1375,"title":{},"name":{},"text":{"40":{},"79":{},"208":{},"274":{},"280":{},"281":{}},"component":{}}],["soon",{"_index":1569,"title":{},"name":{},"text":{"214":{}},"component":{}}],["sort",{"_index":644,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["sourc",{"_index":1282,"title":{"230-5":{},"263-1":{}},"name":{},"text":{"35":{},"42":{},"75":{},"81":{},"151":{},"177":{},"205":{},"210":{},"212":{},"213":{},"215":{},"230":{},"259":{},"261":{},"263":{},"266":{},"267":{},"268":{},"271":{},"280":{},"281":{}},"component":{}}],["source.drogue.token=drg_hash",{"_index":3014,"title":{},"name":{},"text":{"283":{}},"component":{}}],["source.drogue.user=dejanb",{"_index":3013,"title":{},"name":{},"text":{"283":{}},"component":{}}],["source=drogue://drogue%2dpublic%2dtemperature/a4%3ac1%3a38%3aa2%3a6d%3a42",{"_index":2474,"title":{},"name":{},"text":{"263":{}},"component":{}}],["south",{"_index":147,"title":{},"name":{},"text":{"2":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{}},"component":{}}],["space",{"_index":533,"title":{},"name":{},"text":{"12":{},"53":{},"231":{},"268":{}},"component":{}}],["spain",{"_index":3086,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["spawn",{"_index":1712,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["spawn_actor!(spawn",{"_index":1703,"title":{},"name":{},"text":{"216":{}},"component":{}}],["spawner",{"_index":1710,"title":{},"name":{},"text":{"216":{},"218":{}},"component":{}}],["speak",{"_index":1370,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["spec",{"_index":867,"title":{},"name":{},"text":{"19":{},"20":{},"31":{},"35":{},"40":{},"41":{},"42":{},"60":{},"61":{},"71":{},"75":{},"79":{},"80":{},"81":{},"103":{},"104":{},"124":{},"125":{},"140":{},"141":{},"151":{},"166":{},"167":{},"177":{},"194":{},"195":{},"201":{},"205":{},"208":{},"209":{},"210":{},"215":{},"262":{},"266":{},"269":{},"275":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["spec.kn",{"_index":1284,"title":{},"name":{},"text":{"35":{},"75":{},"205":{}},"component":{}}],["spec.mqtt.dialect",{"_index":1377,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["spec.publish",{"_index":1417,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["spec.ttn",{"_index":901,"title":{},"name":{},"text":{"20":{},"61":{},"104":{},"125":{},"141":{},"167":{},"195":{},"275":{}},"component":{}}],["spec.ttn.api.id",{"_index":880,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{}},"component":{}}],["special",{"_index":1276,"title":{},"name":{},"text":{"31":{},"36":{},"41":{},"71":{},"76":{},"80":{},"175":{},"201":{},"206":{},"209":{},"214":{},"268":{}},"component":{}}],["specif",{"_index":87,"title":{},"name":{},"text":{"1":{},"2":{},"12":{},"14":{},"15":{},"18":{},"19":{},"20":{},"22":{},"23":{},"26":{},"27":{},"29":{},"31":{},"41":{},"43":{},"53":{},"55":{},"56":{},"59":{},"60":{},"61":{},"63":{},"64":{},"68":{},"69":{},"71":{},"80":{},"82":{},"85":{},"86":{},"89":{},"95":{},"98":{},"99":{},"102":{},"103":{},"104":{},"111":{},"114":{},"115":{},"118":{},"124":{},"125":{},"127":{},"135":{},"136":{},"139":{},"140":{},"141":{},"143":{},"152":{},"161":{},"162":{},"165":{},"166":{},"167":{},"169":{},"171":{},"178":{},"189":{},"190":{},"193":{},"194":{},"195":{},"198":{},"199":{},"201":{},"209":{},"218":{},"239":{},"241":{},"243":{},"256":{},"261":{},"262":{},"266":{},"267":{},"269":{},"281":{},"288":{},"304":{}},"component":{}}],["specifi",{"_index":424,"title":{},"name":{},"text":{"8":{},"9":{},"29":{},"30":{},"31":{},"42":{},"49":{},"50":{},"69":{},"70":{},"71":{},"81":{},"122":{},"132":{},"143":{},"158":{},"169":{},"170":{},"177":{},"184":{},"185":{},"199":{},"200":{},"201":{},"210":{},"218":{},"219":{},"220":{},"229":{},"232":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["specvers",{"_index":1322,"title":{},"name":{},"text":{"38":{},"78":{}},"component":{}}],["speed",{"_index":1655,"title":{},"name":{},"text":{"216":{}},"component":{}}],["spend",{"_index":2577,"title":{},"name":{},"text":{"267":{},"268":{},"272":{}},"component":{}}],["spi",{"_index":697,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"276":{},"277":{},"285":{}},"component":{}}],["spin",{"_index":1415,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["split",{"_index":1025,"title":{},"name":{},"text":{"25":{},"66":{},"279":{},"286":{}},"component":{}}],["spot",{"_index":2696,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["sql",{"_index":2591,"title":{},"name":{},"text":{"267":{},"269":{},"271":{},"272":{}},"component":{}}],["sr2bvap5sqxygd0ftcrwqemsaxavcg/y39w9eh81lygxbnkywagjzhdurze6zqxz",{"_index":1157,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["src/echo.sh",{"_index":2029,"title":{},"name":{},"text":{"244":{}},"component":{}}],["src/main.r",{"_index":1931,"title":{},"name":{},"text":{"234":{},"251":{}},"component":{}}],["src/main/docker/dockerfile.jvm",{"_index":2344,"title":{},"name":{},"text":{"262":{}},"component":{}}],["src/main/resources/appl",{"_index":2963,"title":{},"name":{},"text":{"281":{}},"component":{}}],["srmsg00209",{"_index":2437,"title":{},"name":{},"text":{"263":{}},"component":{}}],["srmsg00210",{"_index":2441,"title":{},"name":{},"text":{"263":{}},"component":{}}],["srmsg00226",{"_index":2425,"title":{},"name":{},"text":{"263":{}},"component":{}}],["srmsg00227",{"_index":2427,"title":{},"name":{},"text":{"263":{}},"component":{}}],["srmsg00229",{"_index":2429,"title":{},"name":{},"text":{"263":{}},"component":{}}],["srmsg00235",{"_index":2444,"title":{},"name":{},"text":{"263":{}},"component":{}}],["srmsg00236",{"_index":2446,"title":{},"name":{},"text":{"263":{}},"component":{}}],["sse",{"_index":2935,"title":{},"name":{},"text":{"280":{}},"component":{}}],["sse.sendcommandevent(command",{"_index":2953,"title":{},"name":{},"text":{"280":{}},"component":{}}],["sse.sendmessageevent(ev",{"_index":2948,"title":{},"name":{},"text":{"280":{}},"component":{}}],["sse.updateresponse(sse.lastrespons",{"_index":2952,"title":{},"name":{},"text":{"280":{}},"component":{}}],["ssf",{"_index":3002,"title":{},"name":{},"text":{"282":{},"289":{}},"component":{}}],["ssh",{"_index":2376,"title":{},"name":{},"text":{"262":{}},"component":{}}],["ssid",{"_index":1798,"title":{},"name":{},"text":{"220":{},"232":{},"234":{},"244":{},"251":{},"285":{}},"component":{}}],["ssl",{"_index":2711,"title":{},"name":{},"text":{"272":{}},"component":{}}],["sso",{"_index":631,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"53":{},"55":{},"56":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{}},"component":{}}],["st",{"_index":2157,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["stabl",{"_index":1317,"title":{},"name":{},"text":{"37":{},"77":{},"207":{}},"component":{}}],["stack",{"_index":1492,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{},"239":{},"241":{},"243":{},"267":{},"269":{}},"component":{}}],["stage",{"_index":2223,"title":{},"name":{},"text":{"259":{}},"component":{}}],["stage.apps.sandbox",{"_index":2358,"title":{},"name":{},"text":{"262":{}},"component":{}}],["standalon",{"_index":1911,"title":{},"name":{},"text":{"231":{}},"component":{}}],["standard",{"_index":305,"title":{"6-2":{},"47-2":{},"91-2":{},"107-2":{},"120-2":{},"130-2":{},"156-2":{},"182-2":{}},"name":{},"text":{"6":{},"22":{},"30":{},"31":{},"36":{},"37":{},"38":{},"47":{},"63":{},"70":{},"71":{},"76":{},"77":{},"78":{},"91":{},"107":{},"120":{},"130":{},"156":{},"170":{},"175":{},"182":{},"200":{},"201":{},"206":{},"207":{},"233":{},"234":{},"260":{},"267":{},"273":{},"277":{}},"component":{}}],["start",{"_index":34,"title":{"229":{},"258":{},"4-2":{},"45-2":{},"154-2":{},"180-2":{},"263-3":{},"270-3":{},"273-3":{}},"name":{},"text":{"1":{},"4":{},"5":{},"8":{},"10":{},"12":{},"15":{},"35":{},"42":{},"45":{},"46":{},"49":{},"51":{},"53":{},"56":{},"75":{},"81":{},"86":{},"90":{},"93":{},"94":{},"99":{},"106":{},"109":{},"110":{},"115":{},"119":{},"122":{},"123":{},"129":{},"132":{},"133":{},"136":{},"151":{},"154":{},"155":{},"158":{},"159":{},"162":{},"177":{},"180":{},"181":{},"184":{},"186":{},"190":{},"205":{},"210":{},"216":{},"218":{},"229":{},"234":{},"236":{},"239":{},"241":{},"243":{},"245":{},"251":{},"254":{},"255":{},"256":{},"258":{},"259":{},"261":{},"262":{},"263":{},"267":{},"268":{},"269":{},"270":{},"273":{},"274":{},"276":{},"280":{},"281":{},"283":{},"285":{},"287":{},"288":{},"290":{},"305":{}},"component":{}}],["start_offset",{"_index":2739,"title":{},"name":{},"text":{"273":{}},"component":{}}],["starter",{"_index":2228,"title":{"260":{}},"name":{},"text":{"259":{},"260":{},"261":{},"262":{},"263":{},"264":{}},"component":{}}],["starter/main/devfile.yaml",{"_index":2238,"title":{},"name":{},"text":{"259":{}},"component":{}}],["starter/tree/main/src/main",{"_index":2255,"title":{},"name":{},"text":{"261":{}},"component":{}}],["starter:latest",{"_index":2347,"title":{},"name":{},"text":{"262":{}},"component":{}}],["startup",{"_index":2082,"title":{},"name":{},"text":{"245":{},"261":{}},"component":{}}],["state",{"_index":468,"title":{"258-13":{},"261-7":{}},"name":{},"text":{"8":{},"14":{},"18":{},"22":{},"24":{},"25":{},"26":{},"49":{},"55":{},"59":{},"63":{},"65":{},"66":{},"85":{},"93":{},"98":{},"109":{},"114":{},"122":{},"132":{},"135":{},"139":{},"158":{},"161":{},"165":{},"184":{},"189":{},"193":{},"216":{},"218":{},"231":{},"258":{},"259":{},"261":{},"266":{},"275":{},"279":{},"287":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["state/currentst",{"_index":2300,"title":{},"name":{},"text":{"261":{}},"component":{}}],["stateless",{"_index":1408,"title":{},"name":{},"text":{"41":{},"80":{},"209":{},"214":{}},"component":{}}],["statement",{"_index":2531,"title":{},"name":{},"text":{"265":{},"269":{},"272":{},"273":{}},"component":{}}],["static",{"_index":1742,"title":{},"name":{},"text":{"218":{},"280":{}},"component":{}}],["station",{"_index":1037,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["statu",{"_index":355,"title":{"8-12":{},"49-12":{},"93-12":{},"109-12":{},"122-12":{},"132-12":{},"158-12":{},"184-12":{}},"name":{},"text":{"24":{},"29":{},"41":{},"65":{},"69":{},"80":{},"143":{},"169":{},"199":{},"209":{},"212":{},"214":{},"215":{},"216":{},"236":{},"245":{},"254":{},"255":{},"258":{},"262":{},"285":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"305":{}},"component":{}}],["status.condit",{"_index":2543,"title":{},"name":{},"text":{"266":{}},"component":{}}],["status.ttn",{"_index":2762,"title":{},"name":{},"text":{"275":{}},"component":{}}],["stay",{"_index":1358,"title":{},"name":{},"text":{"39":{},"288":{}},"component":{}}],["std",{"_index":1845,"title":{"233-1":{},"234-1":{}},"name":{},"text":{"229":{},"231":{}},"component":{}}],["step",{"_index":24,"title":{"263-4":{}},"name":{},"text":{"1":{},"4":{},"7":{},"8":{},"15":{},"26":{},"41":{},"42":{},"45":{},"48":{},"49":{},"56":{},"80":{},"81":{},"92":{},"93":{},"108":{},"109":{},"121":{},"122":{},"131":{},"132":{},"154":{},"157":{},"158":{},"177":{},"180":{},"183":{},"184":{},"209":{},"210":{},"213":{},"214":{},"251":{},"256":{},"259":{},"262":{},"263":{},"266":{},"267":{},"268":{},"269":{},"272":{},"274":{},"276":{},"278":{},"281":{},"283":{},"284":{},"285":{},"288":{},"290":{}},"component":{}}],["step’",{"_index":2931,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["stick",{"_index":2126,"title":{},"name":{},"text":{"247":{},"248":{},"249":{},"252":{},"266":{},"267":{}},"component":{}}],["still",{"_index":26,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"21":{},"25":{},"26":{},"40":{},"41":{},"46":{},"49":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"62":{},"66":{},"79":{},"80":{},"84":{},"85":{},"86":{},"87":{},"88":{},"93":{},"97":{},"98":{},"99":{},"100":{},"101":{},"105":{},"109":{},"113":{},"114":{},"115":{},"116":{},"117":{},"119":{},"122":{},"126":{},"129":{},"132":{},"134":{},"135":{},"136":{},"137":{},"138":{},"142":{},"155":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"168":{},"181":{},"184":{},"188":{},"189":{},"190":{},"191":{},"192":{},"196":{},"208":{},"209":{},"229":{},"258":{},"261":{},"263":{},"265":{},"268":{},"269":{},"270":{},"271":{},"273":{},"274":{},"275":{},"276":{},"279":{},"280":{},"281":{},"287":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["stm32",{"_index":1806,"title":{"250":{},"253":{},"229-3":{},"251-1":{},"254-1":{},"255-1":{}},"name":{},"text":{"220":{},"221":{},"223":{},"224":{},"225":{},"228":{},"229":{},"231":{},"236":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"277":{}},"component":{}}],["stm32h743zi",{"_index":1851,"title":{},"name":{},"text":{"229":{}},"component":{}}],["stm32l0",{"_index":1855,"title":{},"name":{},"text":{"229":{},"277":{}},"component":{}}],["stm32l072cz",{"_index":2769,"title":{},"name":{},"text":{"276":{}},"component":{}}],["stm32l1",{"_index":1963,"title":{},"name":{},"text":{"237":{}},"component":{}}],["stm32l151",{"_index":1956,"title":{},"name":{},"text":{"237":{}},"component":{}}],["stm32l4",{"_index":1828,"title":{},"name":{},"text":{"220":{},"226":{},"229":{},"286":{}},"component":{}}],["stm32l475vg",{"_index":2134,"title":{},"name":{},"text":{"250":{},"253":{}},"component":{}}],["stm32u5",{"_index":1858,"title":{},"name":{},"text":{"229":{}},"component":{}}],["stm32u585ai",{"_index":2163,"title":{"252-1":{}},"name":{},"text":{"252":{}},"component":{}}],["stm32wl55jci",{"_index":1857,"title":{},"name":{},"text":{"229":{}},"component":{}}],["stm32wle5jcix",{"_index":2168,"title":{},"name":{},"text":{"255":{}},"component":{}}],["stop",{"_index":1421,"title":{"245-3":{}},"name":{},"text":{"41":{},"80":{},"209":{},"245":{}},"component":{}}],["storag",{"_index":800,"title":{},"name":{},"text":{"15":{},"22":{},"56":{},"63":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"214":{},"246":{},"269":{},"283":{}},"component":{}}],["store",{"_index":651,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"22":{},"24":{},"26":{},"30":{},"31":{},"42":{},"54":{},"55":{},"56":{},"63":{},"65":{},"70":{},"71":{},"81":{},"84":{},"85":{},"86":{},"97":{},"98":{},"99":{},"113":{},"114":{},"115":{},"134":{},"135":{},"136":{},"160":{},"161":{},"162":{},"170":{},"177":{},"188":{},"189":{},"190":{},"200":{},"201":{},"210":{},"212":{},"213":{},"218":{},"220":{},"232":{},"233":{},"234":{},"251":{},"258":{},"261":{},"266":{},"268":{},"270":{},"271":{},"273":{},"274":{},"283":{},"286":{},"288":{}},"component":{}}],["straight",{"_index":2694,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["straightforward",{"_index":2636,"title":{},"name":{},"text":{"268":{}},"component":{}}],["strang",{"_index":2924,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["stream",{"_index":149,"title":{"261-8":{}},"name":{},"text":{"2":{},"3":{},"22":{},"24":{},"31":{},"34":{},"38":{},"39":{},"43":{},"44":{},"63":{},"65":{},"71":{},"74":{},"78":{},"82":{},"83":{},"95":{},"96":{},"111":{},"112":{},"127":{},"128":{},"148":{},"152":{},"153":{},"174":{},"178":{},"179":{},"201":{},"204":{},"259":{},"260":{},"264":{},"281":{},"288":{}},"component":{}}],["stream&as=device%232&ct=30",{"_index":1212,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["stream&as=device%234&ct=30",{"_index":1219,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["strike",{"_index":1407,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["strimzi",{"_index":392,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["string",{"_index":1239,"title":{},"name":{},"text":{"30":{},"38":{},"39":{},"42":{},"70":{},"78":{},"81":{},"151":{},"170":{},"177":{},"200":{},"210":{},"279":{},"287":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"305":{}},"component":{}}],["string::::new",{"_index":2885,"title":{},"name":{},"text":{"279":{}},"component":{}}],["strong",{"_index":676,"title":{},"name":{},"text":{"14":{},"55":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{}},"component":{}}],["struct",{"_index":1749,"title":{},"name":{},"text":{"218":{},"219":{},"279":{}},"component":{}}],["structur",{"_index":857,"title":{},"name":{},"text":{"18":{},"27":{},"31":{},"36":{},"40":{},"41":{},"42":{},"59":{},"68":{},"71":{},"76":{},"79":{},"80":{},"81":{},"89":{},"102":{},"118":{},"139":{},"151":{},"165":{},"175":{},"177":{},"193":{},"198":{},"201":{},"206":{},"208":{},"209":{},"210":{},"258":{},"261":{},"265":{},"281":{}},"component":{}}],["stuf",{"_index":1383,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["stuff",{"_index":2033,"title":{"245-9":{}},"name":{},"text":{"245":{}},"component":{}}],["su",{"_index":2050,"title":{},"name":{},"text":{"245":{}},"component":{}}],["sub",{"_index":850,"title":{},"name":{},"text":{"18":{},"41":{},"59":{},"80":{},"89":{},"102":{},"118":{},"139":{},"165":{},"193":{},"209":{},"276":{},"285":{}},"component":{}}],["subject",{"_index":1191,"title":{},"name":{},"text":{"29":{},"31":{},"38":{},"41":{},"69":{},"71":{},"78":{},"80":{},"143":{},"169":{},"199":{},"201":{},"209":{}},"component":{}}],["subject='statu",{"_index":2478,"title":{},"name":{},"text":{"263":{}},"component":{}}],["submit",{"_index":3090,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["submodul",{"_index":604,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["subscrib",{"_index":162,"title":{"31-10":{},"36-5":{},"71-10":{},"76-5":{},"171-5":{},"171-8":{},"175-5":{},"201-10":{},"206-5":{}},"name":{},"text":{"2":{},"15":{},"31":{},"36":{},"40":{},"43":{},"56":{},"71":{},"76":{},"79":{},"82":{},"86":{},"95":{},"99":{},"111":{},"115":{},"127":{},"136":{},"152":{},"162":{},"175":{},"178":{},"190":{},"201":{},"206":{},"208":{},"244":{},"261":{},"263":{},"264":{},"280":{}},"component":{}}],["subscript",{"_index":1290,"title":{"36-8":{},"76-8":{},"175-8":{},"206-8":{}},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["subsect",{"_index":1066,"title":{},"name":{},"text":{"26":{},"31":{},"71":{},"201":{}},"component":{}}],["subset",{"_index":2533,"title":{},"name":{},"text":{"265":{}},"component":{}}],["success",{"_index":1111,"title":{},"name":{},"text":{"26":{},"29":{},"41":{},"69":{},"80":{},"143":{},"169":{},"199":{},"209":{},"244":{},"251":{},"276":{},"285":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["successfulli",{"_index":762,"title":{},"name":{},"text":{"15":{},"31":{},"56":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"201":{},"245":{},"263":{},"266":{},"275":{},"276":{},"281":{},"284":{},"285":{},"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["such",{"_index":714,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"22":{},"25":{},"26":{},"29":{},"38":{},"41":{},"55":{},"56":{},"57":{},"58":{},"63":{},"66":{},"69":{},"78":{},"80":{},"85":{},"86":{},"87":{},"88":{},"98":{},"99":{},"100":{},"101":{},"114":{},"115":{},"116":{},"117":{},"135":{},"136":{},"137":{},"138":{},"143":{},"161":{},"162":{},"163":{},"164":{},"169":{},"189":{},"190":{},"191":{},"192":{},"199":{},"209":{},"213":{},"215":{},"220":{},"231":{},"251":{},"270":{},"273":{},"286":{}},"component":{}}],["sudo",{"_index":556,"title":{},"name":{},"text":{"12":{},"53":{},"245":{},"272":{}},"component":{}}],["suffici",{"_index":2185,"title":{},"name":{},"text":{"258":{},"260":{},"262":{},"267":{}},"component":{}}],["suit",{"_index":365,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"272":{}},"component":{}}],["suitabl",{"_index":1884,"title":{},"name":{},"text":{"231":{}},"component":{}}],["summar",{"_index":3075,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["summari",{"_index":1599,"title":{"288":{},"216-7":{}},"name":{"271":{},"288":{}},"text":{"267":{}},"component":{}}],["support",{"_index":150,"title":{"217":{},"42-23":{},"81-23":{},"177-23":{},"210-23":{},"256-1":{},"277-2":{},"286-2":{}},"name":{},"text":{"2":{},"5":{},"8":{},"12":{},"20":{},"21":{},"22":{},"25":{},"26":{},"28":{},"29":{},"31":{},"36":{},"37":{},"40":{},"41":{},"42":{},"43":{},"46":{},"49":{},"53":{},"61":{},"62":{},"63":{},"66":{},"67":{},"69":{},"71":{},"76":{},"77":{},"79":{},"80":{},"81":{},"82":{},"90":{},"95":{},"104":{},"105":{},"106":{},"111":{},"119":{},"122":{},"125":{},"126":{},"127":{},"129":{},"132":{},"141":{},"142":{},"143":{},"152":{},"155":{},"158":{},"167":{},"168":{},"169":{},"175":{},"177":{},"178":{},"181":{},"184":{},"195":{},"196":{},"197":{},"199":{},"201":{},"206":{},"207":{},"208":{},"209":{},"210":{},"212":{},"216":{},"217":{},"218":{},"219":{},"229":{},"231":{},"233":{},"235":{},"237":{},"246":{},"249":{},"256":{},"268":{},"275":{},"277":{},"286":{},"288":{}},"component":{}}],["sure",{"_index":248,"title":{},"name":{},"text":{"4":{},"12":{},"31":{},"36":{},"45":{},"53":{},"71":{},"76":{},"154":{},"180":{},"201":{},"206":{},"214":{},"215":{},"239":{},"241":{},"243":{},"249":{},"261":{},"263":{},"266":{},"267":{},"272":{},"274":{},"279":{},"283":{},"287":{},"288":{},"289":{},"290":{}},"component":{}}],["swap",{"_index":1567,"title":{},"name":{},"text":{"214":{},"241":{},"271":{},"273":{}},"component":{}}],["switch",{"_index":2898,"title":{},"name":{},"text":{"279":{},"280":{},"281":{},"287":{}},"component":{}}],["swyikwybbquhaqeepza9mdsgccsgaqufbzachi9odhrwoi8vyxbwcy5pzgvudhj1",{"_index":1163,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["sx1276",{"_index":1958,"title":{},"name":{},"text":{"237":{},"277":{}},"component":{}}],["symbol",{"_index":3076,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["sync",{"_index":902,"title":{},"name":{},"text":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{},"214":{},"218":{}},"component":{}}],["synchron",{"_index":852,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"59":{},"61":{},"62":{},"104":{},"105":{},"125":{},"126":{},"139":{},"141":{},"142":{},"165":{},"167":{},"168":{},"193":{},"195":{},"196":{},"218":{},"275":{}},"component":{}}],["syntax",{"_index":1124,"title":{},"name":{},"text":{"27":{},"68":{},"198":{},"219":{}},"component":{}}],["synthet",{"_index":1065,"title":{"26-12":{}},"name":{},"text":{"38":{}},"component":{}}],["system",{"_index":43,"title":{"12-3":{},"53-3":{},"256-1":{},"292-89":{},"295-89":{},"298-88":{},"301-89":{}},"name":{},"text":{"1":{},"2":{},"8":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"38":{},"41":{},"43":{},"49":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"68":{},"78":{},"80":{},"82":{},"85":{},"86":{},"87":{},"88":{},"89":{},"93":{},"95":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"109":{},"111":{},"114":{},"115":{},"116":{},"117":{},"118":{},"122":{},"124":{},"125":{},"126":{},"127":{},"132":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"152":{},"158":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"178":{},"184":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"198":{},"209":{},"216":{},"218":{},"230":{},"231":{},"256":{},"258":{},"261":{},"270":{},"272":{},"273":{},"275":{},"278":{},"281":{},"282":{},"289":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["t",{"_index":428,"title":{},"name":{},"text":{"8":{},"49":{},"184":{},"215":{},"245":{},"262":{},"266":{}},"component":{}}],["tab",{"_index":1349,"title":{},"name":{},"text":{"39":{},"259":{},"266":{},"269":{},"270":{},"273":{}},"component":{}}],["tabl",{"_index":2389,"title":{},"name":{},"text":{"262":{},"266":{},"267":{},"269":{},"272":{},"273":{}},"component":{}}],["tablet",{"_index":2183,"title":{},"name":{},"text":{"258":{}},"component":{}}],["tag",{"_index":315,"title":{},"name":{},"text":{"6":{},"47":{},"91":{},"107":{},"120":{},"130":{},"156":{},"182":{},"262":{},"276":{}},"component":{}}],["tag_device_id",{"_index":2661,"title":{},"name":{},"text":{"269":{}},"component":{}}],["take",{"_index":167,"title":{},"name":{},"text":{"3":{},"5":{},"15":{},"19":{},"41":{},"44":{},"46":{},"56":{},"60":{},"80":{},"83":{},"86":{},"96":{},"99":{},"103":{},"112":{},"115":{},"119":{},"124":{},"128":{},"129":{},"136":{},"140":{},"153":{},"155":{},"162":{},"166":{},"179":{},"181":{},"190":{},"194":{},"209":{},"216":{},"219":{},"220":{},"231":{},"232":{},"241":{},"245":{},"257":{},"259":{},"260":{},"261":{},"263":{},"264":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"277":{},"279":{},"280":{},"281":{},"283":{},"287":{}},"component":{}}],["talk",{"_index":808,"title":{},"name":{},"text":{"16":{},"57":{},"87":{},"100":{},"116":{},"137":{},"163":{},"191":{},"280":{},"281":{}},"component":{}}],["tamper",{"_index":1961,"title":{},"name":{},"text":{"237":{}},"component":{}}],["tap",{"_index":1279,"title":{},"name":{},"text":{"34":{},"74":{},"148":{},"174":{},"204":{},"269":{},"288":{}},"component":{}}],["target",{"_index":328,"title":{"8-8":{},"49-8":{},"93-7":{},"109-7":{},"122-7":{},"132-7":{},"158-7":{},"184-8":{}},"name":{},"text":{"6":{},"8":{},"12":{},"15":{},"26":{},"47":{},"49":{},"53":{},"56":{},"86":{},"99":{},"115":{},"120":{},"122":{},"130":{},"132":{},"136":{},"156":{},"158":{},"162":{},"182":{},"184":{},"190":{},"233":{},"245":{},"249":{},"261":{}},"component":{}}],["target(",{"_index":2771,"title":{},"name":{},"text":{"276":{}},"component":{}}],["target/thumbv6m",{"_index":2114,"title":{},"name":{},"text":{"246":{},"276":{}},"component":{}}],["target/thumbv7em",{"_index":2159,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["task",{"_index":835,"title":{"231-3":{}},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"213":{},"216":{},"218":{},"230":{},"231":{},"256":{},"281":{}},"component":{}}],["tcp",{"_index":1916,"title":{"234-6":{},"251-6":{}},"name":{},"text":{"234":{},"251":{},"280":{},"281":{}},"component":{}}],["tcp/ip",{"_index":1087,"title":{},"name":{},"text":{"26":{},"277":{}},"component":{}}],["tcpsocket",{"_index":1740,"title":{},"name":{},"text":{"218":{}},"component":{}}],["tea",{"_index":2233,"title":{},"name":{},"text":{"259":{}},"component":{}}],["team",{"_index":948,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["technic",{"_index":793,"title":{},"name":{},"text":{"15":{},"16":{},"56":{},"57":{},"86":{},"87":{},"99":{},"100":{},"115":{},"116":{},"136":{},"137":{},"162":{},"163":{},"190":{},"191":{},"258":{},"280":{},"281":{}},"component":{}}],["technician",{"_index":951,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["techniqu",{"_index":1885,"title":{},"name":{},"text":{"231":{}},"component":{}}],["technolog",{"_index":112,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"55":{},"56":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{},"258":{},"261":{}},"component":{}}],["tekton",{"_index":1008,"title":{},"name":{},"text":{"24":{},"65":{},"212":{},"213":{},"215":{}},"component":{}}],["telco",{"_index":998,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["telemetri",{"_index":962,"title":{"257":{},"30-2":{},"70-2":{},"170-2":{},"200-2":{}},"name":{"257":{}},"text":{"22":{},"24":{},"25":{},"29":{},"38":{},"63":{},"65":{},"66":{},"69":{},"78":{},"143":{},"169":{},"199":{},"220":{},"223":{},"233":{},"257":{},"260":{},"261":{},"265":{},"266":{},"268":{},"279":{},"283":{},"286":{},"287":{},"288":{}},"component":{}}],["telemetrychange(fin",{"_index":2307,"title":{},"name":{},"text":{"261":{}},"component":{}}],["telemetryevent(deviceev",{"_index":2324,"title":{},"name":{},"text":{"261":{}},"component":{}}],["tell",{"_index":3005,"title":{},"name":{},"text":{"282":{},"287":{},"289":{}},"component":{}}],["temp",{"_index":655,"title":{},"name":{},"text":{"13":{},"31":{},"54":{},"71":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"201":{},"270":{},"273":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["temp:=42",{"_index":1248,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["temper",{"_index":653,"title":{},"name":{},"text":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"268":{}},"component":{}}],["temperatur",{"_index":650,"title":{},"name":{},"text":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"239":{},"243":{},"251":{},"263":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"283":{},"285":{},"286":{},"287":{},"288":{},"290":{}},"component":{}}],["temperature\":{\"value\":42",{"_index":2551,"title":{},"name":{},"text":{"266":{}},"component":{}}],["temperature/server.pi",{"_index":2148,"title":{},"name":{},"text":{"251":{}},"component":{}}],["temperature_summary_minut",{"_index":2733,"title":{},"name":{},"text":{"273":{}},"component":{}}],["temperatures2",{"_index":2728,"title":{},"name":{},"text":{"273":{}},"component":{}}],["temperatures_old",{"_index":2732,"title":{},"name":{},"text":{"273":{}},"component":{}}],["templat",{"_index":2352,"title":{},"name":{},"text":{"262":{},"263":{},"269":{}},"component":{}}],["temporari",{"_index":1315,"title":{},"name":{},"text":{"37":{},"77":{},"207":{},"216":{},"270":{},"273":{}},"component":{}}],["temporarili",{"_index":1281,"title":{"35-2":{},"75-2":{},"205-2":{}},"name":{},"text":{"35":{},"75":{},"205":{}},"component":{}}],["term",{"_index":805,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"288":{}},"component":{}}],["termin",{"_index":278,"title":{},"name":{},"text":{"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"216":{},"229":{},"262":{},"280":{},"281":{}},"component":{}}],["test",{"_index":342,"title":{"12-8":{},"12-9":{},"12-10":{},"53-8":{},"53-9":{},"53-10":{},"273-8":{},"279-4":{},"280-7":{},"280-8":{},"281-7":{},"281-8":{},"287-4":{}},"name":{},"text":{"7":{},"8":{},"10":{},"12":{},"22":{},"29":{},"30":{},"48":{},"49":{},"51":{},"53":{},"63":{},"69":{},"70":{},"92":{},"93":{},"94":{},"108":{},"109":{},"110":{},"121":{},"122":{},"123":{},"131":{},"132":{},"133":{},"143":{},"157":{},"158":{},"159":{},"169":{},"170":{},"183":{},"184":{},"186":{},"199":{},"200":{},"234":{},"236":{},"244":{},"245":{},"251":{},"254":{},"255":{},"256":{},"260":{},"262":{},"266":{},"267":{},"272":{},"280":{},"281":{},"290":{}},"component":{}}],["text",{"_index":1469,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{},"241":{},"248":{},"258":{},"266":{},"274":{},"281":{},"290":{}},"component":{}}],["thank",{"_index":2895,"title":{},"name":{},"text":{"279":{},"287":{}},"component":{}}],["that’",{"_index":2099,"title":{},"name":{},"text":{"245":{},"276":{}},"component":{}}],["themselv",{"_index":1381,"title":{},"name":{},"text":{"40":{},"79":{},"208":{}},"component":{}}],["theori",{"_index":2626,"title":{},"name":{},"text":{"268":{}},"component":{}}],["therefor",{"_index":338,"title":{},"name":{},"text":{"6":{},"15":{},"26":{},"47":{},"56":{},"120":{},"130":{},"156":{},"182":{},"215":{},"216":{},"218":{},"231":{}},"component":{}}],["thing",{"_index":13,"title":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{},"18-5":{},"30-7":{},"30-8":{},"59-5":{},"70-7":{},"70-8":{},"139-5":{},"144-2":{},"144-3":{},"165-5":{},"170-7":{},"170-8":{},"193-5":{},"200-7":{},"200-8":{},"277-3":{}},"name":{},"text":{"1":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"26":{},"53":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"85":{},"86":{},"87":{},"89":{},"98":{},"99":{},"100":{},"102":{},"103":{},"104":{},"105":{},"114":{},"115":{},"116":{},"118":{},"124":{},"125":{},"126":{},"135":{},"136":{},"137":{},"139":{},"140":{},"141":{},"142":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"189":{},"190":{},"191":{},"193":{},"194":{},"195":{},"196":{},"216":{},"220":{},"225":{},"259":{},"274":{},"275":{},"277":{},"279":{},"280":{},"281":{}},"component":{}}],["think",{"_index":721,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"277":{}},"component":{}}],["third",{"_index":982,"title":{},"name":{},"text":{"24":{},"25":{},"65":{},"66":{},"220":{},"286":{}},"component":{}}],["this.lastev",{"_index":2308,"title":{},"name":{},"text":{"261":{}},"component":{}}],["this.response.startswith(\"l",{"_index":2852,"title":{},"name":{},"text":{"279":{}},"component":{}}],["those",{"_index":394,"title":{},"name":{},"text":{"8":{},"26":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"261":{},"279":{},"287":{}},"component":{}}],["though",{"_index":803,"title":{},"name":{},"text":{"15":{},"41":{},"56":{},"80":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"209":{},"261":{},"280":{},"281":{}},"component":{}}],["thought",{"_index":218,"title":{},"name":{},"text":{"4":{},"45":{},"154":{},"180":{}},"component":{}}],["thousand",{"_index":2618,"title":{},"name":{},"text":{"268":{}},"component":{}}],["thread",{"_index":940,"title":{},"name":{},"text":{"22":{},"63":{},"218":{},"230":{},"231":{},"263":{},"281":{}},"component":{}}],["three",{"_index":1026,"title":{},"name":{},"text":{"25":{},"28":{},"66":{},"67":{},"197":{},"216":{},"286":{}},"component":{}}],["through",{"_index":158,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"21":{},"22":{},"25":{},"26":{},"31":{},"37":{},"38":{},"39":{},"42":{},"43":{},"44":{},"48":{},"62":{},"63":{},"66":{},"71":{},"78":{},"81":{},"82":{},"92":{},"95":{},"105":{},"108":{},"111":{},"121":{},"126":{},"127":{},"128":{},"131":{},"142":{},"151":{},"152":{},"153":{},"157":{},"168":{},"177":{},"178":{},"179":{},"183":{},"196":{},"201":{},"210":{},"216":{},"218":{},"231":{},"236":{},"254":{},"256":{},"261":{},"268":{},"274":{},"280":{},"281":{}},"component":{}}],["throughout",{"_index":1067,"title":{},"name":{},"text":{"26":{},"278":{}},"component":{}}],["throwabl",{"_index":2323,"title":{},"name":{},"text":{"261":{}},"component":{}}],["thu",{"_index":80,"title":{},"name":{},"text":{"1":{},"6":{},"36":{},"41":{},"47":{},"76":{},"80":{},"91":{},"107":{},"120":{},"130":{},"156":{},"175":{},"182":{},"206":{},"209":{},"279":{}},"component":{}}],["thumbv7em",{"_index":2131,"title":{},"name":{},"text":{"249":{}},"component":{}}],["tick",{"_index":1677,"title":{},"name":{},"text":{"216":{},"276":{}},"component":{}}],["ticker",{"_index":2855,"title":{},"name":{},"text":{"279":{}},"component":{}}],["ticker::every(duration::from_millis(5",{"_index":1669,"title":{},"name":{},"text":{"216":{}},"component":{}}],["tie",{"_index":2900,"title":{},"name":{},"text":{"279":{},"287":{}},"component":{}}],["tier",{"_index":1027,"title":{},"name":{},"text":{"25":{},"66":{},"268":{},"269":{},"272":{}},"component":{}}],["time",{"_index":414,"title":{"268":{},"267-5":{}},"name":{},"text":{"8":{},"12":{},"15":{},"25":{},"26":{},"29":{},"31":{},"36":{},"38":{},"49":{},"53":{},"56":{},"66":{},"69":{},"71":{},"76":{},"78":{},"122":{},"132":{},"143":{},"158":{},"169":{},"175":{},"184":{},"199":{},"201":{},"206":{},"214":{},"215":{},"218":{},"230":{},"231":{},"236":{},"251":{},"254":{},"255":{},"256":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"276":{},"277":{},"279":{},"280":{},"281":{},"283":{},"285":{},"287":{},"290":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"305":{}},"component":{}}],["time=2021",{"_index":2479,"title":{},"name":{},"text":{"263":{}},"component":{}}],["time_bucket('10s',\"tim",{"_index":2743,"title":{},"name":{},"text":{"273":{}},"component":{}}],["time_bucket_gapfill(interv",{"_index":2735,"title":{},"name":{},"text":{"273":{}},"component":{}}],["timeout",{"_index":429,"title":{"27-6":{},"68-6":{},"198-6":{},"293-27":{},"296-27":{},"299-27":{},"302-27":{}},"name":{},"text":{"8":{},"27":{},"29":{},"49":{},"68":{},"69":{},"143":{},"169":{},"184":{},"198":{},"199":{},"216":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["timeoutrequest",{"_index":2810,"title":{},"name":{},"text":{"276":{}},"component":{}}],["timer",{"_index":1698,"title":{},"name":{},"text":{"216":{}},"component":{}}],["timer::after(spe",{"_index":1672,"title":{},"name":{},"text":{"216":{}},"component":{}}],["timescal",{"_index":2532,"title":{"272":{}},"name":{"272":{}},"text":{"265":{},"266":{},"267":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["timescaledb",{"_index":646,"title":{"283":{},"13-1":{},"54-1":{},"134-1":{},"160-1":{},"188-1":{}},"name":{},"text":{"13":{},"54":{},"134":{},"160":{},"188":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"283":{}},"component":{}}],["timescaledb.continu",{"_index":2734,"title":{},"name":{},"text":{"273":{}},"component":{}}],["timestamp",{"_index":2248,"title":{},"name":{},"text":{"259":{},"261":{},"267":{},"268":{},"269":{},"272":{},"273":{},"280":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["tini",{"_index":1513,"title":{},"name":{},"text":{"212":{}},"component":{}}],["titl",{"_index":2592,"title":{},"name":{},"text":{"267":{}},"component":{}}],["tl",{"_index":192,"title":{"4-4":{},"8-9":{},"8-10":{},"27-7":{},"45-4":{},"49-9":{},"49-10":{},"68-7":{},"93-8":{},"93-9":{},"109-8":{},"109-9":{},"122-8":{},"122-9":{},"132-8":{},"132-9":{},"154-4":{},"158-8":{},"158-9":{},"180-4":{},"184-9":{},"184-10":{},"198-7":{},"234-7":{},"251-7":{}},"name":{},"text":{"4":{},"8":{},"27":{},"28":{},"30":{},"31":{},"36":{},"45":{},"49":{},"67":{},"68":{},"70":{},"71":{},"76":{},"93":{},"109":{},"122":{},"132":{},"154":{},"158":{},"170":{},"175":{},"180":{},"184":{},"197":{},"198":{},"200":{},"201":{},"206":{},"233":{},"234":{},"244":{},"251":{},"267":{},"280":{},"281":{}},"component":{}}],["tls/ssl",{"_index":2570,"title":{},"name":{},"text":{"267":{}},"component":{}}],["tls_aes_256_gcm_sha384",{"_index":2714,"title":{},"name":{},"text":{"272":{}},"component":{}}],["tls_crt",{"_index":1494,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{}},"component":{}}],["tls_key",{"_index":1493,"title":{},"name":{},"text":{"93":{},"109":{},"122":{},"132":{},"158":{}},"component":{}}],["tlsv1.2",{"_index":3001,"title":{},"name":{},"text":{"282":{},"289":{}},"component":{}}],["tlsv1.3",{"_index":2712,"title":{},"name":{},"text":{"272":{}},"component":{}}],["today",{"_index":588,"title":{},"name":{},"text":{"12":{},"53":{},"268":{},"288":{}},"component":{}}],["togeth",{"_index":9,"title":{},"name":{},"text":{"1":{},"2":{},"43":{},"82":{},"95":{},"111":{},"127":{},"152":{},"178":{},"216":{},"263":{},"268":{}},"component":{}}],["toggl",{"_index":1609,"title":{},"name":{},"text":{"216":{}},"component":{}}],["token",{"_index":668,"title":{"36-3":{},"37-2":{},"76-3":{},"175-3":{},"206-3":{},"280-1":{},"280-2":{},"280-3":{},"280-4":{},"281-1":{},"281-2":{},"281-3":{},"281-4":{},"292-1":{},"295-1":{},"298-1":{},"301-1":{}},"name":{},"text":{"14":{},"22":{},"27":{},"36":{},"37":{},"55":{},"63":{},"68":{},"76":{},"77":{},"85":{},"98":{},"114":{},"135":{},"161":{},"175":{},"189":{},"198":{},"206":{},"207":{},"213":{},"215":{},"245":{},"258":{},"266":{},"269":{},"280":{},"281":{},"283":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["token=$(drg",{"_index":1589,"title":{},"name":{},"text":{"215":{}},"component":{}}],["too.onli",{"_index":1502,"title":{},"name":{},"text":{"210":{}},"component":{}}],["too.thi",{"_index":1278,"title":{},"name":{},"text":{"31":{},"36":{},"71":{},"76":{},"201":{},"206":{}},"component":{}}],["tool",{"_index":29,"title":{"10-1":{},"51-1":{},"94-1":{},"110-1":{},"123-1":{},"133-1":{},"159-1":{},"186-1":{},"282-3":{},"289-3":{},"290-2":{}},"name":{},"text":{"1":{},"10":{},"12":{},"14":{},"17":{},"24":{},"31":{},"42":{},"51":{},"53":{},"55":{},"58":{},"65":{},"71":{},"81":{},"85":{},"88":{},"94":{},"98":{},"101":{},"110":{},"114":{},"117":{},"123":{},"133":{},"135":{},"138":{},"151":{},"159":{},"161":{},"164":{},"171":{},"177":{},"186":{},"189":{},"192":{},"201":{},"210":{},"213":{},"220":{},"229":{},"230":{},"232":{},"235":{},"236":{},"237":{},"239":{},"241":{},"243":{},"246":{},"254":{},"255":{},"258":{},"263":{},"265":{},"266":{},"267":{},"273":{},"277":{},"280":{},"281":{},"282":{},"284":{},"286":{},"289":{},"290":{}},"component":{}}],["toolchain",{"_index":1842,"title":{"282":{},"289":{},"282-2":{},"289-2":{}},"name":{"282":{},"289":{}},"text":{"229":{},"239":{},"241":{},"243":{},"258":{},"282":{},"289":{}},"component":{}}],["top",{"_index":180,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"40":{},"44":{},"55":{},"56":{},"79":{},"83":{},"85":{},"96":{},"98":{},"112":{},"114":{},"128":{},"135":{},"153":{},"161":{},"179":{},"189":{},"208":{},"212":{},"220":{},"232":{},"266":{},"267":{},"270":{},"271":{},"272":{},"273":{},"274":{},"280":{},"281":{}},"component":{}}],["topic",{"_index":726,"title":{"68":{},"198":{},"18-4":{},"31-11":{},"40-5":{},"59-4":{},"71-11":{},"79-5":{},"139-4":{},"165-4":{},"193-4":{},"201-11":{},"208-5":{}},"name":{},"text":{"15":{},"18":{},"26":{},"27":{},"31":{},"36":{},"40":{},"41":{},"56":{},"59":{},"68":{},"71":{},"76":{},"79":{},"80":{},"86":{},"99":{},"115":{},"136":{},"139":{},"162":{},"165":{},"175":{},"190":{},"193":{},"198":{},"201":{},"206":{},"208":{},"209":{},"259":{},"261":{},"280":{}},"component":{}}],["topic[1",{"_index":741,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["toplevel",{"_index":1869,"title":{},"name":{},"text":{"229":{}},"component":{}}],["touch",{"_index":2726,"title":{},"name":{},"text":{"273":{}},"component":{}}],["tour",{"_index":2933,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["toward",{"_index":734,"title":{},"name":{},"text":{"15":{},"41":{},"56":{},"80":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"209":{},"269":{},"270":{},"273":{}},"component":{}}],["tr",{"_index":2760,"title":{},"name":{},"text":{"275":{},"278":{}},"component":{}}],["trace",{"_index":506,"title":{"11":{},"52":{},"187":{}},"name":{"11":{},"52":{},"187":{}},"text":{"11":{},"52":{},"187":{},"276":{}},"component":{}}],["track",{"_index":1016,"title":{},"name":{},"text":{"24":{},"29":{},"65":{},"69":{},"143":{},"169":{},"199":{},"214":{},"261":{}},"component":{}}],["tracker",{"_index":1815,"title":{},"name":{},"text":{"220":{},"225":{},"237":{}},"component":{}}],["tradit",{"_index":1886,"title":{},"name":{},"text":{"231":{}},"component":{}}],["traffic",{"_index":70,"title":{"262-9":{}},"name":{},"text":{"1":{},"24":{},"65":{},"262":{}},"component":{}}],["train",{"_index":925,"title":{},"name":{},"text":{"22":{},"25":{},"63":{},"66":{}},"component":{}}],["trait",{"_index":1653,"title":{"219-2":{}},"name":{},"text":{"216":{},"218":{},"219":{}},"component":{}}],["transer",{"_index":1357,"title":{},"name":{},"text":{"39":{}},"component":{}}],["transfer",{"_index":1186,"title":{},"name":{},"text":{"29":{},"39":{},"69":{},"143":{},"169":{},"199":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["transform",{"_index":1893,"title":{},"name":{},"text":{"231":{},"261":{},"273":{}},"component":{}}],["transit",{"_index":2465,"title":{},"name":{},"text":{"263":{}},"component":{}}],["translat",{"_index":2529,"title":{},"name":{},"text":{"265":{},"268":{},"269":{},"272":{}},"component":{}}],["transmiss",{"_index":2611,"title":{},"name":{},"text":{"268":{}},"component":{}}],["transmit",{"_index":1467,"title":{},"name":{},"text":{"42":{},"81":{},"177":{},"210":{}},"component":{}}],["transmitting/send",{"_index":1090,"title":{},"name":{},"text":{"26":{}},"component":{}}],["transpar",{"_index":943,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["transport",{"_index":182,"title":{},"name":{},"text":{"3":{},"15":{},"40":{},"44":{},"56":{},"79":{},"83":{},"86":{},"96":{},"99":{},"112":{},"115":{},"128":{},"136":{},"153":{},"162":{},"179":{},"190":{},"208":{},"212":{},"261":{},"263":{},"281":{}},"component":{}}],["travel",{"_index":18,"title":{},"name":{},"text":{"1":{}},"component":{}}],["travers",{"_index":1605,"title":{},"name":{},"text":{"216":{}},"component":{}}],["treat",{"_index":1083,"title":{},"name":{},"text":{"26":{},"41":{},"80":{},"209":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["tree",{"_index":1867,"title":{},"name":{},"text":{"229":{}},"component":{}}],["tri",{"_index":105,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"13":{},"14":{},"15":{},"17":{},"26":{},"35":{},"41":{},"43":{},"48":{},"49":{},"54":{},"55":{},"56":{},"58":{},"75":{},"80":{},"82":{},"84":{},"85":{},"86":{},"88":{},"92":{},"93":{},"95":{},"97":{},"98":{},"99":{},"101":{},"108":{},"109":{},"111":{},"113":{},"114":{},"115":{},"117":{},"121":{},"122":{},"127":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"152":{},"157":{},"158":{},"160":{},"161":{},"162":{},"164":{},"178":{},"183":{},"184":{},"188":{},"189":{},"190":{},"192":{},"205":{},"209":{},"229":{},"236":{},"237":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"258":{},"259":{},"263":{},"266":{},"267":{},"268":{},"271":{},"275":{},"276":{},"280":{},"281":{},"285":{}},"component":{}}],["tricki",{"_index":341,"title":{},"name":{},"text":{"7":{},"12":{},"41":{},"48":{},"53":{},"80":{},"92":{},"108":{},"121":{},"131":{},"157":{},"183":{},"209":{}},"component":{}}],["trickier",{"_index":2594,"title":{},"name":{},"text":{"267":{}},"component":{}}],["trigger",{"_index":873,"title":{"215-6":{},"304-4":{}},"name":{},"text":{"19":{},"21":{},"41":{},"60":{},"62":{},"80":{},"103":{},"105":{},"124":{},"126":{},"140":{},"142":{},"166":{},"168":{},"194":{},"196":{},"209":{},"212":{},"215":{},"259":{},"276":{},"304":{}},"component":{}}],["trivial",{"_index":834,"title":{},"name":{},"text":{"17":{},"58":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{}},"component":{}}],["troubleshoot",{"_index":2011,"title":{"244-8":{},"247-6":{},"248-6":{},"249-7":{},"251-11":{},"252-6":{},"254-10":{},"255-9":{},"285-5":{}},"name":{},"text":{},"component":{}}],["true",{"_index":510,"title":{},"name":{},"text":{"11":{},"27":{},"28":{},"31":{},"35":{},"38":{},"40":{},"42":{},"52":{},"67":{},"68":{},"71":{},"75":{},"78":{},"79":{},"81":{},"93":{},"109":{},"122":{},"132":{},"158":{},"171":{},"177":{},"187":{},"197":{},"198":{},"201":{},"205":{},"208":{},"210":{},"216":{},"266":{},"267":{},"279":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["trunk",{"_index":612,"title":{},"name":{},"text":{"12":{},"53":{},"290":{}},"component":{}}],["trust",{"_index":801,"title":{},"name":{},"text":{"15":{},"26":{},"27":{},"30":{},"31":{},"56":{},"68":{},"70":{},"71":{},"86":{},"99":{},"115":{},"136":{},"162":{},"170":{},"190":{},"198":{},"200":{},"201":{}},"component":{}}],["try_from(ev",{"_index":1638,"title":{},"name":{},"text":{"216":{}},"component":{}}],["tryfrom",{"_index":1636,"title":{},"name":{},"text":{"216":{}},"component":{}}],["ts",{"_index":2736,"title":{},"name":{},"text":{"273":{}},"component":{}}],["tsdb",{"_index":2555,"title":{},"name":{},"text":{"266":{},"267":{},"269":{},"272":{}},"component":{}}],["tsdbadmin",{"_index":2706,"title":{},"name":{},"text":{"272":{}},"component":{}}],["ttig",{"_index":2833,"title":{},"name":{},"text":{"277":{}},"component":{}}],["ttn",{"_index":712,"title":{"274":{},"275-2":{}},"name":{},"text":{"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"26":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"85":{},"86":{},"87":{},"98":{},"99":{},"100":{},"103":{},"104":{},"105":{},"114":{},"115":{},"116":{},"124":{},"125":{},"126":{},"135":{},"136":{},"137":{},"139":{},"140":{},"141":{},"142":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"189":{},"190":{},"191":{},"193":{},"194":{},"195":{},"196":{},"274":{},"275":{},"276":{},"277":{},"280":{},"281":{}},"component":{}}],["ttn/v3",{"_index":1254,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["tune",{"_index":1058,"title":{},"name":{},"text":{"25":{},"66":{},"288":{}},"component":{}}],["tuner",{"_index":1057,"title":{},"name":{},"text":{"25":{},"66":{}},"component":{}}],["tunnel",{"_index":276,"title":{},"name":{},"text":{"5":{},"12":{},"46":{},"53":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{}},"component":{}}],["tupl",{"_index":2619,"title":{},"name":{},"text":{"268":{}},"component":{}}],["turn",{"_index":445,"title":{},"name":{},"text":{"8":{},"26":{},"41":{},"49":{},"80":{},"184":{},"209":{},"236":{},"246":{},"254":{},"255":{},"280":{},"281":{}},"component":{}}],["tutori",{"_index":2180,"title":{},"name":{},"text":{"257":{},"258":{},"259":{},"265":{},"266":{},"268":{},"269":{},"280":{},"281":{}},"component":{}}],["tvhs5b1/8qvyiwjedbubgnvhsaettblmaggbmebdaecata/bgsrbgeeaylfeweb",{"_index":1165,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["tweak",{"_index":375,"title":{},"name":{},"text":{"8":{},"27":{},"49":{},"68":{},"198":{},"259":{},"261":{},"267":{},"272":{}},"component":{}}],["twice",{"_index":911,"title":{},"name":{},"text":{"21":{},"62":{},"105":{},"126":{},"142":{},"168":{},"196":{}},"component":{}}],["twidaqabo4ibrjccauiwdwydvr0taqh/bauwaweb/zaobgnvhq8baf8ebamcaqyw",{"_index":1162,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["twin",{"_index":400,"title":{"24-4":{},"65-4":{}},"name":{},"text":{"8":{},"13":{},"14":{},"24":{},"49":{},"54":{},"55":{},"65":{},"84":{},"85":{},"97":{},"98":{},"113":{},"114":{},"134":{},"135":{},"160":{},"161":{},"184":{},"188":{},"189":{}},"component":{}}],["two",{"_index":156,"title":{},"name":{},"text":{"2":{},"8":{},"15":{},"16":{},"22":{},"29":{},"39":{},"41":{},"42":{},"43":{},"49":{},"56":{},"57":{},"63":{},"69":{},"80":{},"81":{},"82":{},"86":{},"87":{},"93":{},"95":{},"99":{},"100":{},"109":{},"111":{},"115":{},"116":{},"122":{},"127":{},"132":{},"136":{},"137":{},"143":{},"152":{},"158":{},"162":{},"163":{},"169":{},"177":{},"178":{},"184":{},"190":{},"191":{},"199":{},"209":{},"210":{},"211":{},"216":{},"218":{},"258":{},"259":{},"261":{},"269":{},"272":{},"277":{},"280":{},"281":{}},"component":{}}],["tx",{"_index":2023,"title":{},"name":{},"text":{"244":{},"279":{}},"component":{}}],["tx.into_byt",{"_index":2892,"title":{},"name":{},"text":{"279":{}},"component":{}}],["tx16",{"_index":2839,"title":{},"name":{},"text":{"278":{}},"component":{}}],["tx8",{"_index":2838,"title":{},"name":{},"text":{"278":{}},"component":{}}],["tx_led",{"_index":2866,"title":{},"name":{},"text":{"279":{}},"component":{}}],["type",{"_index":42,"title":{"26-6":{},"31-9":{},"71-9":{},"201-9":{}},"name":{},"text":{"1":{},"8":{},"19":{},"22":{},"26":{},"29":{},"30":{},"31":{},"38":{},"40":{},"41":{},"42":{},"49":{},"60":{},"63":{},"69":{},"70":{},"71":{},"78":{},"79":{},"80":{},"81":{},"93":{},"103":{},"109":{},"122":{},"124":{},"132":{},"140":{},"143":{},"158":{},"166":{},"169":{},"170":{},"177":{},"184":{},"194":{},"199":{},"200":{},"201":{},"208":{},"209":{},"210":{},"215":{},"216":{},"218":{},"219":{},"245":{},"261":{},"267":{},"269":{},"272":{},"281":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"305":{}},"component":{}}],["type='io.drogue.event.v1",{"_index":2475,"title":{},"name":{},"text":{"263":{}},"component":{}}],["type_field_temperatur",{"_index":2659,"title":{},"name":{},"text":{"269":{}},"component":{}}],["typic",{"_index":659,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"54":{},"56":{},"58":{},"84":{},"86":{},"88":{},"97":{},"99":{},"101":{},"113":{},"115":{},"117":{},"134":{},"136":{},"138":{},"160":{},"162":{},"164":{},"188":{},"190":{},"192":{},"214":{},"217":{}},"component":{}}],["tzelmakga1uebhmcvvmxktanbgnvbaotieludgvybmv0ifnly3vyaxr5ifjlc2vh",{"_index":1149,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["u",{"_index":2547,"title":{},"name":{},"text":{"266":{}},"component":{}}],["u1rst09uq0fym0nstc5jcmwwhqydvr0obbyefhm0wez7tuxkaxoacijiglj26ztu",{"_index":1168,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["u32",{"_index":1776,"title":{},"name":{},"text":{"219":{}},"component":{}}],["u585ai",{"_index":2165,"title":{},"name":{},"text":{"252":{}},"component":{}}],["ua",{"_index":719,"title":{},"name":{},"text":{"15":{},"25":{},"56":{},"66":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["uart",{"_index":1785,"title":{"220-7":{}},"name":{},"text":{"220":{},"235":{},"244":{}},"component":{}}],["ubuntu",{"_index":2709,"title":{},"name":{},"text":{"272":{}},"component":{}}],["udev",{"_index":3048,"title":{},"name":{},"text":{"289":{}},"component":{}}],["uf2",{"_index":2108,"title":{},"name":{},"text":{"246":{}},"component":{}}],["ui",{"_index":2247,"title":{"261-8":{}},"name":{},"text":{"259":{},"267":{},"280":{}},"component":{}}],["ui/eventsresourc",{"_index":2301,"title":{},"name":{},"text":{"261":{}},"component":{}}],["uid",{"_index":1075,"title":{},"name":{},"text":{"26":{},"78":{},"258":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["unalt",{"_index":1113,"title":{},"name":{},"text":{"26":{}},"component":{}}],["unauthor",{"_index":3094,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{},"304":{}},"component":{}}],["unavail",{"_index":745,"title":{},"name":{},"text":{"15":{},"56":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{}},"component":{}}],["unchang",{"_index":2528,"title":{},"name":{},"text":{"265":{}},"component":{}}],["undefin",{"_index":51,"title":{},"name":{},"text":{"1":{},"230":{}},"component":{}}],["undeliv",{"_index":785,"title":{},"name":{},"text":{"15":{},"56":{}},"component":{}}],["under",{"_index":1880,"title":{},"name":{},"text":{"230":{},"263":{},"276":{}},"component":{}}],["underli",{"_index":1739,"title":{},"name":{},"text":{"218":{},"231":{}},"component":{}}],["understand",{"_index":1256,"title":{"261-5":{},"280-9":{},"281-9":{}},"name":{},"text":{"31":{},"40":{},"71":{},"79":{},"171":{},"201":{},"208":{},"216":{},"258":{},"262":{},"263":{}},"component":{}}],["unexpect",{"_index":2398,"title":{},"name":{},"text":{"262":{}},"component":{}}],["unfortun",{"_index":1768,"title":{},"name":{},"text":{"219":{},"245":{}},"component":{}}],["unicast",{"_index":2091,"title":{},"name":{},"text":{"245":{}},"component":{}}],["uniqu",{"_index":127,"title":{"42-15":{},"81-15":{},"177-15":{},"210-15":{}},"name":{},"text":{"2":{},"26":{},"30":{},"38":{},"42":{},"43":{},"70":{},"78":{},"81":{},"82":{},"95":{},"111":{},"127":{},"151":{},"152":{},"170":{},"177":{},"178":{},"200":{},"210":{},"218":{},"258":{},"266":{},"275":{},"278":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["unit",{"_index":592,"title":{},"name":{},"text":{"12":{},"53":{},"231":{}},"component":{}}],["unix",{"_index":2999,"title":{},"name":{},"text":{"282":{},"289":{}},"component":{}}],["unless",{"_index":796,"title":{},"name":{},"text":{"15":{},"26":{},"28":{},"56":{},"67":{},"86":{},"99":{},"115":{},"136":{},"162":{},"190":{},"197":{},"256":{},"274":{}},"component":{}}],["unlit",{"_index":1667,"title":{},"name":{},"text":{"216":{}},"component":{}}],["unlock",{"_index":971,"title":{},"name":{},"text":{"23":{},"64":{},"268":{}},"component":{}}],["unpack",{"_index":347,"title":{"8-2":{},"49-2":{},"93-2":{},"109-2":{},"122-2":{},"132-2":{},"158-2":{},"184-2":{}},"name":{},"text":{},"component":{}}],["unprovis",{"_index":2085,"title":{},"name":{},"text":{"245":{}},"component":{}}],["uns",{"_index":1352,"title":{},"name":{},"text":{"39":{}},"component":{}}],["until",{"_index":279,"title":{},"name":{},"text":{"5":{},"39":{},"46":{},"90":{},"106":{},"119":{},"129":{},"155":{},"181":{},"214":{},"216":{},"234":{},"245":{},"247":{},"259":{},"280":{},"281":{}},"component":{}}],["unus",{"_index":881,"title":{},"name":{},"text":{"19":{},"60":{},"103":{},"124":{},"140":{},"166":{},"194":{}},"component":{}}],["unzip",{"_index":386,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{}},"component":{}}],["up",{"_index":37,"title":{"19-1":{},"20-1":{},"60-1":{},"61-1":{},"103-1":{},"104-1":{},"124-1":{},"125-1":{},"140-1":{},"141-1":{},"166-1":{},"167-1":{},"194-1":{},"195-1":{},"262-10":{}},"name":{},"text":{"1":{},"5":{},"12":{},"13":{},"15":{},"17":{},"18":{},"21":{},"22":{},"24":{},"26":{},"38":{},"41":{},"42":{},"46":{},"53":{},"54":{},"56":{},"58":{},"59":{},"62":{},"63":{},"65":{},"78":{},"80":{},"81":{},"84":{},"86":{},"88":{},"90":{},"97":{},"99":{},"101":{},"105":{},"106":{},"113":{},"115":{},"117":{},"119":{},"126":{},"129":{},"134":{},"136":{},"138":{},"139":{},"142":{},"151":{},"155":{},"160":{},"162":{},"164":{},"165":{},"168":{},"177":{},"181":{},"188":{},"190":{},"192":{},"193":{},"196":{},"209":{},"210":{},"216":{},"220":{},"229":{},"236":{},"241":{},"245":{},"246":{},"254":{},"255":{},"258":{},"259":{},"260":{},"262":{},"263":{},"264":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"279":{},"281":{},"282":{},"283":{},"287":{},"289":{}},"component":{}}],["up/creat",{"_index":2635,"title":{},"name":{},"text":{"268":{}},"component":{}}],["updat",{"_index":541,"title":{"214":{},"24-6":{},"65-6":{},"241-9":{},"251-8":{},"270-2":{},"273-2":{},"276-2":{},"285-2":{}},"name":{},"text":{"12":{},"22":{},"24":{},"42":{},"53":{},"63":{},"65":{},"81":{},"151":{},"177":{},"210":{},"212":{},"214":{},"215":{},"216":{},"220":{},"225":{},"241":{},"245":{},"248":{},"251":{},"255":{},"258":{},"267":{},"270":{},"273":{},"279":{},"280":{},"283":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["update.bin",{"_index":1997,"title":{},"name":{},"text":{"241":{}},"component":{}}],["update.json",{"_index":2000,"title":{},"name":{},"text":{"241":{}},"component":{}}],["upgrad",{"_index":540,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["uplink",{"_index":1951,"title":{},"name":{},"text":{"236":{},"254":{},"255":{},"276":{},"279":{},"280":{},"281":{}},"component":{}}],["upload",{"_index":2004,"title":{},"name":{},"text":{"241":{}},"component":{}}],["upon",{"_index":1320,"title":{},"name":{},"text":{"38":{},"78":{},"218":{},"245":{},"247":{},"248":{},"249":{},"252":{},"288":{}},"component":{}}],["upper",{"_index":2587,"title":{},"name":{},"text":{"267":{}},"component":{}}],["uppercas",{"_index":1140,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["uri",{"_index":1580,"title":{},"name":{},"text":{"215":{}},"component":{}}],["uripath",{"_index":1189,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["uriqueri",{"_index":1217,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["url",{"_index":210,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"12":{},"19":{},"27":{},"29":{},"35":{},"45":{},"49":{},"50":{},"53":{},"60":{},"68":{},"69":{},"75":{},"93":{},"103":{},"109":{},"122":{},"124":{},"132":{},"140":{},"143":{},"154":{},"158":{},"166":{},"169":{},"180":{},"184":{},"185":{},"194":{},"198":{},"199":{},"205":{},"213":{},"215":{},"258":{},"259":{},"262":{},"266":{},"267":{},"269":{},"280":{},"281":{},"283":{},"290":{}},"component":{}}],["url.codeengine.appdomain.cloud",{"_index":2540,"title":{},"name":{},"text":{"266":{}},"component":{}}],["url/v1/sample_channel/sample_subject?application=app1&device=device%232&data_schema=application%2foctet",{"_index":1211,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["us",{"_index":55,"title":{"23":{},"64":{},"268":{},"6-4":{},"9-2":{},"19-4":{},"47-4":{},"50-2":{},"60-4":{},"93-10":{},"103-4":{},"109-10":{},"120-4":{},"122-10":{},"124-4":{},"130-4":{},"132-10":{},"140-4":{},"156-4":{},"158-10":{},"166-4":{},"182-4":{},"185-2":{},"194-4":{},"241-9":{},"245-4":{},"258-5":{},"259-1":{},"260-4":{},"262-5":{},"263-2":{},"283-2":{}},"name":{"215":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"35":{},"36":{},"37":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"88":{},"89":{},"90":{},"91":{},"93":{},"95":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"109":{},"111":{},"113":{},"114":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"124":{},"125":{},"126":{},"127":{},"129":{},"130":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"156":{},"158":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"175":{},"176":{},"177":{},"178":{},"180":{},"181":{},"182":{},"184":{},"185":{},"187":{},"188":{},"189":{},"190":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"223":{},"225":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"246":{},"250":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{}},"component":{}}],["us/azure/ak",{"_index":2369,"title":{},"name":{},"text":{"262":{}},"component":{}}],["us/azure/aks/kubernet",{"_index":2370,"title":{},"name":{},"text":{"262":{}},"component":{}}],["usabl",{"_index":553,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["usag",{"_index":671,"title":{"236-8":{},"237-8":{},"238-1":{},"239-4":{},"242-1":{},"243-4":{},"250-1":{},"253-1":{},"254-8":{},"255-7":{}},"name":{},"text":{"14":{},"24":{},"55":{},"65":{},"85":{},"98":{},"114":{},"135":{},"161":{},"189":{},"218":{},"251":{},"263":{},"268":{},"279":{},"285":{}},"component":{}}],["usb",{"_index":1812,"title":{},"name":{},"text":{"220":{},"223":{},"228":{},"234":{},"246":{}},"component":{}}],["usenam",{"_index":3153,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["user",{"_index":11,"title":{"32":{},"72":{},"146":{},"172":{},"202":{},"215":{},"39-2":{},"292-73":{},"295-73":{},"298-72":{},"301-73":{}},"name":{},"text":{"1":{},"4":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"21":{},"22":{},"24":{},"25":{},"32":{},"36":{},"38":{},"39":{},"41":{},"42":{},"45":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"62":{},"63":{},"65":{},"66":{},"72":{},"76":{},"80":{},"81":{},"84":{},"85":{},"86":{},"88":{},"89":{},"97":{},"98":{},"99":{},"101":{},"102":{},"103":{},"105":{},"113":{},"114":{},"115":{},"117":{},"118":{},"124":{},"126":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"142":{},"146":{},"151":{},"154":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"168":{},"172":{},"175":{},"177":{},"180":{},"188":{},"189":{},"190":{},"192":{},"193":{},"194":{},"196":{},"202":{},"206":{},"209":{},"210":{},"218":{},"220":{},"232":{},"236":{},"237":{},"245":{},"247":{},"248":{},"249":{},"252":{},"254":{},"255":{},"258":{},"261":{},"262":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"279":{},"280":{},"281":{},"285":{},"288":{},"289":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{},"304":{}},"component":{}}],["user.not",{"_index":3152,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["user/appl",{"_index":688,"title":{},"name":{},"text":{"14":{},"15":{},"55":{},"56":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"189":{},"190":{}},"component":{}}],["user_l",{"_index":2872,"title":{},"name":{},"text":{"279":{}},"component":{}}],["usercredenti",{"_index":3124,"title":{"293-28":{},"296-28":{},"299-28":{},"302-28":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["usercredential_us",{"_index":3125,"title":{"293-29":{},"296-29":{},"299-29":{},"302-29":{}},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["usernam",{"_index":596,"title":{"42-15":{},"81-15":{},"177-15":{},"210-15":{},"280-5":{},"281-5":{}},"name":{},"text":{"12":{},"27":{},"30":{},"36":{},"37":{},"42":{},"53":{},"68":{},"70":{},"76":{},"77":{},"81":{},"170":{},"175":{},"177":{},"198":{},"200":{},"206":{},"207":{},"210":{},"220":{},"232":{},"233":{},"234":{},"249":{},"251":{},"267":{},"280":{},"281":{},"283":{},"285":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["username/password",{"_index":686,"title":{"31-5":{},"42-12":{},"42-15":{},"71-5":{},"81-12":{},"81-15":{},"177-12":{},"177-15":{},"201-5":{},"210-12":{},"210-15":{}},"name":{},"text":{"14":{},"30":{},"42":{},"55":{},"70":{},"81":{},"85":{},"98":{},"114":{},"135":{},"161":{},"170":{},"171":{},"177":{},"189":{},"200":{},"210":{},"233":{},"234":{},"251":{}},"component":{}}],["usr/libexec/bluetooth/bluetooth",{"_index":2061,"title":{},"name":{},"text":{"245":{}},"component":{}}],["usual",{"_index":1308,"title":{},"name":{},"text":{"37":{},"213":{},"220":{},"231":{}},"component":{}}],["ut026003",{"_index":2421,"title":{},"name":{},"text":{"263":{}},"component":{}}],["utf",{"_index":2972,"title":{},"name":{},"text":{"281":{},"293":{},"296":{},"299":{},"302":{}},"component":{}}],["utf8",{"_index":2958,"title":{},"name":{},"text":{"280":{}},"component":{}}],["util",{"_index":2158,"title":{},"name":{},"text":{"251":{},"285":{}},"component":{}}],["uuid",{"_index":2081,"title":{},"name":{},"text":{"245":{}},"component":{}}],["v",{"_index":2024,"title":{},"name":{},"text":{"244":{},"266":{}},"component":{}}],["v1",{"_index":1190,"title":{"31-7":{},"40-4":{},"71-7":{},"79-4":{},"201-7":{},"208-4":{}},"name":{},"text":{"29":{},"31":{},"69":{},"71":{},"143":{},"169":{},"199":{},"201":{}},"component":{}}],["v1.19.11",{"_index":2383,"title":{},"name":{},"text":{"262":{}},"component":{}}],["v1/{channel",{"_index":1235,"title":{},"name":{},"text":{"30":{},"70":{},"170":{},"200":{}},"component":{}}],["v2",{"_index":1227,"title":{"30-7":{},"70-7":{},"144-2":{},"170-7":{},"200-7":{}},"name":{},"text":{"220":{},"223":{},"228":{},"229":{},"243":{}},"component":{}}],["v2.0",{"_index":1989,"title":{},"name":{},"text":{"241":{},"244":{}},"component":{}}],["v3",{"_index":851,"title":{"30-8":{},"70-8":{},"144-3":{},"170-8":{},"200-8":{}},"name":{},"text":{"18":{},"21":{},"59":{},"62":{},"105":{},"126":{},"139":{},"142":{},"165":{},"168":{},"193":{},"196":{},"274":{},"277":{},"281":{}},"component":{}}],["v3.1.1",{"_index":854,"title":{},"name":{},"text":{"18":{},"31":{},"36":{},"40":{},"59":{},"71":{},"76":{},"79":{},"89":{},"102":{},"118":{},"139":{},"145":{},"165":{},"171":{},"175":{},"193":{},"201":{},"206":{},"208":{}},"component":{}}],["v5",{"_index":855,"title":{},"name":{},"text":{"18":{},"31":{},"40":{},"59":{},"71":{},"79":{},"89":{},"102":{},"118":{},"139":{},"145":{},"165":{},"171":{},"193":{},"201":{},"208":{}},"component":{}}],["valid",{"_index":702,"title":{"41-11":{},"80-11":{},"209-11":{}},"name":{},"text":{"14":{},"15":{},"19":{},"26":{},"27":{},"36":{},"41":{},"55":{},"56":{},"60":{},"68":{},"76":{},"80":{},"85":{},"86":{},"98":{},"99":{},"103":{},"114":{},"115":{},"124":{},"135":{},"136":{},"140":{},"161":{},"162":{},"166":{},"175":{},"189":{},"190":{},"194":{},"198":{},"206":{},"209":{},"267":{}},"component":{}}],["valu",{"_index":372,"title":{},"name":{},"text":{"8":{},"9":{},"11":{},"19":{},"27":{},"29":{},"35":{},"36":{},"37":{},"41":{},"42":{},"49":{},"50":{},"52":{},"60":{},"68":{},"69":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"93":{},"103":{},"109":{},"122":{},"124":{},"132":{},"140":{},"143":{},"158":{},"166":{},"169":{},"175":{},"177":{},"184":{},"185":{},"187":{},"194":{},"198":{},"199":{},"205":{},"206":{},"207":{},"209":{},"210":{},"213":{},"219":{},"220":{},"232":{},"236":{},"237":{},"244":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"259":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"275":{},"278":{},"280":{},"281":{},"285":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["var",{"_index":2267,"title":{},"name":{},"text":{"261":{},"279":{},"281":{}},"component":{}}],["varchar(64",{"_index":2717,"title":{},"name":{},"text":{"272":{},"273":{}},"component":{}}],["vari",{"_index":2119,"title":{},"name":{},"text":{"246":{}},"component":{}}],["variabl",{"_index":436,"title":{},"name":{},"text":{"8":{},"12":{},"49":{},"53":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"229":{},"241":{},"251":{},"267":{},"269":{},"285":{}},"component":{}}],["variables/opt",{"_index":1486,"title":{},"name":{},"text":{"91":{},"107":{}},"component":{}}],["variant",{"_index":1472,"title":{},"name":{},"text":{"78":{},"232":{},"251":{},"270":{},"273":{}},"component":{}}],["variat",{"_index":2171,"title":{},"name":{},"text":{"256":{}},"component":{}}],["varieti",{"_index":916,"title":{},"name":{},"text":{"22":{},"63":{}},"component":{}}],["variou",{"_index":486,"title":{},"name":{},"text":{"9":{},"27":{},"50":{},"68":{},"185":{},"198":{},"269":{},"277":{}},"component":{}}],["vcpu",{"_index":2672,"title":{},"name":{},"text":{"269":{}},"component":{}}],["verb",{"_index":2913,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["verbos",{"_index":1866,"title":{},"name":{},"text":{"229":{},"258":{}},"component":{}}],["veri",{"_index":1116,"title":{},"name":{},"text":{"26":{},"41":{},"80":{},"209":{},"218":{},"231":{},"256":{},"262":{},"288":{}},"component":{}}],["verifi",{"_index":1243,"title":{},"name":{},"text":{"30":{},"41":{},"70":{},"80":{},"170":{},"200":{},"209":{},"237":{},"262":{}},"component":{}}],["version",{"_index":230,"title":{"256-2":{},"277-4":{},"292-90":{},"295-90":{},"298-89":{},"301-90":{}},"name":{},"text":{"4":{},"6":{},"12":{},"20":{},"21":{},"24":{},"36":{},"40":{},"45":{},"47":{},"53":{},"61":{},"62":{},"65":{},"76":{},"79":{},"91":{},"104":{},"105":{},"107":{},"120":{},"125":{},"126":{},"130":{},"141":{},"142":{},"154":{},"156":{},"167":{},"168":{},"175":{},"180":{},"182":{},"195":{},"196":{},"206":{},"208":{},"211":{},"214":{},"234":{},"235":{},"239":{},"241":{},"243":{},"244":{},"245":{},"256":{},"259":{},"260":{},"262":{},"267":{},"277":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["vert.x",{"_index":2432,"title":{},"name":{},"text":{"263":{},"281":{}},"component":{}}],["vertx",{"_index":2984,"title":{},"name":{},"text":{"281":{}},"component":{}}],["via",{"_index":942,"title":{},"name":{},"text":{"22":{},"24":{},"25":{},"26":{},"31":{},"38":{},"63":{},"65":{},"66":{},"71":{},"78":{},"201":{},"277":{}},"component":{}}],["viabl",{"_index":1291,"title":{},"name":{},"text":{"36":{},"76":{},"175":{},"206":{}},"component":{}}],["vibrat",{"_index":1006,"title":{},"name":{},"text":{"24":{},"65":{}},"component":{}}],["vid:pid",{"_index":1942,"title":{},"name":{},"text":{"236":{},"237":{},"244":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"285":{}},"component":{}}],["view",{"_index":483,"title":{"258-12":{},"258-13":{}},"name":{},"text":{"9":{},"14":{},"24":{},"25":{},"29":{},"50":{},"55":{},"65":{},"66":{},"69":{},"85":{},"98":{},"114":{},"135":{},"143":{},"161":{},"169":{},"185":{},"189":{},"199":{},"258":{},"260":{},"266":{},"269":{},"273":{}},"component":{}}],["vim",{"_index":551,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["visit",{"_index":1665,"title":{},"name":{},"text":{"216":{}},"component":{}}],["visual",{"_index":652,"title":{"286":{}},"name":{},"text":{"13":{},"54":{},"84":{},"97":{},"113":{},"134":{},"160":{},"188":{},"265":{},"267":{},"268":{},"270":{},"271":{},"273":{},"283":{},"286":{},"290":{}},"component":{}}],["vmss000000",{"_index":2380,"title":{},"name":{},"text":{"262":{}},"component":{}}],["void",{"_index":2306,"title":{},"name":{},"text":{"261":{}},"component":{}}],["vs",{"_index":1061,"title":{"26-2":{},"26-8":{},"31-1":{},"71-1":{},"201-1":{},"231-3":{}},"name":{},"text":{"78":{},"280":{},"281":{}},"component":{}}],["vulner",{"_index":1960,"title":{},"name":{},"text":{"237":{}},"component":{}}],["w",{"_index":2688,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["w64",{"_index":569,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["wait",{"_index":761,"title":{"273":{}},"name":{"273":{}},"text":{"15":{},"29":{},"35":{},"41":{},"56":{},"69":{},"75":{},"80":{},"86":{},"99":{},"115":{},"136":{},"143":{},"162":{},"169":{},"190":{},"199":{},"205":{},"209":{},"214":{},"216":{},"234":{},"241":{},"245":{},"255":{},"262":{},"279":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["walk",{"_index":343,"title":{},"name":{},"text":{"7":{},"48":{},"92":{},"108":{},"121":{},"131":{},"157":{},"183":{},"256":{},"261":{}},"component":{}}],["walkthrough",{"_index":2371,"title":{},"name":{},"text":{"262":{}},"component":{}}],["want",{"_index":322,"title":{},"name":{},"text":{"6":{},"8":{},"12":{},"15":{},"20":{},"41":{},"42":{},"47":{},"49":{},"53":{},"56":{},"61":{},"80":{},"81":{},"86":{},"91":{},"93":{},"99":{},"104":{},"107":{},"109":{},"115":{},"120":{},"122":{},"125":{},"130":{},"132":{},"136":{},"141":{},"156":{},"158":{},"162":{},"167":{},"177":{},"182":{},"184":{},"190":{},"195":{},"209":{},"210":{},"229":{},"230":{},"231":{},"235":{},"236":{},"237":{},"245":{},"254":{},"255":{},"258":{},"259":{},"260":{},"261":{},"262":{},"266":{},"268":{},"270":{},"272":{},"273":{},"277":{},"281":{},"288":{},"290":{}},"component":{}}],["warn",{"_index":2067,"title":{},"name":{},"text":{"245":{},"280":{},"285":{}},"component":{}}],["wasm",{"_index":3052,"title":{},"name":{},"text":{"290":{}},"component":{}}],["wasn’t",{"_index":2893,"title":{},"name":{},"text":{"279":{},"287":{}},"component":{}}],["watch",{"_index":2463,"title":{},"name":{},"text":{"263":{},"279":{}},"component":{}}],["wave",{"_index":2678,"title":{},"name":{},"text":{"270":{},"273":{}},"component":{}}],["waveshar",{"_index":2129,"title":{},"name":{},"text":{"248":{}},"component":{}}],["way",{"_index":20,"title":{"278-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"12":{},"13":{},"15":{},"23":{},"26":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"47":{},"53":{},"54":{},"56":{},"64":{},"78":{},"79":{},"80":{},"81":{},"82":{},"84":{},"86":{},"91":{},"95":{},"97":{},"99":{},"107":{},"111":{},"113":{},"115":{},"120":{},"127":{},"130":{},"134":{},"136":{},"152":{},"154":{},"156":{},"160":{},"162":{},"177":{},"178":{},"180":{},"182":{},"188":{},"190":{},"208":{},"209":{},"210":{},"216":{},"218":{},"219":{},"229":{},"231":{},"251":{},"256":{},"258":{},"262":{},"268":{},"270":{},"272":{},"273":{},"279":{},"282":{},"283":{},"285":{},"288":{},"289":{},"292":{},"293":{},"295":{},"296":{},"298":{},"299":{},"301":{},"302":{}},"component":{}}],["wclktvxkcgdtwlffrjlbz4pyg1htmf5x6dyo8a4jqv2il9djxa6usbw1fzxslr9o",{"_index":1172,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["we'r",{"_index":1689,"title":{},"name":{},"text":{"216":{}},"component":{}}],["web",{"_index":174,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"37":{},"44":{},"55":{},"56":{},"77":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"128":{},"135":{},"136":{},"153":{},"161":{},"162":{},"179":{},"189":{},"190":{},"207":{},"258":{},"259":{},"260":{},"261":{},"262":{},"266":{},"276":{},"280":{},"281":{},"285":{},"286":{},"288":{},"290":{}},"component":{}}],["webassembl",{"_index":3042,"title":{},"name":{},"text":{"288":{}},"component":{}}],["webhook",{"_index":874,"title":{},"name":{},"text":{"19":{},"21":{},"60":{},"62":{},"103":{},"105":{},"124":{},"126":{},"140":{},"142":{},"166":{},"168":{},"194":{},"196":{}},"component":{}}],["websocket",{"_index":932,"title":{"37":{},"77":{},"150":{},"176":{},"207":{},"290":{},"28-1":{},"31-13":{},"36-10":{},"67-1":{},"71-13":{},"76-10":{},"197-1":{},"201-13":{},"206-10":{}},"name":{"28":{},"67":{},"197":{},"290":{}},"text":{"22":{},"28":{},"31":{},"35":{},"36":{},"37":{},"63":{},"67":{},"71":{},"75":{},"76":{},"77":{},"150":{},"176":{},"197":{},"201":{},"205":{},"206":{},"207":{},"261":{},"270":{},"273":{},"283":{},"285":{},"286":{},"288":{},"290":{}},"component":{}}],["welcom",{"_index":2173,"title":{},"name":{},"text":{"256":{}},"component":{}}],["well",{"_index":221,"title":{"292-90":{},"292-92":{},"295-90":{},"295-92":{},"298-89":{},"298-91":{},"301-90":{},"301-92":{}},"name":{},"text":{"4":{},"8":{},"12":{},"16":{},"24":{},"25":{},"29":{},"38":{},"39":{},"45":{},"49":{},"53":{},"57":{},"65":{},"66":{},"69":{},"78":{},"87":{},"100":{},"116":{},"137":{},"143":{},"154":{},"163":{},"169":{},"180":{},"184":{},"191":{},"199":{},"214":{},"229":{},"241":{},"245":{},"251":{},"256":{},"258":{},"259":{},"279":{},"289":{},"290":{}},"component":{}}],["we’d",{"_index":3043,"title":{},"name":{},"text":{"288":{}},"component":{}}],["we’ll",{"_index":1351,"title":{},"name":{},"text":{"39":{},"216":{},"269":{},"283":{},"290":{}},"component":{}}],["we’v",{"_index":963,"title":{},"name":{},"text":{"23":{},"64":{},"216":{},"219":{},"229":{},"269":{},"288":{}},"component":{}}],["what",{"_index":1840,"title":{"229-7":{},"288-1":{}},"name":{},"text":{},"component":{}}],["whatev",{"_index":547,"title":{},"name":{},"text":{"12":{},"38":{},"53":{},"78":{},"235":{},"236":{},"237":{},"254":{},"255":{}},"component":{}}],["what’",{"_index":2220,"title":{"259-7":{},"261-9":{},"262-12":{},"263-5":{},"264-2":{},"266-4":{},"267-7":{},"269-1":{},"269-6":{},"271-1":{},"272-4":{}},"name":{},"text":{},"component":{}}],["wheel",{"_index":1397,"title":{},"name":{},"text":{"41":{},"80":{},"209":{}},"component":{}}],["whenev",{"_index":1335,"title":{},"name":{},"text":{"38":{},"78":{},"216":{},"237":{},"259":{},"267":{}},"component":{}}],["wherea",{"_index":1701,"title":{},"name":{},"text":{"216":{}},"component":{}}],["whether",{"_index":1334,"title":{},"name":{},"text":{"38":{},"40":{},"78":{},"79":{},"208":{},"231":{}},"component":{}}],["whitespac",{"_index":2841,"title":{},"name":{},"text":{"278":{}},"component":{}}],["whoami",{"_index":1590,"title":{},"name":{},"text":{"215":{},"280":{},"281":{}},"component":{}}],["whole",{"_index":1348,"title":{},"name":{},"text":{"39":{},"258":{},"259":{},"262":{}},"component":{}}],["wide",{"_index":905,"title":{},"name":{},"text":{"21":{},"22":{},"62":{},"63":{},"105":{},"126":{},"142":{},"168":{},"196":{},"212":{}},"component":{}}],["wifi",{"_index":1783,"title":{"220-2":{}},"name":{},"text":{"220":{},"223":{},"228":{},"229":{},"230":{},"232":{},"234":{},"244":{},"251":{},"284":{},"285":{},"286":{},"287":{},"288":{}},"component":{}}],["wifi.d",{"_index":2161,"title":{},"name":{},"text":{"251":{}},"component":{}}],["wildcard",{"_index":2357,"title":{},"name":{},"text":{"262":{}},"component":{}}],["win",{"_index":1612,"title":{},"name":{},"text":{"216":{}},"component":{}}],["window",{"_index":513,"title":{"12-5":{},"53-5":{},"267-5":{}},"name":{},"text":{"12":{},"53":{},"256":{},"258":{},"267":{},"270":{},"273":{},"280":{},"281":{}},"component":{}}],["wire",{"_index":1361,"title":{},"name":{},"text":{"40":{},"79":{},"208":{},"216":{},"244":{},"266":{}},"component":{}}],["wireless",{"_index":1853,"title":{},"name":{},"text":{"229":{}},"component":{}}],["wish",{"_index":607,"title":{},"name":{},"text":{"12":{},"39":{},"53":{},"217":{},"269":{},"281":{},"286":{}},"component":{}}],["wistrio",{"_index":1964,"title":{},"name":{},"text":{"237":{}},"component":{}}],["within",{"_index":1223,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{},"215":{},"216":{},"218":{}},"component":{}}],["without",{"_index":44,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"28":{},"31":{},"42":{},"49":{},"65":{},"67":{},"71":{},"81":{},"177":{},"184":{},"197":{},"201":{},"210":{},"218":{},"220":{},"230":{},"231":{},"260":{},"262":{},"268":{},"278":{},"281":{},"288":{},"289":{}},"component":{}}],["wl55",{"_index":1816,"title":{"254-1":{},"255-1":{}},"name":{},"text":{"220":{},"225":{},"254":{},"255":{}},"component":{}}],["wl55jc2",{"_index":2166,"title":{},"name":{},"text":{"254":{},"255":{}},"component":{}}],["work",{"_index":293,"title":{"261":{},"12-17":{},"53-17":{}},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"13":{},"14":{},"21":{},"23":{},"31":{},"36":{},"40":{},"46":{},"49":{},"51":{},"53":{},"54":{},"55":{},"62":{},"64":{},"71":{},"76":{},"79":{},"84":{},"85":{},"90":{},"93":{},"94":{},"97":{},"98":{},"105":{},"106":{},"109":{},"110":{},"113":{},"114":{},"119":{},"122":{},"123":{},"126":{},"129":{},"132":{},"133":{},"134":{},"135":{},"142":{},"155":{},"158":{},"159":{},"160":{},"161":{},"168":{},"181":{},"184":{},"186":{},"188":{},"189":{},"196":{},"201":{},"206":{},"208":{},"214":{},"216":{},"220":{},"231":{},"232":{},"245":{},"256":{},"258":{},"261":{},"262":{},"263":{},"267":{},"268":{},"271":{},"272":{},"273":{},"276":{},"280":{},"281":{},"282":{},"283":{},"288":{},"289":{}},"component":{}}],["workflow",{"_index":2222,"title":{},"name":{},"text":{"259":{}},"component":{}}],["workload",{"_index":98,"title":{},"name":{},"text":{"1":{},"3":{},"22":{},"25":{},"44":{},"63":{},"66":{},"83":{},"96":{},"112":{},"128":{},"153":{},"179":{}},"component":{}}],["workshop",{"_index":2139,"title":{},"name":{},"text":{"251":{},"256":{},"258":{},"259":{},"260":{},"263":{},"267":{},"268":{},"269":{},"270":{},"273":{},"277":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"288":{},"289":{},"290":{}},"component":{"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{}}}],["workshop.d",{"_index":3033,"title":{},"name":{},"text":{"285":{}},"component":{}}],["workspac",{"_index":609,"title":{},"name":{},"text":{"12":{},"53":{},"259":{}},"component":{}}],["world",{"_index":14,"title":{},"name":{},"text":{"1":{},"17":{},"23":{},"39":{},"58":{},"64":{},"88":{},"101":{},"117":{},"138":{},"164":{},"192":{},"230":{},"268":{},"269":{}},"component":{}}],["worri",{"_index":1844,"title":{},"name":{},"text":{"229":{},"266":{},"267":{}},"component":{}}],["wouldn’t",{"_index":2842,"title":{},"name":{},"text":{"279":{}},"component":{}}],["wrap",{"_index":946,"title":{},"name":{},"text":{"22":{},"63":{},"218":{}},"component":{}}],["wrapper",{"_index":374,"title":{},"name":{},"text":{"8":{},"49":{}},"component":{}}],["write",{"_index":1345,"title":{"218-8":{},"219-1":{},"219-2":{},"219-3":{},"240-1":{}},"name":{},"text":{"39":{},"214":{},"218":{},"219":{},"229":{},"230":{},"231":{},"251":{},"268":{},"269":{},"272":{},"285":{}},"component":{}}],["write!(&mut",{"_index":2887,"title":{},"name":{},"text":{"279":{}},"component":{}}],["writer",{"_index":3145,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["written",{"_index":1473,"title":{},"name":{},"text":{"78":{},"214":{},"216":{},"219":{},"231":{},"234":{},"269":{},"277":{},"280":{}},"component":{}}],["wrong",{"_index":466,"title":{"245-10":{}},"name":{},"text":{"8":{},"26":{},"40":{},"49":{},"79":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"208":{}},"component":{}}],["ws",{"_index":1305,"title":{},"name":{"37":{},"77":{},"150":{},"176":{},"207":{}},"text":{"263":{}},"component":{}}],["wsl2",{"_index":572,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["wyqgcwlkzmzsj348cl+tksig8+ta5ocu4kupt5l+laof00exfjlii1pook5pcm+d",{"_index":1153,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["x",{"_index":494,"title":{},"name":{},"text":{"10":{},"12":{},"30":{},"38":{},"51":{},"53":{},"70":{},"78":{},"94":{},"110":{},"123":{},"133":{},"159":{},"170":{},"186":{},"200":{},"215":{},"216":{},"243":{}},"component":{}}],["x.509",{"_index":685,"title":{"31-4":{},"42-18":{},"71-4":{},"81-18":{},"151-10":{},"177-18":{},"201-4":{},"210-18":{}},"name":{},"text":{"14":{},"15":{},"28":{},"30":{},"31":{},"55":{},"56":{},"67":{},"70":{},"71":{},"85":{},"86":{},"98":{},"99":{},"114":{},"115":{},"135":{},"136":{},"161":{},"162":{},"170":{},"171":{},"189":{},"190":{},"197":{},"200":{},"201":{},"266":{}},"component":{}}],["x509",{"_index":3142,"title":{},"name":{},"text":{"293":{},"296":{},"299":{},"302":{}},"component":{}}],["x86_64",{"_index":522,"title":{},"name":{},"text":{"12":{},"53":{}},"component":{}}],["xdelet",{"_index":2914,"title":{},"name":{},"text":{"280":{},"281":{}},"component":{}}],["xmidf3lwicugqsk+wt7djvukyrgnwqnmqb9gozm1pzprboy7nn1ypxifefntplf4",{"_index":1158,"title":{},"name":{},"text":{"27":{},"68":{},"198":{}},"component":{}}],["xpost",{"_index":2546,"title":{},"name":{},"text":{"266":{},"280":{},"281":{}},"component":{}}],["xtask",{"_index":1870,"title":{},"name":{},"text":{"229":{}},"component":{}}],["xxx.tsdb.cloud.timescale.com",{"_index":2667,"title":{},"name":{},"text":{"269":{}},"component":{}}],["y",{"_index":1659,"title":{},"name":{},"text":{"216":{}},"component":{}}],["yaml",{"_index":1456,"title":{},"name":{},"text":{"42":{},"81":{},"151":{},"177":{},"210":{},"266":{},"269":{}},"component":{}}],["yay",{"_index":2562,"title":{},"name":{},"text":{"266":{}},"component":{}}],["ye",{"_index":2397,"title":{},"name":{},"text":{"262":{}},"component":{}}],["year",{"_index":2605,"title":{},"name":{},"text":{"268":{}},"component":{}}],["yellow",{"_index":2133,"title":{},"name":{},"text":{"249":{}},"component":{}}],["yield",{"_index":1894,"title":{},"name":{},"text":{"231":{}},"component":{}}],["you'r",{"_index":1533,"title":{},"name":{},"text":{"213":{}},"component":{}}],["yourself",{"_index":435,"title":{},"name":{},"text":{"8":{},"49":{},"93":{},"109":{},"122":{},"132":{},"158":{},"184":{},"213":{},"264":{},"277":{},"281":{},"286":{}},"component":{}}],["you’ll",{"_index":1613,"title":{},"name":{},"text":{"216":{},"219":{},"245":{},"269":{},"289":{}},"component":{}}],["you’r",{"_index":1588,"title":{},"name":{},"text":{"215":{},"229":{},"236":{},"237":{},"244":{},"245":{},"247":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"285":{}},"component":{}}],["you’v",{"_index":1601,"title":{},"name":{},"text":{"216":{},"245":{}},"component":{}}],["z",{"_index":2761,"title":{},"name":{},"text":{"275":{},"278":{}},"component":{}}],["zero",{"_index":2536,"title":{},"name":{},"text":{"265":{},"269":{}},"component":{}}],["zgv2awnlmubhchaxomhles1yb2ruzxk",{"_index":1203,"title":{},"name":{},"text":{"29":{},"69":{},"143":{},"169":{},"199":{}},"component":{}}],["zip",{"_index":1526,"title":{},"name":{},"text":{"213":{}},"component":{}}],["zone",{"_index":2716,"title":{},"name":{},"text":{"272":{},"273":{},"292":{},"295":{},"298":{},"301":{}},"component":{}}],["zone!=europ",{"_index":3082,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}],["zone=europ",{"_index":3080,"title":{},"name":{},"text":{"292":{},"295":{},"298":{},"301":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"The Drogue IoT project aims to bring together data and users in an Internet of Things world. Data comes from sensors and needs to travel a long way to reach its users. Of course, there is also the way back. All of these steps in the middle are still needed and must be managed in some way. Drogue IoT provides you with tools, to create safe and efficient IoT solutions. Starting on the embedded side up to the cloud layer. Drogue Device helps you create safe and efficient applications on microcontroller type of systems. In a world without memory management or operating system it is more important than ever to avoid memory corruption and undefined behavior. That is why Drogue Device is a framework built using the Rust programming language, bringing the promise of Rust to the embedded world: A language empowering everyone to build reliable and efficient software. — Rust from the Rust Homepage Read more: Drogue Device The edge brings together devices and the cloud side if that is required. If that is just onboarding traffic to an IP-based network, or bringing processing logic closer to devices depends on each use case. Thus edge nodes sometimes look more like a device in some cases, and more like the cloud in others. Drogue IoT currently doesn’t provide any specific edge components. But it ensures that edge devices are part of the system in many different ways. Like having the concept of a \"gateway device\", providing demos on how to run edge workload using containers, integrating with the cloud. The cloud side has different problems to solve: scalability, security, integration. Drogue Cloud tries to make it simple for you to attach devices to a scalable backend. A backend which handles security for you, and integrates with existing technologies and services. Read more: Drogue Cloud","title":"Drogue IoT","component":"drogue-book","version":"master","name":"index","url":"/drogue-book/index.html","titles":[{"text":"Devices","hash":"_devices","id":1},{"text":"The edge","hash":"_the_edge","id":2},{"text":"The cloud","hash":"_the_cloud","id":3}]},"2":{"id":2,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, are what devices connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"dev","name":"concepts","url":"/drogue-cloud/dev/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"3":{"id":3,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints. Protocol normalization based on Cloud Events and Knative eventing. Management of devices and their credentials and properties through an API. A web-console and a command-line client to manage devices and data flows. APIs for cloud-side application integration. It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Apache Kafka – For streaming events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/index.html","titles":[]},"4":{"id":4,"text":"In order to make it possible to run Drogue Cloud in other environments, we provide a drogue-cloud-server binary to run a single or multiple Drogue Cloud services. This does not require Kubernetes or containers to run. You do need to have running instances of Kafka, Keycloak and PostgreSQL in order to use this form of deployment. The binary assumes the following services being available locally by default: Kafka bootstrap: localhost:9092 Keycloak: Url: http://localhost:8080 Admin user: admin Admin password: admin123456 PostgreSQL Database name: drogue Database user: admin Database password: admin123456 Have a look at the --help options for other ways to configure it. You thought you didn’t need containers, HAH! Well, to make it simpler to get the prerequisites running, here is a docker compose file for running them and making them available at the above ports: version: \"3.9\" services: postgres: image: docker.io/bitnami/postgresql:13 environment: - POSTGRESQL_USERNAME=admin - POSTGRESQL_PASSWORD=admin123456 - POSTGRESQL_DATABASE=drogue ports: - \"5432:5432\" kafka: image: docker.io/moeenz/docker-kafka-kraft:latest ports: - \"9092:9092\" environment: - KRAFT_CONTAINER_HOST_NAME=localhost keycloak: image: docker.io/jboss/keycloak:13.0.1 environment: - KEYCLOAK_USER=admin - KEYCLOAK_PASSWORD=admin123456 - DB_VENDOR=h2 ports: - \"8080:8080\" Make sure all dependencies are running correctly. To start the drogue server, run: drogue-cloud-server run --enable-all This will perform the following steps: Migrate database schema Create Keycloak OIDC clients Start all drogue services You should be able to connect to the local drogue instance using the drg client: drg login http://localhost:10001 To enable TLS for the protocol endpoints, you can pass the certificate and key using --server-cert and --server-key.","title":"Deploying on bare metal","component":"drogue-cloud","version":"dev","name":"bare-metal","url":"/drogue-cloud/dev/deployment/bare-metal.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"(Optional) Starting pre-requisites","hash":"_optional_starting_pre_requisites","id":2},{"text":"Running","hash":"_running","id":3},{"text":"Enabling TLS","hash":"_enabling_tls","id":4}]},"5":{"id":5,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind requires to execute the following command: kind create cluster --config=deploy/kind/cluster-config.yaml Ingress controller required The deployment requires a Kubernetes ingress controller to be deployed. When using Kind, the deployment script will automatically deploy the NGINX Ingress Controller, but you still need to export the ports to allow access. Using the command above, will already use a configuration which takes care of that. For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need a working Ingress Controller. For OpenShift, you can use Routes. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"dev","name":"cluster","url":"/drogue-cloud/dev/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"6":{"id":6,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the makefile target deploy: make deploy If you built custom images, and pushed them to a container repository, you can deploy them using the following command: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy The makefile actually uses the installer script scripts/drgadm internally. It only passes in the right arguments, so that the installer will install images from a different registry, or use a different tag. By default, the installer scripts, even on the main branch, will install a tagged version. Sometimes tagged versions are not yet available on the container registry, and thus, the installation may fail. It is therefore recommended to install \"latest\" images using the make deploy command.","title":"Deploying from the repository","component":"drogue-cloud","version":"dev","name":"development","url":"/drogue-cloud/dev/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3},{"text":"Using the installer script for development","hash":"_using_the_installer_script_for_development","id":4}]},"7":{"id":7,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/deployment/index.html","titles":[]},"8":{"id":8,"text":"Most of the deployment of Drogue Cloud uses Helm in combination with kubectl for installing dependencies. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. Pure Helm based installation While we describe the installation of Drogue Cloud using our installer script, it is also possible to install it using just Helm charts. In fact, the installer uses an opinionated value set for the Helm charts, and you can simply create your own wrapper chart, tweaking the values as needed. This is what we do for our public sandbox too. The installer script is just there to get you started quickly. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/latest There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Additionally, it installs Knative and an example application and can install digital twin feature as well. Deployment of these components can be configured using installer arguments as explained below. Run the installer script ./script/drgadm deploy, adding the options appropriate for your setup. You can use the -c argument to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: ./script/drgadm deploy -c kind The deploy command of drgadm supports the following argument -k or INSTALL_DEPS Don’t install any dependency by default. -s Set additional Helm values. May be repeated multiple times. -m Minimize: Reduces the default resource requests to allow deploying on more constrained environments. -d or DOMAIN Manually provide the application DNS domain. -c or CLUSTER Specify the cluster type (any of minikube, kind, openshift, kubernetes). -p Adds an additional Helm value file, named deploy/helm/profiles/.yaml. -t Helm installation timeout (default: 15m) -n or DROGUE_NS Changes the target Drogue IoT namespace. -T Install digital twin feature. -e Don’t install examples. -M Deploy metrics Example: Install Drogue Cloud on kind cluster without dependencies. ./script/drgadm deploy -c kind -k The -k argument will skip installing all dependencies. If you want to install of just some of the dependencies (like Strimzi or Keycloak) yourself, you can opt out of installing them by the script. The installer has a few additional options which are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env INSTALL_STRIMZI=false ./script/drgadm deploy Variable Name Default value Description INSTALL_STRIMZI ${INSTALL_DEPS} Control the installation of Strimzi. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. By default the example dashboard is installed by the script. You can turn it off by using -e argument. Additionally, digital twin feature can be installed by specifying -T argument. Knative will be installed only if either examples or digital twin feature are installed. To deploy minimal installation without any examples (and Knative) use: ./script/drgadm deploy -e You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls, mqtt-endpoint-tls and coap-endpoint-tls exist. If they don’t it will create them using generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can do that by running shell commands similar to these: kubectl -n drogue-iot create secret tls http-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - kubectl -n drogue-iot create secret tls mqtt-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - kubectl -n drogue-iot create secret tls coap-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - Where $PATH_TO_CERT should point to the path location of your certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"dev","name":"installer","url":"/drogue-cloud/dev/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Install additional examples","hash":"_install_additional_examples","id":7},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":8},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":9},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"9":{"id":9,"text":"Specifying -M during installation process will install Prometheus and Grafana allowing you to monitor your deployment. You can do that both using installer: ./script/drgadm deploy -M Or during development: env DEPLOY_ARGS=\"-M\" make deploy You can find out the URL of the dashboard by running the drgadm script: env METRICS=true scripts/drgadm examples It should print something like: View the metrics dashboard: ---------------------------- * Login to Grafana: https://metrics.192.168.64.131.nip.io * Default credentials are 'admin/admin123456' if not configured differently You can set values of the drogue-cloud-metrics Helm chart in order to configure various aspects of its deployment. For example, the following will ./script/drgadm deploy -M -s drogueCloudMetrics.grafana.adminPassword=654321nimda will change the password for accessing Grafana dashboard.","title":"Monitoring the deployment","component":"drogue-cloud","version":"dev","name":"monitoring","url":"/drogue-cloud/dev/deployment/monitoring.html","titles":[{"text":"Deploying","hash":"_deploying","id":1},{"text":"Using","hash":"_using","id":2},{"text":"Configuring","hash":"_configuring","id":3}]},"10":{"id":10,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ helm – Helm CLI You will need a Kubernetes cluster in order to deploy Drogue Cloud. For running outside Kubernetes, have a look at the bare metal deployment. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"dev","name":"pre-reqs","url":"/drogue-cloud/dev/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"11":{"id":11,"text":"Tracing using Jaeger tracing can be enabled for Drogue Cloud during deployment. In the Helm charts, set the value: global: drogueCloud: jaeger: enabled: true By default, tracing is disabled.","title":"Tracing","component":"drogue-cloud","version":"dev","name":"tracing","url":"/drogue-cloud/dev/deployment/tracing.html","titles":[{"text":"Helm Charts","hash":"_helm_charts","id":1}]},"12":{"id":12,"text":"This is a guide for developers, which would like to work on Drogue Cloud. In any case, you will need: Linux, Mac OS X, or Windows on an AMD64 platform (aka x86_64) Mac OS X in ARM64 (M1, …) seems to be tricky, but should work. Podman or Docker Windows containers will not work, you need to use Linux based containers, and again x86_64. Some tools git GNU Make npm kubectl HTTPie 2.2+ A lot of cores, patience, memory, and disk space. Rust+ – By default the build will run inside a container image, with Rust included. So you don’t necessarily need to install Rust on your local machine. However, having Rust installed might come in handy at some point. If you want to use an IDE, that might require a Rust installation. Or if you want to quickly run tests, maybe from inside your IDE, then this will require Rust as well. + In any case, you need to be sure that you install at least the version of Rust mentioned above. If you installed Rust using rustup and default options, then performing an upgrade should be as easy as running rustup update. Kubernetes - Some form of Kubernetes cluster Minikube is what seems to work best for development, and is easy to get started with. Kind also works, uses less resources, but is less tested. OpenShift also works and make several things easier (like proper DNS names and certs), but is also more complex to set up. An IDE – Whatever works best for you. Eclipse, Emacs, IntelliJ, Vim, … [1] should all be usable with this project. We do not require any specific IDE. We also do not commit any IDE specific files either. There are different ways to install the required dependencies on the different operating systems. Some operating systems also might require some additional settings. This section should help to get you started. Use an \"update to date\" version of Fedora. Install the following dependencies: sudo dnf install curl openssl-devel npm gcc gcc-c++ make cyrus-sasl-devel cmake libpq-devel postgresql podman Assuming you have Windows 10 and admin access. Install: Git for Windows GNU Make 4.x install mingw-w64, as described here: https://code.visualstudio.com/docs/cpp/config-mingw or, install \"GNU make\" using Chocolatey Docker for Windows Enable WSL2 Needs more testing Most of the required tools you can install using [brew](https://brew.sh/) package manager, e.g. brew install git make Using OpenSSL and Cyrus SASL libraries native is still work in progress, so you should use container build for the time being as described below. While the build is based on cargo, the build is still driven by the main Makefile, located in the root of the repository. By default, the cargo build running inside a build container. This reduces the number of pre-requisites you need to install, and makes it easier on platforms like Windows or Mac OS X. To perform a full build execute: make build This builds the cargo based projects, the frontend, and the container images. Builds are done using Docker or Podman container runtimes. Podman is preferred if it is present on the system. However, it is required that Podman supports bind mounts feature properly which is not the case for all platforms today. In that case you can force Docker runtime with CONTAINER=docker make build To run all tests: make test When using podman, you currently cannot use make test. You need to revert to make container-test, see below. This runs only the unit tests and integration tests. There is also a system test-suite at https://github.com/drogue-iot/drogue-cloud-testing which tests a running deployment. If you have a full build environment on your machine, you can also execute the tests on the host machine, rather than forking them off in the build container: make container-test You can also run cargo tests directly from your IDE. How this works, depends on your IDE. However, as tests are compiled and executed on the host machine, the same requirements, as when running tests on the host machine, apply (see above). The locally built images can be published with the Makefile as well. For this you need a location to push to. You can, for example use [quay.io](https://quay.io). Assuming your username on quay.io is \"rodney\", and you did log in using docker login, then you could do: make push CONTAINER_REGISTRY=quay.io/rodney Before you can run the deployment, you will need to have access to a Kubernetes cluster. You can run local cluster using minikube. Make sure that your minikube cluster is started with ingress addon and that you run tunnel in a separate shell minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress # in a separate terminal, as it keeps running minikube tunnel Once the instance is up, and you have ensured that you can access the cluster with kubectl, you can run the following command to run the deployment: make deploy CONTAINER_REGISTRY=quay.io/rodney If you need to pass additional arguments to the deploy script, you can use DEPLOY_ARGS environment variable like: env INSTALL_STRIMZI=false DEPLOY_ARGS=\"-f deploy/examples/managed_kafka.yaml\" make deploy Helm charts are maintained in the separate repository: https://github.com/drogue-iot/drogue-cloud-helm-charts They are however included as a git submodule at the deploy/helm path. A deploy target will initialize the submodule. If you wish to do it manually run: git submodule update --init Also, to pull changes into the existing workspace run: git submodule foreach git pull origin main You will need to have trunk, npm and sass installed, as it will drive parts of the build. trunk can be installed using cargo: cargo install trunk Installing sass can be done using the following command: npm install -g sass@1.52.3 The frontend needs a way to detect which backend to use. This is done by loading an initial backend.json from the location of the frontend. For a local development, this file can be provided at console-frontend/dev/endpoints/backend.json or be overridden by console-frontend/dev/endpoints/backend.local.json. But default files with .local. in that directory will not be committed to git. The default backend.json is pre-configured to use the \"local server\" mode, described in the next section. The simplest way to run the console-backend is to use [drogue-cloud-server](https://github.com/drogue-iot/drogue-cloud/tree/main/server). cd server cargo run -- --enable-all Once you have it running (bound to localhost which is the default), you can start the console-frontend in the development mode: cd console-frontend trunk serve You can also run the frontend with a backend in the cloud (or local cluster, e.g. minikube). To do so, you can create a console-frontend/dev/endpoints/backend.local.json file and populate it with the API and SSO urls of your drogue instance. For example (devbox): { \"url\": \"https://api-drogue-dev.apps.wonderful.iot-playground.org/\", \"openid\": { \"client_id\": \"drogue\", \"issuer_url\": \"https://sso-drogue-dev.apps.wonderful.iot-playground.org/realms/drogue\" } } This model doesn’t work if your frontend will use newer backend APIs, which are not yet deployed in the cloud. 1. This list is sorted in alphabetical order, not in the order of any preference.","title":"Developer Guide","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/developer-guide/index.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"Optional requirements","hash":"_optional_requirements","id":2},{"text":"Operating system","hash":"_operating_system","id":3},{"text":"Fedora","hash":"_fedora","id":4},{"text":"Windows","hash":"_windows","id":5},{"text":"Mac OS","hash":"_mac_os","id":6},{"text":"Building","hash":"_building","id":7},{"text":"Testing","hash":"_testing","id":8},{"text":"Running test on the host","hash":"_running_test_on_the_host","id":9},{"text":"IDE based testing","hash":"_ide_based_testing","id":10},{"text":"Publishing images","hash":"_publishing_images","id":11},{"text":"Deploying","hash":"_deploying","id":12},{"text":"Kubernetes instance","hash":"_kubernetes_instance","id":13},{"text":"Run the deployment","hash":"_run_the_deployment","id":14},{"text":"Helm charts","hash":"_helm_charts","id":15},{"text":"How to …","hash":"_how_to","id":16},{"text":"… work on the frontend","hash":"_work_on_the_frontend","id":17},{"text":"Backend detection","hash":"_backend_detection","id":18},{"text":"Running with a local server","hash":"_running_with_a_local_server","id":19},{"text":"Running with a cloud backend","hash":"_running_with_a_cloud_backend","id":20}]},"13":{"id":13,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and a TimescaleDB instance, which is set up in a way that temperature readings are automatically stored in the TimescaleDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and TimescaleDB would be a \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"dev","name":"addons","url":"/drogue-cloud/dev/introduction/addons.html","titles":[{"text":"Grafana & TimescaleDB","hash":"_grafana_timescaledb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"14":{"id":14,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"dev","name":"control","url":"/drogue-cloud/dev/introduction/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"15":{"id":15,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to leverage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrated as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authenticates and authorizes devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messages. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) consists of a payload, which contains metadata (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Persisting messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or if there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Applications also have the ability to send back messages to the device, called commands. Commands are best-effort, and are not guaranteed to be delivered. If it is important to the application that a command got delivered, it needs to implement a reconciliation process on top of the command functionality. This is necessary as it isn’t always clear if and how it makes sense to buffer commands. Assuming a decision is made, and a command is executed. It is not necessarily correct to buffer the command for a longer period of time, and then just resend it. Also, just because a command was delivered to a device attached to Drogue Cloud, doesn’t mean the action of the command was actually performed. A command could get lost in the next step of the processing. Therefore, it is important to have some feedback signal end-to-end. Some commands also cannot simply be retried, as that could be interpreted by a receiving device as a new request to process the command. Therefore, Drogue Cloud doesn’t enforce any semantics on commands, and let the application deal with the case of undelivered commands. In the future, we might add some add-on functionality, which might provide a more opinionated approach, and help implement common use-cases out of the box. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default, we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"realm\" here","title":"Data plane","component":"drogue-cloud","version":"dev","name":"data","url":"/drogue-cloud/dev/introduction/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Commands","hash":"_commands","id":4},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":5}]},"16":{"id":16,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerful compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"dev","name":"devices","url":"/drogue-cloud/dev/introduction/devices.html","titles":[]},"17":{"id":17,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controlling actuators. Of course this diagram over-simplifies the problem. And still, connecting a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit of this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These applications are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Introduction","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/introduction/index.html","titles":[]},"18":{"id":18,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Acting on device change events, operators will reconcile the desired state of applications and devices, with internal or external services. The topic operator creates Kafka topics as required by the applications. The Things Network operator (TTN operator) sets up a connection between Drogue Cloud and a TTN V3 instance. It will also synchronize devices from Drogue Cloud to TTN. Protocol endpoints, used for devices to communicate with the system. A general purpose CoAP endpoint, providing a Drogue IoT specific API. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"dev","name":"services","url":"/drogue-cloud/dev/introduction/services.html","titles":[{"text":"Device Registry","hash":"_device_registry","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Operators","hash":"_operators","id":3},{"text":"Topic operator","hash":"_topic_operator","id":4},{"text":"The Things Network operator","hash":"_the_things_network_operator","id":5},{"text":"Endpoints","hash":"_endpoints","id":6},{"text":"CoAP endpoint","hash":"_coap_endpoint","id":7},{"text":"HTTP endpoint","hash":"_http_endpoint","id":8},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":9},{"text":"Command endpoint","hash":"_command_endpoint","id":10},{"text":"Integrations","hash":"_integrations","id":11},{"text":"MQTT Integration","hash":"_mqtt_integration","id":12}]},"19":{"id":19,"text":"This will create a new application, and connect it with The Things Network. You will need create an account at The Things Network. As part of that you will need to: Remember which region you are assigned to (e.g. eu1 for eu1.cloud.thethings.network). Create an API key for this account with the permission to create new applications. Remember the name of the user. Create a new application in Drogue Cloud with the TTN-specific information: drg create application my-ttn-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, must have access to create new applications for the provided owner. 2 The (optional) ID of the application in the TTN system. Defaults to the name of the application in Drogue Cloud. This valid must not be changed. 3 The name of the user owning the application. See Using an organization for details on using an organization instead. 4 The name of region, or a URL to the API backend. This will enable the integration and trigger the reconciliation process. You can also use drg edit app my-ttn-app to change the configuration of an existing application. Taking a look at the TTN console, you should see the new application (my-app-alias in this case), and a webhook named drogue-iot. You can also use an organization, for this you will need to change the owner to explicitly being an organization type: { \"spec\": { \"ttn\": { \"api\": { \"owner\": { \"org\": \"my-org\" (1) }, \"owner\": { \"user\": \"my-user\" (2) }, \"owner\": \"my-user\" (3) } } } } 1 Use an organization named \"my-org\" 2 Use a user named \"my-user\" 3 Use a user named \"my-user\" Deleting an application will delete all devices in Drogue Cloud and the TTN system. When all devices have been deleted, the application itself will be deleted in both Drogue Cloud and the TTN system. Soft deletion Applications in The Things Network are only \"soft deleted\". This implies that the name of the application cannot be re-used. So it is not possible to re-create or re-use the applicatio name. However you can use an alternate application ID in TTN by setting the .spec.ttn.api.id field to an unused value.","title":"Managing applications","component":"drogue-cloud","version":"dev","name":"app","url":"/drogue-cloud/dev/ttn/app.html","titles":[{"text":"Setting up a new application","hash":"_setting_up_a_new_application","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Using an organization","hash":"_using_an_organization","id":4},{"text":"Deleting an application","hash":"_deleting_an_application","id":5}]},"20":{"id":20,"text":"This will register a new device, and synchronized it with The Things Network. You will need the following information for your device: Device EUI Application/Join EUI Application Key Supported LoRa capabilities Create a new device in Drogue Cloud with TTN specific information: drg create --app my-ttn-app device my-ttn-device-1 --spec '{ \"ttn\": { \"app_eui\": \"0123456789ABCDEF\", \"app_key\": \"0123456789ABCDEF...\", \"dev_eui\": \"0123456789ABCDEF\", \"frequency_plan_id\": \"...\", (1) \"lorawan_phy_version\": \"...\", (2) \"lorawan_version\": \"...\" (3) } }' 1 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ 2 An ID of the TTN supported LoRa versions, e.g. PHY_V1_0 3 An ID of the TTN supported LoRa version, e.g. MAC_V1_0 You can also use drg edit device --app my-ttn-app my-ttn-device-1 to change the configuration of an existing device. When you delete a device in Drogue Cloud, it will also be deleted in the TTN system. If you want to delete the device in TTN, but keep it in Drogue Cloud, then you can simply remove or rename the .spec.ttn section.","title":"Managing devices","component":"drogue-cloud","version":"dev","name":"device","url":"/drogue-cloud/dev/ttn/device.html","titles":[{"text":"Setting up a new device","hash":"_setting_up_a_new_device","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Deleting a device","hash":"_deleting_a_device","id":4},{"text":"Disconnecting a device","hash":"_disconnecting_a_device","id":5}]},"21":{"id":21,"text":"Drogue IoT Cloud has can integrate with The Things Network (TTN). Applications and devices managed in the Drogue IoT device registry can be synced to the TTN system. This includes automatically connecting both systems using a Drogue cloud gateway device, to receive messages from LoRa devices through the TTN system. The integration is meant to be configured on a per-application level, so that normal users of Drogue Cloud can configure their own integration, using their own TTN account. There is no system-wide synchronization. The integration works with V3 of the TTN API. Earlier versions are not supported. The integration currently supports: Creating applications in The Things Network. Creating a gateway device in Drogue Cloud. Configuring the credentials for this gateway device using a randomized password- Creating an application instance on the TTN side. Creating a webhook for this application, connecting the TTN side with Drogue Cloud, using the created gateway device. Creating devices in The Things Network. Authorizing the TTN gateway device in Drogue Cloud for this device Creating the device on the TTN side Cleaning up when resources get deleted Deleting applications Deleting an application in Drogue Cloud, or disabling the TTN integration for a Drogue Cloud application, will also delete the application in TTN. However, The Things Network only soft deletes applications. The name of the application is still blocked from further use after the deletion. This means that you cannot simply re-create an application with the same name. Drogue Cloud allows you to override the application name on the TTN side, however you should consider twice before actually trigger a delete.","title":"The Things Network integration","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/ttn/index.html","titles":[]},"22":{"id":22,"text":"Environmental Monitoring involves collecting sensor data from a potential wide variety of sensors, and using that data in analysis and making informed decisions. Different sensor types may need to send data to the monitoring system using different protocols. Some are able to connect through a gateway in close proximity, while others may connect directly. Sensor on-boarding and maintenance requires good integrations with existing resource management systems. There are two main business applications in this example: A forecasting system which will provide alerts when the trained forecasting model predicts a dangerous level of pollution. A sensor on-boarding service that is used to configure new sensors added to the system. The main data center, which can be on-premise or in the cloud, runs a Kubernetes cluster with Drogue Cloud and the business applications. All stateful systems uses managed services to simplify operations of the system. The following Drogue Cloud features are used: Using the connectivity layer to supporting multiple protocols for ingesting data RESTful APIs for integrating device management with existing systems Managing Edge gateways operating system and software Streaming APIs for consuming sensor data using MQTT or WebSockets Using managed or external stateful services for storage Sensors use a combination of networks to send data to Drogue Cloud. Some areas that require long range coverage use a LoRaWAN network, others use the cellular network. Some sensors are restricted to a small area, and maybe use mesh networks such as Thread or Bluetooth Mesh in combination with a connected gateway. Some sensors may operate require gateways to be placed in closer proximity to the sensors. Using Flotta, gateways can be centrally managed in the cloud, and the workloads running on the gateway (such as a LoRaWAN gateway, or Bluetooth Gateway) can be configured via Drogue Cloud transparently. Drogue Cloud creates the required flotta configuration ensuring that the gateway software is running with the correct configuration, while flotta ensures that the operating system and software is running. The gateways or sensors send their events using the Drogue Cloud endpoints, which support several standard IoT protocols needed by different sensor types. All data is authenticated at the endpoint boundary, using the device registry, before it is handed to the external Apache Kafka service. All sensor data is wrapped in the Cloud Events format, allowing the applications to rely to standardized envelopes for message metadata. The forecasting system consumes events from the MQTT endpoint in Drogue Cloud. The application authenticates using API tokens created by the operations team which allows isolating the forecasting system for different areas or end users. Events received by the application are encoded using the Cloud Events specification, allowing the application to run in a serverless framework like KNative. The forecasting application uses a model that is updated by data scientists. The sensor on-boarding service is involved when a technician installs new sensors, ensuring they are securely paired and connected. The REST APIs allows registering new gateways and sensors, leaving the details of re-configuring the gateways up to Drogue Cloud. More advanced self-test procedures can be performed by using the MQTT/Websocket Integration in combination with the Command API. Drogue Cloud can be configured to use managed services for all stateful components. This reduces a big part of the administrative burden, and makes it easier to deal with disaster recovery and creating clusters in multiple regions. The stateful services used in this example are PostgreSQL for storing device registry and (indirectly via Keycloak) authentication and authorization data, and Apache Kafka for telemetry and events.","title":"Environmental Monitoring","component":"drogue-cloud","version":"dev","name":"environmental-monitoring","url":"/drogue-cloud/dev/use-cases/environmental-monitoring.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Sensors","hash":"_sensors","id":2},{"text":"Edge","hash":"_edge","id":3},{"text":"Drogue Cloud","hash":"_drogue_cloud","id":4},{"text":"Applications","hash":"_applications","id":5},{"text":"External Services","hash":"_external_services","id":6}]},"23":{"id":23,"text":"Drogue Cloud has many applications in the world of IoT, but having some specific examples helps bringing the message out there. We’ve got 3 example use cases to highlight the different ways you can deploy Drogue Cloud and the different ways to use it. Environmental Monitoring Smart Factories Predictive Maintenance The intendend audience for these use cases are architects and developers who are evaluating how Drogue Cloud works and which use cases it unlocks in their organization. Got any questions? Join our chat.","title":"Use Cases","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/use-cases/index.html","titles":[]},"24":{"id":24,"text":"Predictive Maintenance involves gathering data about the conditions for physical devices and tools, in order to predict the need for maintenance and prolong the life of the product. In this use case, the following Drogue Cloud features are used: Connectivity layer for normalizing event data and storing in Apache Kafka Firmware updates for bare metal (without operating system) devices Integration with third party: Eclipse Ditto for Digital Twin The data stored in Apache Kafka is consumed by a fault detection model as well as a digital twin system. Digital Twin capability makes it easy to view the current state of devices. Software updates for devices are continuously built and deployed to the fleet. All data related to devices are co-located and controlled by \"the company\". It is desirable that a digital representation of each device is kept up to date for humans to inspect and decide actions. In this scenario, all devices are connected via LTE-M or NB-IoT, using a telco network for connectivity. The devices periodically \"phone\" home with the latest set of metrics with usage patterns and telemetry during their use. In parallel with normal operation, devices also report their current firmware versions, receiving updates if any are available. This data is propagated to Drogue Cloud, which handles authentication and normalizing the data to Cloud Events. Drogue Cloud runs in the same cluster as the database for the device registry and Apache Kafka handling the incoming data from devices. Each device has a digital twin representation that is stored in Eclipse Ditto. All telemetry data is streamed from Apache Kafka into Eclipse Ditto, which consumes the normalized Cloud Events. The digital twin model is kept up to date with both the telemetry data, as well as result from prediction models, so that all state related to the device can be found in a single place. The telemetry data is also streamed by an application applying a machine learned model to detect devices that need replacement. By detecting vibrations during device use, it is able to alert users of the device and the company about part replacements. In order to isolate the firmware management from the regular telemetry traffic, a separate cluster is running the firmware services. Tekton is used to build firmware, while Drogue Ajour and Eclipse Hawkbit are used to deploy firmware updates to devices. When software developers create a fix, this fix is first merged to the main branch and built by Tekton. On a release, a reference to the artifact with the firmware is updated on the Drogue application or device. When a release is created, the devices will automatically receive the update when they are reporting their current firmware revisions. Devices receive updates at their own pace, and the update status of all devices are tracked in Drogue Cloud.","title":"Predictive Maintenance","component":"drogue-cloud","version":"dev","name":"predictive-maintenance","url":"/drogue-cloud/dev/use-cases/predictive-maintenance.html","titles":[{"text":"Example architecture","hash":"_example_architecture","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Drogue Cloud","hash":"_drogue_cloud","id":3},{"text":"Digital Twin","hash":"_digital_twin","id":4},{"text":"Failure detection","hash":"_failure_detection","id":5},{"text":"Firmware updates","hash":"_firmware_updates","id":6}]},"25":{"id":25,"text":"Smart Factories collect data from the manufacturing process to detect anomalies, derive prediction models and adjust the process based on a feedback loop. Factories need to operate independently of each other, so that if one factory has problems, it does not impact the other. However, managing configuration of the factories centrally is still desirable, to avoid diverging behavior. In this example, the smart factory is split into a system with three tiers. The central tier which is used to managed the factory clusters as well as running business applications that need a global view of the data. The second tier is the factory tier where all the applications needed for factory operation is running. The factory cluster configuration is managed by the central cluster. The third tier are the edge tier where control processes and devices are running. These processes are timing sensitive, and may communicate internally to respond to critical events. The processes and their configuration run in a cluster which is managed by the factory cluster. For users familiar with the Open Manufacturing Platform (OMP), these tiers correspond to the enterprise, facility and station (+ control and field) layers in the OMP reference architecture. The following Drogue Cloud features are used: Using the connectivity layer to supporting multiple protocols for ingesting data Command APIs for sending commands to end devices Managing control cluster workloads using Open Cluster Management Using external Apache Kafka instances The factory consists of several physical components: Conveyor belts Robot arms part of the manufacturing process Quality sensors reporting production errors These components are accessible through an OPC-UA server, which communicate with each other for critical events. An OPC-UA connector send telemetry data to and receive commands from Drogue Cloud running in the factory cluster. The factory cluster contains the infrastructure needed to operate the factory. Stateful services such as PostgreSQL and Apache Kafka are running on the cluster (alternatively in their own cluster or outside Kubernetes) and Drogue Cloud connects to them as needed for device management and publishing telemetry data. Drogue Cloud configures and deploys the required workloads on the edge cluster using Open Cluster Management (OCM). A centralized control plane provides a single place for configuring the factories. The central cluster is a global instance that also serves infrastructure that is not critical to the day to day operation of the factories. If this cluster goes down, the factories can still operate independently. The factory clusters are managed using Open Cluster Management (OCM), ensuring that factories will have consistent configurations. The central cluster also holds a more powerful processing pipeline that consumes data from all factory clusters for later processing and analysis, such as adjusting device configuration or training failure detection models. An instance of MirrorMaker is used to forward events in Apache Kafka factory instance with the centralized Apache Kafka instance. The business applications receive telemetry from Drogue Cloud via Apache Kafka, and send commands back using the command API. Component failure detection - Using a machine learned model to learn when a component is about to fail and needs replacement. Capable of performing shutdown of production to avoid cascading failures. Product quality monitoring - Using sensor data to provide a product quality metric that is fed back into the Apache Kafka cluster and mirrored to the central cluster. Factory parameter tuner - Tuning factory configuration feedback from product quality and other telemetry data. Model training - Using a global view of the data to infer improved models for failure detection.","title":"Smart Factories","component":"drogue-cloud","version":"dev","name":"smart-factories","url":"/drogue-cloud/dev/use-cases/smart-factories.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Edge","hash":"_edge","id":2},{"text":"Factory","hash":"_factory","id":3},{"text":"Central","hash":"_central","id":4},{"text":"Applications","hash":"_applications","id":5}]},"26":{"id":26,"text":"The following subsections describe concepts used throughout Drogue Cloud. Drogue Cloud stores configuration in resources similar to Kubernetes resources. And while they look similar to Kubernetes resource, and may also share some functionality, they are in fact not Kubernetes resources. Resources currently are: Applications Devices Resources can be scoped by application. An application can be compared to the concept of a Kubernetes namespace. Device are scoped by application. Deleting an application will automatically also delete all scoped resources belonging to the application. Deleting a resource will primarily mark it as deleted (soft-deleted), and then perform necessary cleanups. After the cleanups have been performed, the resource will actually be deleted. Cleanups can be the deletion of scoped resources (in the case of deleting an application), or the processing of finalizers. A resource will be marked as deleted by setting the .metadata.deletionTimestamp to the time the deletion was requested. If there are no cleanups, then the resource will be deleted right away, skipping the step of soft-deletion. Resources are identified by their name. However, deleting and re-creating might point you to a different resource. Therefore, resources also have a \"unique ID\" (UID), which will be different between resource re-creation. Assume you are creating an application foo, delete it, and create another application named foo. This will result in a new application, but having the same name. The UID of the second instance will however be different to the first instance. Depending on your use-case, you can choose to interpret either the UID of the name of a resource. A device is something which connects to the protocol endpoints of Drogue Cloud. In most cases a \"device\" would be an actual device, however it can also be a simulator or just another application or service. For example the \"The Things Network\" (TTN) integration is using this concept. The actual devices are connected to TTN, while the TTN backend provides an aggregated link to Drogue Cloud. TTN isn’t an actual device, but a remote service. However, in Drogue Cloud, it is treated as a \"gateway device\". Devices are manages as resources in Drogue Cloud, and therefore are identified by their name using the management API. However, devices do have their own device identity, which will be used when connecting via the protocol endpoints. Drogue Cloud has reasonable defaults in place, so that the device name of the resource will be used unless something different is being configured. Having a dedicated device identity supports use cases where it is possible to replace a physical device with a new one, mapping it to the same logical device in the system. Drogue Cloud can differentiate between devices which are directly connected to Drogue Cloud, and devices which connect through an intermediate (proxy, gateway) device. This can be necessary for network reasons, or just because some devices are not using a TCP/IP based network. In Drogue Cloud a device can list devices it trusts as a gateway device. This enables those gateways to act on behalf of these devices, sending events and receiving their commands. A proxied device does not require any credentials, as it does not direct connect to Drogue Cloud, and so does not go through the connection process. This also means, that proxies devices will not emit any connection state events. Gateway devices are regular devices, which have connection credentials configured. The only different between a regular device and a gateway device is, that some other devices list this device as their gateway. Gateway \"devices\" can actually also be external services, which already provide an aggregated communication link. Also see: Different types of devices Events in Drogue Cloud will contain the information what the actual device was, and what the transmitting/sending device was. Same for commands, these will be sent to the actual (target) device, but will be sent through the configured gateways, if any. The core idea of the connectivity layer of Drogue Cloud is to simply pass along data in a normalized way. Trying not to alter or change data in the process, as long as this is possible. Events (incoming and outgoing) are normalized on Cloud Events. For their specific mapping see: Incoming events and Commands. Incoming events are initiated by a device, and carry the following information: Originating device Sending device Channel Content type Payload Events are buffered by Drogue Cloud, so that consumer can fail gracefully, not loosing any data. Once consumers reconnect, it is possible to catch up and consume the missed data. Events will be ordered sequentially by the time they arrive, but only on a per-device level. The payload can be empty, and will be forwarded as-is. There is only one limitation: if the content type indicates JSON as data format, then the payload must be valid JSON. Otherwise, the event is rejected. While incoming events are buffered, this is not intended as a persistent store. Data will be removed eventually. The actual retention time is defined at the level of the Kafka topics backing the system. By default the Kafka retention time is 7 days. Commands are initiated by applications, and carry the following information: Target device Channel Payload Commands are short-lived, and are not buffered. If they cannot be delivered they will fail silently. Command feedback channel Commands can fail on many levels before they can be executed. Most likely, a command sent to a device, will need to go through one or more hops, before they reach their actual target. And even then, executing a command might not turn into the expected result. Therefore, it is important to have some kind of feedback signal from the final device, which can indicate if the execution of a command was successful, or not. Even if this is just mirroring the received information. With this information of \"desired state\" (as evaluated by the application) and the \"reported state\" (as reported by the device), the application can act accordingly. For example, by implementing a reconciliation logic, which will periodically re-send the command, if that is appropriate for the use case. Drogue Cloud (currently) does not provide such a reconciliation logic. Simply because there are different use cases. In same cases it doesn’t make sense, or would even be wrong, to deliver a command that was issues a while back. And while we currently rely on the application to implement this logic, this might change in the future, where we could provide an optional (opt-in) reconciliation process. The payload is normally sent to the device unaltered. It can even be empty. Some system cannot accept arbitrary data. LoRaWAN for example as a very limited packet size, and commands must adhere to such limitations. Otherwise, commands will fail. Some events are not directly from devices, but are created by Drogue Cloud, but might still flow through the regular channels. This is for example the connection events, which are initiated based on the fact that a device connects/disconnects.","title":"Common concepts","component":"drogue-cloud","version":"dev","name":"common-concepts","url":"/drogue-cloud/dev/user-guide/common-concepts.html","titles":[{"text":"Resources","hash":"_resources","id":1},{"text":"Scoped vs non-scoped","hash":"_scoped_vs_non_scoped","id":2},{"text":"Deletion","hash":"_deletion","id":3},{"text":"Naming","hash":"_naming","id":4},{"text":"Devices","hash":"_devices","id":5},{"text":"Different types of devices","hash":"different_types_of_devices","id":6},{"text":"Device identities","hash":"_device_identities","id":7},{"text":"Actual device vs sending/transmitting device","hash":"_actual_device_vs_sendingtransmitting_device","id":8},{"text":"Data","hash":"_data","id":9},{"text":"Incoming events","hash":"incoming_events","id":10},{"text":"Outgoing commands","hash":"outgoing_commands","id":11},{"text":"Synthetic data","hash":"synthetic_data","id":12}]},"27":{"id":27,"text":"This section describes a few topics that are common to various areas of Drogue Cloud. Durations are defined using the \"humantime\" syntax. For example: durationOneSecond: 1s (1) durationOneMinute: 1m (2) durationOneHourAndTwoMinutes: 1hour 30min (3) 1 Timeout of one second 2 Timeout of one minute 3 Duration of 1.5 hours Also see: https://docs.rs/humantime/latest/humantime/fn.parse_duration.html Some components of Drogue Cloud allow you to configure an external endpoint, to which Drogue Cloud will reach out to, when necessary. This can be configured using the structure ExternalEndpoint. This is normally embedded in some other structure. The following examples will assume that there is a field named endpoint, which should define the external endpoint. The role of the endpoint is specific to the actual location of the configuration. This section simply describes the common configuration options. The most simple configuration is: endpoint: url: https://my-external/endpoint By default, the functionality using an external endpoint will use a reasonable HTTP method for making the request. However, you can override the method using the following field: endpoint: url: https://my-external/endpoint method: GET (1) 1 Must be a valid HTTP method, using uppercase only. If the remote endpoint requires authentication, you can configure HTTP \"basic auth\" like this: endpoint: url: https://my-external/endpoint auth: basic: username: my-username password: my-password Or a \"bearer token\" using: endpoint: url: https://my-external/endpoint auth: bearer: token: my-token It is also possible to add additional HTTP header like so: endpoint: url: https://my-external/endpoint headers: - my-foo-header: my-foo-value By default, the functionality using an external endpoint will use a reasonable default timeout for making the request. However, you can override the timeout using the following field: endpoint: url: https://my-external/endpoint timeout: 1s (1) 1 Timeout duration in a format described in Defining durations By default, system default TLS settings will be used. TLS validation is enabled. However, you can override and tweak the TLS settings using the following fields: These settings don’t \"enable\" TLS. This is done by selecting a protocol using TLS using the url, like https://. endpoint: url: https://my-external/endpoint tls: insecure: true (1) certificate: | (2) -----BEGIN CERTIFICATE----- MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/ MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK 4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5 bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4 FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1 c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC 5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW 9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5 -----END CERTIFICATE----- 1 Disable TLS validation. This is insecure and should be used with caution! 2 Explicit trust anchor, overriding all system trust anchors.","title":"Common configuration","component":"drogue-cloud","version":"dev","name":"common-configuration","url":"/drogue-cloud/dev/user-guide/common-configuration.html","titles":[{"text":"Defining durations","hash":"defining_durations","id":1},{"text":"Defining external endpoints","hash":"defining_external_endpoints","id":2},{"text":"HTTP method override","hash":"_http_method_override","id":3},{"text":"Authentication","hash":"_authentication","id":4},{"text":"Additional HTTP headers","hash":"_additional_http_headers","id":5},{"text":"Timeout","hash":"_timeout","id":6},{"text":"TLS","hash":"_tls","id":7}]},"28":{"id":28,"text":"Some components of Drogue Cloud support the MQTT protocol. Unless noted otherwise, all components support MQTT 3.1.1 and 5 not only using the binary MQTT protocol, but also using MQTT over Websockets. Drogue Cloud provides three different, dedicated endpoint for MQTT-enabled service: Plain MQTT MQTT over Websockets MQTT over Websockets without support for X.509 client certificates These are simply the same services (e.g. MQTT endpoint or integration), but running with different settings on the MQTT protocol layer. True, it is possible to detect if a connecting client is using MQTT or Websocket. However, it is not possible to detect if a browser based websocket client connects using TLS or if it is a normal one. The difference is, that a browser based websocket client cannot properly establish a TLS session, if the server allows the use of X.509 client certificates. So instead of providing a mix of auto-detect and additional endpoints, we do offer dedicated endpoint for each connection profile.","title":"","component":"drogue-cloud","version":"dev","name":"common-mqtt-websocket","url":"/drogue-cloud/dev/user-guide/common-mqtt-websocket.html","titles":[{"text":"MQTT over Websocket","hash":"_mqtt_over_websocket","id":1},{"text":"Connecting","hash":"_connecting","id":2}]},"29":{"id":29,"text":"The CoAP protocol endpoint is a device facing service offering connectivity using a CoAP based API. Currently, the endpoint does not support DTLS. It is not recommended to use this in production or to transfer any sensitive data over public networks. Before communicating with the endpoint, the respective device and application need to be registered with drogue cloud. The coap requests made to the endpoint need to be of the following format: coap:///v1/{channel}/{subject(optional)} The UriPath option should be set with v1, channel name and subject name(optional). Optional parameters can also be passed, but they need to be URL encoded. The rules for encoding the device and application name can be viewed over here. The following parameters can be passed as queries: application: The specific application ID that the device is sending telemetry to device: The device ID data_schema: Data schema of the payload as: Allows the device to alias another ID ct: The amount of time the device will wait for incoming commands For a device to receive commands, it must send a request with a specified timeout. The command will piggyback on the response—the responsibility to track when the device issues a request and promptly issue the command lies on the application. Authentication information is sent using the CoAP option number 4209. It is carried out using HTTP-like authentication headers. For example: Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk Here, we use the HTTP Basic authentication scheme, along with the base64 encoded device authentication information. The format of the device authentication information is @:. A sample CoAP request would look something like the following: The Request URL would be formatted like so, with the device name 'device#2' and 'device#4' percentage encoded: coap://test-url/v1/sample_channel/sample_subject?application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%232&ct=30 The value of Option 4209, representing auth information \"device1@app1:hey-rodney\": Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk // present as bytes Value of the UriPath Option(obtained from request URL): v1, Rust, test // present as bytes Value of the UriQuery Option(obtained from request URL): // present as bytes application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%234&ct=30 There are two response types that a device can receive. A device would receive a response with the 2.04(Changed) status code if the publish action were successful. If the request passed the ct(command timeout) parameter and a command is sent to the device within this interval, the device will receive the 2.05(Content) response code. The contents of the command can then be read from the CoAP option 4210. If a request fails, the device can receive responses with appropriate status codes. The payload in such cases will contain the reason for the error as well.","title":"CoAP protocol endpoint","component":"drogue-cloud","version":"dev","name":"endpoint-coap","url":"/drogue-cloud/dev/user-guide/endpoint-coap.html","titles":[{"text":"Requests:","hash":"_requests","id":1},{"text":"Response:","hash":"_response","id":2}]},"30":{"id":30,"text":"The HTTP protocol endpoint is a device facing service offering connectivity using different HTTP based APIs. The base address of the HTTP protocol endpoints depends on your installation. For a local, test installation, this is mostly based on the IP address and uses nip.io to resolve this as a DNS name. Assuming your IP address is 1.2.3.4 the hostname would be http-endpoint.1.2.3.4.nip.io. Drogue Cloud offers a default HTTP API for connecting devices to the cloud. In addition to that, other HTTP APIs may exist, implementing other IoT like APIs, see the following sections for more information. POST /v1/{channel} You need to use one of the following authentication mechanisms: Information Details X.509 Client certificate Provide an X.509 client certificate during the TLS handshake. The certificate must be signed with a trust anchor stored in the device registry on the application level. Credentials: @: Standard username/password authentication using @ as HTTP username. The can either be a device name, device alias, or unique username. Credentials: @ Query: application= Use a standard username and provide the application as part of the HTTP query. The can either be a device name, device alias, or unique username. Credentials: @ Query: application=&device= Use a non-unique username, provide application and device using query parameters. Name Type Location Required Description channel string path X The name of the channel to send to application string query Override the application for authentication. See above. device string query Override the device for authentication. See above. as string query Allows to specify an alternate device name that this device may act on behalf of. The \"as\" device must be configured to allow the authenticated device (from the credentials or device) to act on its behalf. ct integer query http \\ --auth device1@example-app:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.1.2.3.4.nip.io:30443/v1/telemetry \\ temp:=42 http \\ --auth device1:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.192.168.39.35.nip.io:30443/v1/foo \\ application==example-app \\ temp:=42 Deprecated! The entrypoint is /ttn/v3.","title":"HTTP protocol endpoint","component":"drogue-cloud","version":"dev","name":"endpoint-http","url":"/drogue-cloud/dev/user-guide/endpoint-http.html","titles":[{"text":"Default HTTP API","hash":"_default_http_api","id":1},{"text":"Publish telemetry","hash":"_publish_telemetry","id":2},{"text":"Authentication","hash":"_authentication","id":3},{"text":"Parameters","hash":"_parameters","id":4},{"text":"Code samples","hash":"_code_samples","id":5},{"text":"Shell","hash":"_shell","id":6},{"text":"The Things Network v2","hash":"_the_things_network_v2","id":7},{"text":"The Things Network v3","hash":"_the_things_network_v3","id":8}]},"31":{"id":31,"text":"The MQTT protocol endpoint is a device facing service offering connectivity using a simple MQTT v3.1.1 and v5 based protocol. This is not an MQTT broker It is important to understand, that the MQTT endpoint is not a general purpose MQTT broker. It is an MQTT based API, providing access to Drogue Cloud specific functionality, using the MQTT protocol and existing MQTT tools. As MQTT is a long-lived connection, it makes sense to use it in gateway device use-cases. In this case, a device connects to the MQTT endpoint, and then also performs operations for other devices (connected via the gateway) device. Drogue Cloud supports this model. Basically every device connecting via MQTT can act as a gateway device. The devices which allow other devices to act on their behalf, must indicate this by explicitly selecting a device as their gateway. This is done using the device configuration on the device: metadata: name: sensor01 (1) application: my-app spec: credentials: {} (2) gatewaySelector: matchNames: (3) - gateway01 1 Name of the actual device. 2 Empty credentials, as this device doesn’t need to allow a direct connection. 3 Names of the devices (gateways) which are allowed to act on behalf of this device. A device can act both as direct device and as gateway a the same time. Clean session must be true You may use X.509 client certificates when establishing the TLS connection.The certificate must be signed with a trust anchor stored in the device registry on the application level. Use @ and a configured password for the device. The MQTT endpoint supports different \"dialects\" or APIs.The following subsections describe these dialects.By default, the \"Drogue V1\" dialect is use. However, you can configure the dialect of a device through the application or device configuration: see MQTT dialects. The Drogue V1 dialect is the original one, which supports all the features that Drogue Cloud offers using the MQTT endpoint. To publish data as the connected device, publish to . The channel information will be encoded in the subject header of the generated event. To publish data on behalf of another device, publish to /. If the connected device is not listed as the specified device. The message will be dropped (QoS 0) or rejected (QoS 1). The payload of the publish message will be the \"data\" of the generated event. For MQTT v5, it is possible to set the \"content type\" property, which will be used as the content type for the generated event. By default (for MQTT 3.1.1, or when the content type is not provided), the content-type will be evaluated. If the payload can be successfully parsed as JSON, the content type will be application/json. Otherwise it will be application/octet-stream. In general, the command topic structure is command/inbox//. It is however not possible to subscribe to specific commands only. Topic pattern Example topic Description command/inbox//# command/inbox//set-temp Subscribe to commands for the actual device command/inbox/my-device/# command/inbox/my-device/set-temp Subscribe to commands for the device my-device. command/inbox/# command/inbox/+/# command/inbox/my-device/set-temp command/inbox//set-temp Subscribe to commands for actual device and all devices it acts as a gateway for. The payload of the command, will be the payload of the received message. The \"plain topic\" dialect doesn’t impose any restrictions on the topic naming that devices publish to. So it is ideal for connecting existing clients via MQTT, without the need to change the publish topic structure. The downside is, that additional information (like sending on behalft of another device) which could go in the topic structure, now cannot be assigned a special meaning. The topic the client publishes to will directly be used as the channel information. If the \"device prefix\" option is enabled, then the first segment of the topic will always be used a device ID. The connected device will only act as a gateway. The same access rules apply as for all gateways and devices. Drogue Cloud allows connecting to MQTT over websocket too.This works the same was a standard MQTT, but be sure to check out some more details in the section MQTT over Websockets.","title":"MQTT protocol endpoint","component":"drogue-cloud","version":"dev","name":"endpoint-mqtt","url":"/drogue-cloud/dev/user-guide/endpoint-mqtt.html","titles":[{"text":"Simple device vs gateway device","hash":"_simple_device_vs_gateway_device","id":1},{"text":"Connecting","hash":"_connecting","id":2},{"text":"Authenticating","hash":"_authenticating","id":3},{"text":"X.509 Client certificates","hash":"_x_509_client_certificates","id":4},{"text":"Username/password","hash":"_usernamepassword","id":5},{"text":"Protocol dialects","hash":"protocol_dialects","id":6},{"text":"Drogue V1 dialect","hash":"_drogue_v1_dialect","id":7},{"text":"Publish data","hash":"_publish_data","id":8},{"text":"Payload & Content type","hash":"_payload_content_type","id":9},{"text":"Subscribe to commands","hash":"_subscribe_to_commands","id":10},{"text":"Plain topic dialect","hash":"_plain_topic_dialect","id":11},{"text":"Publish data","hash":"_publish_data_2","id":12},{"text":"Connecting over Websockets","hash":"_connecting_over_websockets","id":13}]},"32":{"id":32,"text":"This guide describes how to use Drogue Cloud, from the perspective of a user, consume Drogue Cloud \"as a service\".","title":"User Guide","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/user-guide/index.html","titles":[]},"33":{"id":33,"text":"The command HTTP integration provides a simple HTTP based API to send commands to devices. It is part of the API endpoint: Command API.","title":"Command HTTP integration","component":"drogue-cloud","version":"dev","name":"integration-command","url":"/drogue-cloud/dev/user-guide/integration-command.html","titles":[]},"34":{"id":34,"text":"The Kafka integration allows cloud side applications to directly tap into the event stream coming from the devices. Events are encoded as CloudEvents.","title":"Apache Kafka™ integration","component":"drogue-cloud","version":"dev","name":"integration-kafka","url":"/drogue-cloud/dev/user-guide/integration-kafka.html","titles":[]},"35":{"id":35,"text":"A Drogue IoT cloud application can also act as a Knative event source. It will try to deliver events to the Knative serving endpoint you configure. The difference to integrations like MQTT and WebSocket is, that in this case, Drogue Cloud will actively try to deliver events, rather than waiting for a consumer to attach. You can configure this using the section .spec.knative: spec: knative: endpoint: (1) url: https://my-knative-endpoint 1 External endpoint definition as described in Defining external endpoints. This will create a publisher, which will start sending new events as they come in. You can temporarily disable the source using: spec: knative: disable: true (1) endpoint: url: https://my-knative-endpoint 1 Marks the source disabled This will disable the source. It can later be resumed by setting the value to false or removing the field.","title":"Knative integration","component":"drogue-cloud","version":"dev","name":"integration-knative","url":"/drogue-cloud/dev/user-guide/integration-knative.html","titles":[{"text":"Configuration","hash":"_configuration","id":1},{"text":"Temporarily disabling","hash":"_temporarily_disabling","id":2}]},"36":{"id":36,"text":"The MQTT integration allows consuming device events and send commands to the devices using an MQTT based API. Events are encoded as CloudEvents. The MQTT integration service allows to connect using standard MQTT mechanisms. Depending on the deployment, either using TLS or non-TLS connections. The service supports both MQTT v3.1.1 and MQTT 5. It is possible to use anonymous authentication. This may severely limit access to data, but in some special cases, this may be a viable use case. You can use the OAuth2 access token of your user as either username or password (not both at the same time!). When using MQTT v3.1.1, you must pass the token as the username, as this version of MQTT doesn’t allow to send a password only. Token expiration OAuth2 access tokens are only valid for a short amount of time. You need to provide a non-expired access token in order to log in. For this, you most likely need to refresh the token before every connection attempt. An alternative is to use API keys instead. When providing a username and a password, the username must be the name of your user, and the password must be an API key created for that user. In order to subscribe to events, subscribe using the following filter: app/. So to subscribe to example-app, you need to subscribe to app/example-app. The default data format follows the MQTT binding for CloudEvents using the \"structured content mode\", which includes all information, metadata and actual payload, as part of the MQTT payload. When using MQTT 5, you can request the service to send events in the \"binary content mode\", which encodes the metadata as part of the MQTT user properties. In this case, the MQTT payload is equal to the actual CloudEvents payload. As this encoding make use of \"user properties\", it is not available when using MQTT v3.1.1. By default, each MQTT subscriber uses its own Kafka consumer group, and thus receives each message. However, you can use MQTT shared subscriptions to define a shared consumer group, which maps to using the same Kafka consumer group on the backend. In this case, only one of the consumers will receive a message. To subscribe using shared subscriptions, use the following subscription filter: $share//app/. So when subscribing to the application my-app with the shared consumer identifier my-group, you would use: $share/my-group/app/my-app. You can send back a command to a device by publishing to the following topic: command///. For example, sending the command setTemperature with payload {\"value\": 1.23 } to the device my-device of the application my-app, you would need to publish the payload {\"value\": 1.23 } to the topic command/my-app/my-device/setTemperature. Drogue Cloud allows connecting to MQTT over websocket too.This works the same was a standard MQTT, but be sure to check out some more details in the section MQTT over Websockets.","title":"MQTT integration","component":"drogue-cloud","version":"dev","name":"integration-mqtt","url":"/drogue-cloud/dev/user-guide/integration-mqtt.html","titles":[{"text":"Connecting","hash":"_connecting","id":1},{"text":"Anonymous","hash":"_anonymous","id":2},{"text":"OAuth2 Token","hash":"_oauth2_token","id":3},{"text":"API Key","hash":"_api_key","id":4},{"text":"Subscribe to events","hash":"_subscribe_to_events","id":5},{"text":"Data format","hash":"_data_format","id":6},{"text":"Binary content mode","hash":"_binary_content_mode","id":7},{"text":"Shared subscriptions","hash":"_shared_subscriptions","id":8},{"text":"Publish commands","hash":"_publish_commands","id":9},{"text":"Connecting over Websockets","hash":"_connecting_over_websockets","id":10}]},"37":{"id":37,"text":"The WebSocket integration allows consuming device events using a simple WebSockets based protocol.Events are encoded as CloudEvents. The Websocket endpoint allows you to authenticate using the standard HTTP Authorization header. Both using an OAuth2 bearer token or by using HTTP \"basic auth\" using username and API key. However, when using a web socket client from inside a browser, that is not supported. In this case it is however possible to provide the same information using HTTP query parameters: Query Parameters Description token Provide an OAuth2 bearer token username and api_key Provide username and API key Oauth bearer tokens usually have a short lifespan. When the token is expired, the Websocket endpoint will close the connexion. To keep the connexion alive, you can refresh the token by sending a json payload through the web socket containing a refreshed token. The bearer token must be passed with a key named RefreshAccessToken. Here is an example: { \"RefreshAccessToken\":\"eyJhbGciO[...]sRqg7xt_jzb_tg\" } You can set the consumer group ID by providing a query parameter named group_id. This will set the Kafka consumer group ID to the provided value, which allows to share the load between different consumers. If no consumer group id is provided, a temporary one will be provided. Using a temporary consumer group might lead to missed events during re-connects. If that is a problem for your use case, you need to provide a stable group id.","title":"WebSocket integration","component":"drogue-cloud","version":"dev","name":"integration-ws","url":"/drogue-cloud/dev/user-guide/integration-ws.html","titles":[{"text":"Authentication","hash":"_authentication","id":1},{"text":"Refreshing the Oauth2 token","hash":"_refreshing_the_oauth2_token","id":2},{"text":"Consumer Group ID","hash":"_consumer_group_id","id":3}]},"38":{"id":38,"text":"Integrations refer to the cloud side APIs for Drogue Cloud, which allow your application to access data coming from devices and schedule commands to devices. Incoming events are streamed to applications in the form of Cloud Events. The message stream may contain telemetry events, as well as some infrastructure events. The following events may contain additional attributes, not listed here. These are implementation details are should not be relied upon. Also see: Common concepts - Incoming events All regular messages/events a device sends, will end up as a \"device event\". Attribute Type Required Description Standard attributes specversion String X Always 1.0. type String X Always io.drogue.event.v1. id String X A unique event ID. subject String X The channel information. time String (RFC3339) X The time the event arrived in the system. datacontenttype String X The content type of the message. dataschema String The schema of the payload, encoded in the format defined in datacontenttype. Extensions instance String X A unique identifier of the Drogue Cloud instance on this connection. application String X The name of the application the device belonged to. applicationuid String X The unique ID of the application the device belonged to. device String X The name of the device the event originated from. deviceuid String X The unique ID of the device the event originated from. sender String X The name of the device which delivered the event to Drogue Cloud. senderuid String X The unique ID of the device which delivered the event to Drogue Cloud. The payload is whatever the device sent as payload. Drogue Cloud, by default, doesn’t interpret the data in any way. It will only ensure that the data is well-formed JSON in the case the datacontenttype indicates a JSON mime type. The payload may also be empty. When a device connects through a connection oriented protocol (like MQTT), connection events will be issued by Drogue Cloud on behalf of the device. Only devices which directly connect to Drogue Cloud will issue such events. Devices connected via another device, acting as gateway, do not. Attribute Type Required Description Standard attributes specversion String X Always 1.0. type String X Always io.drogue.connection.v1. id String X A unique event ID. subject String X Always connection. time String (RFC3339) X The time the event was issues. datacontenttype String X Always application/json. Extensions instance String X A unique identifier of the Drogue Cloud instance on this connection. application String X The name of the application the device belonged to. applicationuid String X The unique ID of the application the device belonged to. device String X The name of the device the event originated from. deviceuid String X The unique ID of the device the event originated from. sender String X The name of the device which delivered the event to Drogue Cloud. senderuid String X The unique ID of the device which delivered the event to Drogue Cloud. The payload is defined by the following schema: Schema of connection event payload type: object properties: connected: type: boolean description: Whether the device is connected or not required: - connected Example of connection event payload {\"connected\": true} Whenever a change is made to a device in the registry, a \"device change event\" is sent out. Also see: * Synthetic data Attribute Type Required Description Standard attributes specversion String X Always 1.0. type String X Always io.drogue.registry.v1. id String X A unique event ID. subject String X Always devices. time String (RFC3339) X The time the event was generated. Extensions instance String X A unique identifier of the Drogue Cloud instance on this connection. application String X The name of the application the device belonged to. applicationuid String X The unique ID of the application the device belonged to. device String X The name of the device the event originated from. deviceuid String X The unique ID of the device the event originated from. sender String X The name of the device which delivered the event to Drogue Cloud. senderuid String X The unique ID of the device which delivered the event to Drogue Cloud. The event doesn’t carry any payload. It is just an information that the device changed. Commands are similar to evens coming from a device, just they are the other way round. Internally commands are also represented as Cloud Events. But although internally commands are CloudEvents, current integrations only offer more opinionated APIs for commands. This can be changed in the future, if that is required. So there is current no common representation exposed to the user. Also see: Common concepts - Outgoing commands","title":"Integrations","component":"drogue-cloud","version":"dev","name":"integration","url":"/drogue-cloud/dev/user-guide/integration.html","titles":[{"text":"Incoming events","hash":"incoming_events","id":1},{"text":"Device events","hash":"_device_events","id":2},{"text":"Attributes","hash":"_attributes","id":3},{"text":"Payload","hash":"_payload","id":4},{"text":"Connection events","hash":"_connection_events","id":5},{"text":"Attributes","hash":"_attributes_2","id":6},{"text":"Payload","hash":"_payload_2","id":7},{"text":"Device registry events","hash":"_device_registry_events","id":8},{"text":"Attributes","hash":"_attributes_3","id":9},{"text":"Payload","hash":"_payload_3","id":10},{"text":"Commands","hash":"commands","id":11}]},"39":{"id":39,"text":"Application owners can share their applications with another users. Drogue Cloud defines several roles that can be given to the users. By default, an application have only an owner and no users to it’s member list. Reader : This is the most basic level: read only access. Manager: allows read and write access to the application. This include the reader role as well. Administrator: This role allows to manage the members of the application, deleting the application, plus the above roles. Actions Reader Manager Administrator read devices details ✔️ ✔️ ✔️ Consume application events stream ✔️ ✔️ ✔️ read application details ✔️ ✔️ ✔️ edit application details ❌ ✔️ ✔️ create and edit devices ❌ ✔️ ✔️ delete devices ❌ ✔️ ✔️ Edit application details ❌ ✔️ ✔️ Delete application ❌ ❌ ✔️ Edit application members ❌ ❌ ✔️ The roles are defined per-application, so someone can be administrator for an application and reader for another. If you wish to share your application to the whole world you can add a role to the anonymous user. In Drogue Cloud, the user name to use is an empty string : \"\". There are two ways to manage application members: through the \"Administration\" tab in the console (from the application details page), or with drg. Here we’ll show a few examples unsing drg: Add a reader and an administrator: drg add member --role reader --app drg add member --role admin --app With drg, member and members can be used interchangeably. Remove a member : drg delete member --app You can also edit the members object with : drg edit member and make changes manually. Finally, drg can list members for an application with drg get members. A user can be defined once in an application’s members list. The owner hae the same rights as the \"admin\" role, with the added ability to transfer the ownership to another user. To initiate an ownership transfer, you can go to the \"Administration\" tab in the console, or use drg: drg transfer init --app The receiving user can acccept the transer with: drg transfer accept The owner of an application stays the owner until the transfer is accepted by another user. It is possible to cancel an initated (but not completed) transfer with : drg transfer cancel","title":"Application sharing","component":"drogue-cloud","version":"dev","name":"management-app-members","url":"/drogue-cloud/dev/user-guide/management-app-members.html","titles":[{"text":"Members roles","hash":"_members_roles","id":1},{"text":"Add users to an application","hash":"_add_users_to_an_application","id":2},{"text":"Application ownership","hash":"_application_ownership","id":3}]},"40":{"id":40,"text":"Like HTTP, MQTT is \"just\" a protocol, which defines how events or messages are being transported over the wire. On top of that, one needs to define an API. Some might disagree and say that you can just publish anything to an MQTT broker. However, implicitly, you have to agree (even when only working with your own components) to a data format and topic structure. As Drogue Cloud is payload agnostic, we don’t interfere or interpret the payload itself[1]. However, we sometimes need to interpret the metadata of events and messages, like the topic a client publishes or subscribes to. The MQTT endpoint supports multiple dialects. However, it also needs to know which dialect a device \"speaks\". Using MQTT v5, it would be easy to add some property during the connection phase, to indicate which dialect the device expects. However, as MQTT v3.1.1 still seems to be the dominant protocol version, that isn’t possible[2]. That is why Drogue Cloud keeps this configuration as part of the application or device configuration. The advantage of that is also, that it can be centrally managed. Just assume some protocol setting of your device, which is somewhere out in the field, is wrong. Being able to correct that in the cloud, might be beneficial. The configuration for MQTT dialects is located in either the application or device resource at .spec.mqtt.dialect. The configuration of a device will override the configuration of an application. If neither the application nor the device has any configuration, the drogue/v1 dialect will be used. spec: mqtt: dialect: type: plainTopic (1) devicePrefix: true (2) 1 Selects the dialect. 2 Additional options on the same level. The follow section describes the configuration of the different dialects. To get an understanding of the different dialects themselves, see Protocol dialects. The type ID for this dialect is: drogue/v1. This dialect does not have any additional options. The type ID for this dialect is: plainTopic. Option Type Default Description devicePrefix boolean false Whether the first segment in the topic is interpreted as device ID. 1. With a few exceptions 2. At least all ways of stuffing information in e.g. credentials fields somehow feels wrong","title":"MQTT dialects","component":"drogue-cloud","version":"dev","name":"management-mqtt","url":"/drogue-cloud/dev/user-guide/management-mqtt.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Basic configuration","hash":"_basic_configuration","id":2},{"text":"Dialects","hash":"_dialects","id":3},{"text":"Drogue V1","hash":"_drogue_v1","id":4},{"text":"Plain topic","hash":"_plain_topic","id":5}]},"41":{"id":41,"text":"One core functionality of Drogue Cloud is to take device events and send deliver them to a Kafka topic, so that interested application can consume them. In that process, Drogue Cloud takes care of device connectivity, authentication & authorization, and some very basic validation steps. However, most of that processing is payload agnostic. By default, payload and metadata just forwarded as is. In some cases it would be helpful though, if metadata or payload could be altered of verified with additional logic during the reception of the event. What might come in handy in situation like this, is a rule based engine, which allows inspecting metadata and payload and decide how to process the event further. Rejecting, diverting, or altering it in the process. However, such a system can get out of hand pretty quickly, and we do not want to re-invent the wheel. A lot of systems like that already exists: Apache Camel for example, to mention just one of them. Also, allowing a user to configure a complex piece of logic for a cloud side, \"as a service\" platform can be rather tricky. Just imagine someone would validate \"what the next matching bitcoin hash\" is. It would be difficult to measure and project the costs caused by user provided validations. So Drogue Cloud tries to strike a balance. Support very simple and stateless operations, while allowing to integrate for more complex operations, hosted by the user. Just two quick examples: Drogue Cloud does offer a way to overwrite the \"content type\" attribute for an event if its channels matches a specific value. But for letting an AI/ML model categorize values of an even, we allow passing the event into an external endpoint, and consume it back as the response, before passing it along the chain. This way you can spin up your own (optionally Knative serving based) endpoint, and do complex calculations there, but do all of this as part of the Drogue Cloud device facing endpoints. The functionality is configured as part of the \"application\" resource in the .spec.publish path. The configuration consists of two main parts: rules which select when operations get triggered what operations should be performed when a rule matches Overall, even pre-processing will iterate over all rules, as defined in the order of the configuration and check if a rule matches. If it does, its operations will be executed. The outcome of an operation can one of: continue, accept, reject, drop. When the outcome is to continue, the event might have been modified, and the processing will continue with the next rule to check. When the outcome is to accept, the event might have been modified, the processing will stop, and the event will directly be delivered to the final destination. When the outcome is to reject, the event will be rejected as invalid, responding this condition to the device that sent the event, in case the device waits for a response. When the outcome is to drop, the event will be silently dropped. Towards the device, the operation is still successful. spec: publish: rules: - when: {} (1) then: [] (2) 1 One object which defines if the rule should be activated 2 An array of operations which should be executed when the rule matches You can use the isChannel matcher. For example: when: isChannel: my-channel (1) 1 The name of the channel which the event must match You can invert the outcome of a check using the not operation: when: not: isChannel: my-channel This checks if \"the channel is not `my-channel`\". A rule that always matches is always. when: always You can also turn this into \"never\" using the following: when: not: always It is also possible to use multiple checks and combined them with and or or: when: or: - isChannel: foo - isChannel: bar - isChannel: baz Which would match if the channel is either foo, bar, or baz. When an or or and check has no sub-checks, it evaluates to false. Operations are part of the then field, which is an array. All operations will be executed in order. The outcome of an operation may influence the processing of the next. If the array is empty, then simply no operations will be executed. You can silently drop the event using drop: then: drop Or accept the event directly, and stop processing the following operations and rules: then: - break Rejecting the event will also stop processing, but return the provided reason back to the sender: then: - reject: This is not right It also is possible to set or remove cloud event attributes or extensions. Cloud event attributes are similar to extensions, they are just extensions that are part of the official specification and thus are treated differently. You can set or remove arbitrary extensions using: then: - setExtension: (1) name: my-ext value: my-value - removeExtension: my-other-ext (2) 1 Set extension my-ext to value my-value 2 Remove extension my-other-ext Setting an extension which already exists will overwrite the value. Removing an extension that does not exist is a no-op. As attributes are somewhat special it is only possible to set some of them. The following attributes are supported and can be set similar to the setExtension operation: datacontenttype - The content type of the event, e.g. application/json dataschema - The schema of the data, e.g. some JSON schema if the content type is JSON subject - The subject of the event, originally the \"channel\" information type - The type of the event, originally io.drogue.event.v1 This will send an event to an external endpoint and wait for the response. HTTP status code Outcome Description 200, 204 Continue The event can continue processing 202 Accept The event gets directly accepted. No further procesing is performed. 400..=499 Reject The event gets rejected. If the response payload is JSON, and contains a .reason field, that value of that field is used as rejection cause. any other This will the processing with a server side error. Devices are encouraged to re-try later. then: - validate: endpoint: {} (1) request: (2) type: cloudEvent (3) mode: binary # or structured (4) 1 Endpoint configuration as described in External endpoints 2 Parameters for the outgoing request. Defaults to binary encoded cloud event. 3 Selects the type of the encoding 4 The cloud events mode: binary or structured This will send an event to an external endpoint and wait for the response. The headers and body of the response will be used as the metadata and payload of the new event. then: - enrich: endpoint: {} (1) request: (2) type: cloudEvent (3) mode: binary # or structured (4) response: (5) type: cloudEvent (6) 1 Endpoint configuration as described in External endpoints 2 Parameters for the outgoing request. Defaults to binary encoded cloud event. 3 Selects the type of the encoding 4 The cloud events mode: binary or structured 5 Parameters for the incoming response. Defaults to binary encoded cloud event. 6 The response type The response can be one of: cloudEvent - A cloud event (binary of structured). raw - Only use the response body as payload, keep the metadata. assumeStructuredCloudEvent - Assume the response body contains a structured cloud event, with attributes/extensions as part of the root level. However, the response content type is ignored, although it normally must be application/cloudevents+json; charset=UTF-8. This can be used for broken cloud events serialization.","title":"Event pre-processing","component":"drogue-cloud","version":"dev","name":"management-rules","url":"/drogue-cloud/dev/user-guide/management-rules.html","titles":[{"text":"Scope","hash":"_scope","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Rules","hash":"_rules","id":3},{"text":"Checking for a channel","hash":"_checking_for_a_channel","id":4},{"text":"Inverting","hash":"_inverting","id":5},{"text":"Always matching","hash":"_always_matching","id":6},{"text":"And/Or","hash":"_andor","id":7},{"text":"Operations","hash":"_operations","id":8},{"text":"Drop / Accept / Reject","hash":"_drop_accept_reject","id":9},{"text":"Setting/Removing attributes/extensions","hash":"_settingremoving_attributesextensions","id":10},{"text":"Externally validate an event","hash":"_externally_validate_an_event","id":11},{"text":"Externally enrich an event","hash":"_externally_enrich_an_event","id":12}]},"42":{"id":42,"text":"The following sections will guide you through the basic management capabilities of Drogue Cloud. All management operations are available through the API. However, for an easier getting started experience, the following examples will use the command line tool drg for performing the operations. All following examples require that you are already logged in to a Drogue Cloud cluster using the command line tool drg. An application is the container for devices.A user can have multiple applications, but each device belongs to a single application. Create a new application using the following command: drg create app my-app This will create a new application named my-app. If the application name is already used, you will receive an error, as application names are unique. Applications are defined by a JSON structure. It is possible to edit this structure in YAML format (for easier editing) using the following command: drg edit app my-app This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing application can be deleted using the following command: drg delete app my-app Deleting an application may be delayed, as first all devices which require to be cleaned up will be processed. Once this is finished, the application might require cleanup too. Only once all resources are properly cleaned up, the application will be actually deleted. As devices belong to an application, you need to create an application first. The following commands will explicitly select the application by providing the --app argument. You can however use drg config set-default-app, to set a default application and omit the --app argument. A new device is being created using the following command: drg create device --app my-app my-device-1 This will create my-device-1 as part of my-app. In most cases a device will require additional information, like access credentials or gateway assignments. You can provide initial configuration using the --spec argument: drg create device --app my-app my-device-1 --spec '{\"credentials\": {\"credentials\":[{ \"pass\": \"foobar\" }]}}' The --spec argument accepts a JSON string of the full \"spec\" section of the device. You can edit the device configuration in YAML the same as the application: drg edit device --app my-app my-device-1 This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing device can be deleted using the following command: drg delete device --app my-app my-device-1 If a device requires any cleanup, the device will be first marked as deleted, the cleanup will be processed, and then the device will be deleted. It is possible to set a password as access credentials. This way, when connecting, the username will be the device name. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - pass: my-password (1) 1 One credential entry of type \"password\". You can also use hashed passwords. For this, you need to specify the hash algorithm: metadata: name: device # … spec: # … credentials: credentials: - pass: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (1) 1 One credential entry of type \"password\" as \"bcrypt\" hash. See Supported hashes for a list of supported password hashes. It is also possible to set a username and password as credentials. In this case, the device ID must be transmitted through an alternate way, in order to look up the device. The provided username/password combination will then be checked against the configured username/password combination. The way the device name is transmitted to the endpoint depends on the capabilities of the protocol endpoint. For example, using HTTP, the device name can be provided as an additional query parameter. You have created a device Configure the device, adding a password credentials entry: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bar (3) 1 The device name 2 The username 3 The plain text password You can also use hashed passwords, instead of plain text: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (3) 1 The device name 2 The username 3 The bcrypt hashed password See Supported hashes for a list of supported password hashes. If you want to use the username only for authenticating your device, without the need to provide an additional device identifier, you can use \"unique usernames\". These usernames are unique per application. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - user: username: device-user password: bar unique: true (1) 1 Setting the value to true makes the entry a unique username entry. As described in Setting username/password credentials, you can use hashed passwords too. Every device can act as a gateway for another device. However, it must be granted the permission to act on behalf of that other device. The way this is done, is by adding this information to the device connects through a gateway. You have created two devices. One that should act as gateway (named gateway in the following steps). One that should act as the actual device (named sensor in the following steps). The gateway device has access credentials configured, so that the gateway can connect to the cloud. In the configuration of the actual device, select the devices that can act as a gateway: metadata: name: sensor # … spec: # … gatewaySelector: matchNames: - gateway It is possible to use one or more devices as gateway. It is possible to store passwords either plain text or hashed. The following hash types are currently supported: bcrypt – Bcrypt hash sha512 – SHA512 crypt (Scheme ID 6)","title":"Managing applications and devices","component":"drogue-cloud","version":"dev","name":"management","url":"/drogue-cloud/dev/user-guide/management.html","titles":[{"text":"Applications","hash":"applications","id":1},{"text":"Creating a new application","hash":"_creating_a_new_application","id":2},{"text":"Modifying an application","hash":"_modifying_an_application","id":3},{"text":"Deleting an application","hash":"_deleting_an_application","id":4},{"text":"Devices","hash":"devices","id":5},{"text":"Create a new device","hash":"_create_a_new_device","id":6},{"text":"Modifying a device","hash":"_modifying_a_device","id":7},{"text":"Deleting a device","hash":"_deleting_a_device","id":8},{"text":"Setting password credentials","hash":"_setting_password_credentials","id":9},{"text":"Pre-requisites","hash":"_pre_requisites","id":10},{"text":"Procedure","hash":"_procedure","id":11},{"text":"Setting username/password credentials","hash":"setting_username_password","id":12},{"text":"Pre-requisites","hash":"_pre_requisites_2","id":13},{"text":"Procedure","hash":"_procedure_2","id":14},{"text":"Setting username/password credentials (unique username)","hash":"_setting_usernamepassword_credentials_unique_username","id":15},{"text":"Pre-requisites","hash":"_pre_requisites_3","id":16},{"text":"Procedure","hash":"_procedure_3","id":17},{"text":"Setting X.509 client certificate credentials","hash":"_setting_x_509_client_certificate_credentials","id":18},{"text":"Configuring a gateway device","hash":"_configuring_a_gateway_device","id":19},{"text":"Pre-requisites","hash":"_pre_requisites_4","id":20},{"text":"Procedure","hash":"_procedure_4","id":21},{"text":"Hashed passwords","hash":"_hashed_passwords","id":22},{"text":"Supported hashes","hash":"supported-password-hashes","id":23}]},"43":{"id":43,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, is where device connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"0.1","name":"concepts","url":"/drogue-cloud/0.1/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"44":{"id":44,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints. Protocol normalization based on Cloud Events and Knative eventing. Management of devices and their credentials and properties through an API. A web-console and a command-line client to manage devices and data flows. APIs for cloud-side application integration. It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Apache Kafka – For streaming events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/index.html","titles":[]},"45":{"id":45,"text":"In order to make it possible to run Drogue Cloud in other environments, we provide a drogue-cloud-server binary to run a single or multiple Drogue Cloud services. This does not require Kubernetes or containers to run. You do need to have running instances of Kafka, Keycloak and PostgreSQL in order to use this form of deployment. The binary assumes the following services being available locally by default: Kafka bootstrap: localhost:9092 Keycloak: Url: http://localhost:8080 Admin user: admin Admin password: admin123456 PostgreSQL Database name: drogue Database user: admin Database password: admin123456 Have a look at the --help options for other ways to configure it. You thought you didn’t need containers, HAH! Well, to make it simpler to get the prerequisites running, here is a docker compose file for running them and making them available at the above ports: version: \"3.9\" services: postgres: image: docker.io/bitnami/postgresql:13 environment: - POSTGRESQL_USERNAME=admin - POSTGRESQL_PASSWORD=admin123456 - POSTGRESQL_DATABASE=drogue ports: - \"5432:5432\" kafka: image: docker.io/moeenz/docker-kafka-kraft:latest ports: - \"9092:9092\" environment: - KRAFT_CONTAINER_HOST_NAME=localhost keycloak: image: docker.io/jboss/keycloak:13.0.1 environment: - KEYCLOAK_USER=admin - KEYCLOAK_PASSWORD=admin123456 - DB_VENDOR=h2 ports: - \"8080:8080\" Make sure all dependencies are running correctly. To start the drogue server, run: drogue-cloud-server run --enable-all This will perform the following steps: Migrate database schema Create Keycloak OIDC clients Start all drogue services You should be able to connect to the local drogue instance using the drg client: drg login http://localhost:10001 To enable TLS for the protocol endpoints, you can pass the certificate and key using --server-cert and --server-key.","title":"Deploying on bare metal","component":"drogue-cloud","version":"0.1","name":"bare-metal","url":"/drogue-cloud/0.1/deployment/bare-metal.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"(Optional) Starting pre-requisites","hash":"_optional_starting_pre_requisites","id":2},{"text":"Running","hash":"_running","id":3},{"text":"Enabling TLS","hash":"_enabling_tls","id":4}]},"46":{"id":46,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind requires to execute the following command: kind create cluster --config=deploy/kind/cluster-config.yaml Ingress controller required The deployment requires a Kubernetes ingress controller to be deployed. When using Kind, the deployment script will automatically deploy the NGINX Ingress Controller, but you still need to export the ports to allow access. Using the command above, will already use a configuration which takes care of that. For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need a working Ingress Controller. For OpenShift, you can use Routes. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"0.1","name":"cluster","url":"/drogue-cloud/0.1/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"47":{"id":47,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the makefile target deploy: make deploy If you built custom images, and pushed them to a container repository, you can deploy them using the following command: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy The makefile actually uses the installer script scripts/drgadm internally. It only passes in the right arguments, so that the installer will install images from a different registry, or use a different tag. By default, the installer scripts, even on the main branch, will install a tagged version. Sometimes tagged versions are not yet available on the container registry, and thus, the installation may fail. It is therefore recommended to install \"latest\" images using the make deploy command.","title":"Deploying from the repository","component":"drogue-cloud","version":"0.1","name":"development","url":"/drogue-cloud/0.1/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3},{"text":"Using the installer script for development","hash":"_using_the_installer_script_for_development","id":4}]},"48":{"id":48,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/deployment/index.html","titles":[]},"49":{"id":49,"text":"Most of the deployment of Drogue Cloud uses Helm in combination with kubectl for installing dependencies. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. Pure Helm based installation While we describe the installation of Drogue Cloud using our installer script, it is also possible to install it using just Helm charts. In fact, the installer uses an opinionated value set for the Helm charts, and you can simply create your own wrapper chart, tweaking the values as needed. This is what we do for our public sandbox too. The installer script is just there to get you started quickly. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/latest There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Additionally, it installs Knative and an example application and can install digital twin feature as well. Deployment of these components can be configured using installer arguments as explained below. Run the installer script ./script/drgadm deploy, adding the options appropriate for your setup. You can use the -c argument to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: ./script/drgadm deploy -c kind The deploy command of drgadm supports the following argument -k or INSTALL_DEPS Don’t install any dependency by default. -s Set additional Helm values. May be repeated multiple times. -m Minimize: Reduces the default resource requests to allow deploying on more constrained environments. -d or DOMAIN Manually provide the application DNS domain. -c or CLUSTER Specify the cluster type (any of minikube, kind, openshift, kubernetes). -p Adds an additional Helm value file, named deploy/helm/profiles/.yaml. -t Helm installation timeout (default: 15m) -n or DROGUE_NS Changes the target Drogue IoT namespace. -T Install digital twin feature. -e Don’t install examples. -M Deploy metrics Example: Install Drogue Cloud on kind cluster without dependencies. ./script/drgadm deploy -c kind -k The -k argument will skip installing all dependencies. If you want to install of just some of the dependencies (like Strimzi or Keycloak) yourself, you can opt out of installing them by the script. The installer has a few additional options which are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env INSTALL_STRIMZI=false ./script/drgadm deploy Variable Name Default value Description INSTALL_STRIMZI ${INSTALL_DEPS} Control the installation of Strimzi. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. By default the example dashboard is installed by the script. You can turn it off by using -e argument. Additionally, digital twin feature can be installed by specifying -T argument. Knative will be installed only if either examples or digital twin feature are installed. To deploy minimal installation without any examples (and Knative) use: ./script/drgadm deploy -e You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls, mqtt-endpoint-tls and coap-endpoint-tls exist. If they don’t it will create them using generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can do that by running shell commands similar to these: kubectl -n drogue-iot create secret tls http-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - kubectl -n drogue-iot create secret tls mqtt-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - kubectl -n drogue-iot create secret tls coap-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - Where $PATH_TO_CERT should point to the path location of your certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"0.1","name":"installer","url":"/drogue-cloud/0.1/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Install additional examples","hash":"_install_additional_examples","id":7},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":8},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":9},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"50":{"id":50,"text":"Specifying -M during installation process will install Prometheus and Grafana allowing you to monitor your deployment. You can do that both using installer: ./script/drgadm deploy -M Or during development: env DEPLOY_ARGS=\"-M\" make deploy You can find out the URL of the dashboard by running the drgadm script: env METRICS=true scripts/drgadm examples It should print something like: View the metrics dashboard: ---------------------------- * Login to Grafana: https://metrics.192.168.64.131.nip.io * Default credentials are 'admin/admin123456' if not configured differently You can set values of the drogue-cloud-metrics Helm chart in order to configure various aspects of its deployment. For example, the following will ./script/drgadm deploy -M -s drogueCloudMetrics.grafana.adminPassword=654321nimda will change the password for accessing Grafana dashboard.","title":"Monitoring the deployment","component":"drogue-cloud","version":"0.1","name":"monitoring","url":"/drogue-cloud/0.1/deployment/monitoring.html","titles":[{"text":"Deploying","hash":"_deploying","id":1},{"text":"Using","hash":"_using","id":2},{"text":"Configuring","hash":"_configuring","id":3}]},"51":{"id":51,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ helm – Helm CLI You will need a Kubernetes cluster in order to deploy Drogue Cloud. For running outside Kubernetes, have a look at the bare metal deployment. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"0.1","name":"pre-reqs","url":"/drogue-cloud/0.1/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"52":{"id":52,"text":"Tracing using Jaeger tracing can be enabled for Drogue Cloud during deployment. In the Helm charts, set the value: global: drogueCloud: jaeger: enabled: true By default, tracing is disabled.","title":"Tracing","component":"drogue-cloud","version":"0.1","name":"tracing","url":"/drogue-cloud/0.1/deployment/tracing.html","titles":[{"text":"Helm Charts","hash":"_helm_charts","id":1}]},"53":{"id":53,"text":"This is a guide for developers, which would like to work on Drogue Cloud. In any case, you will need: Linux, Mac OS X, or Windows on an AMD64 platform (aka x86_64) Mac OS X in ARM64 (M1, …) seems to be tricky, but should work. Podman or Docker Windows containers will not work, you need to use Linux based containers, and again x86_64. Some tools git GNU Make npm kubectl HTTPie 2.2+ A lot of cores, patience, memory, and disk space. Rust+ – By default the build will run inside a container image, with Rust included. So you don’t necessarily need to install Rust on your local machine. However, having Rust installed might come in handy at some point. If you want to use an IDE, that might require a Rust installation. Or if you want to quickly run tests, maybe from inside your IDE, then this will require Rust as well. + In any case, you need to be sure that you install at least the version of Rust mentioned above. If you installed Rust using rustup and default options, then performing an upgrade should be as easy as running rustup update. Kubernetes - Some form of Kubernetes cluster Minikube is what seems to work best for development, and is easy to get started with. Kind also works, uses less resources, but is less tested. OpenShift also works and make several things easier (like proper DNS names and certs), but is also more complex to set up. An IDE – Whatever works best for you. Eclipse, Emacs, IntelliJ, Vim, … [1] should all be usable with this project. We do not require any specific IDE. We also do not commit any IDE specific files either. There are different ways to install the required dependencies on the different operating systems. Some operating systems also might require some additional settings. This section should help to get you started. Use an \"update to date\" version of Fedora. Install the following dependencies: sudo dnf install curl openssl-devel npm gcc gcc-c++ make cyrus-sasl-devel cmake libpq-devel postgresql podman Assuming you have Windows 10 and admin access. Install: Git for Windows GNU Make 4.x install mingw-w64, as described here: https://code.visualstudio.com/docs/cpp/config-mingw or, install \"GNU make\" using Chocolatey Docker for Windows Enable WSL2 Needs more testing Most of the required tools you can install using [brew](https://brew.sh/) package manager, e.g. brew install git make Using OpenSSL and Cyrus SASL libraries native is still work in progress, so you should use container build for the time being as described below. While the build is based on cargo, the build is still driven by the main Makefile, located in the root of the repository. By default, the cargo build running inside a build container. This reduces the number of pre-requisites you need to install, and makes it easier on platforms like Windows or Mac OS X. To perform a full build execute: make build This builds the cargo based projects, the frontend, and the container images. Builds are done using Docker or Podman container runtimes. Podman is preferred if it is present on the system. However, it is required that Podman supports bind mounts feature properly which is not the case for all platforms today. In that case you can force Docker runtime with CONTAINER=docker make build To run all tests: make test When using podman, you currently cannot use make test. You need to revert to make container-test, see below. This runs only the unit tests and integration tests. There is also a system test-suite at https://github.com/drogue-iot/drogue-cloud-testing which tests a running deployment. If you have a full build environment on your machine, you can also execute the tests on the host machine, rather than forking them off in the build container: make container-test You can also run cargo tests directly from your IDE. How this works, depends on your IDE. However, as tests are compiled and executed on the host machine, the same requirements, as when running tests on the host machine, apply (see above). The locally built images can be published with the Makefile as well. For this you need a location to push to. You can, for example use [quay.io](https://quay.io). Assuming your username on quay.io is \"rodney\", and you did log in using docker login, then you could do: make push CONTAINER_REGISTRY=quay.io/rodney Before you can run the deployment, you will need to have access to a Kubernetes cluster. You can run local cluster using minikube. Make sure that your minikube cluster is started with ingress addon and that you run tunnel in a separate shell minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress # in a separate terminal, as it keeps running minikube tunnel Once the instance is up, and you have ensured that you can access the cluster with kubectl, you can run the following command to run the deployment: make deploy CONTAINER_REGISTRY=quay.io/rodney If you need to pass additional arguments to the deploy script, you can use DEPLOY_ARGS environment variable like: env INSTALL_STRIMZI=false DEPLOY_ARGS=\"-f deploy/examples/managed_kafka.yaml\" make deploy Helm charts are maintained in the separate repository: https://github.com/drogue-iot/drogue-cloud-helm-charts They are however included as a git submodule at the deploy/helm path. A deploy target will initialize the submodule. If you wish to do it manually run: git submodule update --init Also, to pull changes into the existing workspace run: git submodule foreach git pull origin main You will need to have trunk, npm and sass installed, as it will drive parts of the build. trunk can be installed using cargo: cargo install trunk Installing sass can be done using the following command: npm install -g sass@1.52.3 The frontend needs a way to detect which backend to use. This is done by loading an initial backend.json from the location of the frontend. For a local development, this file can be provided at console-frontend/dev/endpoints/backend.json or be overridden by console-frontend/dev/endpoints/backend.local.json. But default files with .local. in that directory will not be committed to git. The default backend.json is pre-configured to use the \"local server\" mode, described in the next section. The simplest way to run the console-backend is to use [drogue-cloud-server](https://github.com/drogue-iot/drogue-cloud/tree/main/server). cd server cargo run -- --enable-all Once you have it running (bound to localhost which is the default), you can start the console-frontend in the development mode: cd console-frontend trunk serve You can also run the frontend with a backend in the cloud (or local cluster, e.g. minikube). To do so, you can create a console-frontend/dev/endpoints/backend.local.json file and populate it with the API and SSO urls of your drogue instance. For example (devbox): { \"url\": \"https://api-drogue-dev.apps.wonderful.iot-playground.org/\", \"openid\": { \"client_id\": \"drogue\", \"issuer_url\": \"https://sso-drogue-dev.apps.wonderful.iot-playground.org/realms/drogue\" } } This model doesn’t work if your frontend will use newer backend APIs, which are not yet deployed in the cloud. 1. This list is sorted in alphabetical order, not in the order of any preference.","title":"Developer Guide","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/developer-guide/index.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"Optional requirements","hash":"_optional_requirements","id":2},{"text":"Operating system","hash":"_operating_system","id":3},{"text":"Fedora","hash":"_fedora","id":4},{"text":"Windows","hash":"_windows","id":5},{"text":"Mac OS","hash":"_mac_os","id":6},{"text":"Building","hash":"_building","id":7},{"text":"Testing","hash":"_testing","id":8},{"text":"Running test on the host","hash":"_running_test_on_the_host","id":9},{"text":"IDE based testing","hash":"_ide_based_testing","id":10},{"text":"Publishing images","hash":"_publishing_images","id":11},{"text":"Deploying","hash":"_deploying","id":12},{"text":"Kubernetes instance","hash":"_kubernetes_instance","id":13},{"text":"Run the deployment","hash":"_run_the_deployment","id":14},{"text":"Helm charts","hash":"_helm_charts","id":15},{"text":"How to …","hash":"_how_to","id":16},{"text":"… work on the frontend","hash":"_work_on_the_frontend","id":17},{"text":"Backend detection","hash":"_backend_detection","id":18},{"text":"Running with a local server","hash":"_running_with_a_local_server","id":19},{"text":"Running with a cloud backend","hash":"_running_with_a_cloud_backend","id":20}]},"54":{"id":54,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and a TimescaleDB instance, which is set up in a way that temperature readings are automatically stored in the TimescaleDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and TimescaleDB would be a \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"0.1","name":"addons","url":"/drogue-cloud/0.1/introduction/addons.html","titles":[{"text":"Grafana & TimescaleDB","hash":"_grafana_timescaledb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"55":{"id":55,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"0.1","name":"control","url":"/drogue-cloud/0.1/introduction/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"56":{"id":56,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to leverage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrated as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authenticates and authorizes devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messages. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) consists of a payload, which contains metadata (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Persisting messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or if there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Applications also have the ability to send back messages to the device, called commands. Commands are best-effort, and are not guaranteed to be delivered. If it is important to the application that a command got delivered, it needs to implement a reconciliation process on top of the command functionality. This is necessary as it isn’t always clear if and how it makes sense to buffer commands. Assuming a decision is made, and a command is executed. It is not necessarily correct to buffer the command for a longer period of time, and then just resend it. Also, just because a command was delivered to a device attached to Drogue Cloud, doesn’t mean the action of the command was actually performed. A command could get lost in the next step of the processing. Therefore, it is important to have some feedback signal end-to-end. Some commands also cannot simply be retried, as that could be interpreted by a receiving device as a new request to process the command. Therefore, doesn’t Drogue Cloud enforce any semantics on commands, and let the application deal with the case of undelivered commands. In the future, we might add some add-on functionality, which might provide a more opinionated approach, and help implement common use-cases out of the box. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default, we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"realm\" here","title":"Data plane","component":"drogue-cloud","version":"0.1","name":"data","url":"/drogue-cloud/0.1/introduction/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Commands","hash":"_commands","id":4},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":5}]},"57":{"id":57,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerful compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"0.1","name":"devices","url":"/drogue-cloud/0.1/introduction/devices.html","titles":[]},"58":{"id":58,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controlling actuators. Of course this diagram over-simplifies the problem. And still, connecting to a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit of this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These applications are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Introduction","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/introduction/index.html","titles":[]},"59":{"id":59,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Acting on device change events, operators will reconcile the desired state of applications and devices, with internal or external services. The topic operator creates Kafka topics as required by the applications. The Things Network operator (TTN operator) sets up a connection between Drogue Cloud and a TTN V3 instance. It will also synchronize devices from Drogue Cloud to TTN. Protocol endpoints, used for devices to communicate with the system. A general purpose CoAP endpoint, providing a Drogue IoT specific API. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"0.1","name":"services","url":"/drogue-cloud/0.1/introduction/services.html","titles":[{"text":"Device Registry","hash":"_device_registry","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Operators","hash":"_operators","id":3},{"text":"Topic operator","hash":"_topic_operator","id":4},{"text":"The Things Network operator","hash":"_the_things_network_operator","id":5},{"text":"Endpoints","hash":"_endpoints","id":6},{"text":"CoAP endpoint","hash":"_coap_endpoint","id":7},{"text":"HTTP endpoint","hash":"_http_endpoint","id":8},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":9},{"text":"Command endpoint","hash":"_command_endpoint","id":10},{"text":"Integrations","hash":"_integrations","id":11},{"text":"MQTT Integration","hash":"_mqtt_integration","id":12}]},"60":{"id":60,"text":"This will create a new application, and connect it with The Things Network. You will need create an account at The Things Network. As part of that you will need to: Remember which region you are assigned to (e.g. eu1 for eu1.cloud.thethings.network). Create an API key for this account with the permission to create new applications. Remember the name of the user. Create a new application in Drogue Cloud with the TTN-specific information: drg create application my-ttn-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, must have access to create new applications for the provided owner. 2 The (optional) ID of the application in the TTN system. Defaults to the name of the application in Drogue Cloud. This valid must not be changed. 3 The name of the user owning the application. See Using an organization for details on using an organization instead. 4 The name of region, or a URL to the API backend. This will enable the integration and trigger the reconciliation process. You can also use drg edit app my-ttn-app to change the configuration of an existing application. Taking a look at the TTN console, you should see the new application (my-app-alias in this case), and a webhook named drogue-iot. You can also use an organization, for this you will need to change the owner to explicitly being an organization type: { \"spec\": { \"ttn\": { \"api\": { \"owner\": { \"org\": \"my-org\" (1) }, \"owner\": { \"user\": \"my-user\" (2) }, \"owner\": \"my-user\" (3) } } } } 1 Use an organization named \"my-org\" 2 Use a user named \"my-user\" 3 Use a user named \"my-user\" Deleting an application will delete all devices in Drogue Cloud and the TTN system. When all devices have been deleted, the application itself will be deleted in both Drogue Cloud and the TTN system. Soft deletion Applications in The Things Network are only \"soft deleted\". This implies that the name of the application cannot be re-used. So it is not possible to re-create or re-use the applicatio name. However you can use an alternate application ID in TTN by setting the .spec.ttn.api.id field to an unused value.","title":"Managing applications","component":"drogue-cloud","version":"0.1","name":"app","url":"/drogue-cloud/0.1/ttn/app.html","titles":[{"text":"Setting up a new application","hash":"_setting_up_a_new_application","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Using an organization","hash":"_using_an_organization","id":4},{"text":"Deleting an application","hash":"_deleting_an_application","id":5}]},"61":{"id":61,"text":"This will register a new device, and synchronized it with The Things Network. You will need the following information for your device: Device EUI Application/Join EUI Application Key Supported LoRa capabilities Create a new device in Drogue Cloud with TTN specific information: drg create --app my-ttn-app device my-ttn-device-1 --spec '{ \"ttn\": { \"app_eui\": \"0123456789ABCDEF\", \"app_key\": \"0123456789ABCDEF...\", \"dev_eui\": \"0123456789ABCDEF\", \"frequency_plan_id\": \"...\", (1) \"lorawan_phy_version\": \"...\", (2) \"lorawan_version\": \"...\" (3) } }' 1 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ 2 An ID of the TTN supported LoRa versions, e.g. PHY_V1_0 3 An ID of the TTN supported LoRa version, e.g. MAC_V1_0 You can also use drg edit device --app my-ttn-app my-ttn-device-1 to change the configuration of an existing device. When you delete a device in Drogue Cloud, it will also be deleted in the TTN system. If you want to delete the device in TTN, but keep it in Drogue Cloud, then you can simply remove or rename the .spec.ttn section.","title":"Managing devices","component":"drogue-cloud","version":"0.1","name":"device","url":"/drogue-cloud/0.1/ttn/device.html","titles":[{"text":"Setting up a new device","hash":"_setting_up_a_new_device","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Deleting a device","hash":"_deleting_a_device","id":4},{"text":"Disconnecting a device","hash":"_disconnecting_a_device","id":5}]},"62":{"id":62,"text":"Drogue IoT Cloud has can integrate with The Things Network (TTN). Applications and devices managed in the Drogue IoT device registry can be synced to the TTN system. This includes automatically connecting both systems using a Drogue cloud gateway device, to receive messages from LoRa devices through the TTN system. The integration is meant to be configured on a per-application level, so that normal users of Drogue Cloud can configure their own integration, using their own TTN account. There is no system-wide synchronization. The integration works with V3 of the TTN API. Earlier versions are not supported. The integration currently supports: Creating applications in The Things Network. Creating a gateway device in Drogue Cloud. Configuring the credentials for this gateway device using a randomized password- Creating an application instance on the TTN side. Creating a webhook for this application, connecting the TTN side with Drogue Cloud, using the created gateway device. Creating devices in The Things Network. Authorizing the TTN gateway device in Drogue Cloud for this device Creating the device on the TTN side Cleaning up when resources get deleted Deleting applications Deleting an application in Drogue Cloud, or disabling the TTN integration for a Drogue Cloud application, will also delete the application in TTN. However, The Things Network only soft deletes applications. The name of the application is still blocked from further use after the deletion. This means that you cannot simply re-create an application with the same name. Drogue Cloud allows you to override the application name on the TTN side, however you should consider twice before actually trigger a delete.","title":"The Things Network integration","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/ttn/index.html","titles":[]},"63":{"id":63,"text":"Environmental Monitoring involves collecting sensor data from a potential wide variety of sensors, and using that data in analysis and making informed decisions. Different sensor types may need to send data to the monitoring system using different protocols. Some are able to connect through a gateway in close proximity, while others may connect directly. Sensor on-boarding and maintenance requires good integrations with existing resource management systems. There are two main business applications in this example: A forecasting system which will provide alerts when the trained forecasting model predicts a dangerous level of pollution. A sensor on-boarding service that is used to configure new sensors added to the system. The main data center, which can be on-premise or in the cloud, runs a Kubernetes cluster with Drogue Cloud and the business applications. All stateful systems uses managed services to simplify operations of the system. The following Drogue Cloud features are used: Using the connectivity layer to supporting multiple protocols for ingesting data RESTful APIs for integrating device management with existing systems Managing Edge gateways operating system and software Streaming APIs for consuming sensor data using MQTT or WebSockets Using managed or external stateful services for storage Sensors use a combination of networks to send data to Drogue Cloud. Some areas that require long range coverage use a LoRaWAN network, others use the cellular network. Some sensors are restricted to a small area, and maybe use mesh networks such as Thread or Bluetooth Mesh in combination with a connected gateway. Some sensors may operate require gateways to be placed in closer proximity to the sensors. Using Flotta, gateways can be centrally managed in the cloud, and the workloads running on the gateway (such as a LoRaWAN gateway, or Bluetooth Gateway) can be configured via Drogue Cloud transparently. Drogue Cloud creates the required flotta configuration ensuring that the gateway software is running with the correct configuration, while flotta ensures that the operating system and software is running. The gateways or sensors send their events using the Drogue Cloud endpoints, which support several standard IoT protocols needed by different sensor types. All data is authenticated at the endpoint boundary, using the device registry, before it is handed to the external Apache Kafka service. All sensor data is wrapped in the Cloud Events format, allowing the applications to rely to standardized envelopes for message metadata. The forecasting system consumes events from the MQTT endpoint in Drogue Cloud. The application authenticates using API tokens created by the operations team which allows isolating the forecasting system for different areas or end users. Events received by the application are encoded using the Cloud Events specification, allowing the application to run in a serverless framework like KNative. The forecasting application uses a model that is updated by data scientists. The sensor on-boarding service is involved when a technician installs new sensors, ensuring they are securely paired and connected. The REST APIs allows registering new gateways and sensors, leaving the details of re-configuring the gateways up to Drogue Cloud. More advanced self-test procedures can be performed by using the MQTT/Websocket Integration in combination with the Command API. Drogue Cloud can be configured to use managed services for all stateful components. This reduces a big part of the administrative burden, and makes it easier to deal with disaster recovery and creating clusters in multiple regions. The stateful services used in this example are PostgreSQL for storing device registry and (indirectly via Keycloak) authentication and authorization data, and Apache Kafka for telemetry and events.","title":"Environmental Monitoring","component":"drogue-cloud","version":"0.1","name":"environmental-monitoring","url":"/drogue-cloud/0.1/use-cases/environmental-monitoring.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Sensors","hash":"_sensors","id":2},{"text":"Edge","hash":"_edge","id":3},{"text":"Drogue Cloud","hash":"_drogue_cloud","id":4},{"text":"Applications","hash":"_applications","id":5},{"text":"External Services","hash":"_external_services","id":6}]},"64":{"id":64,"text":"Drogue Cloud has many applications in the world of IoT, but having some specific examples helps bringing the message out there. We’ve got 3 example use cases to highlight the different ways you can deploy Drogue Cloud and the different ways to use it. Environmental Monitoring Smart Factories Predictive Maintenance The intendend audience for these use cases are architects and developers who are evaluating how Drogue Cloud works and which use cases it unlocks in their organization. Got any questions? Join our chat.","title":"Use Cases","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/use-cases/index.html","titles":[]},"65":{"id":65,"text":"Predictive Maintenance involves gathering data about the conditions for physical devices and tools, in order to predict the need for maintenance and prolong the life of the product. In this use case, the following Drogue Cloud features are used: Connectivity layer for normalizing event data and storing in Apache Kafka Firmware updates for bare metal (without operating system) devices Integration with third party: Eclipse Ditto for Digital Twin The data stored in Apache Kafka is consumed by a fault detection model as well as a digital twin system. Digital Twin capability makes it easy to view the current state of devices. Software updates for devices are continuously built and deployed to the fleet. All data related to devices are co-located and controlled by \"the company\". It is desirable that a digital representation of each device is kept up to date for humans to inspect and decide actions. In this scenario, all devices are connected via LTE-M or NB-IoT, using a telco network for connectivity. The devices periodically \"phone\" home with the latest set of metrics with usage patterns and telemetry during their use. In parallel with normal operation, devices also report their current firmware versions, receiving updates if any are available. This data is propagated to Drogue Cloud, which handles authentication and normalizing the data to Cloud Events. Drogue Cloud runs in the same cluster as the database for the device registry and Apache Kafka handling the incoming data from devices. Each device has a digital twin representation that is stored in Eclipse Ditto. All telemetry data is streamed from Apache Kafka into Eclipse Ditto, which consumes the normalized Cloud Events. The digital twin model is kept up to date with both the telemetry data, as well as result from prediction models, so that all state related to the device can be found in a single place. The telemetry data is also streamed by an application applying a machine learned model to detect devices that need replacement. By detecting vibrations during device use, it is able to alert users of the device and the company about part replacements. In order to isolate the firmware management from the regular telemetry traffic, a separate cluster is running the firmware services. Tekton is used to build firmware, while Drogue Ajour and Eclipse Hawkbit are used to deploy firmware updates to devices. When software developers create a fix, this fix is first merged to the main branch and built by Tekton. On a release, a reference to the artifact with the firmware is updated on the Drogue application or device. When a release is created, the devices will automatically receive the update when they are reporting their current firmware revisions. Devices receive updates at their own pace, and the update status of all devices are tracked in Drogue Cloud.","title":"Predictive Maintenance","component":"drogue-cloud","version":"0.1","name":"predictive-maintenance","url":"/drogue-cloud/0.1/use-cases/predictive-maintenance.html","titles":[{"text":"Example architecture","hash":"_example_architecture","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Drogue Cloud","hash":"_drogue_cloud","id":3},{"text":"Digital Twin","hash":"_digital_twin","id":4},{"text":"Failure detection","hash":"_failure_detection","id":5},{"text":"Firmware updates","hash":"_firmware_updates","id":6}]},"66":{"id":66,"text":"Smart Factories collect data from the manufacturing process to detect anomalies, derive prediction models and adjust the process based on a feedback loop. Factories need to operate independently of each other, so that if one factory has problems, it does not impact the other. However, managing configuration of the factories centrally is still desirable, to avoid diverging behavior. In this example, the smart factory is split into a system with three tiers. The central tier which is used to managed the factory clusters as well as running business applications that need a global view of the data. The second tier is the factory tier where all the applications needed for factory operation is running. The factory cluster configuration is managed by the central cluster. The third tier are the edge tier where control processes and devices are running. These processes are timing sensitive, and may communicate internally to respond to critical events. The processes and their configuration run in a cluster which is managed by the factory cluster. For users familiar with the Open Manufacturing Platform (OMP), these tiers correspond to the enterprise, facility and station (+ control and field) layers in the OMP reference architecture. The following Drogue Cloud features are used: Using the connectivity layer to supporting multiple protocols for ingesting data Command APIs for sending commands to end devices Managing control cluster workloads using Open Cluster Management Using external Apache Kafka instances The factory consists of several physical components: Conveyor belts Robot arms part of the manufacturing process Quality sensors reporting production errors These components are accessible through an OPC-UA server, which communicate with each other for critical events. An OPC-UA connector send telemetry data to and receive commands from Drogue Cloud running in the factory cluster. The factory cluster contains the infrastructure needed to operate the factory. Stateful services such as PostgreSQL and Apache Kafka are running on the cluster (alternatively in their own cluster or outside Kubernetes) and Drogue Cloud connects to them as needed for device management and publishing telemetry data. Drogue Cloud configures and deploys the required workloads on the edge cluster using Open Cluster Management (OCM). A centralized control plane provides a single place for configuring the factories. The central cluster is a global instance that also serves infrastructure that is not critical to the day to day operation of the factories. If this cluster goes down, the factories can still operate independently. The factory clusters are managed using Open Cluster Management (OCM), ensuring that factories will have consistent configurations. The central cluster also holds a more powerful processing pipeline that consumes data from all factory clusters for later processing and analysis, such as adjusting device configuration or training failure detection models. An instance of MirrorMaker is used to forward events in Apache Kafka factory instance with the centralized Apache Kafka instance. The business applications receive telemetry from Drogue Cloud via Apache Kafka, and send commands back using the command API. Component failure detection - Using a machine learned model to learn when a component is about to fail and needs replacement. Capable of performing shutdown of production to avoid cascading failures. Product quality monitoring - Using sensor data to provide a product quality metric that is fed back into the Apache Kafka cluster and mirrored to the central cluster. Factory parameter tuner - Tuning factory configuration feedback from product quality and other telemetry data. Model training - Using a global view of the data to infer improved models for failure detection.","title":"Smart Factories","component":"drogue-cloud","version":"0.1","name":"smart-factories","url":"/drogue-cloud/0.1/use-cases/smart-factories.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Edge","hash":"_edge","id":2},{"text":"Factory","hash":"_factory","id":3},{"text":"Central","hash":"_central","id":4},{"text":"Applications","hash":"_applications","id":5}]},"67":{"id":67,"text":"Some components of Drogue Cloud support the MQTT protocol. Unless noted otherwise, all components support MQTT 3.1.1 and 5 not only using the binary MQTT protocol, but also using MQTT over Websockets. Drogue Cloud provides three different, dedicated endpoint for MQTT-enabled service: Plain MQTT MQTT over Websockets MQTT over Websockets without support for X.509 client certificates These are simply the same services (e.g. MQTT endpoint or integration), but running with different settings on the MQTT protocol layer. True, it is possible to detect if a connecting client is using MQTT or Websocket. However, it is not possible to detect if a browser based websocket client connects using TLS or if it is a normal one. The difference is, that a browser based websocket client cannot properly establish a TLS session, if the server allows the use of X.509 client certificates. So instead of providing a mix of auto-detect and additional endpoints, we do offer dedicated endpoint for each connection profile.","title":"","component":"drogue-cloud","version":"0.1","name":"common-mqtt-websocket","url":"/drogue-cloud/0.1/user-guide/common-mqtt-websocket.html","titles":[{"text":"MQTT over Websocket","hash":"_mqtt_over_websocket","id":1},{"text":"Connecting","hash":"_connecting","id":2}]},"68":{"id":68,"text":"This section describes a few topics that are common to various areas of Drogue Cloud. Durations are defined using the \"humantime\" syntax. For example: durationOneSecond: 1s (1) durationOneMinute: 1m (2) durationOneHourAndTwoMinutes: 1hour 30min (3) 1 Timeout of one second 2 Timeout of one minute 3 Duration of 1.5 hours Also see: https://docs.rs/humantime/latest/humantime/fn.parse_duration.html Some components of Drogue Cloud allow you to configure an external endpoint, to which Drogue Cloud will reach out to, when necessary. This can be configured using the structure ExternalEndpoint. This is normally embedded in some other structure. The following examples will assume that there is a field named endpoint, which should define the external endpoint. The role of the endpoint is specific to the actual location of the configuration. This section simply describes the common configuration options. The most simple configuration is: endpoint: url: https://my-external/endpoint By default, the functionality using an external endpoint will use a reasonable HTTP method for making the request. However, you can override the method using the following field: endpoint: url: https://my-external/endpoint method: GET (1) 1 Must be a valid HTTP method, using uppercase only. If the remote endpoint requires authentication, you can configure HTTP \"basic auth\" like this: endpoint: url: https://my-external/endpoint auth: basic: username: my-username password: my-password Or a \"bearer token\" using: endpoint: url: https://my-external/endpoint auth: bearer: token: my-token It is also possible to add additional HTTP header like so: endpoint: url: https://my-external/endpoint headers: - my-foo-header: my-foo-value By default, the functionality using an external endpoint will use a reasonable default timeout for making the request. However, you can override the timeout using the following field: endpoint: url: https://my-external/endpoint timeout: 1s (1) 1 Timeout duration in a format described in Defining durations By default, system default TLS settings will be used. TLS validation is enabled. However, you can override and tweak the TLS settings using the following fields: These settings don’t \"enable\" TLS. This is done by selecting a protocol using TLS using the url, like https://. endpoint: url: https://my-external/endpoint tls: insecure: true (1) certificate: | (2) -----BEGIN CERTIFICATE----- MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/ MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK 4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5 bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4 FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1 c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC 5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW 9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5 -----END CERTIFICATE----- 1 Disable TLS validation. This is insecure and should be used with caution! 2 Explicit trust anchor, overriding all system trust anchors.","title":"Common topics","component":"drogue-cloud","version":"0.1","name":"common","url":"/drogue-cloud/0.1/user-guide/common.html","titles":[{"text":"Defining durations","hash":"defining_durations","id":1},{"text":"Defining external endpoints","hash":"defining_external_endpoints","id":2},{"text":"HTTP method override","hash":"_http_method_override","id":3},{"text":"Authentication","hash":"_authentication","id":4},{"text":"Additional HTTP headers","hash":"_additional_http_headers","id":5},{"text":"Timeout","hash":"_timeout","id":6},{"text":"TLS","hash":"_tls","id":7}]},"69":{"id":69,"text":"The CoAP protocol endpoint is a device facing service offering connectivity using a CoAP based API. Currently, the endpoint does not support DTLS. It is not recommended to use this in production or to transfer any sensitive data over public networks. Before communicating with the endpoint, the respective device and application need to be registered with drogue cloud. The coap requests made to the endpoint need to be of the following format: coap:///v1/{channel}/{subject(optional)} The UriPath option should be set with v1, channel name and subject name(optional). Optional parameters can also be passed, but they need to be URL encoded. The rules for encoding the device and application name can be viewed over here. The following parameters can be passed as queries: application: The specific application ID that the device is sending telemetry to device: The device ID data_schema: Data schema of the payload as: Allows the device to alias another ID ct: The amount of time the device will wait for incoming commands For a device to receive commands, it must send a request with a specified timeout. The command will piggyback on the response—the responsibility to track when the device issues a request and promptly issue the command lies on the application. Authentication information is sent using the CoAP option number 4209. It is carried out using HTTP-like authentication headers. For example: Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk Here, we use the HTTP Basic authentication scheme, along with the base64 encoded device authentication information. The format of the device authentication information is @:. A sample CoAP request would look something like the following: The Request URL would be formatted like so, with the device name 'device#2' and 'device#4' percentage encoded: coap://test-url/v1/sample_channel/sample_subject?application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%232&ct=30 The value of Option 4209, representing auth information \"device1@app1:hey-rodney\": Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk // present as bytes Value of the UriPath Option(obtained from request URL): v1, Rust, test // present as bytes Value of the UriQuery Option(obtained from request URL): // present as bytes application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%234&ct=30 There are two response types that a device can receive. A device would receive a response with the 2.04(Changed) status code if the publish action were successful. If the request passed the ct(command timeout) parameter and a command is sent to the device within this interval, the device will receive the 2.05(Content) response code. The contents of the command can then be read from the CoAP option 4210. If a request fails, the device can receive responses with appropriate status codes. The payload in such cases will contain the reason for the error as well.","title":"CoAP protocol endpoint","component":"drogue-cloud","version":"0.1","name":"endpoint-coap","url":"/drogue-cloud/0.1/user-guide/endpoint-coap.html","titles":[{"text":"Requests:","hash":"_requests","id":1},{"text":"Response:","hash":"_response","id":2}]},"70":{"id":70,"text":"The HTTP protocol endpoint is a device facing service offering connectivity using different HTTP based APIs. The base address of the HTTP protocol endpoints depends on your installation. For a local, test installation, this is mostly based on the IP address and uses nip.io to resolve this as a DNS name. Assuming your IP address is 1.2.3.4 the hostname would be http-endpoint.1.2.3.4.nip.io. Drogue Cloud offers a default HTTP API for connecting devices to the cloud. In addition to that, other HTTP APIs may exist, implementing other IoT like APIs, see the following sections for more information. POST /v1/{channel} You need to use one of the following authentication mechanisms: Information Details X.509 Client certificate Provide an X.509 client certificate during the TLS handshake. The certificate must be signed with a trust anchor stored in the device registry on the application level. Credentials: @: Standard username/password authentication using @ as HTTP username. The can either be a device name, device alias, or unique username. Credentials: @ Query: application= Use a standard username and provide the application as part of the HTTP query. The can either be a device name, device alias, or unique username. Credentials: @ Query: application=&device= Use a non-unique username, provide application and device using query parameters. Name Type Location Required Description channel string path X The name of the channel to send to application string query Override the application for authentication. See above. device string query Override the device for authentication. See above. as string query Allows to specify an alternate device name that this device may act on behalf of. The \"as\" device must be configured to allow the authenticated device (from the credentials or device) to act on its behalf. ct integer query http \\ --auth device1@example-app:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.1.2.3.4.nip.io:30443/v1/telemetry \\ temp:=42 http \\ --auth device1:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.192.168.39.35.nip.io:30443/v1/foo \\ application==example-app \\ temp:=42 Deprecated! The entrypoint is /ttn/v3.","title":"HTTP protocol endpoint","component":"drogue-cloud","version":"0.1","name":"endpoint-http","url":"/drogue-cloud/0.1/user-guide/endpoint-http.html","titles":[{"text":"Default HTTP API","hash":"_default_http_api","id":1},{"text":"Publish telemetry","hash":"_publish_telemetry","id":2},{"text":"Authentication","hash":"_authentication","id":3},{"text":"Parameters","hash":"_parameters","id":4},{"text":"Code samples","hash":"_code_samples","id":5},{"text":"Shell","hash":"_shell","id":6},{"text":"The Things Network v2","hash":"_the_things_network_v2","id":7},{"text":"The Things Network v3","hash":"_the_things_network_v3","id":8}]},"71":{"id":71,"text":"The MQTT protocol endpoint is a device facing service offering connectivity using a simple MQTT v3.1.1 and v5 based protocol. This is not an MQTT broker It is important to understand, that the MQTT endpoint is not a general purpose MQTT broker. It is an MQTT based API, providing access to Drogue Cloud specific functionality, using the MQTT protocol and existing MQTT tools. As MQTT is a long-lived connection, it makes sense to use it in gateway device use-cases. In this case, a device connects to the MQTT endpoint, and then also performs operations for other devices (connected via the gateway) device. Drogue Cloud supports this model. Basically every device connecting via MQTT can act as a gateway device. The devices which allow other devices to act on their behalf, must indicate this by explicitly selecting a device as their gateway. This is done using the device configuration on the device: metadata: name: sensor01 (1) application: my-app spec: credentials: {} (2) gatewaySelector: matchNames: (3) - gateway01 1 Name of the actual device. 2 Empty credentials, as this device doesn’t need to allow a direct connection. 3 Names of the devices (gateways) which are allowed to act on behalf of this device. A device can act both as direct device and as gateway a the same time. Clean session must be true You may use X.509 client certificates when establishing the TLS connection.The certificate must be signed with a trust anchor stored in the device registry on the application level. Use @ and a configured password for the device. The MQTT endpoint supports different \"dialects\" or APIs.The following subsections describe these dialects.By default, the \"Drogue V1\" dialect is use. However, you can configure the dialect of a device through the application or device configuration: see MQTT dialects. The Drogue V1 dialect is the original one, which supports all the features that Drogue Cloud offers using the MQTT endpoint. To publish data as the connected device, publish to . The channel information will be encoded in the subject header of the generated event. To publish data on behalf of another device, publish to /. If the connected device is not listed as the specified device. The message will be dropped (QoS 0) or rejected (QoS 1). The payload of the publish message will be the \"data\" of the generated event. For MQTT v5, it is possible to set the \"content type\" property, which will be used as the content type for the generated event. By default (for MQTT 3.1.1, or when the content type is not provided), the content-type will be evaluated. If the payload can be successfully parsed as JSON, the content type will be application/json. Otherwise it will be application/octet-stream. In general, the command topic structure is command/inbox//. It is however not possible to subscribe to specific commands only. Topic pattern Example topic Description command/inbox//# command/inbox//set-temp Subscribe to commands for the actual device command/inbox/my-device/# command/inbox/my-device/set-temp Subscribe to commands for the device my-device. command/inbox/# command/inbox/+/# command/inbox/my-device/set-temp command/inbox//set-temp Subscribe to commands for actual device and all devices it acts as a gateway for. The payload of the command, will be the payload of the received message. The \"plain topic\" dialect doesn’t impose any restrictions on the topic naming that devices publish to. So it is ideal for connecting existing clients via MQTT, without the need to change the publish topic structure. The downside is, that additional information (like sending on behalft of another device) which could go in the topic structure, now cannot be assigned a special meaning. The topic the client publishes to will directly be used as the channel information. If the \"device prefix\" option is enabled, then the first segment of the topic will always be used a device ID. The connected device will only act as a gateway. The same access rules apply as for all gateways and devices. Drogue Cloud allows connecting to MQTT over websocket too.This works the same was a standard MQTT, but be sure to check out some more details in the section MQTT over Websockets.","title":"MQTT protocol endpoint","component":"drogue-cloud","version":"0.1","name":"endpoint-mqtt","url":"/drogue-cloud/0.1/user-guide/endpoint-mqtt.html","titles":[{"text":"Simple device vs gateway device","hash":"_simple_device_vs_gateway_device","id":1},{"text":"Connecting","hash":"_connecting","id":2},{"text":"Authenticating","hash":"_authenticating","id":3},{"text":"X.509 Client certificates","hash":"_x_509_client_certificates","id":4},{"text":"Username/password","hash":"_usernamepassword","id":5},{"text":"Protocol dialects","hash":"protocol_dialects","id":6},{"text":"Drogue V1 dialect","hash":"_drogue_v1_dialect","id":7},{"text":"Publish data","hash":"_publish_data","id":8},{"text":"Payload & Content type","hash":"_payload_content_type","id":9},{"text":"Subscribe to commands","hash":"_subscribe_to_commands","id":10},{"text":"Plain topic dialect","hash":"_plain_topic_dialect","id":11},{"text":"Publish data","hash":"_publish_data_2","id":12},{"text":"Connecting over Websockets","hash":"_connecting_over_websockets","id":13}]},"72":{"id":72,"text":"This guide describes how to use Drogue Cloud, from the perspective of a user, consume Drogue Cloud \"as a service\".","title":"User Guide","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/user-guide/index.html","titles":[]},"73":{"id":73,"text":"The command HTTP integration provides a simple HTTP based API to send commands to devices. It is part of the API endpoint: Command API.","title":"Command HTTP integration","component":"drogue-cloud","version":"0.1","name":"integration-command","url":"/drogue-cloud/0.1/user-guide/integration-command.html","titles":[]},"74":{"id":74,"text":"The Kafka integration allows cloud side applications to directly tap into the event stream coming from the devices. Events are encoded as CloudEvents.","title":"Apache Kafka™ integration","component":"drogue-cloud","version":"0.1","name":"integration-kafka","url":"/drogue-cloud/0.1/user-guide/integration-kafka.html","titles":[]},"75":{"id":75,"text":"A Drogue IoT cloud application can also act as a Knative event source. It will try to deliver events to the Knative serving endpoint you configure. The difference to integrations like MQTT and WebSocket is, that in this case, Drogue Cloud will actively try to deliver events, rather than waiting for a consumer to attach. You can configure this using the section .spec.knative: spec: knative: endpoint: (1) url: https://my-knative-endpoint 1 External endpoint definition as described in Defining external endpoints. This will create a publisher, which will start sending new events as they come in. You can temporarily disable the source using: spec: knative: disable: true (1) endpoint: url: https://my-knative-endpoint 1 Marks the source disabled This will disable the source. It can later be resumed by setting the value to false or removing the field.","title":"Knative integration","component":"drogue-cloud","version":"0.1","name":"integration-knative","url":"/drogue-cloud/0.1/user-guide/integration-knative.html","titles":[{"text":"Configuration","hash":"_configuration","id":1},{"text":"Temporarily disabling","hash":"_temporarily_disabling","id":2}]},"76":{"id":76,"text":"The MQTT integration allows consuming device events and send commands to the devices using an MQTT based API. Events are encoded as CloudEvents. The MQTT integration service allows to connect using standard MQTT mechanisms. Depending on the deployment, either using TLS or non-TLS connections. The service supports both MQTT v3.1.1 and MQTT 5. It is possible to use anonymous authentication. This may severely limit access to data, but in some special cases, this may be a viable use case. You can use the OAuth2 access token of your user as either username or password (not both at the same time!). When using MQTT v3.1.1, you must pass the token as the username, as this version of MQTT doesn’t allow to send a password only. Token expiration OAuth2 access tokens are only valid for a short amount of time. You need to provide a non-expired access token in order to log in. For this, you most likely need to refresh the token before every connection attempt. An alternative is to use API keys instead. When providing a username and a password, the username must be the name of your user, and the password must be an API key created for that user. In order to subscribe to events, subscribe using the following filter: app/. So to subscribe to example-app, you need to subscribe to app/example-app. The default data format follows the MQTT binding for CloudEvents using the \"structured content mode\", which includes all information, metadata and actual payload, as part of the MQTT payload. When using MQTT 5, you can request the service to send events in the \"binary content mode\", which encodes the metadata as part of the MQTT user properties. In this case, the MQTT payload is equal to the actual CloudEvents payload. As this encoding make use of \"user properties\", it is not available when using MQTT v3.1.1. By default, each MQTT subscriber uses its own Kafka consumer group, and thus receives each message. However, you can use MQTT shared subscriptions to define a shared consumer group, which maps to using the same Kafka consumer group on the backend. In this case, only one of the consumers will receive a message. To subscribe using shared subscriptions, use the following subscription filter: $share//app/. So when subscribing to the application my-app with the shared consumer identifier my-group, you would use: $share/my-group/app/my-app. You can send back a command to a device by publishing to the following topic: command///. For example, sending the command setTemperature with payload {\"value\": 1.23 } to the device my-device of the application my-app, you would need to publish the payload {\"value\": 1.23 } to the topic command/my-app/my-device/setTemperature. Drogue Cloud allows connecting to MQTT over websocket too.This works the same was a standard MQTT, but be sure to check out some more details in the section MQTT over Websockets.","title":"MQTT integration","component":"drogue-cloud","version":"0.1","name":"integration-mqtt","url":"/drogue-cloud/0.1/user-guide/integration-mqtt.html","titles":[{"text":"Connecting","hash":"_connecting","id":1},{"text":"Anonymous","hash":"_anonymous","id":2},{"text":"OAuth2 Token","hash":"_oauth2_token","id":3},{"text":"API Key","hash":"_api_key","id":4},{"text":"Subscribe to events","hash":"_subscribe_to_events","id":5},{"text":"Data format","hash":"_data_format","id":6},{"text":"Binary content mode","hash":"_binary_content_mode","id":7},{"text":"Shared subscriptions","hash":"_shared_subscriptions","id":8},{"text":"Publish commands","hash":"_publish_commands","id":9},{"text":"Connecting over Websockets","hash":"_connecting_over_websockets","id":10}]},"77":{"id":77,"text":"The WebSocket integration allows consuming device events using a simple WebSockets based protocol.Events are encoded as CloudEvents. The Websocket endpoint allows you to authenticate using the standard HTTP Authorization header. Both using an OAuth2 bearer token or by using HTTP \"basic auth\" using username and API key. However, when using a web socket client from inside a browser, that is not supported. In this case it is however possible to provide the same information using HTTP query parameters: Query Parameters Description token Provide an OAuth2 bearer token username and api_key Provide username and API key You can set the consumer group ID by providing a query parameter named group_id. This will set the Kafka consumer group ID to the provided value, which allows to share the load between different consumers. If no consumer group id is provided, a temporary one will be provided. Using a temporary consumer group might lead to missed events during re-connects. If that is a problem for your use case, you need to provide a stable group id.","title":"WebSocket integration","component":"drogue-cloud","version":"0.1","name":"integration-ws","url":"/drogue-cloud/0.1/user-guide/integration-ws.html","titles":[{"text":"Authentication","hash":"_authentication","id":1},{"text":"Consumer Group ID","hash":"_consumer_group_id","id":2}]},"78":{"id":78,"text":"Integrations refer to the cloud side APIs for Drogue Cloud, which allow your application to access data coming from devices and schedule commands to devices. Incoming data is streamed to applications in the form of Cloud Events. The message stream may contain telemetry events, as well as some infrastructure events. The following events may contain additional attributes, not listed here. These are implementation details are should not be relied upon. All regular messages/events a device sends, will end up as a \"device event\". Attribute Type Required Description Standard attributes specversion String X Always 1.0. type String X Always io.drogue.event.v1. id String X A unique event ID. subject String X The channel information. time String (RFC3339) X The time the event arrived in the system. datacontenttype String X The content type of the message. dataschema String The schema of the payload, encoded in the format defined in datacontenttype. Extensions instance String X A unique identifier of the Drogue Cloud instance on this connection. application String X The name of the application the device belonged to. applicationuid String X The unique ID of the application the device belonged to. device String X The name of the device the event originated from. deviceuid String X The unique ID of the device the event originated from. sender String X The name of the device which delivered the event to Drogue Cloud. senderuid String X The unique ID of the device which delivered the event to Drogue Cloud. UID fields The uid variants of the attributes are using unique values, instead of names. Assume a device gets deleted and re-created with the same name. In this case, the name would be the same, but the UID in the event would be different. Sender vs Device The sender is a device which connected to Drogue Cloud. The \"device\" is the device the event originated from. If the originating device is also the connected device, both fields will have the same value. Drogue Cloud will also enforce that a device must be listed as gateway, in order to act on its behalf. The payload is whatever the device sent as payload. Drogue Cloud, by default, doesn’t interpret the data in any way. It will only ensure that the data is well-formed JSON in the case the datacontenttype indicates a JSON mime type. The payload may also be empty. When a device connects through a connection oriented protocol (like MQTT), connection events will be issued by Drogue Cloud on behalf of the device. Only devices which directly connect to Drogue Cloud will issue such events. Devices connected via another device, acting as gateway, do not. Attribute Type Required Description Standard attributes specversion String X Always 1.0. type String X Always io.drogue.connection.v1. id String X A unique event ID. subject String X Always connection. time String (RFC3339) X The time the event was issues. datacontenttype String X Always application/json. Extensions instance String X A unique identifier of the Drogue Cloud instance on this connection. application String X The name of the application the device belonged to. applicationuid String X The unique ID of the application the device belonged to. device String X The name of the device the event originated from. deviceuid String X The unique ID of the device the event originated from. sender String X The name of the device which delivered the event to Drogue Cloud. senderuid String X The unique ID of the device which delivered the event to Drogue Cloud. The payload is defined by the following schema: Schema of connection event payload type: object properties: connected: type: boolean description: Whether the device is connected or not required: - connected Example of connection event payload {\"connected\": true} Whenever a change is made to a device in the registry, a \"device change event\" is sent out. Attribute Type Required Description Standard attributes specversion String X Always 1.0. type String X Always io.drogue.registry.v1. id String X A unique event ID. subject String X Always devices. time String (RFC3339) X The time the event was generated. Extensions instance String X A unique identifier of the Drogue Cloud instance on this connection. application String X The name of the application the device belonged to. applicationuid String X The unique ID of the application the device belonged to. device String X The name of the device the event originated from. deviceuid String X The unique ID of the device the event originated from. sender String X The name of the device which delivered the event to Drogue Cloud. senderuid String X The unique ID of the device which delivered the event to Drogue Cloud. The event doesn’t carry any payload. It is just an information that the device changed. To be written …","title":"Integrations","component":"drogue-cloud","version":"0.1","name":"integration","url":"/drogue-cloud/0.1/user-guide/integration.html","titles":[{"text":"Incoming data","hash":"_incoming_data","id":1},{"text":"Device events","hash":"_device_events","id":2},{"text":"Attributes","hash":"_attributes","id":3},{"text":"Payload","hash":"_payload","id":4},{"text":"Connection events","hash":"_connection_events","id":5},{"text":"Attributes","hash":"_attributes_2","id":6},{"text":"Payload","hash":"_payload_2","id":7},{"text":"Device registry events","hash":"_device_registry_events","id":8},{"text":"Attributes","hash":"_attributes_3","id":9},{"text":"Payload","hash":"_payload_3","id":10},{"text":"Commands","hash":"_commands","id":11}]},"79":{"id":79,"text":"Like HTTP, MQTT is \"just\" a protocol, which defines how events or messages are being transported over the wire. On top of that, one needs to define an API. Some might disagree and say that you can just publish anything to an MQTT broker. However, implicitly, you have to agree (even when only working with your own components) to a data format and topic structure. As Drogue Cloud is payload agnostic, we don’t interfere or interpret the payload itself[1]. However, we sometimes need to interpret the metadata of events and messages, like the topic a client publishes or subscribes to. The MQTT endpoint supports multiple dialects. However, it also needs to know which dialect a device \"speaks\". Using MQTT v5, it would be easy to add some property during the connection phase, to indicate which dialect the device expects. However, as MQTT v3.1.1 still seems to be the dominant protocol version, that isn’t possible[2]. That is why Drogue Cloud keeps this configuration as part of the application or device configuration. The advantage of that is also, that it can be centrally managed. Just assume some protocol setting of your device, which is somewhere out in the field, is wrong. Being able to correct that in the cloud, might be beneficial. The configuration for MQTT dialects is located in either the application or device resource at .spec.mqtt.dialect. The configuration of a device will override the configuration of an application. If neither the application nor the device has any configuration, the drogue/v1 dialect will be used. spec: mqtt: dialect: type: plainTopic (1) devicePrefix: true (2) 1 Selects the dialect. 2 Additional options on the same level. The follow section describes the configuration of the different dialects. To get an understanding of the different dialects themselves, see Protocol dialects. The type ID for this dialect is: drogue/v1. This dialect does not have any additional options. The type ID for this dialect is: plainTopic. Option Type Default Description devicePrefix boolean false Whether the first segment in the topic is interpreted as device ID. 1. With a few exceptions 2. At least all ways of stuffing information in e.g. credentials fields somehow feels wrong","title":"MQTT dialects","component":"drogue-cloud","version":"0.1","name":"management-mqtt","url":"/drogue-cloud/0.1/user-guide/management-mqtt.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Basic configuration","hash":"_basic_configuration","id":2},{"text":"Dialects","hash":"_dialects","id":3},{"text":"Drogue V1","hash":"_drogue_v1","id":4},{"text":"Plain topic","hash":"_plain_topic","id":5}]},"80":{"id":80,"text":"One core functionality of Drogue Cloud is to take device events and send deliver them to a Kafka topic, so that interested application can consume them. In that process, Drogue Cloud takes care of device connectivity, authentication & authorization, and some very basic validation steps. However, most of that processing is payload agnostic. By default, payload and metadata just forwarded as is. In some cases it would be helpful though, if metadata or payload could be altered of verified with additional logic during the reception of the event. What might come in handy in situation like this, is a rule based engine, which allows inspecting metadata and payload and decide how to process the event further. Rejecting, diverting, or altering it in the process. However, such a system can get out of hand pretty quickly, and we do not want to re-invent the wheel. A lot of systems like that already exists: Apache Camel for example, to mention just one of them. Also, allowing a user to configure a complex piece of logic for a cloud side, \"as a service\" platform can be rather tricky. Just imagine someone would validate \"what the next matching bitcoin hash\" is. It would be difficult to measure and project the costs caused by user provided validations. So Drogue Cloud tries to strike a balance. Support very simple and stateless operations, while allowing to integrate for more complex operations, hosted by the user. Just two quick examples: Drogue Cloud does offer a way to overwrite the \"content type\" attribute for an event if its channels matches a specific value. But for letting an AI/ML model categorize values of an even, we allow passing the event into an external endpoint, and consume it back as the response, before passing it along the chain. This way you can spin up your own (optionally Knative serving based) endpoint, and do complex calculations there, but do all of this as part of the Drogue Cloud device facing endpoints. The functionality is configured as part of the \"application\" resource in the .spec.publish path. The configuration consists of two main parts: rules which select when operations get triggered what operations should be performed when a rule matches Overall, even pre-processing will iterate over all rules, as defined in the order of the configuration and check if a rule matches. If it does, its operations will be executed. The outcome of an operation can one of: continue, accept, reject, drop. When the outcome is to continue, the event might have been modified, and the processing will continue with the next rule to check. When the outcome is to accept, the event might have been modified, the processing will stop, and the event will directly be delivered to the final destination. When the outcome is to reject, the event will be rejected as invalid, responding this condition to the device that sent the event, in case the device waits for a response. When the outcome is to drop, the event will be silently dropped. Towards the device, the operation is still successful. spec: publish: rules: - when: {} (1) then: [] (2) 1 One object which defines if the rule should be activated 2 An array of operations which should be executed when the rule matches You can use the isChannel matcher. For example: when: isChannel: my-channel (1) 1 The name of the channel which the event must match You can invert the outcome of a check using the not operation: when: not: isChannel: my-channel This checks if \"the channel is not `my-channel`\". A rule that always matches is always. when: always You can also turn this into \"never\" using the following: when: not: always It is also possible to use multiple checks and combined them with and or or: when: or: - isChannel: foo - isChannel: bar - isChannel: baz Which would match if the channel is either foo, bar, or baz. When an or or and check has no sub-checks, it evaluates to false. Operations are part of the then field, which is an array. All operations will be executed in order. The outcome of an operation may influence the processing of the next. If the array is empty, then simply no operations will be executed. You can silently drop the event using drop: then: drop Or accept the event directly, and stop processing following operations and rules: then: - break Rejecting the event will also stop processing, but return the provided reason back to the sender: then: - reject: This is not right It also is possible to set or remove cloud event attributes or extensions. Cloud event attributes are similar to extensions, they are just extensions that are part of the official specification and thus are treated differently. You can set or remove arbitrary extensions using: then: - setExtension: (1) name: my-ext value: my-value - removeExtension: my-other-ext (2) 1 Set extension my-ext to value my-value 2 Remove extension my-other-ext Setting an extension which already exists will overwrite the value. Removing an extension that does not exist is a no-op. As attributes are somewhat special it is only possible to set some of them. The following attributes are supported and can be set similar to the setExtension operation: datacontenttype - The content type of the event, e.g. application/json dataschema - The schema of the data, e.g. some JSON schema if the content type is JSON subject - The subject of the event, originally the \"channel\" information type - The type of the event, originally io.drogue.event.v1 This will send an event to an external endpoint and wait for the response. HTTP status code Outcome Description 200, 204 Continue The event can continue processing 202 Accept The event gets directly accepted. No further procesing is performed. 400..=499 Reject The event gets rejected. If the response payload is JSON, and contains a .reason field, that value of that field is used as rejection cause. any other This will the processing with a server side error. Devices are encouraged to re-try later. then: validate: endpoint: {} (1) request: (2) type: cloudEvent (3) mode: binary # or structured (4) 1 Endpoint configuration as described in External endpoints 2 Parameters for the outgoing request. Defaults to binary encoded cloud event. 3 Selects the type of the encoding 4 The cloud events mode: binary or structured This will send an event to an external endpoint and wait for the response. The headers and body of the response will be used as the metadata and payload of the new event. then: enrich: endpoint: {} (1) request: (2) type: cloudEvent (3) mode: binary # or structured (4) response: (5) type: cloudEvent (6) 1 Endpoint configuration as described in External endpoints 2 Parameters for the outgoing request. Defaults to binary encoded cloud event. 3 Selects the type of the encoding 4 The cloud events mode: binary or structured 5 Parameters for the incoming response. Defaults to binary encoded cloud event. 6 The response type The response can be one of: cloudEvent - A cloud event (binary of structured). raw - Only use the response body as payload, keep the metadata. assumeStructuredCloudEvent - Assume the response body contains a structured cloud event, with attributes/extensions as part of the root level. However, the response content type is ignored, although it normally must be application/cloudevents+json; charset=UTF-8. This can be used for broken cloud events serialization.","title":"Event pre-processing","component":"drogue-cloud","version":"0.1","name":"management-rules","url":"/drogue-cloud/0.1/user-guide/management-rules.html","titles":[{"text":"Scope","hash":"_scope","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Rules","hash":"_rules","id":3},{"text":"Checking for a channel","hash":"_checking_for_a_channel","id":4},{"text":"Inverting","hash":"_inverting","id":5},{"text":"Always matching","hash":"_always_matching","id":6},{"text":"And/Or","hash":"_andor","id":7},{"text":"Operations","hash":"_operations","id":8},{"text":"Drop / Accept / Reject","hash":"_drop_accept_reject","id":9},{"text":"Setting/Removing attributes/extensions","hash":"_settingremoving_attributesextensions","id":10},{"text":"Externally validate an event","hash":"_externally_validate_an_event","id":11},{"text":"Externally enrich an event","hash":"_externally_enrich_an_event","id":12}]},"81":{"id":81,"text":"The following sections will guide you through the basic management capabilities of Drogue Cloud. All management operations are available through the API. However, for an easier getting started experience, the following examples will use the command line tool drg for performing the operations. All following examples require that you are already logged in to a Drogue Cloud cluster using the command line tool drg. An application is the container for devices.A user can have multiple applications, but each device belongs to a single application. Create a new application using the following command: drg create app my-app This will create a new application named my-app. If the application name is already used, you will receive an error, as application names are unique. Applications are defined by a JSON structure. It is possible to edit this structure in YAML format (for easier editing) using the following command: drg edit app my-app This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing application can be deleted using the following command: drg delete app my-app Deleting an application may be delayed, as first all devices which require to be cleaned up will be processed. Once this is finished, the application might require cleanup too. Only once all resources are properly cleaned up, the application will be actually deleted. As devices belong to an application, you need to create an application first. The following commands will explicitly select the application by providing the --app argument. You can however use drg config set-default-app, to set a default application and omit the --app argument. A new device is being created using the following command: drg create device --app my-app my-device-1 This will create my-device-1 as part of my-app. In most cases a device will require additional information, like access credentials or gateway assignments. You can provide initial configuration using the --spec argument: drg create device --app my-app my-device-1 --spec '{\"credentials\": {\"credentials\":[{ \"pass\": \"foobar\" }]}}' The --spec argument accepts a JSON string of the full \"spec\" section of the device. You can edit the device configuration in YAML the same as the application: drg edit device --app my-app my-device-1 This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing device can be deleted using the following command: drg delete device --app my-app my-device-1 If a device requires any cleanup, the device will be first marked as deleted, the cleanup will be processed, and then the device will be deleted. It is possible to set a password as access credentials. This way, when connecting, the username will be the device name. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - pass: my-password (1) 1 One credential entry of type \"password\". You can also use hashed passwords. For this, you need to specify the hash algorithm: metadata: name: device # … spec: # … credentials: credentials: - pass: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (1) 1 One credential entry of type \"password\" as \"bcrypt\" hash. See Supported hashes for a list of supported password hashes. It is also possible to set a username and password as credentials. In this case, the device ID must be transmitted through an alternate way, in order to look up the device. The provided username/password combination will then be checked against the configured username/password combination. The way the device name is transmitted to the endpoint depends on the capabilities of the protocol endpoint. For example, using HTTP, the device name can be provided as an additional query parameter. You have created a device Configure the device, adding a password credentials entry: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bar (3) 1 The device name 2 The username 3 The plain text password You can also use hashed passwords, instead of plain text: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (3) 1 The device name 2 The username 3 The bcrypt hashed password See Supported hashes for a list of supported password hashes. If you want to use the username only for authenticating your device, without the need to provide an additional device identifier, you can use \"unique usernames\". These usernames are unique per application. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - user: username: device-user password: bar unique: true (1) 1 Setting the value to true makes the entry a unique username entry. As described in Setting username/password credentials, you can use hashed passwords too. Every device can act as a gateway for another device. However, it must be granted the permission to act on behalf of that other device. The way this is done, is by adding this information to the device connects through a gateway. You have created two devices. One that should act as gateway (named gateway in the following steps). One that should act as the actual device (named sensor in the following steps). The gateway device has access credentials configured, so that the gateway can connect to the cloud. In the configuration of the actual device, select the devices that can act as a gateway: metadata: name: sensor # … spec: # … gatewaySelector: matchNames: - gateway It is possible to use one or more devices as gateway. It is possible to store passwords either plain text or hashed. The following hash types are currently supported: bcrypt – Bcrypt hash sha512 – SHA512 crypt (Scheme ID 6)","title":"Managing applications and devices","component":"drogue-cloud","version":"0.1","name":"management","url":"/drogue-cloud/0.1/user-guide/management.html","titles":[{"text":"Applications","hash":"applications","id":1},{"text":"Creating a new application","hash":"_creating_a_new_application","id":2},{"text":"Modifying an application","hash":"_modifying_an_application","id":3},{"text":"Deleting an application","hash":"_deleting_an_application","id":4},{"text":"Devices","hash":"devices","id":5},{"text":"Create a new device","hash":"_create_a_new_device","id":6},{"text":"Modifying a device","hash":"_modifying_a_device","id":7},{"text":"Deleting a device","hash":"_deleting_a_device","id":8},{"text":"Setting password credentials","hash":"_setting_password_credentials","id":9},{"text":"Pre-requisites","hash":"_pre_requisites","id":10},{"text":"Procedure","hash":"_procedure","id":11},{"text":"Setting username/password credentials","hash":"setting_username_password","id":12},{"text":"Pre-requisites","hash":"_pre_requisites_2","id":13},{"text":"Procedure","hash":"_procedure_2","id":14},{"text":"Setting username/password credentials (unique username)","hash":"_setting_usernamepassword_credentials_unique_username","id":15},{"text":"Pre-requisites","hash":"_pre_requisites_3","id":16},{"text":"Procedure","hash":"_procedure_3","id":17},{"text":"Setting X.509 client certificate credentials","hash":"_setting_x_509_client_certificate_credentials","id":18},{"text":"Configuring a gateway device","hash":"_configuring_a_gateway_device","id":19},{"text":"Pre-requisites","hash":"_pre_requisites_4","id":20},{"text":"Procedure","hash":"_procedure_4","id":21},{"text":"Hashed passwords","hash":"_hashed_passwords","id":22},{"text":"Supported hashes","hash":"supported-password-hashes","id":23}]},"82":{"id":82,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, is where device connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"0.4","name":"concepts","url":"/drogue-cloud/0.4/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"83":{"id":83,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints Protocol normalization based on Cloud Events and Knative eventing Managing of device credentials and properties APIs and a graphical console to manage devices and data flows It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Knative eventing – For streaming data Apache Kafka – For persisting events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"0.4","name":"index","url":"/drogue-cloud/0.4/index.html","titles":[]},"84":{"id":84,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and InfluxDB instance, which is set up in a way that temperature readings are automatically stored in the InfluxDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and InfluxDB would be \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"0.4","name":"addons","url":"/drogue-cloud/0.4/architecture/addons.html","titles":[{"text":"Grafana & InfluxDB","hash":"_grafana_influxdb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"85":{"id":85,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"0.4","name":"control","url":"/drogue-cloud/0.4/architecture/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"86":{"id":86,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to levarage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrate as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authentication and authorize devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messgaes. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) conists of a payload, which contains meta data (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Peristing messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or of there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside of the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"relam\" here","title":"Data plane","component":"drogue-cloud","version":"0.4","name":"data","url":"/drogue-cloud/0.4/architecture/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":4}]},"87":{"id":87,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerfull compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"0.4","name":"devices","url":"/drogue-cloud/0.4/architecture/devices.html","titles":[]},"88":{"id":88,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controling actuators. Of course this diagram over-simplifies the problem. And still, connecting to a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit if this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These application are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Architecture","component":"drogue-cloud","version":"0.4","name":"index","url":"/drogue-cloud/0.4/architecture/index.html","titles":[]},"89":{"id":89,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Protocol endpoints, used for devices to communicate with the system. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"0.4","name":"services","url":"/drogue-cloud/0.4/architecture/services.html","titles":[{"text":"APIs","hash":"_apis","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"HTTP endpoint","hash":"_http_endpoint","id":4},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":5},{"text":"Command endpoint","hash":"_command_endpoint","id":6},{"text":"Integrations","hash":"_integrations","id":7},{"text":"MQTT Integration","hash":"_mqtt_integration","id":8}]},"90":{"id":90,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind only requires to execute the following command: kind create cluster For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"0.4","name":"cluster","url":"/drogue-cloud/0.4/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"91":{"id":91,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the \"installation\" script (drogue.sh) directly from the repsitory: ./script/drogue.sh This is the same script as from the installer packages explained before. Thus is accepts the same variables/options. If you built custom images, and pushed them to a container repository: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy","title":"Deploying from the repository","component":"drogue-cloud","version":"0.4","name":"development","url":"/drogue-cloud/0.4/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3}]},"92":{"id":92,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"0.4","name":"index","url":"/drogue-cloud/0.4/deployment/index.html","titles":[]},"93":{"id":93,"text":"Most of the deployment of Drogue Cloud uses kustomize as part of kubectl. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/tag/v0.3.0 There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Knative Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Run the installer script ./script/drogue.sh, adding the options appropriate for your setup. You can use the environment variable CLUSTER to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: env CLUSTER=kind ./script/drogue.sh Most options are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env CLUSTER=kind INSTALL_DEPS=false ./script/drogue.sh If you want to install the dependencies (like Strimzi, KNative) yourself, you can opt out of installing the dependencies. Variable Name Default value Description INSTALL_DEPS true Control the installation of all dependencies. INSTALL_KNATIVE ${INSTALL_DEPS} Control the installation of the Knative stack. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls and mqtt-endpoint-tls exist. If they don’t it will create them either using provided or generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can set the environment variable TLS_KEY and TLS_CRT, pointing them to PEM encoded key and certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"0.4","name":"installer","url":"/drogue-cloud/0.4/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":7},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":8},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":9},{"text":"Using local key and certificate files","hash":"_using_local_key_and_certificate_files","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"94":{"id":94,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ podman or docker – Both work, also in rootless mode. For podman you need to also set an alias for docker to podman You will need a Kubernetes cluster in order to deploy Drogue Cloud. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"0.4","name":"pre-reqs","url":"/drogue-cloud/0.4/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"95":{"id":95,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, is where device connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"0.5","name":"concepts","url":"/drogue-cloud/0.5/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"96":{"id":96,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints Protocol normalization based on Cloud Events and Knative eventing Managing of device credentials and properties APIs and a graphical console to manage devices and data flows It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Knative eventing – For streaming data Apache Kafka – For persisting events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"0.5","name":"index","url":"/drogue-cloud/0.5/index.html","titles":[]},"97":{"id":97,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and InfluxDB instance, which is set up in a way that temperature readings are automatically stored in the InfluxDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and InfluxDB would be \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"0.5","name":"addons","url":"/drogue-cloud/0.5/architecture/addons.html","titles":[{"text":"Grafana & InfluxDB","hash":"_grafana_influxdb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"98":{"id":98,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"0.5","name":"control","url":"/drogue-cloud/0.5/architecture/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"99":{"id":99,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to levarage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrate as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authentication and authorize devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messgaes. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) conists of a payload, which contains meta data (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Peristing messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or of there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside of the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"relam\" here","title":"Data plane","component":"drogue-cloud","version":"0.5","name":"data","url":"/drogue-cloud/0.5/architecture/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":4}]},"100":{"id":100,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerfull compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"0.5","name":"devices","url":"/drogue-cloud/0.5/architecture/devices.html","titles":[]},"101":{"id":101,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controling actuators. Of course this diagram over-simplifies the problem. And still, connecting to a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit if this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These application are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Architecture","component":"drogue-cloud","version":"0.5","name":"index","url":"/drogue-cloud/0.5/architecture/index.html","titles":[]},"102":{"id":102,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Protocol endpoints, used for devices to communicate with the system. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"0.5","name":"services","url":"/drogue-cloud/0.5/architecture/services.html","titles":[{"text":"APIs","hash":"_apis","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"HTTP endpoint","hash":"_http_endpoint","id":4},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":5},{"text":"Command endpoint","hash":"_command_endpoint","id":6},{"text":"Integrations","hash":"_integrations","id":7},{"text":"MQTT Integration","hash":"_mqtt_integration","id":8}]},"103":{"id":103,"text":"This will create a new application, and connect it with The Things Network. You will need create an account at The Things Network. As part of that you will need to: Remember which region you are assigned to (e.g. eu1 for eu1.cloud.thethings.network). Create an API key for this account with the permission to create new applications. Remember the name of the user. Create a new application in Drogue Cloud with the TTN-specific information: drg create application my-ttn-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, must have access to create new applications for the provided owner. 2 The (optional) ID of the application in the TTN system. Defaults to the name of the application in Drogue Cloud. This valid must not be changed. 3 The name of the user owning the application. See Using an organization for details on using an organization instead. 4 The name of region, or a URL to the API backend. This will enable the integration and trigger the reconciliation process. You can also use drg edit app my-ttn-app to change the configuration of an existing application. Taking a look at the TTN console, you should see the new application (my-app-alias in this case), and a webhook named drogue-iot. You can also use an organization, for this you will need to change the owner to explicitly being an organization type: { \"spec\": { \"ttn\": { \"api\": { \"owner\": { \"org\": \"my-org\" (1) }, \"owner\": { \"user\": \"my-user\" (2) }, \"owner\": \"my-user\" (3) } } } } 1 Use an organization named \"my-org\" 2 Use a user named \"my-user\" 3 Use a user named \"my-user\" Deleting an application will delete all devices in Drogue Cloud and the TTN system. When all devices have been deleted, the application itself will be deleted in both Drogue Cloud and the TTN system. Soft deletion Applications in The Things Network are only \"soft deleted\". This implies that the name of the application cannot be re-used. So it is not possible to re-create or re-use the applicatio name. However you can use an alternate application ID in TTN by setting the .spec.ttn.api.id field to an unused value.","title":"Managing applications","component":"drogue-cloud","version":"0.5","name":"app","url":"/drogue-cloud/0.5/ttn/app.html","titles":[{"text":"Setting up a new application","hash":"_setting_up_a_new_application","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Using an organization","hash":"_using_an_organization","id":4},{"text":"Deleting an application","hash":"_deleting_an_application","id":5}]},"104":{"id":104,"text":"This will register a new device, and synchronized it with The Things Network. You will need the following information for your device: Device EUI Application/Join EUI Application Key Supported LoRa capabilities Create a new device in Drogue Cloud with TTN specific information: drg create --app my-ttn-app device my-ttn-device-1 --spec '{ \"ttn\": { \"app_eui\": \"0123456789ABCDEF\", \"app_key\": \"0123456789ABCDEF...\", \"dev_eui\": \"0123456789ABCDEF\", \"frequency_plan_id\": \"...\", (1) \"lorawan_phy_version\": \"...\", (2) \"lorawan_version\": \"...\" (3) } }' 1 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ 2 An ID of the TTN supported LoRa versions, e.g. PHY_V1_0 3 An ID of the TTN supported LoRa version, e.g. MAC_V1_0 You can also use drg edit device --app my-ttn-app my-ttn-device-1 to change the configuration of an existing device. When you delete a device in Drogue Cloud, it will also be deleted in the TTN system. If you want to delete the device in TTN, but keep it in Drogue Cloud, then you can simply remove or rename the .spec.ttn section.","title":"Managing devices","component":"drogue-cloud","version":"0.5","name":"device","url":"/drogue-cloud/0.5/ttn/device.html","titles":[{"text":"Setting up a new device","hash":"_setting_up_a_new_device","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Deleting a device","hash":"_deleting_a_device","id":4},{"text":"Disconnecting a device","hash":"_disconnecting_a_device","id":5}]},"105":{"id":105,"text":"Drogue IoT Cloud has can integrate with The Things Network (TTN). Applications and devices managed in the Drogue IoT device registry can be synced to the TTN system. This includes automatically connecting both systems using a Drogue cloud gateway device, to receive messages from LoRa devices through the TTN system. The integration is meant to be configured on a per-application level, so that normal users of Drogue Cloud can configure their own integration, using their own TTN account. There is no system-wide synchronization. The integration works with V3 of the TTN API. Earlier versions are not supported. The integration currently supports: Creating applications in The Things Network. Creating a gateway device in Drogue Cloud. Configuring the credentials for this gateway device using a randomized password- Creating an application instance on the TTN side. Creating a webhook for this application, connecting the TTN side with Drogue Cloud, using the created gateway device. Creating devices in The Things Network. Authorizing the TTN gateway device in Drogue Cloud for this device Creating the device on the TTN side Cleaning up when resources get deleted Deleting applications Deleting an application in Drogue Cloud, or disabling the TTN integration for a Drogue Cloud application, will also delete the application in TTN. However, The Things Network only soft deletes applications. The name of the application is still blocked from further use after the deletion. This means that you cannot simply re-create an application with the same name. Drogue Cloud allows you to override the application name on the TTN side, however you should consider twice before actually trigger a delete.","title":"The Things Network integration","component":"drogue-cloud","version":"0.5","name":"index","url":"/drogue-cloud/0.5/ttn/index.html","titles":[]},"106":{"id":106,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind only requires to execute the following command: kind create cluster For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"0.5","name":"cluster","url":"/drogue-cloud/0.5/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"107":{"id":107,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the \"installation\" script (drogue.sh) directly from the repsitory: ./script/drogue.sh This is the same script as from the installer packages explained before. Thus is accepts the same variables/options. If you built custom images, and pushed them to a container repository: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy","title":"Deploying from the repository","component":"drogue-cloud","version":"0.5","name":"development","url":"/drogue-cloud/0.5/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3}]},"108":{"id":108,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"0.5","name":"index","url":"/drogue-cloud/0.5/deployment/index.html","titles":[]},"109":{"id":109,"text":"Most of the deployment of Drogue Cloud uses kustomize as part of kubectl. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/tag/v0.3.0 There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Knative Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Run the installer script ./script/drogue.sh, adding the options appropriate for your setup. You can use the environment variable CLUSTER to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: env CLUSTER=kind ./script/drogue.sh Most options are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env CLUSTER=kind INSTALL_DEPS=false ./script/drogue.sh If you want to install the dependencies (like Strimzi, KNative) yourself, you can opt out of installing the dependencies. Variable Name Default value Description INSTALL_DEPS true Control the installation of all dependencies. INSTALL_KNATIVE ${INSTALL_DEPS} Control the installation of the Knative stack. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls and mqtt-endpoint-tls exist. If they don’t it will create them either using provided or generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can set the environment variable TLS_KEY and TLS_CRT, pointing them to PEM encoded key and certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"0.5","name":"installer","url":"/drogue-cloud/0.5/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":7},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":8},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":9},{"text":"Using local key and certificate files","hash":"_using_local_key_and_certificate_files","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"110":{"id":110,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ podman or docker – Both work, also in rootless mode. For podman you need to also set an alias for docker to podman You will need a Kubernetes cluster in order to deploy Drogue Cloud. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"0.5","name":"pre-reqs","url":"/drogue-cloud/0.5/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"111":{"id":111,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, is where device connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"0.6","name":"concepts","url":"/drogue-cloud/0.6/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"112":{"id":112,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints Protocol normalization based on Cloud Events and Knative eventing Managing of device credentials and properties APIs and a graphical console to manage devices and data flows It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Knative eventing – For streaming data Apache Kafka – For persisting events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"0.6","name":"index","url":"/drogue-cloud/0.6/index.html","titles":[]},"113":{"id":113,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and InfluxDB instance, which is set up in a way that temperature readings are automatically stored in the InfluxDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and InfluxDB would be \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"0.6","name":"addons","url":"/drogue-cloud/0.6/architecture/addons.html","titles":[{"text":"Grafana & InfluxDB","hash":"_grafana_influxdb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"114":{"id":114,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"0.6","name":"control","url":"/drogue-cloud/0.6/architecture/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"115":{"id":115,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to levarage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrate as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authentication and authorize devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messgaes. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) conists of a payload, which contains meta data (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Peristing messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or of there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside of the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"realm\" here","title":"Data plane","component":"drogue-cloud","version":"0.6","name":"data","url":"/drogue-cloud/0.6/architecture/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":4}]},"116":{"id":116,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerfull compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"0.6","name":"devices","url":"/drogue-cloud/0.6/architecture/devices.html","titles":[]},"117":{"id":117,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controling actuators. Of course this diagram over-simplifies the problem. And still, connecting to a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit if this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These application are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Architecture","component":"drogue-cloud","version":"0.6","name":"index","url":"/drogue-cloud/0.6/architecture/index.html","titles":[]},"118":{"id":118,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Protocol endpoints, used for devices to communicate with the system. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"0.6","name":"services","url":"/drogue-cloud/0.6/architecture/services.html","titles":[{"text":"APIs","hash":"_apis","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"HTTP endpoint","hash":"_http_endpoint","id":4},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":5},{"text":"Command endpoint","hash":"_command_endpoint","id":6},{"text":"Integrations","hash":"_integrations","id":7},{"text":"MQTT Integration","hash":"_mqtt_integration","id":8}]},"119":{"id":119,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind requires to execute the following command: kind create cluster --config=deploy/kind/cluster-config.yaml Ingress controller required The deployment requires a Kubernetes ingress controller to be deployed. When using Kind, the deployment script will automatically deploy the NGINX Ingress Controller, but you still need to export the ports to allow access. Using the command above, will already use a configuration which takes care of that. For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need a working Ingress Controller. For OpenShift, you can use Routes. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"0.6","name":"cluster","url":"/drogue-cloud/0.6/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"120":{"id":120,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the makefile target deploy: make deploy If you built custom images, and pushed them to a container repository, you can deploy them using the following command: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy The makefile actually uses the installer script scripts/drgadm internally. It only passes in the right arguments, so that the installer will install images from a different registry, or use a different tag. By default, the installer scripts, even on the main branch, will install a tagged version. Sometimes tagged versions are not yet available on the container registry, and thus, the installation may fail. It is therefore recommended to install \"latest\" images using the make deploy command.","title":"Deploying from the repository","component":"drogue-cloud","version":"0.6","name":"development","url":"/drogue-cloud/0.6/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3},{"text":"Using the installer script for development","hash":"_using_the_installer_script_for_development","id":4}]},"121":{"id":121,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"0.6","name":"index","url":"/drogue-cloud/0.6/deployment/index.html","titles":[]},"122":{"id":122,"text":"Most of the deployment of Drogue Cloud uses kustomize as part of kubectl. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/latest There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Knative Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Run the installer script ./script/drgadm deploy, adding the options appropriate for your setup. You can use the environment variable CLUSTER to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: env CLUSTER=kind ./script/drgadm deploy The deploy command of drgadm supports the following argument -k or INSTALL_DEPS Don’t install any dependency by default. -s Set additional Helm values. May be repeated multiple times. -m Minimize: Reduces the default resource requests to allow deploying on more constrained environments. -d or DOMAIN Manually provide the application DNS domain. -c or CLUSTER Specify the cluster type (any of minikube, kind, openshift, kubernetes). -p Adds an additional Helm value file, named deploy/helm/profiles/.yaml. -n or DROGUE_NS Changes the target Drogue IoT namespace. The installer has a few additional options which are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env CLUSTER=kind INSTALL_DEPS=false ./script/drgadm deploy If you want to install the dependencies (like Strimzi, KNative) yourself, you can opt out of installing the dependencies. Variable Name Default value Description INSTALL_DEPS true Control the installation of all dependencies. INSTALL_KNATIVE ${INSTALL_DEPS} Control the installation of the Knative stack. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls and mqtt-endpoint-tls exist. If they don’t it will create them either using provided or generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can set the environment variable TLS_KEY and TLS_CRT, pointing them to PEM encoded key and certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"0.6","name":"installer","url":"/drogue-cloud/0.6/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":7},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":8},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":9},{"text":"Using local key and certificate files","hash":"_using_local_key_and_certificate_files","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"123":{"id":123,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ helm – Helm CLI podman or docker – Both work, also in rootless mode. For podman you need to also set an alias for docker to podman You will need a Kubernetes cluster in order to deploy Drogue Cloud. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"0.6","name":"pre-reqs","url":"/drogue-cloud/0.6/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"124":{"id":124,"text":"This will create a new application, and connect it with The Things Network. You will need create an account at The Things Network. As part of that you will need to: Remember which region you are assigned to (e.g. eu1 for eu1.cloud.thethings.network). Create an API key for this account with the permission to create new applications. Remember the name of the user. Create a new application in Drogue Cloud with the TTN-specific information: drg create application my-ttn-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, must have access to create new applications for the provided owner. 2 The (optional) ID of the application in the TTN system. Defaults to the name of the application in Drogue Cloud. This valid must not be changed. 3 The name of the user owning the application. See Using an organization for details on using an organization instead. 4 The name of region, or a URL to the API backend. This will enable the integration and trigger the reconciliation process. You can also use drg edit app my-ttn-app to change the configuration of an existing application. Taking a look at the TTN console, you should see the new application (my-app-alias in this case), and a webhook named drogue-iot. You can also use an organization, for this you will need to change the owner to explicitly being an organization type: { \"spec\": { \"ttn\": { \"api\": { \"owner\": { \"org\": \"my-org\" (1) }, \"owner\": { \"user\": \"my-user\" (2) }, \"owner\": \"my-user\" (3) } } } } 1 Use an organization named \"my-org\" 2 Use a user named \"my-user\" 3 Use a user named \"my-user\" Deleting an application will delete all devices in Drogue Cloud and the TTN system. When all devices have been deleted, the application itself will be deleted in both Drogue Cloud and the TTN system. Soft deletion Applications in The Things Network are only \"soft deleted\". This implies that the name of the application cannot be re-used. So it is not possible to re-create or re-use the applicatio name. However you can use an alternate application ID in TTN by setting the .spec.ttn.api.id field to an unused value.","title":"Managing applications","component":"drogue-cloud","version":"0.6","name":"app","url":"/drogue-cloud/0.6/ttn/app.html","titles":[{"text":"Setting up a new application","hash":"_setting_up_a_new_application","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Using an organization","hash":"_using_an_organization","id":4},{"text":"Deleting an application","hash":"_deleting_an_application","id":5}]},"125":{"id":125,"text":"This will register a new device, and synchronized it with The Things Network. You will need the following information for your device: Device EUI Application/Join EUI Application Key Supported LoRa capabilities Create a new device in Drogue Cloud with TTN specific information: drg create --app my-ttn-app device my-ttn-device-1 --spec '{ \"ttn\": { \"app_eui\": \"0123456789ABCDEF\", \"app_key\": \"0123456789ABCDEF...\", \"dev_eui\": \"0123456789ABCDEF\", \"frequency_plan_id\": \"...\", (1) \"lorawan_phy_version\": \"...\", (2) \"lorawan_version\": \"...\" (3) } }' 1 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ 2 An ID of the TTN supported LoRa versions, e.g. PHY_V1_0 3 An ID of the TTN supported LoRa version, e.g. MAC_V1_0 You can also use drg edit device --app my-ttn-app my-ttn-device-1 to change the configuration of an existing device. When you delete a device in Drogue Cloud, it will also be deleted in the TTN system. If you want to delete the device in TTN, but keep it in Drogue Cloud, then you can simply remove or rename the .spec.ttn section.","title":"Managing devices","component":"drogue-cloud","version":"0.6","name":"device","url":"/drogue-cloud/0.6/ttn/device.html","titles":[{"text":"Setting up a new device","hash":"_setting_up_a_new_device","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Deleting a device","hash":"_deleting_a_device","id":4},{"text":"Disconnecting a device","hash":"_disconnecting_a_device","id":5}]},"126":{"id":126,"text":"Drogue IoT Cloud has can integrate with The Things Network (TTN). Applications and devices managed in the Drogue IoT device registry can be synced to the TTN system. This includes automatically connecting both systems using a Drogue cloud gateway device, to receive messages from LoRa devices through the TTN system. The integration is meant to be configured on a per-application level, so that normal users of Drogue Cloud can configure their own integration, using their own TTN account. There is no system-wide synchronization. The integration works with V3 of the TTN API. Earlier versions are not supported. The integration currently supports: Creating applications in The Things Network. Creating a gateway device in Drogue Cloud. Configuring the credentials for this gateway device using a randomized password- Creating an application instance on the TTN side. Creating a webhook for this application, connecting the TTN side with Drogue Cloud, using the created gateway device. Creating devices in The Things Network. Authorizing the TTN gateway device in Drogue Cloud for this device Creating the device on the TTN side Cleaning up when resources get deleted Deleting applications Deleting an application in Drogue Cloud, or disabling the TTN integration for a Drogue Cloud application, will also delete the application in TTN. However, The Things Network only soft deletes applications. The name of the application is still blocked from further use after the deletion. This means that you cannot simply re-create an application with the same name. Drogue Cloud allows you to override the application name on the TTN side, however you should consider twice before actually trigger a delete.","title":"The Things Network integration","component":"drogue-cloud","version":"0.6","name":"index","url":"/drogue-cloud/0.6/ttn/index.html","titles":[]},"127":{"id":127,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, is where device connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"0.7","name":"concepts","url":"/drogue-cloud/0.7/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"128":{"id":128,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints. Protocol normalization based on Cloud Events and Knative eventing. Management of devices and their credentials and properties through an API. A web-console and a command-line client to manage devices and data flows. APIs for cloud-side application integration. It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Apache Kafka – For streaming events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"0.7","name":"index","url":"/drogue-cloud/0.7/index.html","titles":[]},"129":{"id":129,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind requires to execute the following command: kind create cluster --config=deploy/kind/cluster-config.yaml Ingress controller required The deployment requires a Kubernetes ingress controller to be deployed. When using Kind, the deployment script will automatically deploy the NGINX Ingress Controller, but you still need to export the ports to allow access. Using the command above, will already use a configuration which takes care of that. For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need a working Ingress Controller. For OpenShift, you can use Routes. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"0.7","name":"cluster","url":"/drogue-cloud/0.7/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"130":{"id":130,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the makefile target deploy: make deploy If you built custom images, and pushed them to a container repository, you can deploy them using the following command: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy The makefile actually uses the installer script scripts/drgadm internally. It only passes in the right arguments, so that the installer will install images from a different registry, or use a different tag. By default, the installer scripts, even on the main branch, will install a tagged version. Sometimes tagged versions are not yet available on the container registry, and thus, the installation may fail. It is therefore recommended to install \"latest\" images using the make deploy command.","title":"Deploying from the repository","component":"drogue-cloud","version":"0.7","name":"development","url":"/drogue-cloud/0.7/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3},{"text":"Using the installer script for development","hash":"_using_the_installer_script_for_development","id":4}]},"131":{"id":131,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"0.7","name":"index","url":"/drogue-cloud/0.7/deployment/index.html","titles":[]},"132":{"id":132,"text":"Most of the deployment of Drogue Cloud uses kustomize as part of kubectl. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/latest There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Knative Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Run the installer script ./script/drgadm deploy, adding the options appropriate for your setup. You can use the environment variable CLUSTER to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: env CLUSTER=kind ./script/drgadm deploy The deploy command of drgadm supports the following argument -k or INSTALL_DEPS Don’t install any dependency by default. -s Set additional Helm values. May be repeated multiple times. -m Minimize: Reduces the default resource requests to allow deploying on more constrained environments. -d or DOMAIN Manually provide the application DNS domain. -c or CLUSTER Specify the cluster type (any of minikube, kind, openshift, kubernetes). -p Adds an additional Helm value file, named deploy/helm/profiles/.yaml. -n or DROGUE_NS Changes the target Drogue IoT namespace. The installer has a few additional options which are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env CLUSTER=kind INSTALL_DEPS=false ./script/drgadm deploy If you want to install the dependencies (like Strimzi, KNative) yourself, you can opt out of installing the dependencies. Variable Name Default value Description INSTALL_DEPS true Control the installation of all dependencies. INSTALL_KNATIVE ${INSTALL_DEPS} Control the installation of the Knative stack. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls and mqtt-endpoint-tls exist. If they don’t it will create them either using provided or generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can set the environment variable TLS_KEY and TLS_CRT, pointing them to PEM encoded key and certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"0.7","name":"installer","url":"/drogue-cloud/0.7/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":7},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":8},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":9},{"text":"Using local key and certificate files","hash":"_using_local_key_and_certificate_files","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"133":{"id":133,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ helm – Helm CLI podman or docker – Both work, also in rootless mode. For podman you need to also set an alias for docker to podman You will need a Kubernetes cluster in order to deploy Drogue Cloud. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"0.7","name":"pre-reqs","url":"/drogue-cloud/0.7/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"134":{"id":134,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and a TimescaleDB instance, which is set up in a way that temperature readings are automatically stored in the TimescaleDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and TimescaleDB would be a \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"0.7","name":"addons","url":"/drogue-cloud/0.7/introduction/addons.html","titles":[{"text":"Grafana & TimescaleDB","hash":"_grafana_timescaledb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"135":{"id":135,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"0.7","name":"control","url":"/drogue-cloud/0.7/introduction/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"136":{"id":136,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to levarage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrate as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authentication and authorize devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messgaes. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) conists of a payload, which contains meta data (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Peristing messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or of there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside of the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"realm\" here","title":"Data plane","component":"drogue-cloud","version":"0.7","name":"data","url":"/drogue-cloud/0.7/introduction/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":4}]},"137":{"id":137,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerfull compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"0.7","name":"devices","url":"/drogue-cloud/0.7/introduction/devices.html","titles":[]},"138":{"id":138,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controlling actuators. Of course this diagram over-simplifies the problem. And still, connecting to a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit if this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These applications are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Introduction","component":"drogue-cloud","version":"0.7","name":"index","url":"/drogue-cloud/0.7/introduction/index.html","titles":[]},"139":{"id":139,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Acting on device change events, operators will reconcile the desired state of applications and devices, with internal or external services. The topic operator creates Kafka topics as required by the applications. The Things Network operator (TTN operator) sets up a connection between Drogue Cloud and a TTN V3 instance. It will also synchronize devices from Drogue Cloud to TTN. Protocol endpoints, used for devices to communicate with the system. A general purpose CoAP endpoint, providing a Drogue IoT specific API. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"0.7","name":"services","url":"/drogue-cloud/0.7/introduction/services.html","titles":[{"text":"Device Registry","hash":"_device_registry","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Operators","hash":"_operators","id":3},{"text":"Topic operator","hash":"_topic_operator","id":4},{"text":"The Things Network operator","hash":"_the_things_network_operator","id":5},{"text":"Endpoints","hash":"_endpoints","id":6},{"text":"CoAP endpoint","hash":"_coap_endpoint","id":7},{"text":"HTTP endpoint","hash":"_http_endpoint","id":8},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":9},{"text":"Command endpoint","hash":"_command_endpoint","id":10},{"text":"Integrations","hash":"_integrations","id":11},{"text":"MQTT Integration","hash":"_mqtt_integration","id":12}]},"140":{"id":140,"text":"This will create a new application, and connect it with The Things Network. You will need create an account at The Things Network. As part of that you will need to: Remember which region you are assigned to (e.g. eu1 for eu1.cloud.thethings.network). Create an API key for this account with the permission to create new applications. Remember the name of the user. Create a new application in Drogue Cloud with the TTN-specific information: drg create application my-ttn-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, must have access to create new applications for the provided owner. 2 The (optional) ID of the application in the TTN system. Defaults to the name of the application in Drogue Cloud. This valid must not be changed. 3 The name of the user owning the application. See Using an organization for details on using an organization instead. 4 The name of region, or a URL to the API backend. This will enable the integration and trigger the reconciliation process. You can also use drg edit app my-ttn-app to change the configuration of an existing application. Taking a look at the TTN console, you should see the new application (my-app-alias in this case), and a webhook named drogue-iot. You can also use an organization, for this you will need to change the owner to explicitly being an organization type: { \"spec\": { \"ttn\": { \"api\": { \"owner\": { \"org\": \"my-org\" (1) }, \"owner\": { \"user\": \"my-user\" (2) }, \"owner\": \"my-user\" (3) } } } } 1 Use an organization named \"my-org\" 2 Use a user named \"my-user\" 3 Use a user named \"my-user\" Deleting an application will delete all devices in Drogue Cloud and the TTN system. When all devices have been deleted, the application itself will be deleted in both Drogue Cloud and the TTN system. Soft deletion Applications in The Things Network are only \"soft deleted\". This implies that the name of the application cannot be re-used. So it is not possible to re-create or re-use the applicatio name. However you can use an alternate application ID in TTN by setting the .spec.ttn.api.id field to an unused value.","title":"Managing applications","component":"drogue-cloud","version":"0.7","name":"app","url":"/drogue-cloud/0.7/ttn/app.html","titles":[{"text":"Setting up a new application","hash":"_setting_up_a_new_application","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Using an organization","hash":"_using_an_organization","id":4},{"text":"Deleting an application","hash":"_deleting_an_application","id":5}]},"141":{"id":141,"text":"This will register a new device, and synchronized it with The Things Network. You will need the following information for your device: Device EUI Application/Join EUI Application Key Supported LoRa capabilities Create a new device in Drogue Cloud with TTN specific information: drg create --app my-ttn-app device my-ttn-device-1 --spec '{ \"ttn\": { \"app_eui\": \"0123456789ABCDEF\", \"app_key\": \"0123456789ABCDEF...\", \"dev_eui\": \"0123456789ABCDEF\", \"frequency_plan_id\": \"...\", (1) \"lorawan_phy_version\": \"...\", (2) \"lorawan_version\": \"...\" (3) } }' 1 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ 2 An ID of the TTN supported LoRa versions, e.g. PHY_V1_0 3 An ID of the TTN supported LoRa version, e.g. MAC_V1_0 You can also use drg edit device --app my-ttn-app my-ttn-device-1 to change the configuration of an existing device. When you delete a device in Drogue Cloud, it will also be deleted in the TTN system. If you want to delete the device in TTN, but keep it in Drogue Cloud, then you can simply remove or rename the .spec.ttn section.","title":"Managing devices","component":"drogue-cloud","version":"0.7","name":"device","url":"/drogue-cloud/0.7/ttn/device.html","titles":[{"text":"Setting up a new device","hash":"_setting_up_a_new_device","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Deleting a device","hash":"_deleting_a_device","id":4},{"text":"Disconnecting a device","hash":"_disconnecting_a_device","id":5}]},"142":{"id":142,"text":"Drogue IoT Cloud has can integrate with The Things Network (TTN). Applications and devices managed in the Drogue IoT device registry can be synced to the TTN system. This includes automatically connecting both systems using a Drogue cloud gateway device, to receive messages from LoRa devices through the TTN system. The integration is meant to be configured on a per-application level, so that normal users of Drogue Cloud can configure their own integration, using their own TTN account. There is no system-wide synchronization. The integration works with V3 of the TTN API. Earlier versions are not supported. The integration currently supports: Creating applications in The Things Network. Creating a gateway device in Drogue Cloud. Configuring the credentials for this gateway device using a randomized password- Creating an application instance on the TTN side. Creating a webhook for this application, connecting the TTN side with Drogue Cloud, using the created gateway device. Creating devices in The Things Network. Authorizing the TTN gateway device in Drogue Cloud for this device Creating the device on the TTN side Cleaning up when resources get deleted Deleting applications Deleting an application in Drogue Cloud, or disabling the TTN integration for a Drogue Cloud application, will also delete the application in TTN. However, The Things Network only soft deletes applications. The name of the application is still blocked from further use after the deletion. This means that you cannot simply re-create an application with the same name. Drogue Cloud allows you to override the application name on the TTN side, however you should consider twice before actually trigger a delete.","title":"The Things Network integration","component":"drogue-cloud","version":"0.7","name":"index","url":"/drogue-cloud/0.7/ttn/index.html","titles":[]},"143":{"id":143,"text":"The CoAP protocol endpoint is a device facing service offering connectivity using a CoAP based API. Currently, the endpoint does not support DTLS. It is not recommended to use this in production or to transfer any sensitive data over public networks. Before communicating with the endpoint, the respective device and application need to be registered with drogue cloud. The coap requests made to the endpoint need to be of the following format: coap:///v1/{channel}/{subject(optional)} The UriPath option should be set with v1, channel name and subject name(optional). Optional parameters can also be passed, but they need to be URL encoded. The rules for encoding the device and application name can be viewed over here. The following parameters can be passed as queries: application: The specific application ID that the device is sending telemetry to device: The device ID data_schema: Data schema of the payload as: Allows the device to alias another ID ct: The amount of time the device will wait for incoming commands For a device to receive commands, it must send a request with a specified timeout. The command will piggyback on the response—the responsibility to track when the device issues a request and promptly issue the command lies on the application. Authentication information is sent using the CoAP option number 4209. It is carried out using HTTP-like authentication headers. For example: Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk Here, we use the HTTP Basic authentication scheme, along with the base64 encoded device authentication information. The format of the device authentication information is @:. A sample CoAP request would look something like the following: The Request URL would be formatted like so, with the device name 'device#2' and 'device#4' percentage encoded: coap://test-url/v1/sample_channel/sample_subject?application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%232&ct=30 The value of Option 4209, representing auth information \"device1@app1:hey-rodney\": Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk // present as bytes Value of the UriPath Option(obtained from request URL): v1, Rust, test // present as bytes Value of the UriQuery Option(obtained from request URL): // present as bytes application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%234&ct=30 There are two response types that a device can receive. A device would receive a response with the 2.04(Changed) status code if the publish action were successful. If the request passed the ct(command timeout) parameter and a command is sent to the device within this interval, the device will receive the 2.05(Content) response code. The contents of the command can then be read from the CoAP option 4210. If a request fails, the device can receive responses with appropriate status codes. The payload in such cases will contain the reason for the error as well.","title":"CoAP protocol endpoint","component":"drogue-cloud","version":"0.7","name":"endpoint-coap","url":"/drogue-cloud/0.7/user-guide/endpoint-coap.html","titles":[{"text":"Requests:","hash":"_requests","id":1},{"text":"Response:","hash":"_response","id":2}]},"144":{"id":144,"text":"The HTTP protocol endpoint is a device facing service offering connectivity using different HTTP based APIs.","title":"HTTP protocol endpoint","component":"drogue-cloud","version":"0.7","name":"endpoint-http","url":"/drogue-cloud/0.7/user-guide/endpoint-http.html","titles":[{"text":"Simple HTTP API","hash":"_simple_http_api","id":1},{"text":"The Things Network v2","hash":"_the_things_network_v2","id":2},{"text":"The Things Network v3","hash":"_the_things_network_v3","id":3}]},"145":{"id":145,"text":"The MQTT protocol endpoint is a device facing service offering connectivity using a simple MQTT v3.1.1 and v5 based protocol.","title":"MQTT protocol endpoint","component":"drogue-cloud","version":"0.7","name":"endpoint-mqtt","url":"/drogue-cloud/0.7/user-guide/endpoint-mqtt.html","titles":[]},"146":{"id":146,"text":"This guide describes how to use Drogue Cloud, from the perspective of a user, consume Drogue Cloud \"as a service\".","title":"User Guide","component":"drogue-cloud","version":"0.7","name":"index","url":"/drogue-cloud/0.7/user-guide/index.html","titles":[]},"147":{"id":147,"text":"The command HTTP integration provides a simple HTTP based API to send commands to devices.","title":"Command HTTP integration","component":"drogue-cloud","version":"0.7","name":"integration-command","url":"/drogue-cloud/0.7/user-guide/integration-command.html","titles":[]},"148":{"id":148,"text":"The Kafka integration allows cloud side applications to directly tap into the event stream coming from the devices. Events are encoded as CloudEvents.https://xxx[]","title":"Apache Kafka™ integration","component":"drogue-cloud","version":"0.7","name":"integration-kafka","url":"/drogue-cloud/0.7/user-guide/integration-kafka.html","titles":[]},"149":{"id":149,"text":"The MQTT integration allows consuming device events and send commands to the devices using an MQTT based API. Events are encoded as CloudEvents.","title":"MQTT integration","component":"drogue-cloud","version":"0.7","name":"integration-mqtt","url":"/drogue-cloud/0.7/user-guide/integration-mqtt.html","titles":[]},"150":{"id":150,"text":"The WebSocket integration allows consuming device events using a simple WebSockets based protocol.Events are encoded as CloudEvents.","title":"WebSocket integration","component":"drogue-cloud","version":"0.7","name":"integration-ws","url":"/drogue-cloud/0.7/user-guide/integration-ws.html","titles":[]},"151":{"id":151,"text":"The following sections will guide you through the basic management capabilities of Drogue Cloud. All management operations are available through the API. However, for an easier getting started experience, the following examples will use the command line tool drg for performing the operations. All following examples require that you are already logged in to a Drogue Cloud cluster using the command line tool drg. An application is the container for devices. A user can have multiple applications, but each device belongs to a single application. Create a new application using the following command: drg create app my-app This will create a new application named my-app. If the application name is already used, you will receive an error, as application names are unique. Applications are defined by a JSON structure. It is possible to edit this structure in YAML format (for easier editing) using the following command: drg edit app my-app This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing application can be deleted using the following command: drg delete app my-app Deleting an application me be delayed, as first all devices which require to be cleaned up will be processes. Once this is finished, the application might require cleanup too. Only once all resources are properly cleaned up, the application will be actually deleted. As devices belong to an application, you need to create an application first. The following commands will explicitly select the application by providing the --app argument. You can however use drg config set-default-app, to set a default application and omit the --app argument. A new device is being created using the following command: drg create device --app my-app my-device-1 This will create my-device-1 as part of my-app. In most cases a device will require additional information, like access credentials or gateway assignments. You can provide initial configuration using the --spec argument: drg create device --app my-app my-device-1 --spec '{\"credentials\": {\"credentials\":[{ \"pass\": \"foobar\" }]}}' The --spec argument accepts a JSON string of the full \"spec\" section of the device. You can edit the device configuration in YAML the same as the application: drg edit device --app my-app my-device-1 This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing device can be deleted using the following command: drg delete device --app my-app my-device-1 If a device requires any cleanup, the device will be first marked as deleted, the cleanup will be processed, and then the device will be deleted.","title":"Managing applications and devices","component":"drogue-cloud","version":"0.7","name":"management","url":"/drogue-cloud/0.7/user-guide/management.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Creating a new application","hash":"_creating_a_new_application","id":2},{"text":"Modifying an application","hash":"_modifying_an_application","id":3},{"text":"Deleting an application","hash":"_deleting_an_application","id":4},{"text":"Devices","hash":"_devices","id":5},{"text":"Create a new device","hash":"_create_a_new_device","id":6},{"text":"Modifying a device","hash":"_modifying_a_device","id":7},{"text":"Deleting a device","hash":"_deleting_a_device","id":8},{"text":"Setting password credentials","hash":"_setting_password_credentials","id":9},{"text":"Setting X.509 client certificate credentials","hash":"_setting_x_509_client_certificate_credentials","id":10},{"text":"Configuring a gateway device","hash":"_configuring_a_gateway_device","id":11}]},"152":{"id":152,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, is where device connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"0.8","name":"concepts","url":"/drogue-cloud/0.8/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"153":{"id":153,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints. Protocol normalization based on Cloud Events and Knative eventing. Management of devices and their credentials and properties through an API. A web-console and a command-line client to manage devices and data flows. APIs for cloud-side application integration. It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Apache Kafka – For streaming events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"0.8","name":"index","url":"/drogue-cloud/0.8/index.html","titles":[]},"154":{"id":154,"text":"In order to make it possible to run Drogue Cloud in other environments, we provide a drogue-cloud-server binary to run a single or multiple Drogue Cloud services. This does not require Kubernetes or containers to run. You do need to have running instances of Kafka, Keycloak and PostgreSQL in order to use this form of deployment. The binary assumes the following services being available locally by default: Kafka bootstrap: localhost:9092 Keycloak: Url: http://localhost:8080 Admin user: admin Admin password: admin123456 PostgreSQL Database name: drogue Database user: admin Database password: admin123456 Have a look at the --help options for other ways to configure it. You thought you didn’t need containers, HAH! Well, to make it simpler to get the prerequisites running, here is a docker compose file for running them and making them available at the above ports: version: \"3.9\" services: postgres: image: docker.io/bitnami/postgresql:13 environment: - POSTGRESQL_USERNAME=admin - POSTGRESQL_PASSWORD=admin123456 - POSTGRESQL_DATABASE=drogue ports: - \"5432:5432\" kafka: image: docker.io/moeenz/docker-kafka-kraft:latest ports: - \"9092:9092\" environment: - KRAFT_CONTAINER_HOST_NAME=localhost keycloak: image: docker.io/jboss/keycloak:13.0.1 environment: - KEYCLOAK_USER=admin - KEYCLOAK_PASSWORD=admin123456 - DB_VENDOR=h2 ports: - \"8080:8080\" Make sure all dependencies are running correcrly. To start the drogue server, run: drogue-cloud-server --enable-all This will perform the following steps: Migrate database schema Create Keycloak OIDC clients Start all drogue services You should be able to connect to the local drogue instance using the drg client: drg login http://localhost:10001 To enable TLS for the protocol endpoints, you can pass the certificate and key using --server-cert and --server-key.","title":"Deploying on bare metal","component":"drogue-cloud","version":"0.8","name":"bare-metal","url":"/drogue-cloud/0.8/deployment/bare-metal.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"(Optional) Starting pre-requisites","hash":"_optional_starting_pre_requisites","id":2},{"text":"Running","hash":"_running","id":3},{"text":"Enabling TLS","hash":"_enabling_tls","id":4}]},"155":{"id":155,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind requires to execute the following command: kind create cluster --config=deploy/kind/cluster-config.yaml Ingress controller required The deployment requires a Kubernetes ingress controller to be deployed. When using Kind, the deployment script will automatically deploy the NGINX Ingress Controller, but you still need to export the ports to allow access. Using the command above, will already use a configuration which takes care of that. For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need a working Ingress Controller. For OpenShift, you can use Routes. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"0.8","name":"cluster","url":"/drogue-cloud/0.8/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"156":{"id":156,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the makefile target deploy: make deploy If you built custom images, and pushed them to a container repository, you can deploy them using the following command: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy The makefile actually uses the installer script scripts/drgadm internally. It only passes in the right arguments, so that the installer will install images from a different registry, or use a different tag. By default, the installer scripts, even on the main branch, will install a tagged version. Sometimes tagged versions are not yet available on the container registry, and thus, the installation may fail. It is therefore recommended to install \"latest\" images using the make deploy command.","title":"Deploying from the repository","component":"drogue-cloud","version":"0.8","name":"development","url":"/drogue-cloud/0.8/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3},{"text":"Using the installer script for development","hash":"_using_the_installer_script_for_development","id":4}]},"157":{"id":157,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"0.8","name":"index","url":"/drogue-cloud/0.8/deployment/index.html","titles":[]},"158":{"id":158,"text":"Most of the deployment of Drogue Cloud uses kustomize as part of kubectl. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/latest There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Knative Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Run the installer script ./script/drgadm deploy, adding the options appropriate for your setup. You can use the environment variable CLUSTER to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: env CLUSTER=kind ./script/drgadm deploy The deploy command of drgadm supports the following argument -k or INSTALL_DEPS Don’t install any dependency by default. -s Set additional Helm values. May be repeated multiple times. -m Minimize: Reduces the default resource requests to allow deploying on more constrained environments. -d or DOMAIN Manually provide the application DNS domain. -c or CLUSTER Specify the cluster type (any of minikube, kind, openshift, kubernetes). -p Adds an additional Helm value file, named deploy/helm/profiles/.yaml. -n or DROGUE_NS Changes the target Drogue IoT namespace. The installer has a few additional options which are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env CLUSTER=kind INSTALL_DEPS=false ./script/drgadm deploy If you want to install the dependencies (like Strimzi, KNative) yourself, you can opt out of installing the dependencies. Variable Name Default value Description INSTALL_DEPS true Control the installation of all dependencies. INSTALL_KNATIVE ${INSTALL_DEPS} Control the installation of the Knative stack. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls and mqtt-endpoint-tls exist. If they don’t it will create them either using provided or generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can set the environment variable TLS_KEY and TLS_CRT, pointing them to PEM encoded key and certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"0.8","name":"installer","url":"/drogue-cloud/0.8/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":7},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":8},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":9},{"text":"Using local key and certificate files","hash":"_using_local_key_and_certificate_files","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"159":{"id":159,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ helm – Helm CLI podman or docker – Both work, also in rootless mode. For podman you need to also set an alias for docker to podman You will need a Kubernetes cluster in order to deploy Drogue Cloud. For running outside Kubernetes, have a look at the bare metal deployment. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"0.8","name":"pre-reqs","url":"/drogue-cloud/0.8/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"160":{"id":160,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and a TimescaleDB instance, which is set up in a way that temperature readings are automatically stored in the TimescaleDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and TimescaleDB would be a \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"0.8","name":"addons","url":"/drogue-cloud/0.8/introduction/addons.html","titles":[{"text":"Grafana & TimescaleDB","hash":"_grafana_timescaledb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"161":{"id":161,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"0.8","name":"control","url":"/drogue-cloud/0.8/introduction/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"162":{"id":162,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to levarage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrate as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authentication and authorize devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messgaes. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) conists of a payload, which contains meta data (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Peristing messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or of there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside of the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"realm\" here","title":"Data plane","component":"drogue-cloud","version":"0.8","name":"data","url":"/drogue-cloud/0.8/introduction/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":4}]},"163":{"id":163,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerfull compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"0.8","name":"devices","url":"/drogue-cloud/0.8/introduction/devices.html","titles":[]},"164":{"id":164,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controlling actuators. Of course this diagram over-simplifies the problem. And still, connecting to a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit if this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These applications are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Introduction","component":"drogue-cloud","version":"0.8","name":"index","url":"/drogue-cloud/0.8/introduction/index.html","titles":[]},"165":{"id":165,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Acting on device change events, operators will reconcile the desired state of applications and devices, with internal or external services. The topic operator creates Kafka topics as required by the applications. The Things Network operator (TTN operator) sets up a connection between Drogue Cloud and a TTN V3 instance. It will also synchronize devices from Drogue Cloud to TTN. Protocol endpoints, used for devices to communicate with the system. A general purpose CoAP endpoint, providing a Drogue IoT specific API. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"0.8","name":"services","url":"/drogue-cloud/0.8/introduction/services.html","titles":[{"text":"Device Registry","hash":"_device_registry","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Operators","hash":"_operators","id":3},{"text":"Topic operator","hash":"_topic_operator","id":4},{"text":"The Things Network operator","hash":"_the_things_network_operator","id":5},{"text":"Endpoints","hash":"_endpoints","id":6},{"text":"CoAP endpoint","hash":"_coap_endpoint","id":7},{"text":"HTTP endpoint","hash":"_http_endpoint","id":8},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":9},{"text":"Command endpoint","hash":"_command_endpoint","id":10},{"text":"Integrations","hash":"_integrations","id":11},{"text":"MQTT Integration","hash":"_mqtt_integration","id":12}]},"166":{"id":166,"text":"This will create a new application, and connect it with The Things Network. You will need create an account at The Things Network. As part of that you will need to: Remember which region you are assigned to (e.g. eu1 for eu1.cloud.thethings.network). Create an API key for this account with the permission to create new applications. Remember the name of the user. Create a new application in Drogue Cloud with the TTN-specific information: drg create application my-ttn-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, must have access to create new applications for the provided owner. 2 The (optional) ID of the application in the TTN system. Defaults to the name of the application in Drogue Cloud. This valid must not be changed. 3 The name of the user owning the application. See Using an organization for details on using an organization instead. 4 The name of region, or a URL to the API backend. This will enable the integration and trigger the reconciliation process. You can also use drg edit app my-ttn-app to change the configuration of an existing application. Taking a look at the TTN console, you should see the new application (my-app-alias in this case), and a webhook named drogue-iot. You can also use an organization, for this you will need to change the owner to explicitly being an organization type: { \"spec\": { \"ttn\": { \"api\": { \"owner\": { \"org\": \"my-org\" (1) }, \"owner\": { \"user\": \"my-user\" (2) }, \"owner\": \"my-user\" (3) } } } } 1 Use an organization named \"my-org\" 2 Use a user named \"my-user\" 3 Use a user named \"my-user\" Deleting an application will delete all devices in Drogue Cloud and the TTN system. When all devices have been deleted, the application itself will be deleted in both Drogue Cloud and the TTN system. Soft deletion Applications in The Things Network are only \"soft deleted\". This implies that the name of the application cannot be re-used. So it is not possible to re-create or re-use the applicatio name. However you can use an alternate application ID in TTN by setting the .spec.ttn.api.id field to an unused value.","title":"Managing applications","component":"drogue-cloud","version":"0.8","name":"app","url":"/drogue-cloud/0.8/ttn/app.html","titles":[{"text":"Setting up a new application","hash":"_setting_up_a_new_application","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Using an organization","hash":"_using_an_organization","id":4},{"text":"Deleting an application","hash":"_deleting_an_application","id":5}]},"167":{"id":167,"text":"This will register a new device, and synchronized it with The Things Network. You will need the following information for your device: Device EUI Application/Join EUI Application Key Supported LoRa capabilities Create a new device in Drogue Cloud with TTN specific information: drg create --app my-ttn-app device my-ttn-device-1 --spec '{ \"ttn\": { \"app_eui\": \"0123456789ABCDEF\", \"app_key\": \"0123456789ABCDEF...\", \"dev_eui\": \"0123456789ABCDEF\", \"frequency_plan_id\": \"...\", (1) \"lorawan_phy_version\": \"...\", (2) \"lorawan_version\": \"...\" (3) } }' 1 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ 2 An ID of the TTN supported LoRa versions, e.g. PHY_V1_0 3 An ID of the TTN supported LoRa version, e.g. MAC_V1_0 You can also use drg edit device --app my-ttn-app my-ttn-device-1 to change the configuration of an existing device. When you delete a device in Drogue Cloud, it will also be deleted in the TTN system. If you want to delete the device in TTN, but keep it in Drogue Cloud, then you can simply remove or rename the .spec.ttn section.","title":"Managing devices","component":"drogue-cloud","version":"0.8","name":"device","url":"/drogue-cloud/0.8/ttn/device.html","titles":[{"text":"Setting up a new device","hash":"_setting_up_a_new_device","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Deleting a device","hash":"_deleting_a_device","id":4},{"text":"Disconnecting a device","hash":"_disconnecting_a_device","id":5}]},"168":{"id":168,"text":"Drogue IoT Cloud has can integrate with The Things Network (TTN). Applications and devices managed in the Drogue IoT device registry can be synced to the TTN system. This includes automatically connecting both systems using a Drogue cloud gateway device, to receive messages from LoRa devices through the TTN system. The integration is meant to be configured on a per-application level, so that normal users of Drogue Cloud can configure their own integration, using their own TTN account. There is no system-wide synchronization. The integration works with V3 of the TTN API. Earlier versions are not supported. The integration currently supports: Creating applications in The Things Network. Creating a gateway device in Drogue Cloud. Configuring the credentials for this gateway device using a randomized password- Creating an application instance on the TTN side. Creating a webhook for this application, connecting the TTN side with Drogue Cloud, using the created gateway device. Creating devices in The Things Network. Authorizing the TTN gateway device in Drogue Cloud for this device Creating the device on the TTN side Cleaning up when resources get deleted Deleting applications Deleting an application in Drogue Cloud, or disabling the TTN integration for a Drogue Cloud application, will also delete the application in TTN. However, The Things Network only soft deletes applications. The name of the application is still blocked from further use after the deletion. This means that you cannot simply re-create an application with the same name. Drogue Cloud allows you to override the application name on the TTN side, however you should consider twice before actually trigger a delete.","title":"The Things Network integration","component":"drogue-cloud","version":"0.8","name":"index","url":"/drogue-cloud/0.8/ttn/index.html","titles":[]},"169":{"id":169,"text":"The CoAP protocol endpoint is a device facing service offering connectivity using a CoAP based API. Currently, the endpoint does not support DTLS. It is not recommended to use this in production or to transfer any sensitive data over public networks. Before communicating with the endpoint, the respective device and application need to be registered with drogue cloud. The coap requests made to the endpoint need to be of the following format: coap:///v1/{channel}/{subject(optional)} The UriPath option should be set with v1, channel name and subject name(optional). Optional parameters can also be passed, but they need to be URL encoded. The rules for encoding the device and application name can be viewed over here. The following parameters can be passed as queries: application: The specific application ID that the device is sending telemetry to device: The device ID data_schema: Data schema of the payload as: Allows the device to alias another ID ct: The amount of time the device will wait for incoming commands For a device to receive commands, it must send a request with a specified timeout. The command will piggyback on the response—the responsibility to track when the device issues a request and promptly issue the command lies on the application. Authentication information is sent using the CoAP option number 4209. It is carried out using HTTP-like authentication headers. For example: Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk Here, we use the HTTP Basic authentication scheme, along with the base64 encoded device authentication information. The format of the device authentication information is @:. A sample CoAP request would look something like the following: The Request URL would be formatted like so, with the device name 'device#2' and 'device#4' percentage encoded: coap://test-url/v1/sample_channel/sample_subject?application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%232&ct=30 The value of Option 4209, representing auth information \"device1@app1:hey-rodney\": Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk // present as bytes Value of the UriPath Option(obtained from request URL): v1, Rust, test // present as bytes Value of the UriQuery Option(obtained from request URL): // present as bytes application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%234&ct=30 There are two response types that a device can receive. A device would receive a response with the 2.04(Changed) status code if the publish action were successful. If the request passed the ct(command timeout) parameter and a command is sent to the device within this interval, the device will receive the 2.05(Content) response code. The contents of the command can then be read from the CoAP option 4210. If a request fails, the device can receive responses with appropriate status codes. The payload in such cases will contain the reason for the error as well.","title":"CoAP protocol endpoint","component":"drogue-cloud","version":"0.8","name":"endpoint-coap","url":"/drogue-cloud/0.8/user-guide/endpoint-coap.html","titles":[{"text":"Requests:","hash":"_requests","id":1},{"text":"Response:","hash":"_response","id":2}]},"170":{"id":170,"text":"The HTTP protocol endpoint is a device facing service offering connectivity using different HTTP based APIs. The base address of the HTTP protocol endpoints depends on your installation. For a local, test installation, this is mostly based on the IP address and uses nip.io to resolve this as a DNS name. Assuming your IP address is 1.2.3.4 the hostname would be http-endpoint.1.2.3.4.nip.io. Drogue Cloud offers a default HTTP API for connecting devices to the cloud. In addition to that, other HTTP APIs may exist, implementing other IoT like APIs, see the following sections for more information. POST /v1/{channel} You need to use one of the following authentication mechanisms: Information Details X.509 Client certificate Provide an X.509 client certificate during the TLS handshake. The certificate must be signed with a trust anchor stored in the device registry on the application level. Credentials: @: Standard username/password authentication using @ as HTTP username. The can either be a device name, device alias, or unique username. Credentials: @ Query: application= Use a standard username and provide the application as part of the HTTP query. The can either be a device name, device alias, or unique username. Credentials: @ Query: application=&device= Use a non-unique username, provide application and device using query parameters. Name Type Location Required Description channel string path X The name of the channel to send to application string query Override the application for authentication. See above. device string query Override the device for authentication. See above. as string query Allows to specify an alternate device name that this device may act on behalf of. The \"as\" device must be configured to allow the authenticated device (from the credentials or device) to act on its behalf. ct integer query http \\ --auth device1@example-app:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.1.2.3.4.nip.io:30443/v1/telemetry \\ temp:=42 http \\ --auth device1:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.192.168.39.35.nip.io:30443/v1/foo \\ application==example-app \\ temp:=42 Deprecated! The entrypoint is /ttn/v3.","title":"HTTP protocol endpoint","component":"drogue-cloud","version":"0.8","name":"endpoint-http","url":"/drogue-cloud/0.8/user-guide/endpoint-http.html","titles":[{"text":"Default HTTP API","hash":"_default_http_api","id":1},{"text":"Publish telemetry","hash":"_publish_telemetry","id":2},{"text":"Authentication","hash":"_authentication","id":3},{"text":"Parameters","hash":"_parameters","id":4},{"text":"Code samples","hash":"_code_samples","id":5},{"text":"Shell","hash":"_shell","id":6},{"text":"The Things Network v2","hash":"_the_things_network_v2","id":7},{"text":"The Things Network v3","hash":"_the_things_network_v3","id":8}]},"171":{"id":171,"text":"The MQTT protocol endpoint is a device facing service offering connectivity using a simple MQTT v3.1.1 and v5 based protocol. This is not an MQTT broker It is important to understand, that the MQTT endpoint is not a general purpose MQTT broker. It is an MQTT based API, providing access to Drogue Cloud specific functionality, using the MQTT protocol and existing MQTT tools. Clean session must be true X.509 Client certificates Username/password","title":"MQTT protocol endpoint","component":"drogue-cloud","version":"0.8","name":"endpoint-mqtt","url":"/drogue-cloud/0.8/user-guide/endpoint-mqtt.html","titles":[{"text":"Connecting","hash":"_connecting","id":1},{"text":"Authenticating","hash":"_authenticating","id":2},{"text":"Simple device","hash":"_simple_device","id":3},{"text":"Publish data","hash":"_publish_data","id":4},{"text":"Subscribe to commands","hash":"_subscribe_to_commands","id":5},{"text":"Gateway device","hash":"_gateway_device","id":6},{"text":"Publish data","hash":"_publish_data_2","id":7},{"text":"Subscribe to commands","hash":"_subscribe_to_commands_2","id":8}]},"172":{"id":172,"text":"This guide describes how to use Drogue Cloud, from the perspective of a user, consume Drogue Cloud \"as a service\".","title":"User Guide","component":"drogue-cloud","version":"0.8","name":"index","url":"/drogue-cloud/0.8/user-guide/index.html","titles":[]},"173":{"id":173,"text":"The command HTTP integration provides a simple HTTP based API to send commands to devices.","title":"Command HTTP integration","component":"drogue-cloud","version":"0.8","name":"integration-command","url":"/drogue-cloud/0.8/user-guide/integration-command.html","titles":[]},"174":{"id":174,"text":"The Kafka integration allows cloud side applications to directly tap into the event stream coming from the devices. Events are encoded as CloudEvents.","title":"Apache Kafka™ integration","component":"drogue-cloud","version":"0.8","name":"integration-kafka","url":"/drogue-cloud/0.8/user-guide/integration-kafka.html","titles":[]},"175":{"id":175,"text":"The MQTT integration allows consuming device events and send commands to the devices using an MQTT based API. Events are encoded as CloudEvents. The MQTT integration service allows to connect using standard MQTT mechanisms. Depending on the deployment, either using TLS or non-TLS connections. The service supports both MQTT v3.1.1 and MQTT 5. It is possible to use anonymous authentication. This may severely limit access to data, but in some special cases, this may be a viable use case. You can use the OAuth2 access token of your user as either username or password (not both at the same time!). When using MQTT v3.1.1, you must pass the token as the username, as this version of MQTT doesn’t allow to send a password only. Token expiration OAuth2 access tokens are only valid for a short amount of time. You need to provide a non-expired access token in order to log in. For this, you most likely need to refresh the token before every connection attempt. An alternative is to use API keys instead. When providing a username and a password, the username must be the name of your user, and the password must be an API key created for that user. In order to subscribe to events, subscribe using the following filter: app/. So to subscribe to example-app, you need to subscribe to app/example-app. The default data format follows the MQTT binding for CloudEvents using the \"structured content mode\", which includes all information, metadata and actual payload, as part of the MQTT payload. When using MQTT 5, you can request the service to send events in the \"binary content mode\", which encodes the metadata as part of the MQTT user properties. In this case, the MQTT payload is equal to the actual CloudEvents payload. As this encoding make use of \"user properties\", it is not available when using MQTT v3.1.1. By default, each MQTT subscriber uses its own Kafka consumer group, and thus receives each message. However, you can use MQTT shared subscriptions to define a shared consumer group, which maps to using the same Kafka consumer group on the backend. In this case, only one of the consumers will receive a message. To subscribe using shared subscriptions, use the following subscription filter: $share//app/. So when subscribing to the application my-app with the shared consumer identifier my-group, you would use: $share/my-group/my-app. You can send back a command to a device by publishing to the following topic: command///. For example, sending the command setTemperature with payload {\"value\": 1.23 } to the device my-device of the application my-app, you would need to publish the payload {\"value\": 1.23 } to the topic command/my-app/my-device/setTemperature.","title":"MQTT integration","component":"drogue-cloud","version":"0.8","name":"integration-mqtt","url":"/drogue-cloud/0.8/user-guide/integration-mqtt.html","titles":[{"text":"Connecting","hash":"_connecting","id":1},{"text":"Anonymous","hash":"_anonymous","id":2},{"text":"OAuth2 Token","hash":"_oauth2_token","id":3},{"text":"API Key","hash":"_api_key","id":4},{"text":"Subscribe to events","hash":"_subscribe_to_events","id":5},{"text":"Data format","hash":"_data_format","id":6},{"text":"Binary content mode","hash":"_binary_content_mode","id":7},{"text":"Shared subscriptions","hash":"_shared_subscriptions","id":8},{"text":"Publish commands","hash":"_publish_commands","id":9}]},"176":{"id":176,"text":"The WebSocket integration allows consuming device events using a simple WebSockets based protocol.Events are encoded as CloudEvents.","title":"WebSocket integration","component":"drogue-cloud","version":"0.8","name":"integration-ws","url":"/drogue-cloud/0.8/user-guide/integration-ws.html","titles":[]},"177":{"id":177,"text":"The following sections will guide you through the basic management capabilities of Drogue Cloud. All management operations are available through the API. However, for an easier getting started experience, the following examples will use the command line tool drg for performing the operations. All following examples require that you are already logged in to a Drogue Cloud cluster using the command line tool drg. An application is the container for devices. A user can have multiple applications, but each device belongs to a single application. Create a new application using the following command: drg create app my-app This will create a new application named my-app. If the application name is already used, you will receive an error, as application names are unique. Applications are defined by a JSON structure. It is possible to edit this structure in YAML format (for easier editing) using the following command: drg edit app my-app This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing application can be deleted using the following command: drg delete app my-app Deleting an application me be delayed, as first all devices which require to be cleaned up will be processes. Once this is finished, the application might require cleanup too. Only once all resources are properly cleaned up, the application will be actually deleted. As devices belong to an application, you need to create an application first. The following commands will explicitly select the application by providing the --app argument. You can however use drg config set-default-app, to set a default application and omit the --app argument. A new device is being created using the following command: drg create device --app my-app my-device-1 This will create my-device-1 as part of my-app. In most cases a device will require additional information, like access credentials or gateway assignments. You can provide initial configuration using the --spec argument: drg create device --app my-app my-device-1 --spec '{\"credentials\": {\"credentials\":[{ \"pass\": \"foobar\" }]}}' The --spec argument accepts a JSON string of the full \"spec\" section of the device. You can edit the device configuration in YAML the same as the application: drg edit device --app my-app my-device-1 This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing device can be deleted using the following command: drg delete device --app my-app my-device-1 If a device requires any cleanup, the device will be first marked as deleted, the cleanup will be processed, and then the device will be deleted. It is possible to set a password as access credentials. This way, when connecting, the username will be the device name. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - pass: my-password (1) 1 One credential entry of type \"password\". You can also use hashed passwords. For this, you need to specify the hash algorithm: metadata: name: device # … spec: # … credentials: credentials: - pass: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (1) 1 One credential entry of type \"password\" as \"bcrypt\" hash. See Supported hashes for a list of supported password hashes. It is also possible to set a username and password as credentials. In this case, the device ID must be transmitted through an alternate way, in order to look up the device. The provided username/password combination will then be checked against the configured username/password combination. The way the device name is transmitted to the endpoint depends on the capabilities of the protocol endpoint. For example, using HTTP, the device name can be provided as an additional query parameter. You have created a device Configure the device, adding a password credentials entry: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bar (3) 1 The device name 2 The username 3 The plain text password You can also use hashed passwords, instead of plain text: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (3) 1 The device name 2 The username 3 The bcrypt hashed password See Supported hashes for a list of supported password hashes. If you want to use the username only for authenticating your device, without the need to provide an additional device identifier, you can use \"unique usernames\". These usernames are unique per application. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - user: username: device-user password: bar unique: true (1) 1 Setting the value to true makes the entry a unique username entry. As described in Setting username/password credentials, you can use hashed passwords too. Every device can act as a gateway for another device. However, it must be granted the permission to act on behalf of that other device. The way this is done, is by adding this information to the device connects through a gateway. You have created two devices. One that should act as gateway (named gateway in the following steps). One that should act as the actual device (named sensor in the following steps). The gateway device has access credentials configured, so that the gateway can connect to the cloud. In the configuration of the actual device, select the devices that can act as a gateway: metadata: name: sensor # … spec: # … gatewaySelector: matchNames: - gateway It is possible to use one or more devices as gateway. It is possible to store passwords either plain text or hashed. The following hash types are currently supported: bcrypt – Bcrypt hash sha512 – SHA512 crypt (Scheme ID 6)","title":"Managing applications and devices","component":"drogue-cloud","version":"0.8","name":"management","url":"/drogue-cloud/0.8/user-guide/management.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Creating a new application","hash":"_creating_a_new_application","id":2},{"text":"Modifying an application","hash":"_modifying_an_application","id":3},{"text":"Deleting an application","hash":"_deleting_an_application","id":4},{"text":"Devices","hash":"_devices","id":5},{"text":"Create a new device","hash":"_create_a_new_device","id":6},{"text":"Modifying a device","hash":"_modifying_a_device","id":7},{"text":"Deleting a device","hash":"_deleting_a_device","id":8},{"text":"Setting password credentials","hash":"_setting_password_credentials","id":9},{"text":"Pre-requisites","hash":"_pre_requisites","id":10},{"text":"Procedure","hash":"_procedure","id":11},{"text":"Setting username/password credentials","hash":"setting_username_password","id":12},{"text":"Pre-requisites","hash":"_pre_requisites_2","id":13},{"text":"Procedure","hash":"_procedure_2","id":14},{"text":"Setting username/password credentials (unique username)","hash":"_setting_usernamepassword_credentials_unique_username","id":15},{"text":"Pre-requisites","hash":"_pre_requisites_3","id":16},{"text":"Procedure","hash":"_procedure_3","id":17},{"text":"Setting X.509 client certificate credentials","hash":"_setting_x_509_client_certificate_credentials","id":18},{"text":"Configuring a gateway device","hash":"_configuring_a_gateway_device","id":19},{"text":"Pre-requisites","hash":"_pre_requisites_4","id":20},{"text":"Procedure","hash":"_procedure_4","id":21},{"text":"Hashed passwords","hash":"_hashed_passwords","id":22},{"text":"Supported hashes","hash":"supported-password-hashes","id":23}]},"178":{"id":178,"text":"These sections explain some concepts of Drogue IoT cloud. Applications in Drogue IoT cloud scope all elements that belong together. Like devices, data, and integrations. Applications are isolated from each other. Each device is owned by exactly one application and has at least one ID to identify it. Device IDs are unique in the scope of an application. Endpoints, more explicitly protocol endpoints, is where device connect to, in order to communicate with the system. On the device facing side these endpoints implement a device specific protocol, and on the cloud facing side, they communicate using Knative and Cloud Events. A protocol might be a binary protocol, custom to the device. Or also some other higher level API, based on existing communication protocols like MQTT, HTTP, or CoAP. This is sometimes also called: Protocol Adapter South-bound Device-bound Integrations provide ways to integrate your application with the event stream of the system. While integration may support different protocols (like HTTP, MQTT) they should focus on content being encoded as Cloud Events. In general there are two different ways of receiving data through integrations: push or pull. In the case of \"push\", the cloud side of Drogue will try to push events to an endpoint that you define. In the case of \"pull\", you connect to an integration endpoint and subscribe to events you are interested in. Once subscribed, events will be pushed through that communication channel. This is sometimes also called: North-bound","title":"Concepts","component":"drogue-cloud","version":"0.9","name":"concepts","url":"/drogue-cloud/0.9/concepts.html","titles":[{"text":"Applications","hash":"_applications","id":1},{"text":"Devices","hash":"_devices","id":2},{"text":"Endpoints","hash":"_endpoints","id":3},{"text":"Integrations","hash":"_integrations","id":4}]},"179":{"id":179,"text":"The Drogue IoT Cloud project takes care of IoT on the cloud side. It offers: IoT friendly protocol endpoints. Protocol normalization based on Cloud Events and Knative eventing. Management of devices and their credentials and properties through an API. A web-console and a command-line client to manage devices and data flows. APIs for cloud-side application integration. It is built on top of: Kubernetes – For running workloads Cloud Events - For normalizing transport protocols Apache Kafka – For streaming events Keycloak - For single-sign-on","title":"Drogue Cloud","component":"drogue-cloud","version":"0.9","name":"index","url":"/drogue-cloud/0.9/index.html","titles":[]},"180":{"id":180,"text":"In order to make it possible to run Drogue Cloud in other environments, we provide a drogue-cloud-server binary to run a single or multiple Drogue Cloud services. This does not require Kubernetes or containers to run. You do need to have running instances of Kafka, Keycloak and PostgreSQL in order to use this form of deployment. The binary assumes the following services being available locally by default: Kafka bootstrap: localhost:9092 Keycloak: Url: http://localhost:8080 Admin user: admin Admin password: admin123456 PostgreSQL Database name: drogue Database user: admin Database password: admin123456 Have a look at the --help options for other ways to configure it. You thought you didn’t need containers, HAH! Well, to make it simpler to get the prerequisites running, here is a docker compose file for running them and making them available at the above ports: version: \"3.9\" services: postgres: image: docker.io/bitnami/postgresql:13 environment: - POSTGRESQL_USERNAME=admin - POSTGRESQL_PASSWORD=admin123456 - POSTGRESQL_DATABASE=drogue ports: - \"5432:5432\" kafka: image: docker.io/moeenz/docker-kafka-kraft:latest ports: - \"9092:9092\" environment: - KRAFT_CONTAINER_HOST_NAME=localhost keycloak: image: docker.io/jboss/keycloak:13.0.1 environment: - KEYCLOAK_USER=admin - KEYCLOAK_PASSWORD=admin123456 - DB_VENDOR=h2 ports: - \"8080:8080\" Make sure all dependencies are running correctly. To start the drogue server, run: drogue-cloud-server run --enable-all This will perform the following steps: Migrate database schema Create Keycloak OIDC clients Start all drogue services You should be able to connect to the local drogue instance using the drg client: drg login http://localhost:10001 To enable TLS for the protocol endpoints, you can pass the certificate and key using --server-cert and --server-key.","title":"Deploying on bare metal","component":"drogue-cloud","version":"0.9","name":"bare-metal","url":"/drogue-cloud/0.9/deployment/bare-metal.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"(Optional) Starting pre-requisites","hash":"_optional_starting_pre_requisites","id":2},{"text":"Running","hash":"_running","id":3},{"text":"Enabling TLS","hash":"_enabling_tls","id":4}]},"181":{"id":181,"text":"First we need to prepare the cluster. minikube start --cpus 4 --memory 16384 --disk-size 20gb --addons ingress Once the cluster is up and running, you need the start the load balancer tunnel in a new terminal, as this command must be running until you shut down your cluster, or the tunnel. minikube tunnel Creating a new cluster with Kind requires to execute the following command: kind create cluster --config=deploy/kind/cluster-config.yaml Ingress controller required The deployment requires a Kubernetes ingress controller to be deployed. When using Kind, the deployment script will automatically deploy the NGINX Ingress Controller, but you still need to export the ports to allow access. Using the command above, will already use a configuration which takes care of that. For any other cluster: You need to have a working context for kubectl (e.g. oc login). You will need to be able to create new namespaces, being admin helps. You need a working Ingress Controller. For OpenShift, you can use Routes. You need some kind of LoadBalancer support. For OpenShift, you can use Routes. You must have PersistentVolumes available to bind to.","title":"Prepare the cluster","component":"drogue-cloud","version":"0.9","name":"cluster","url":"/drogue-cloud/0.9/deployment/cluster.html","titles":[{"text":"Minikube","hash":"_minikube","id":1},{"text":"Kind","hash":"_kind","id":2},{"text":"Other","hash":"_other","id":3}]},"182":{"id":182,"text":"Instead of running the installer, which installs a released version of Drogue Cloud, you can also directly from the repository, using :latest images instead. The same way, you can also deploy your custom-built images. main and tagged versions Deploying from the repository implies that you install latest or main. Even when you check out a tag or branch from the repository, this will always install latest. If you want to install a tagged version, use the installer. Additionally, you will need to: git Clone the drogue-cloud repository Installing Drogue Cloud, using the standard images, can be done by calling the makefile target deploy: make deploy If you built custom images, and pushed them to a container repository, you can deploy them using the following command: make CONTAINER_REGISTRY=quay.io/my-repo build images You can install them using: make CONTAINER_REGISTRY=quay.io/my-repo deploy The makefile actually uses the installer script scripts/drgadm internally. It only passes in the right arguments, so that the installer will install images from a different registry, or use a different tag. By default, the installer scripts, even on the main branch, will install a tagged version. Sometimes tagged versions are not yet available on the container registry, and thus, the installation may fail. It is therefore recommended to install \"latest\" images using the make deploy command.","title":"Deploying from the repository","component":"drogue-cloud","version":"0.9","name":"development","url":"/drogue-cloud/0.9/deployment/development.html","titles":[{"text":"Additional pre-requisites","hash":"_additional_pre_requisites","id":1},{"text":"Deploy standard images","hash":"_deploy_standard_images","id":2},{"text":"Deploy custom images","hash":"_deploy_custom_images","id":3},{"text":"Using the installer script for development","hash":"_using_the_installer_script_for_development","id":4}]},"183":{"id":183,"text":"Deploying a complex solution like this can be tricky. We tried make it as simple as possible for a local test installation. The following sections will walk you through the steps, required to install Drogue Cloud. It will also try to show options to customize this process.","title":"Deployment","component":"drogue-cloud","version":"0.9","name":"index","url":"/drogue-cloud/0.9/deployment/index.html","titles":[]},"184":{"id":184,"text":"Most of the deployment of Drogue Cloud uses Helm in combination with kubectl for installing dependencies. However, we do require a few steps before and after the deployment. Installing dependencies on the cluster and setting URLs afterwards. For this we have a magic installer script, that does everything for you. It is suited for an easy start on a local test cluster. The installer package is part of the GitHub release record: https://github.com/drogue-iot/drogue-cloud/releases/latest There is one package for each type of Kubernetes cluster: install-minikube – For using with Minikube install-kind – For using with Kind install-openshift – For using with OpenShift Download the package, matching the cluster you plan to use. Unzip the package and change into the folder extracted from the archive. The installer will create a new instance of Drogue Cloud on the cluster you are currently logged in to. By default, this includes: Installing Strimzi Creating a Kafka cluster Installing the Keycloak operator Create a custom CA for the endpoints If you want to install those dependencies manually, for example using OLM, you can opt-out of the installation (see below). Additionally, it installs Knative and an example application and can install digital twin feature as well. Deployment of these components can be configured using installer arguments as explained below. Run the installer script ./script/drgadm deploy, adding the options appropriate for your setup. You can use the -c argument to define which cluster type you have. Default cluster type By default, the cluster type will be minikube for the script in the repository. For the installers, this default value will be changed to the installer type you downloaded. You can still override the default, using: ./script/drgadm deploy -c kind The deploy command of drgadm supports the following argument -k or INSTALL_DEPS Don’t install any dependency by default. -s Set additional Helm values. May be repeated multiple times. -m Minimize: Reduces the default resource requests to allow deploying on more constrained environments. -d or DOMAIN Manually provide the application DNS domain. -c or CLUSTER Specify the cluster type (any of minikube, kind, openshift, kubernetes). -p Adds an additional Helm value file, named deploy/helm/profiles/.yaml. -t Helm installation timeout (default: 15m) -n or DROGUE_NS Changes the target Drogue IoT namespace. -T Install digital twin feature. -e Don’t install examples. -M Deploy metrics Example: Install Drogue Cloud on kind cluster without dependencies. ./script/drgadm deploy -c kind -k The -k argument will skip installing all dependencies. If you want to install of just some of the dependencies (like Strimzi or Keycloak) yourself, you can opt out of installing them by the script. The installer has a few additional options which are controlled by using environment variables. You can set them by prefixing the call to the installation script, using env and the variable assignment: env INSTALL_STRIMZI=false ./script/drgadm deploy Variable Name Default value Description INSTALL_STRIMZI ${INSTALL_DEPS} Control the installation of Strimzi. INSTALL_KEYCLOAK_OPERATOR ${INSTALL_DEPS} Control the installation of the Keycloak operator. By default the example dashboard is installed by the script. You can turn it off by using -e argument. Additionally, digital twin feature can be installed by specifying -T argument. Knative will be installed only if either examples or digital twin feature are installed. To deploy minimal installation without any examples (and Knative) use: ./script/drgadm deploy -e You can change the namespace where of the Drogue Cloud components get installed using the variable DROGUE_NS. The default is drogue-iot. Currently, you can only change the namespace of the Drogue Cloud installation. The namespaces of Knative, Strimzi, are currently not configurable. By default, the installer script will create a custom certificate authority. However, if you already have a key and certificate, you can instruct the installer to use these. There are two options to achieve this. The installer will check if the secrets http-endpoint-tls, mqtt-endpoint-tls and coap-endpoint-tls exist. If they don’t it will create them using generated key and certificate material. If you manually create these TLS secrets, using those names, before running the installer, it will not override these existing secrets. You can do that by running shell commands similar to these: kubectl -n drogue-iot create secret tls http-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - kubectl -n drogue-iot create secret tls mqtt-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - kubectl -n drogue-iot create secret tls coap-endpoint-tls --key $PATH_TO_CERT/tls.key --cert $PATH_TO_CERT/tls.crt --dry-run=client -o json | kubectl -n drogue-iot apply -f - Where $PATH_TO_CERT should point to the path location of your certificate. Should something go wrong, it should be possible to just re-run the installer script. That should simply set the desired state again, and Kubernetes should reconcile accordingly. In most of the cases, this works just fine. After the installer script has run, it will show some information on how you can connect to the system and give some example commands to try out.","title":"Installer script","component":"drogue-cloud","version":"0.9","name":"installer","url":"/drogue-cloud/0.9/deployment/installer.html","titles":[{"text":"Download the installer package","hash":"_download_the_installer_package","id":1},{"text":"Unpacking","hash":"_unpacking","id":2},{"text":"What to expect","hash":"_what_to_expect","id":3},{"text":"Running the installer","hash":"_running_the_installer","id":4},{"text":"Additional installer options","hash":"_additional_installer_options","id":5},{"text":"Skip the dependency installation","hash":"_skip_the_dependency_installation","id":6},{"text":"Install additional examples","hash":"_install_additional_examples","id":7},{"text":"Change the target namespace","hash":"_change_the_target_namespace","id":8},{"text":"Provide custom TLS certificates","hash":"_provide_custom_tls_certificates","id":9},{"text":"Manually create the TLS secrets","hash":"_manually_create_the_tls_secrets","id":10},{"text":"Re-running the installer","hash":"_re_running_the_installer","id":11},{"text":"Status information","hash":"_status_information","id":12}]},"185":{"id":185,"text":"Specifying -M during installation process will install Prometheus and Grafana allowing you to monitor your deployment. You can do that both using installer: ./script/drgadm deploy -M Or during development: env DEPLOY_ARGS=\"-M\" make deploy You can find out the URL of the dashboard by running the drgadm script: env METRICS=true scripts/drgadm examples It should print something like: View the metrics dashboard: ---------------------------- * Login to Grafana: https://metrics.192.168.64.131.nip.io * Default credentials are 'admin/admin123456' if not configured differently You can set values of the drogue-cloud-metrics Helm chart in order to configure various aspects of its deployment. For example, the following will ./script/drgadm deploy -M -s drogueCloudMetrics.grafana.adminPassword=654321nimda will change the password for accessing Grafana dashboard.","title":"Monitoring the deployment","component":"drogue-cloud","version":"0.9","name":"monitoring","url":"/drogue-cloud/0.9/deployment/monitoring.html","titles":[{"text":"Deploying","hash":"_deploying","id":1},{"text":"Using","hash":"_using","id":2},{"text":"Configuring","hash":"_configuring","id":3}]},"186":{"id":186,"text":"Deploying Drogue Cloud, you will need a few tools on your local machine. In most cases a Linux/Unix environment is assumed, which includes Mac OS X. drg- aka Drogue command line client http - aka HTTPie mqtt - aka MQTT CLI kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl/ helm – Helm CLI You will need a Kubernetes cluster in order to deploy Drogue Cloud. For running outside Kubernetes, have a look at the bare metal deployment. In general, any Kubernetes cluster should work. However, we mostly test with: Minikube – https://minikube.sigs.k8s.io/docs/start/ Kind – https://kind.sigs.k8s.io/docs/user/quick-start/ OpenShift or OKD – https://www.openshift.com/ or https://www.okd.io/","title":"Pre-requisites","component":"drogue-cloud","version":"0.9","name":"pre-reqs","url":"/drogue-cloud/0.9/deployment/pre-reqs.html","titles":[{"text":"Command line tools","hash":"_command_line_tools","id":1},{"text":"Kubernetes Cluster","hash":"_kubernetes_cluster","id":2}]},"187":{"id":187,"text":"Tracing using Jaeger tracing can be enabled for Drogue Cloud during deployment. In the Helm charts, set the value: global: drogueCloud: jaeger: enabled: true By default, tracing is disabled.","title":"Tracing","component":"drogue-cloud","version":"0.9","name":"tracing","url":"/drogue-cloud/0.9/deployment/tracing.html","titles":[{"text":"Helm Charts","hash":"_helm_charts","id":1}]},"188":{"id":188,"text":"When deploying Drogue Cloud, or using the sandbox, you might encounter additional services, which are not part of the core Drogue Cloud architecture (yet). The default deployment contains a Grafana and a TimescaleDB instance, which is set up in a way that temperature readings are automatically stored in the TimescaleDB instance. The Grafana dashboard has an example dashboard visualizing these readings. \"Temperate readings\" are identified by a payload being JSON and containing a temp field on the root level object. This is considered an example, and allows to quickly try out Drogue Cloud services. Typically, Grafana and TimescaleDB would be a \"user application\", which would run outside the Drogue Cloud namespace or cluster. Eclipse Ditto is a digital-twin solution, which can be integrated with Cloud Events and Drogue Cloud. We have an \"addon\" deployment for this in our repository, and also deploy this on our sandbox instance. However, currently Eclipse Ditto is not part of the core Drogue Cloud infrastructure. The integration of Ditto is a future goal, but as of now still a work in progress.","title":"Additional components","component":"drogue-cloud","version":"0.9","name":"addons","url":"/drogue-cloud/0.9/introduction/addons.html","titles":[{"text":"Grafana & TimescaleDB","hash":"_grafana_timescaledb","id":1},{"text":"Eclipse Ditto","hash":"_eclipse_ditto","id":2}]},"189":{"id":189,"text":"The device registry stores the configuration of applications and devices. While the system has a single sign-on system for the user facing services, devices, especially embedded devices, are more limited and using OAuth tokens might not be a good fit. In general, devices have different usage patterns when it comes to authentication and authorization. Open ID connect and OAuth are designed with a strong focus on HTTP. Which is great, when it comes to authenticate users using browsers and REST clients, but becomes a burden when embedded systems and protocols like MQTT and CoAP come into play. Drogue Cloud tries to make it as easy as possible for devices to connect to the cloud side, and so we believe that technologies like pre-shared keys, X.509 client certificates, or simple \"username/password\" credentials are a better fit for devices. Still, for user/application facing application we use Open ID connect, as you can read in Single sign-on. A PostgreSQL compatible database is used to persist the information. The device registry component consists of several services, which provides internal and external APIs to access the data stored in this database. (Device) Management API Allows external access to the application and device information. This is a REST API, which allows using management tools and applications to create, edit, delete, and view data stored inside the device registry. User Auth Service Allows internal applications to check if a user has access to a requested resource. This is for example used by the web frontend, to ensure a user may use the \"message spy\" to access messages of this application. Or by the management API to check if a user may perform the requested operation on a resource. This service works with read-only access to the database, and can work with a ready-only slave replica. Device Auth Service Allows internal application to authenticate and authorize a device. For example, this service is being used by the protocol endpoints, to grant devices access for publishing data to the system. Validating credentials like passwords or X.509 client certificates. Once authenticated, it also reports backs additional device configuration for the endpoints, like core mapping information for the LoRaWAN \"function ports\". This service works with read-only access to the database, and can work with a ready-only slave replica. In addition to the management API, which allows getting/reading information out of the registry, the registry will also send \"change events\", when resources get modified. This is again built on top of Knative eventing, and allows services to act on the modification of applications and devices. Using this concept, it is possible to implement \"controllers\" (or \"operators\"), which reconcile the desired state of a resource. One example of this, is the \"The Things Network\" (TTN) controller, which detects a TTN specific section in the device configuration, and then tries to create an appropriate device in a linked TTN instance. Currently, this functionality is considered \"internal\", and such change events cannot be consumed from outside the system. Drogue Cloud has a single sign-on (SSO) service, which by default is implemented by Keycloak. As mentioned before, the SSO service is used to authenticate users and applications, not devices. It is also used internally, to manage access between the internal services. The authorization however, the check if a user has access to a device or application, is handled by the \"user auth service\", which is backed by the device registry. The SSO service is also used in order to integrate other services, like the Eclipse Ditto based digital twin service, or the example Grafana Dashboard.","title":"Control plane","component":"drogue-cloud","version":"0.9","name":"control","url":"/drogue-cloud/0.9/introduction/control.html","titles":[{"text":"Device registry","hash":"_device_registry","id":1},{"text":"Provided services","hash":"_provided_services","id":2},{"text":"Change events for integration","hash":"_change_events_for_integration","id":3},{"text":"Single sign-on","hash":"_single_sign_on","id":4}]},"190":{"id":190,"text":"A core feature of Drogue Cloud is the abstraction of protocols. Typical IoT protocols are MQTT, CoAP, OPC UA, but also HTTP is being used by some devices. Ideally, your cloud side application only needs to think about implementing one protocol, in order to interact with your devices. However, different IoT protocols provide benefits on the device side. As the devices are more constrained than the cloud side, Drogue Cloud tries to levarage the benefits of IoT protocols, while providing a normalization layer on the cloud side, that makes it easy for your applications to consume the data. But also on the cloud side, different ways to consume data exists. May that be a direct connection to a Kafka topic, again MQTT, or a simple Web socket connection. Drogue Cloud tries to be integrate as good as possible, and not force you into a specific API. Drogue Cloud is based on Knative, and internally uses the Cloud Events specification to forward messages. Cloud events on the other side have different mappings to transport channels, such as MQTT, Kafka, HTTP, etc.. And while Cloud Events can also be used on the external interfaces of Drogue Cloud, it isn’t a requirement, and you can use your custom protocols as you need. Devices communicate with the Protocol endpoints, which implement the protocol specific mapping between the actual protocol and the internal Cloud Events based message format. The protocol endpoints also authentication and authorize devices and its configured gateways. Validate credentials, or X.509 client certificates and ensure that the devices are enabled in the system. Once the device is granted access to publish (or receive) data, the protocol endpoint will hook up the device to the internal message flow. It subscribes to commands targeted towards the device, and forwards messages from the device to an internal Knative eventing endpoint which takes care of processing and delivering the messgaes. The actual payload of the messages is not processed, and just passed on the Knative eventing destination. In some cases the payload of an incoming request is not equal to the payload of the actual message. For example, a request from \"The Things Network\" (TTN) conists of a payload, which contains meta data (like the device ID), and then the actual payload of the original message from the device. In cases like this it depends on the protocol adapter what it considers payload and what is metadata. In the case of TTN, you can configure if you want to have the full request payload, or just the original device payload. When a protocol endpoint drops off an incoming message to the Knative eventing service, this service is backed by a Kafka topic[1]. The responsibility of Kafka is to deliver messages to the target consumer. Peristing messages if needed, and handling shared consumer groups if requested. This allows Drogue Cloud to buffer messages when the consumer is unavailable or of there is a peak of messages that the consumer currently cannot handle. Also, this allows to drive a shared consumer model, where in a group of consumers only one receives a messages. This concept is used to share the load for messages to multiple instances of a consumer. As mentioned before, Drogue Cloud relies on a Knative eventing destination which provides these guarantees, and uses Kafka to implement this. However, it is possible to replace the Kafka implementation with a different implementation. Applications, like devices, are provided by the user and live outside of the Drogue Cloud instance. They still may run on the same cluster. By \"consuming\" messages, we mean that messages, sent by a device, are forwarded to the target application. It also implies a channel back to the device, for sending commands. However, as device-to-cloud messages are much more frequent, we simply focus on \"consuming\" messages. In general there are \"push\" or \"pull\" modes. Messages are always sent to the consumer in an event oriented manner, \"push\" and \"pull\" only refers on who initiates the process. Push model A sender service inside the Drogue Cloud instance constantly tries to reach out to a target destination, trying to deliver messages. This might be a Knative eventing service, which tries to deliver messages from the Kafka topic to an HTTP endpoint. Pull mode A passive service inside the Drogue Cloud instance that waits for a consumer to connect. Once the consumer connected successfully, messages start to flow. This might be an MQTT server, which publishes messages to the consumer once it subscribed. Authentication (authn) and authorization (authz) happens in two different realms[2] of the system. On the device facing side and on the user/application facing side. And while it may be technically incorrect, in the next few paragraphs \"authentication\" implies authentication and authorization, unless noted otherwise. The device facing authentication is backed by the device registry, which is the central storage for device information and configuration. It also stores credentials of devices, like passwords or X.509 trust anchors. The user facing authentication is backed by an Open ID connect, single sign-on system. By default we use Keycloak, however it should be possible to use any other Open ID connect compatible solution. Services internally also use the same SSO solution as external users. 1. Technically it is a Knative eventing service, which could be implemented by different technologies. The default implementation for Drogue Cloud though is Kafka. 2. The term \"realm\" doesn’t refer to an HTTP or Keycloak \"realm\" here","title":"Data plane","component":"drogue-cloud","version":"0.9","name":"data","url":"/drogue-cloud/0.9/introduction/data.html","titles":[{"text":"Protocol normalization","hash":"_protocol_normalization","id":1},{"text":"Message persistence","hash":"_message_persistence","id":2},{"text":"Consuming messages","hash":"_consuming_messages","id":3},{"text":"Authentication & authorization","hash":"_authentication_authorization","id":4}]},"191":{"id":191,"text":"Most of this documentation talks about \"devices\". However, what we actually mean is: devices, gateways, and services. Device A device, directly connected to Drogue Cloud. This may be an embedded device, or a more powerfull compute node with a full blown operating system. It may also be a containerized application, running inside an Edge node, connecting to Drogue Cloud. Gateway A device, which acts as a proxy for other devices, that may not directly connect to Drogue Cloud. This may be some kind of Linux machine, which allows non-IP enabled devices, like Bluetooth Low Energy (BLE) devices, to connect to Drogue Cloud, by forwarding messages between the two protocols. Services In some cases a gateway is not a single device, but a bigger, maybe cloud based, service as well. Still it acts as a proxy for devices to communicate with Drogue Cloud. An example might be \"The Things Network\" (TTN), or \"Sigfox\". Both services have their own technical infrastructure to which devices connect. These services act as a proxy to their devices. From a Drogue Cloud perspective such services are \"gateways\" as well. It may be, that between Drogue Cloud and the actual device, additional \"gateways\", like a LoRaWAN gateway, are in place. A LoRa device might connect to its local gateway, which connects to the TTN network, which then connects to Drogue Cloud. However, for Drogue Cloud only the device which directly connects (TTN service) and the originating device (the actual device) is important. Intermediate gateways may be in play, but are not relevant.","title":"Devices, Gateways & Services","component":"drogue-cloud","version":"0.9","name":"devices","url":"/drogue-cloud/0.9/introduction/devices.html","titles":[]},"192":{"id":192,"text":"The main purpose of Drogue IoT cloud is to connect applications with devices. For applications the devices are the gateways into the real world. They allow to monitor by acquiring sensor information, or interact with by showing information or controlling actuators. Of course this diagram over-simplifies the problem. And still, connecting to a device to a simple, single backend application is a trivial task. So what does Drogue Cloud do? And why is it a more complex than a simple MQTT broker? The following sections will dive into the architecture of Drogue Cloud, and will explain what the benefit if this architecture is. The following sections will use My device and My application. These are the devices and applications that a user of Drogue Cloud would bring and try to connect. These applications are not provided by Drogue Cloud. Drogue Device provides tools to create the firmware of such devices if they are embedded micro-controllers. However, Drogue Cloud also allows to integrate larger devices, like Linux systems, gateways and it can integrate with other, existing IoT services. Drogue Cloud is intended to create an as a service experience. This means that the typical user of Drogue Cloud would not set up and install Drogue Cloud, but use an existing, hosted instance. Still, it is possible to set up your own instance, and use this for only one application and user. However, the decision to make this a shared multi-user system, make some aspects more complicated. Then again, if your setup grows, you shouldn’t have any problems scaling up. The following section will provide more information about: The data plane The control plane The actual services","title":"Introduction","component":"drogue-cloud","version":"0.9","name":"index","url":"/drogue-cloud/0.9/introduction/index.html","titles":[]},"193":{"id":193,"text":"Drogue Cloud consists of multiple internal and external services, as explained in this chapter. The following sub-sections list a few of the core services, considered interfacing points for users of Drogue Cloud. The management access to the device registry. Acting on device change events, operators will reconcile the desired state of applications and devices, with internal or external services. The topic operator creates Kafka topics as required by the applications. The Things Network operator (TTN operator) sets up a connection between Drogue Cloud and a TTN V3 instance. It will also synchronize devices from Drogue Cloud to TTN. Protocol endpoints, used for devices to communicate with the system. A general purpose CoAP endpoint, providing a Drogue IoT specific API. A general purpose HTTP endpoint. It provides API compatible with: Drogue IoT The Things Network Eclipse Hono A general purpose MQTT endpoint, providing a Drogue IoT specific API. A drop-off point, with an HTTP API, for cloud-to-device messages. Integration services allow cloud side applications to interface with Drogue IoT, in order to communicate with devices. The MQTT integration is a multi-application, push based integration, which allows to use MQTT v3.1.1 and v5 for receiving events coming from devices. It provides events in the MQTT cloud events format 1.0, in both structured and binary mode.","title":"Noteworthy services","component":"drogue-cloud","version":"0.9","name":"services","url":"/drogue-cloud/0.9/introduction/services.html","titles":[{"text":"Device Registry","hash":"_device_registry","id":1},{"text":"Management API","hash":"_management_api","id":2},{"text":"Operators","hash":"_operators","id":3},{"text":"Topic operator","hash":"_topic_operator","id":4},{"text":"The Things Network operator","hash":"_the_things_network_operator","id":5},{"text":"Endpoints","hash":"_endpoints","id":6},{"text":"CoAP endpoint","hash":"_coap_endpoint","id":7},{"text":"HTTP endpoint","hash":"_http_endpoint","id":8},{"text":"MQTT endpoint","hash":"_mqtt_endpoint","id":9},{"text":"Command endpoint","hash":"_command_endpoint","id":10},{"text":"Integrations","hash":"_integrations","id":11},{"text":"MQTT Integration","hash":"_mqtt_integration","id":12}]},"194":{"id":194,"text":"This will create a new application, and connect it with The Things Network. You will need create an account at The Things Network. As part of that you will need to: Remember which region you are assigned to (e.g. eu1 for eu1.cloud.thethings.network). Create an API key for this account with the permission to create new applications. Remember the name of the user. Create a new application in Drogue Cloud with the TTN-specific information: drg create application my-ttn-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, must have access to create new applications for the provided owner. 2 The (optional) ID of the application in the TTN system. Defaults to the name of the application in Drogue Cloud. This valid must not be changed. 3 The name of the user owning the application. See Using an organization for details on using an organization instead. 4 The name of region, or a URL to the API backend. This will enable the integration and trigger the reconciliation process. You can also use drg edit app my-ttn-app to change the configuration of an existing application. Taking a look at the TTN console, you should see the new application (my-app-alias in this case), and a webhook named drogue-iot. You can also use an organization, for this you will need to change the owner to explicitly being an organization type: { \"spec\": { \"ttn\": { \"api\": { \"owner\": { \"org\": \"my-org\" (1) }, \"owner\": { \"user\": \"my-user\" (2) }, \"owner\": \"my-user\" (3) } } } } 1 Use an organization named \"my-org\" 2 Use a user named \"my-user\" 3 Use a user named \"my-user\" Deleting an application will delete all devices in Drogue Cloud and the TTN system. When all devices have been deleted, the application itself will be deleted in both Drogue Cloud and the TTN system. Soft deletion Applications in The Things Network are only \"soft deleted\". This implies that the name of the application cannot be re-used. So it is not possible to re-create or re-use the applicatio name. However you can use an alternate application ID in TTN by setting the .spec.ttn.api.id field to an unused value.","title":"Managing applications","component":"drogue-cloud","version":"0.9","name":"app","url":"/drogue-cloud/0.9/ttn/app.html","titles":[{"text":"Setting up a new application","hash":"_setting_up_a_new_application","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Using an organization","hash":"_using_an_organization","id":4},{"text":"Deleting an application","hash":"_deleting_an_application","id":5}]},"195":{"id":195,"text":"This will register a new device, and synchronized it with The Things Network. You will need the following information for your device: Device EUI Application/Join EUI Application Key Supported LoRa capabilities Create a new device in Drogue Cloud with TTN specific information: drg create --app my-ttn-app device my-ttn-device-1 --spec '{ \"ttn\": { \"app_eui\": \"0123456789ABCDEF\", \"app_key\": \"0123456789ABCDEF...\", \"dev_eui\": \"0123456789ABCDEF\", \"frequency_plan_id\": \"...\", (1) \"lorawan_phy_version\": \"...\", (2) \"lorawan_version\": \"...\" (3) } }' 1 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ 2 An ID of the TTN supported LoRa versions, e.g. PHY_V1_0 3 An ID of the TTN supported LoRa version, e.g. MAC_V1_0 You can also use drg edit device --app my-ttn-app my-ttn-device-1 to change the configuration of an existing device. When you delete a device in Drogue Cloud, it will also be deleted in the TTN system. If you want to delete the device in TTN, but keep it in Drogue Cloud, then you can simply remove or rename the .spec.ttn section.","title":"Managing devices","component":"drogue-cloud","version":"0.9","name":"device","url":"/drogue-cloud/0.9/ttn/device.html","titles":[{"text":"Setting up a new device","hash":"_setting_up_a_new_device","id":1},{"text":"Pre-requisites","hash":"_pre_requisites","id":2},{"text":"Procedure","hash":"_procedure","id":3},{"text":"Deleting a device","hash":"_deleting_a_device","id":4},{"text":"Disconnecting a device","hash":"_disconnecting_a_device","id":5}]},"196":{"id":196,"text":"Drogue IoT Cloud has can integrate with The Things Network (TTN). Applications and devices managed in the Drogue IoT device registry can be synced to the TTN system. This includes automatically connecting both systems using a Drogue cloud gateway device, to receive messages from LoRa devices through the TTN system. The integration is meant to be configured on a per-application level, so that normal users of Drogue Cloud can configure their own integration, using their own TTN account. There is no system-wide synchronization. The integration works with V3 of the TTN API. Earlier versions are not supported. The integration currently supports: Creating applications in The Things Network. Creating a gateway device in Drogue Cloud. Configuring the credentials for this gateway device using a randomized password- Creating an application instance on the TTN side. Creating a webhook for this application, connecting the TTN side with Drogue Cloud, using the created gateway device. Creating devices in The Things Network. Authorizing the TTN gateway device in Drogue Cloud for this device Creating the device on the TTN side Cleaning up when resources get deleted Deleting applications Deleting an application in Drogue Cloud, or disabling the TTN integration for a Drogue Cloud application, will also delete the application in TTN. However, The Things Network only soft deletes applications. The name of the application is still blocked from further use after the deletion. This means that you cannot simply re-create an application with the same name. Drogue Cloud allows you to override the application name on the TTN side, however you should consider twice before actually trigger a delete.","title":"The Things Network integration","component":"drogue-cloud","version":"0.9","name":"index","url":"/drogue-cloud/0.9/ttn/index.html","titles":[]},"197":{"id":197,"text":"Some components of Drogue Cloud support the MQTT protocol. Unless noted otherwise, all components support MQTT 3.1.1 and 5 not only using the binary MQTT protocol, but also using MQTT over Websockets. Drogue Cloud provides three different, dedicated endpoint for MQTT-enabled service: Plain MQTT MQTT over Websockets MQTT over Websockets without support for X.509 client certificates These are simply the same services (e.g. MQTT endpoint or integration), but running with different settings on the MQTT protocol layer. True, it is possible to detect if a connecting client is using MQTT or Websocket. However, it is not possible to detect if a browser based websocket client connects using TLS or if it is a normal one. The difference is, that a browser based websocket client cannot properly establish a TLS session, if the server allows the use of X.509 client certificates. So instead of providing a mix of auto-detect and additional endpoints, we do offer dedicated endpoint for each connection profile.","title":"","component":"drogue-cloud","version":"0.9","name":"common-mqtt-websocket","url":"/drogue-cloud/0.9/user-guide/common-mqtt-websocket.html","titles":[{"text":"MQTT over Websocket","hash":"_mqtt_over_websocket","id":1},{"text":"Connecting","hash":"_connecting","id":2}]},"198":{"id":198,"text":"This section describes a few topics that are common to various areas of Drogue Cloud. Durations are defined using the \"humantime\" syntax. For example: durationOneSecond: 1s (1) durationOneMinute: 1m (2) durationOneHourAndTwoMinutes: 1hour 30min (3) 1 Timeout of one second 2 Timeout of one minute 3 Duration of 1.5 hours Also see: https://docs.rs/humantime/latest/humantime/fn.parse_duration.html Some components of Drogue Cloud allow you to configure an external endpoint, to which Drogue Cloud will reach out to, when necessary. This can be configured using the structure ExternalEndpoint. This is normally embedded in some other structure. The following examples will assume that there is a field named endpoint, which should define the external endpoint. The role of the endpoint is specific to the actual location of the configuration. This section simply describes the common configuration options. The most simple configuration is: endpoint: url: https://my-external/endpoint By default, the functionality using an external endpoint will use a reasonable HTTP method for making the request. However, you can override the method using the following field: endpoint: url: https://my-external/endpoint method: GET (1) 1 Must be a valid HTTP method, using uppercase only. If the remote endpoint requires authentication, you can configure HTTP \"basic auth\" like this: endpoint: url: https://my-external/endpoint auth: basic: username: my-username password: my-password Or a \"bearer token\" using: endpoint: url: https://my-external/endpoint auth: bearer: token: my-token It is also possible to add additional HTTP header like so: endpoint: url: https://my-external/endpoint headers: - my-foo-header: my-foo-value By default, the functionality using an external endpoint will use a reasonable default timeout for making the request. However, you can override the timeout using the following field: endpoint: url: https://my-external/endpoint timeout: 1s (1) 1 Timeout duration in a format described in Defining durations By default, system default TLS settings will be used. TLS validation is enabled. However, you can override and tweak the TLS settings using the following fields: These settings don’t \"enable\" TLS. This is done by selecting a protocol using TLS using the url, like https://. endpoint: url: https://my-external/endpoint tls: insecure: true (1) certificate: | (2) -----BEGIN CERTIFICATE----- MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/ MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK 4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5 bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4 FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1 c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC 5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW 9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5 -----END CERTIFICATE----- 1 Disable TLS validation. This is insecure and should be used with caution! 2 Explicit trust anchor, overriding all system trust anchors.","title":"Common topics","component":"drogue-cloud","version":"0.9","name":"common","url":"/drogue-cloud/0.9/user-guide/common.html","titles":[{"text":"Defining durations","hash":"defining_durations","id":1},{"text":"Defining external endpoints","hash":"defining_external_endpoints","id":2},{"text":"HTTP method override","hash":"_http_method_override","id":3},{"text":"Authentication","hash":"_authentication","id":4},{"text":"Additional HTTP headers","hash":"_additional_http_headers","id":5},{"text":"Timeout","hash":"_timeout","id":6},{"text":"TLS","hash":"_tls","id":7}]},"199":{"id":199,"text":"The CoAP protocol endpoint is a device facing service offering connectivity using a CoAP based API. Currently, the endpoint does not support DTLS. It is not recommended to use this in production or to transfer any sensitive data over public networks. Before communicating with the endpoint, the respective device and application need to be registered with drogue cloud. The coap requests made to the endpoint need to be of the following format: coap:///v1/{channel}/{subject(optional)} The UriPath option should be set with v1, channel name and subject name(optional). Optional parameters can also be passed, but they need to be URL encoded. The rules for encoding the device and application name can be viewed over here. The following parameters can be passed as queries: application: The specific application ID that the device is sending telemetry to device: The device ID data_schema: Data schema of the payload as: Allows the device to alias another ID ct: The amount of time the device will wait for incoming commands For a device to receive commands, it must send a request with a specified timeout. The command will piggyback on the response—the responsibility to track when the device issues a request and promptly issue the command lies on the application. Authentication information is sent using the CoAP option number 4209. It is carried out using HTTP-like authentication headers. For example: Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk Here, we use the HTTP Basic authentication scheme, along with the base64 encoded device authentication information. The format of the device authentication information is @:. A sample CoAP request would look something like the following: The Request URL would be formatted like so, with the device name 'device#2' and 'device#4' percentage encoded: coap://test-url/v1/sample_channel/sample_subject?application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%232&ct=30 The value of Option 4209, representing auth information \"device1@app1:hey-rodney\": Basic ZGV2aWNlMUBhcHAxOmhleS1yb2RuZXk // present as bytes Value of the UriPath Option(obtained from request URL): v1, Rust, test // present as bytes Value of the UriQuery Option(obtained from request URL): // present as bytes application=app1&device=device%232&data_schema=application%2Foctet-stream&as=device%234&ct=30 There are two response types that a device can receive. A device would receive a response with the 2.04(Changed) status code if the publish action were successful. If the request passed the ct(command timeout) parameter and a command is sent to the device within this interval, the device will receive the 2.05(Content) response code. The contents of the command can then be read from the CoAP option 4210. If a request fails, the device can receive responses with appropriate status codes. The payload in such cases will contain the reason for the error as well.","title":"CoAP protocol endpoint","component":"drogue-cloud","version":"0.9","name":"endpoint-coap","url":"/drogue-cloud/0.9/user-guide/endpoint-coap.html","titles":[{"text":"Requests:","hash":"_requests","id":1},{"text":"Response:","hash":"_response","id":2}]},"200":{"id":200,"text":"The HTTP protocol endpoint is a device facing service offering connectivity using different HTTP based APIs. The base address of the HTTP protocol endpoints depends on your installation. For a local, test installation, this is mostly based on the IP address and uses nip.io to resolve this as a DNS name. Assuming your IP address is 1.2.3.4 the hostname would be http-endpoint.1.2.3.4.nip.io. Drogue Cloud offers a default HTTP API for connecting devices to the cloud. In addition to that, other HTTP APIs may exist, implementing other IoT like APIs, see the following sections for more information. POST /v1/{channel} You need to use one of the following authentication mechanisms: Information Details X.509 Client certificate Provide an X.509 client certificate during the TLS handshake. The certificate must be signed with a trust anchor stored in the device registry on the application level. Credentials: @: Standard username/password authentication using @ as HTTP username. The can either be a device name, device alias, or unique username. Credentials: @ Query: application= Use a standard username and provide the application as part of the HTTP query. The can either be a device name, device alias, or unique username. Credentials: @ Query: application=&device= Use a non-unique username, provide application and device using query parameters. Name Type Location Required Description channel string path X The name of the channel to send to application string query Override the application for authentication. See above. device string query Override the device for authentication. See above. as string query Allows to specify an alternate device name that this device may act on behalf of. The \"as\" device must be configured to allow the authenticated device (from the credentials or device) to act on its behalf. ct integer query http \\ --auth device1@example-app:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.1.2.3.4.nip.io:30443/v1/telemetry \\ temp:=42 http \\ --auth device1:foobar \\ --verify build/certs/endpoints/root-cert.pem \\ POST \\ https://http-endpoint.192.168.39.35.nip.io:30443/v1/foo \\ application==example-app \\ temp:=42 Deprecated! The entrypoint is /ttn/v3.","title":"HTTP protocol endpoint","component":"drogue-cloud","version":"0.9","name":"endpoint-http","url":"/drogue-cloud/0.9/user-guide/endpoint-http.html","titles":[{"text":"Default HTTP API","hash":"_default_http_api","id":1},{"text":"Publish telemetry","hash":"_publish_telemetry","id":2},{"text":"Authentication","hash":"_authentication","id":3},{"text":"Parameters","hash":"_parameters","id":4},{"text":"Code samples","hash":"_code_samples","id":5},{"text":"Shell","hash":"_shell","id":6},{"text":"The Things Network v2","hash":"_the_things_network_v2","id":7},{"text":"The Things Network v3","hash":"_the_things_network_v3","id":8}]},"201":{"id":201,"text":"The MQTT protocol endpoint is a device facing service offering connectivity using a simple MQTT v3.1.1 and v5 based protocol. This is not an MQTT broker It is important to understand, that the MQTT endpoint is not a general purpose MQTT broker. It is an MQTT based API, providing access to Drogue Cloud specific functionality, using the MQTT protocol and existing MQTT tools. As MQTT is a long-lived connection, it makes sense to use it in gateway device use-cases. In this case, a device connects to the MQTT endpoint, and then also performs operations for other devices (connected via the gateway) device. Drogue Cloud supports this model. Basically every device connecting via MQTT can act as a gateway device. The devices which allow other devices to act on their behalf, must indicate this by explicitly selecting a device as their gateway. This is done using the device configuration on the device: metadata: name: sensor01 (1) application: my-app spec: credentials: {} (2) gatewaySelector: matchNames: (3) - gateway01 1 Name of the actual device. 2 Empty credentials, as this device doesn’t need to allow a direct connection. 3 Names of the devices (gateways) which are allowed to act on behalf of this device. A device can act both as direct device and as gateway a the same time. Clean session must be true You may use X.509 client certificates when establishing the TLS connection.The certificate must be signed with a trust anchor stored in the device registry on the application level. Use @ and a configured password for the device. The MQTT endpoint supports different \"dialects\" or APIs.The following subsections describe these dialects.By default, the \"Drogue V1\" dialect is use. However, you can configure the dialect of a device through the application or device configuration: see MQTT dialects. The Drogue V1 dialect is the original one, which supports all the features that Drogue Cloud offers using the MQTT endpoint. To publish data as the connected device, publish to . The channel information will be encoded in the subject header of the generated event. To publish data on behalf of another device, publish to /. If the connected device is not listed as the specified device. The message will be dropped (QoS 0) or rejected (QoS 1). The payload of the publish message will be the \"data\" of the generated event. For MQTT v5, it is possible to set the \"content type\" property, which will be used as the content type for the generated event. By default (for MQTT 3.1.1, or when the content type is not provided), the content-type will be evaluated. If the payload can be successfully parsed as JSON, the content type will be application/json. Otherwise it will be application/octet-stream. In general, the command topic structure is command/inbox//. It is however not possible to subscribe to specific commands only. Topic pattern Example topic Description command/inbox//# command/inbox//set-temp Subscribe to commands for the actual device command/inbox/my-device/# command/inbox/my-device/set-temp Subscribe to commands for the device my-device. command/inbox/# command/inbox/+/# command/inbox/my-device/set-temp command/inbox//set-temp Subscribe to commands for actual device and all devices it acts as a gateway for. The payload of the command, will be the payload of the received message. The \"plain topic\" dialect doesn’t impose any restrictions on the topic naming that devices publish to. So it is ideal for connecting existing clients via MQTT, without the need to change the publish topic structure. The downside is, that additional information (like sending on behalft of another device) which could go in the topic structure, now cannot be assigned a special meaning. The topic the client publishes to will directly be used as the channel information. If the \"device prefix\" option is enabled, then the first segment of the topic will always be used a device ID. The connected device will only act as a gateway. The same access rules apply as for all gateways and devices. Drogue Cloud allows connecting to MQTT over websocket too.This works the same was a standard MQTT, but be sure to check out some more details in the section MQTT over Websockets.","title":"MQTT protocol endpoint","component":"drogue-cloud","version":"0.9","name":"endpoint-mqtt","url":"/drogue-cloud/0.9/user-guide/endpoint-mqtt.html","titles":[{"text":"Simple device vs gateway device","hash":"_simple_device_vs_gateway_device","id":1},{"text":"Connecting","hash":"_connecting","id":2},{"text":"Authenticating","hash":"_authenticating","id":3},{"text":"X.509 Client certificates","hash":"_x_509_client_certificates","id":4},{"text":"Username/password","hash":"_usernamepassword","id":5},{"text":"Protocol dialects","hash":"protocol_dialects","id":6},{"text":"Drogue V1 dialect","hash":"_drogue_v1_dialect","id":7},{"text":"Publish data","hash":"_publish_data","id":8},{"text":"Payload & Content type","hash":"_payload_content_type","id":9},{"text":"Subscribe to commands","hash":"_subscribe_to_commands","id":10},{"text":"Plain topic dialect","hash":"_plain_topic_dialect","id":11},{"text":"Publish data","hash":"_publish_data_2","id":12},{"text":"Connecting over Websockets","hash":"_connecting_over_websockets","id":13}]},"202":{"id":202,"text":"This guide describes how to use Drogue Cloud, from the perspective of a user, consume Drogue Cloud \"as a service\".","title":"User Guide","component":"drogue-cloud","version":"0.9","name":"index","url":"/drogue-cloud/0.9/user-guide/index.html","titles":[]},"203":{"id":203,"text":"The command HTTP integration provides a simple HTTP based API to send commands to devices.","title":"Command HTTP integration","component":"drogue-cloud","version":"0.9","name":"integration-command","url":"/drogue-cloud/0.9/user-guide/integration-command.html","titles":[]},"204":{"id":204,"text":"The Kafka integration allows cloud side applications to directly tap into the event stream coming from the devices. Events are encoded as CloudEvents.","title":"Apache Kafka™ integration","component":"drogue-cloud","version":"0.9","name":"integration-kafka","url":"/drogue-cloud/0.9/user-guide/integration-kafka.html","titles":[]},"205":{"id":205,"text":"A Drogue IoT cloud application can also act as a Knative event source. It will try to deliver events to the Knative serving endpoint you configure. The difference to integrations like MQTT and WebSocket is, that in this case, Drogue Cloud will actively try to deliver events, rather than waiting for a consumer to attach. You can configure this using the section .spec.knative: spec: knative: endpoint: (1) url: https://my-knative-endpoint 1 External endpoint definition as described in Defining external endpoints. This will create a publisher, which will start sending new events as they come in. You can temporarily disable the source using: spec: knative: disable: true (1) endpoint: url: https://my-knative-endpoint 1 Marks the source disabled This will disable the source. It can later be resumed by setting the value to false or removing the field.","title":"Knative integration","component":"drogue-cloud","version":"0.9","name":"integration-knative","url":"/drogue-cloud/0.9/user-guide/integration-knative.html","titles":[{"text":"Configuration","hash":"_configuration","id":1},{"text":"Temporarily disabling","hash":"_temporarily_disabling","id":2}]},"206":{"id":206,"text":"The MQTT integration allows consuming device events and send commands to the devices using an MQTT based API. Events are encoded as CloudEvents. The MQTT integration service allows to connect using standard MQTT mechanisms. Depending on the deployment, either using TLS or non-TLS connections. The service supports both MQTT v3.1.1 and MQTT 5. It is possible to use anonymous authentication. This may severely limit access to data, but in some special cases, this may be a viable use case. You can use the OAuth2 access token of your user as either username or password (not both at the same time!). When using MQTT v3.1.1, you must pass the token as the username, as this version of MQTT doesn’t allow to send a password only. Token expiration OAuth2 access tokens are only valid for a short amount of time. You need to provide a non-expired access token in order to log in. For this, you most likely need to refresh the token before every connection attempt. An alternative is to use API keys instead. When providing a username and a password, the username must be the name of your user, and the password must be an API key created for that user. In order to subscribe to events, subscribe using the following filter: app/. So to subscribe to example-app, you need to subscribe to app/example-app. The default data format follows the MQTT binding for CloudEvents using the \"structured content mode\", which includes all information, metadata and actual payload, as part of the MQTT payload. When using MQTT 5, you can request the service to send events in the \"binary content mode\", which encodes the metadata as part of the MQTT user properties. In this case, the MQTT payload is equal to the actual CloudEvents payload. As this encoding make use of \"user properties\", it is not available when using MQTT v3.1.1. By default, each MQTT subscriber uses its own Kafka consumer group, and thus receives each message. However, you can use MQTT shared subscriptions to define a shared consumer group, which maps to using the same Kafka consumer group on the backend. In this case, only one of the consumers will receive a message. To subscribe using shared subscriptions, use the following subscription filter: $share//app/. So when subscribing to the application my-app with the shared consumer identifier my-group, you would use: $share/my-group/my-app. You can send back a command to a device by publishing to the following topic: command///. For example, sending the command setTemperature with payload {\"value\": 1.23 } to the device my-device of the application my-app, you would need to publish the payload {\"value\": 1.23 } to the topic command/my-app/my-device/setTemperature. Drogue Cloud allows connecting to MQTT over websocket too.This works the same was a standard MQTT, but be sure to check out some more details in the section MQTT over Websockets.","title":"MQTT integration","component":"drogue-cloud","version":"0.9","name":"integration-mqtt","url":"/drogue-cloud/0.9/user-guide/integration-mqtt.html","titles":[{"text":"Connecting","hash":"_connecting","id":1},{"text":"Anonymous","hash":"_anonymous","id":2},{"text":"OAuth2 Token","hash":"_oauth2_token","id":3},{"text":"API Key","hash":"_api_key","id":4},{"text":"Subscribe to events","hash":"_subscribe_to_events","id":5},{"text":"Data format","hash":"_data_format","id":6},{"text":"Binary content mode","hash":"_binary_content_mode","id":7},{"text":"Shared subscriptions","hash":"_shared_subscriptions","id":8},{"text":"Publish commands","hash":"_publish_commands","id":9},{"text":"Connecting over Websockets","hash":"_connecting_over_websockets","id":10}]},"207":{"id":207,"text":"The WebSocket integration allows consuming device events using a simple WebSockets based protocol.Events are encoded as CloudEvents. The Websocket endpoint allows you to authenticate using the standard HTTP Authorization header. Both using an OAuth2 bearer token or by using HTTP \"basic auth\" using username and API key. However, when using a web socket client from inside a browser, that is not supported. In this case it is however possible to provide the same information using HTTP query parameters: Query Parameters Description token Provide an OAuth2 bearer token username and api_key Provide username and API key You can set the consumer group ID by providing a query parameter named group_id. This will set the Kafka consumer group ID to the provided value, which allows to share the load between different consumers. If no consumer group id is provided, a temporary one will be provided. Using a temporary consumer group might lead to missed events during re-connects. If that is a problem for your use case, you need to provide a stable group id.","title":"WebSocket integration","component":"drogue-cloud","version":"0.9","name":"integration-ws","url":"/drogue-cloud/0.9/user-guide/integration-ws.html","titles":[{"text":"Authentication","hash":"_authentication","id":1},{"text":"Consumer Group ID","hash":"_consumer_group_id","id":2}]},"208":{"id":208,"text":"Like HTTP, MQTT is \"just\" a protocol, which defines how events or messages are being transported over the wire. On top of that, oen needs to define an API. Some might disagree and say that you can just publish anything to an MQTT broker. However, implicitly, you have to agree (even when only working with your own components) to a data format and topic structure. As Drogue Cloud is payload agnostic, we don’t interfere or interpret the payload itself[1]. However, we sometimes need it interpret the metadata of events and messages, like the topic a client publishes or subscribes to. The MQTT endpoint supports multiple dialects. However, it also needs to know which dialect a device \"speaks\". Using MQTT v5, it would be easy to add some property during the connection phase, to indicate which dialect the device expects. However, as MQTT v3.1.1 still seems to be the dominant protocol version, that isn’t possible[2]. That is why Drogue Cloud keeps this configuration as part of the application or device configuration. The advantage of that is also, that it can be centrally managed. Just assume some protocol setting of your device, which is somewhere out in the field, is wrong. Being able to correct that in the cloud, might be beneficial. The configuration for MQTT dialects is located in either the application or device resource at .spec.mqtt.dialect. The configuration of a device will override the configuration of an application. If neither the application nor the device has any configuration, the drogue/v1 dialect will be used. spec: mqtt: dialect: type: plainTopic (1) devicePrefix: true (2) 1 Selects the dialect. 2 Additional options on the same level. The follow section describes the configuration of the different dialects. To get an understanding of the different dialects themselves, see Protocol dialects. The type ID for this dialect is: drogue/v1. This dialect does not have any additional options. The type ID for this dialect is: plainTopic. Option Type Default Description devicePrefix boolean false Whether the first segment in the topic is interpreted as device ID. 1. With a few exceptions 2. At least all ways of stuffing information in e.g. credentials fields somehow feels wrong","title":"MQTT dialects","component":"drogue-cloud","version":"0.9","name":"management-mqtt","url":"/drogue-cloud/0.9/user-guide/management-mqtt.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Basic configuration","hash":"_basic_configuration","id":2},{"text":"Dialects","hash":"_dialects","id":3},{"text":"Drogue V1","hash":"_drogue_v1","id":4},{"text":"Plain topic","hash":"_plain_topic","id":5}]},"209":{"id":209,"text":"One core functionality of Drogue Cloud is to take device events and send deliver them to a Kafka topic, so that interested application can consume them. In that process, Drogue Cloud takes care of device connectivity, authentication & authorization, and some very basic validation steps. However, most of that processing is payload agnostic. By default, payload and metadata just forwarded as is. In some cases it would be helpful though, if metadata or payload could be altered of verified with additional logic during the reception of the event. What might come in handy in situation like this, is a rule based engine, which allows inspecting metadata and payload and decide how to process the event further. Rejecting, diverting, or altering it in the process. However, such a system can get out of hand pretty quickly, and we do not want to re-invent the wheel. A lot of systems like that already exists: Apache Camel for example, to mention just one of them. Also, allowing a user to configure a complex piece of logic for a cloud side, \"as a service\" platform can be rather tricky. Just imagine someone would validate \"what the next matching bitcoin hash\" is. It would be difficult to measure and project the costs caused by user provided validations. So Drogue Cloud tries to strike a balance. Support very simple and stateless operations, while allowing to integrate for more complex operations, hosted by the user. Just two quick examples: Drogue Cloud does offer a way to overwrite the \"content type\" attribute for an event if its channels matches a specific value. But for letting an AI/ML model categorize values of an even, we allow passing the event into an external endpoint, and consume it back as the response, before passing it along the chain. This way you can spin up your own (optionally Knative serving based) endpoint, and do complex calculations there, but do all of this as part of the Drogue Cloud device facing endpoints. The functionality is configured as part of the \"application\" resource in the .spec.publish path. The configuration consists of two main parts: rules which select when operations get triggered what operations should be performed when a rule matches Overall, even pre-processing will iterate over all rules, as defined in the order of the configuration and check if a rule matches. If it does, its operations will be executed. The outcome of an operation can one of: continue, accept, reject, drop. When the outcome is to continue, the event might have been modified, and the processing will continue with the next rule to check. When the outcome is to accept, the event might have been modified, the processing will stop, and the event will directly be delivered to the final destination. When the outcome is to reject, the event will be rejected as invalid, responding this condition to the device that sent the event, in case the device waits for a response. When the outcome is to drop, the event will be silently dropped. Towards the device, the operation is still successful. spec: publish: rules: - when: {} (1) then: [] (2) 1 One object which defines if the rule should be activated 2 An array of operations which should be executed when the rule matches You can use the isChannel matcher. For example: when: isChannel: my-channel (1) 1 The name of the channel which the event must match You can invert the outcome of a check using the not operation: when: not: isChannel: my-channel This checks if \"the channel is not `my-channel`\". A rule that always matches is always. when: always You can also turn this into \"never\" using the following: when: not: always It is also possible to use multiple checks and combined them with and or or: when: or: - isChannel: foo - isChannel: bar - isChannel: baz Which would match if the channel is either foo, bar, or baz. When an or or and check has no sub-checks, it evaluates to false. Operations are part of the then field, which is an array. All operations will be executed in order. The outcome of an operation may influence the processing of the next. If the array is empty, then simply no operations will be executed. You can silently drop the event using drop: then: drop Or accept the event directly, and stop processing following operations and rules: then: - break Rejecting the event will also stop processing, but return the provided reason back to the sender: then: - reject: This is not right It also is possible to set or remove cloud event attributes or extensions. Cloud event attributes are similar to extensions, they are just extensions that are part of the official specification and thus are treated differently. You can set or remove arbitrary extensions using: then: - setExtension: (1) name: my-ext value: my-value - removeExtension: my-other-ext (2) 1 Set extension my-ext to value my-value 2 Remove extension my-other-ext Setting an extension which already exists will overwrite the value. Removing an extension that does not exist is a no-op. As attributes are somewhat special it is only possible to set some of them. The following attributes are supported and can be set similar to the setExtension operation: datacontenttype - The content type of the event, e.g. application/json dataschema - The schema of the data, e.g. some JSON schema if the content type is JSON subject - The subject of the event, originally the \"channel\" information type - The type of the event, originally io.drogue.event.v1 This will send an event to an external endpoint and wait for the response. HTTP status code Outcome Description 200, 204 Continue The event can continue processing 202 Accept The event gets directly accepted. No further procesing is performed. 400..=499 Reject The event gets rejected. If the response payload is JSON, and contains a .reason field, that value of that field is used as rejection cause. any other This will the processing with a server side error. Devices are encouraged to re-try later. then: validate: endpoint: {} (1) request: (2) type: cloudEvent (3) mode: binary # or structured (4) 1 Endpoint configuration as described in External endpoints 2 Parameters for the outgoing request. Defaults to binary encoded cloud event. 3 Selects the type of the encoding 4 The cloud events mode: binary or structured This will send an event to an external endpoint and wait for the response. The headers and body of the response will be used as the metadata and payload of the new event. then: enrich: endpoint: {} (1) request: (2) type: cloudEvent (3) mode: binary # or structured (4) response: (5) type: cloudEvent (6) 1 Endpoint configuration as described in External endpoints 2 Parameters for the outgoing request. Defaults to binary encoded cloud event. 3 Selects the type of the encoding 4 The cloud events mode: binary or structured 5 Parameters for the incoming response. Defaults to binary encoded cloud event. 6 The response type The response can be one of: cloudEvent - A cloud event (binary of structured). raw - Only use the response body as payload, keep the metadata. assumeStructuredCloudEvent - Assume the response body contains a structured cloud event, with attributes/extensions as part of the root level. However, the response content type is ignored, although it normally must be application/cloudevents+json; charset=UTF-8. This can be used for broken cloud events serialization.","title":"Event pre-processing","component":"drogue-cloud","version":"0.9","name":"management-rules","url":"/drogue-cloud/0.9/user-guide/management-rules.html","titles":[{"text":"Scope","hash":"_scope","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Rules","hash":"_rules","id":3},{"text":"Checking for a channel","hash":"_checking_for_a_channel","id":4},{"text":"Inverting","hash":"_inverting","id":5},{"text":"Always matching","hash":"_always_matching","id":6},{"text":"And/Or","hash":"_andor","id":7},{"text":"Operations","hash":"_operations","id":8},{"text":"Drop / Accept / Reject","hash":"_drop_accept_reject","id":9},{"text":"Setting/Removing attributes/extensions","hash":"_settingremoving_attributesextensions","id":10},{"text":"Externally validate an event","hash":"_externally_validate_an_event","id":11},{"text":"Externally enrich an event","hash":"_externally_enrich_an_event","id":12}]},"210":{"id":210,"text":"The following sections will guide you through the basic management capabilities of Drogue Cloud. All management operations are available through the API. However, for an easier getting started experience, the following examples will use the command line tool drg for performing the operations. All following examples require that you are already logged in to a Drogue Cloud cluster using the command line tool drg. An application is the container for devices.A user can have multiple applications, but each device belongs to a single application. Create a new application using the following command: drg create app my-app This will create a new application named my-app. If the application name is already used, you will receive an error, as application names are unique. Applications are defined by a JSON structure. It is possible to edit this structure in YAML format (for easier editing) using the following command: drg edit app my-app This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing application can be deleted using the following command: drg delete app my-app Deleting an application me be delayed, as first all devices which require to be cleaned up will be processes.Once this is finished, the application might require cleanup too.Only once all resources are properly cleaned up, the application will be actually deleted. As devices belong to an application, you need to create an application first. The following commands will explicitly select the application by providing the --app argument.You can however use drg config set-default-app, to set a default application and omit the --app argument. A new device is being created using the following command: drg create device --app my-app my-device-1 This will create my-device-1 as part of my-app. In most cases a device will require additional information, like access credentials or gateway assignments. You can provide initial configuration using the --spec argument: drg create device --app my-app my-device-1 --spec '{\"credentials\": {\"credentials\":[{ \"pass\": \"foobar\" }]}}' The --spec argument accepts a JSON string of the full \"spec\" section of the device. You can edit the device configuration in YAML the same as the application: drg edit device --app my-app my-device-1 This will open an editor, and allow you to make modifications to the YAML source. When you close the editor, the change will be sent to the server for updating. An existing device can be deleted using the following command: drg delete device --app my-app my-device-1 If a device requires any cleanup, the device will be first marked as deleted, the cleanup will be processed, and then the device will be deleted. It is possible to set a password as access credentials. This way, when connecting, the username will be the device name. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - pass: my-password (1) 1 One credential entry of type \"password\". You can also use hashed passwords. For this, you need to specify the hash algorithm: metadata: name: device # … spec: # … credentials: credentials: - pass: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (1) 1 One credential entry of type \"password\" as \"bcrypt\" hash. See Supported hashes for a list of supported password hashes. It is also possible to set a username and password as credentials. In this case, the device ID must be transmitted through an alternate way, in order to look up the device. The provided username/password combination will then be checked against the configured username/password combination. The way the device name is transmitted to the endpoint depends on the capabilities of the protocol endpoint. For example, using HTTP, the device name can be provided as an additional query parameter. You have created a device Configure the device, adding a password credentials entry: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bar (3) 1 The device name 2 The username 3 The plain text password You can also use hashed passwords, instead of plain text: metadata: name: device (1) # … spec: # … credentials: credentials: - user: username: device-user (2) password: bcrypt: \"$2a$12$WsLmgORBv3WHZ3CjCiMzXOeo2hL5UEeq8PEd11q9BfbM/RWqb7c3G\" (3) 1 The device name 2 The username 3 The bcrypt hashed password See Supported hashes for a list of supported password hashes. If you want to use the username only for authenticating your device, without the need to provide an additional device identifier, you can use \"unique usernames\". These usernames are unique per application. You have created a device Configure the device, adding a password credentials entry: metadata: name: device # … spec: # … credentials: credentials: - user: username: device-user password: bar unique: true (1) 1 Setting the value to true makes the entry a unique username entry. As described in Setting username/password credentials, you can use hashed passwords too. Every device can act as a gateway for another device. However, it must be granted the permission to act on behalf of that other device. The way this is done, is by adding this information to the device connects through a gateway. You have created two devices. One that should act as gateway (named gateway in the following steps). One that should act as the actual device (named sensor in the following steps). The gateway device has access credentials configured, so that the gateway can connect to the cloud. In the configuration of the actual device, select the devices that can act as a gateway: metadata: name: sensor # … spec: # … gatewaySelector: matchNames: - gateway It is possible to use one or more devices as gateway. It is possible to store passwords either plain text or hashed. The following hash types are currently supported: bcrypt – Bcrypt hash sha512 – SHA512 crypt (Scheme ID 6)","title":"Managing applications and devices","component":"drogue-cloud","version":"0.9","name":"management","url":"/drogue-cloud/0.9/user-guide/management.html","titles":[{"text":"Applications","hash":"applications","id":1},{"text":"Creating a new application","hash":"_creating_a_new_application","id":2},{"text":"Modifying an application","hash":"_modifying_an_application","id":3},{"text":"Deleting an application","hash":"_deleting_an_application","id":4},{"text":"Devices","hash":"devices","id":5},{"text":"Create a new device","hash":"_create_a_new_device","id":6},{"text":"Modifying a device","hash":"_modifying_a_device","id":7},{"text":"Deleting a device","hash":"_deleting_a_device","id":8},{"text":"Setting password credentials","hash":"_setting_password_credentials","id":9},{"text":"Pre-requisites","hash":"_pre_requisites","id":10},{"text":"Procedure","hash":"_procedure","id":11},{"text":"Setting username/password credentials","hash":"setting_username_password","id":12},{"text":"Pre-requisites","hash":"_pre_requisites_2","id":13},{"text":"Procedure","hash":"_procedure_2","id":14},{"text":"Setting username/password credentials (unique username)","hash":"_setting_usernamepassword_credentials_unique_username","id":15},{"text":"Pre-requisites","hash":"_pre_requisites_3","id":16},{"text":"Procedure","hash":"_procedure_3","id":17},{"text":"Setting X.509 client certificate credentials","hash":"_setting_x_509_client_certificate_credentials","id":18},{"text":"Configuring a gateway device","hash":"_configuring_a_gateway_device","id":19},{"text":"Pre-requisites","hash":"_pre_requisites_4","id":20},{"text":"Procedure","hash":"_procedure_4","id":21},{"text":"Hashed passwords","hash":"_hashed_passwords","id":22},{"text":"Supported hashes","hash":"supported-password-hashes","id":23}]},"211":{"id":211,"text":"When using a container registry, the container image must contain the following two files in the root of the image: firmware.bin - This is the firmware artifact to be delivered firmware.json - This is a manifest with metadata of the firmware An example firmware.json manifest looks like this: { \"version\": \"2dbedf0\", \"size\": 7716, \"checksum\": \"2e8db6036411adccba75dd5a0316e6ab72402351478a35ac5a452d4cf6371c8f\" } As long as these two files are present, Drogue Ajour will be able to deliver the firmware to devices.","title":"Container image format","component":"drogue-ajour","version":"dev","name":"image-format","url":"/drogue-ajour/dev/image-format.html","titles":[]},"212":{"id":212,"text":"Drogue Ajour is a firmware update and build service for tiny devices conneted to Drogue IoT Cloud. It supports a wide range of IoT protocols and uses a low footprint update protocol. It offers: Delivery - delivering firmware updates to connected devices. Protocol support: any protocol supported by Drogue Cloud (HTTP, MQTT, CoAP, LoRaWAN) Build - building firmware and storing it in a firmware repository. RESTful API for inspecting and triggering builds. Management console to inspect rollout status and builds. It is built on top of: Drogue Cloud - For authentication and transport firmware updates to devices. Tekton - For defining a CI/CD pipeline for firmware builds and storing. You can run Drogue Ajour locally or on a Kubernetes cluster. With it, you can build a firmware delivery pipeline for your devices. Drogue Ajour is composed of 2 main components serving different functions: Firmware Delivery - Transporting firmware updates to devices. Firmware Build - Building and storing firmware artifacts. Of these, only the firmware delivery component is mandatory. However, deploying both of these components provide you with an end to end Continuous Delivery (CD) pipeline for your devices. Firmware delivery is the main functionality of Drogue Ajour. This involves transporting the firmware to devices using a CBOR-based protocol. The transport protocol is designed for minimal overhead, and to allow devices to consume updates at their own pace. The firmware itself can be fetched from disk, Eclipse Hawkbit or a Docker/Container registry. This is an optional component that allow you to build your firmware from source and make it available to the delivery component for rolling out to your devices. Drogue Ajour provides Tekton pipeline definitions that can build container images in the expected format and push them to container registries.","title":"Drogue Ajour","component":"drogue-ajour","version":"dev","name":"index","url":"/drogue-ajour/dev/index.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Firmware delivery","hash":"_firmware_delivery","id":2},{"text":"Firmware build","hash":"_firmware_build","id":3}]},"213":{"id":213,"text":"If you are using an existing installation of Drogue Cloud, such as the Drogue Cloud Sandbox, it might already have Drogue Ajour enabled. If not, you can install Drogue Ajour either by compiling and running the components yourself, running the provided container images in your favorite container runtime, or deploy it all to Kubernetes. This guide will cover installation on a Kubernetes cluster using a container registry as the source for firmware. Kubernetes Drogue Cloud drg (Optional) Container Registry - For storing firmware in container images. (Optional) Tekton - For the firmware build pipeline. For storing firmware, you can use either an external Eclipse Hawkbit instance or a Container Registry, this guide will assume a container registry being used. The installation manifests can be found on the GitHub releases page, or by cloning the git repository. Extract the zip file and enter the extracted folder before proceeding with the installation commands. To install the firmware delivery components, you need to create an access token for the server. You can do this from the drogue console or using the drg command line tool # Note down the access token generated drg create token # You can get these values from your Drogue Cloud console kubectl create secret generic drogue-config --from-literal=token= --from-literal=user= --from-literal=registry-url= --from-literal=mqtt-integration= # These values depend on if you're using a builtin container registry or an external one. Using docker.io as example kubectl create secret generic container-registry --from-literal=prefix=quay.io/myorg/ --from-literal=token= # Deploy the server kubectl apply -f deploy/server To install the firmware build components: # Deploy the API kubectl apply -f deploy/api # Deploy Tekton pipelines - This might contain references to Tasks that are not available out of the box kubectl apply -f deploy/pipeline This will also create an externally accessible ingress for the API. You can create your own ingress or edit it in order to change hostname and settings. For this step, you must note down the hostname generated/set for your API ingress above. To deploy the console, we also need a few additional settings in order to enable OIDC authentication. The fields to add are: issuer-url - the URL of the same OIDC service used by Drogue Cloud. client-id - OIDC client id, usually drogue. ajour-api-url - The URL to the external API ingress created earlier. To deploy the console: kubectl apply -f deploy/console","title":"Admin Guide","component":"drogue-ajour","version":"dev","name":"installation","url":"/drogue-ajour/dev/installation.html","titles":[{"text":"Installation","hash":"_installation","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Download install files","hash":"_download_install_files","id":3},{"text":"Firmware delivery","hash":"_firmware_delivery","id":4},{"text":"Firmware build","hash":"_firmware_build","id":5},{"text":"Console","hash":"_console","id":6}]},"214":{"id":214,"text":"Drogue Ajour uses a custom application level protocol sent on a special 'dfu' channel in Drogue Cloud to communicate with a device or gateway. The protocol is stateless, meaning that Drogue Ajour will track only send out firmware updates to devices that are reporting their status. The protocol is designed so that devices do not have to be online continuously during the update, but can receive firmware at their own pace. The protocol uses Consise Binary Object Representation (CBOR), to ensure a small message size that works well with embedded devices. The above sequence diagram corresponds to the example messages below. For descriptive purposes, the examples here are provided in JSON. A typical firmware update cycle runs as follows: At any given time, a device publishes message to the 'dfu' channel with the following payload { \"version\": \"0.1.0\", \"correlation_id\": 1 // Optional: Opaque request identifier, for devices that aggregate multiple updates \"mtu\": 512, // Optional: The desired block size to use for firmware blobs } This allows the Drogue Ajour to check if an update is necessary at all. Drogue Ajour checks the desired firmware for that particular device and will attempt to locate it in the firmware registry. If the device is already updated, a 'dfu' command is sent to the device with the following payload: { \"sync\": { \"version\": \"0.1.0\", // Desired firmware version \"correlation_id\": 1 // Optional: Should be set to the id from the device status \"poll\": 300, // The amount of time to wait before checking in again } } If a device needs to be updated, a 'dfu' command is sent to the device with the following payload { \"write\": { \"version\": \"0.1.1\", // Version of blob \"offset\": 0, // Offset this blob should be written to \"data\": aGVsbG8= // Base64-encoded firmware block (Binary in CBOR) } } If there is no new information about firmware, and server needs the client to wait before asking again, a 'wait' command is sent. { \"write\": { \"poll\": 300, // The amount of time to wait before checking in again } } Device receives command When a device is seeing the \"sync\" operation, it should make sure it’s current firmware version is marked as 'good' if it have not already done so. The 'poll' field can be used as a heuristic of how long the device should wait before checking in again. When a device is seeing the \"write\" operation, it should write the provided data to it’s storage. Once persisted, it should report back the next expected offset and last received version: { \"version\": \"0.1.0\", \"mtu\": 512, // The desired block size to use for the next firmware block \"status\": { \"version\": \"0.1.1\", // Version of the last block the device received from the server. To safeguard against new versions arriving \"offset\": 512, // Current write offset after applying the last firmware block. } } Server receives status event If device is in sync, optionally reply with a sync command indicating the delay before polling again. When the server receives the next event from the device, it repeats the previous write step until the complete firmware have been sent. When the final block is confirmed written, and it is desired to deploy the new firmware, the fleet-manager will send the following command: { \"swap\": { \"version\": \"0.1.1\", \"checksum\": \"097d501382f5817eb2c5f741d37845158c76dd6a8af899001b36b5a75188aeeb\" } } Device receives command When the device receives the 'swap' command, it should initiate the firmware update and report back with the updated version as soon as it’s back online.","title":"Update Protocol","component":"drogue-ajour","version":"dev","name":"protocol","url":"/drogue-ajour/dev/protocol.html","titles":[]},"215":{"id":215,"text":"If you are using an existing installation of Drogue Cloud, such as the Drogue Cloud Sandbox, it might already have Drogue Ajour enabled. If not, have a look at the Admin Guide. drg The following examples require that your a logged in to your Drogue Cloud cluster with drg. Drogue Ajour makes use of the Application and Device types from Drogue Cloud. To enable firmware delivery for a given application or device, you must modify the spec section of the resource. You can have firmware delivered from a container registry, Eclipse Hawkbit or a file locally available to the Drogue Ajour server. Edit a device: drg edit device --app my-app my-device-1 Make sure the device definition contains the following: spec: firmware: oci: image: my-firmware:latest Firmware images can only be retrieved from the container registry Drogue Ajour was configured for, and the image reference is therefore relative to the configured registry. See expected container format for what the image must look like. Save the new definition. When the device connects to the update service, the update service will make sure the device is updated from the firmware contained within the container image. Edit a device: drg edit device --app my-app my-device-1 Make sure the device definition contains the following: spec: firmware: hawkbit: controller: controllername Controller name is a concept from Eclise Hawkbit. The controller must be created in Eclipse Hawkbit before Drogue Ajour can use it to retrieve firmware. Firmware builds are only enabled for container registry firmwares for the time being. This also requires that the firmware build components are installed for Drogue Ajour. Edit a device: drg edit device --app my-app my-device-1 Make sure the device definition contains the following: spec: firmware: oci: image: my-firmware:latest build: # An image reference to a container image used to build your project image: docker.io/myorg/firmware-builder-image:latest source: git: # Git repository URI uri: https://github.com/myorg/example-project # Project folder within repository project: repo/sub/folder # Git revision to use rev: main # Arguments passed to the builder image args: - flag1 - flag2 artifact: # Path to artifact generated by builder image path: myartifact.bin When the firmware is built, these parameters will be passed to the tekton pipeline, and the image will be pushed to the configured registry. You can trigger a build from the Drogue Ajour console, or the command line as follows if you’re logged in: # Retrieving an auth token TOKEN=$(drg whoami -t) # URL is the Drogue Ajour API server curl -X POST -H \"Authorization: Bearer ${TOKEN}\" https://build-api/api/build/v1alpha1/apps/my-app/devices/my-device-1/trigger This will trigger the Tekton pipeline and publish the new firmware to the configured container registry. To retrieve the current status of a firmware build, you can query the same API: # Retrieving an auth token TOKEN=$(drg whoami -t) # URL is the Drogue Ajour API server curl -X GET -H \"Authorization: Bearer ${TOKEN}\" https://build-api/api/build/v1alpha1/apps/my-app/devices/my-device-1 You can also use the Drogue Ajour console to check the status of your firmware builds.","title":"User Guide","component":"drogue-ajour","version":"dev","name":"using","url":"/drogue-ajour/dev/using.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Enabling firmware delivery","hash":"_enabling_firmware_delivery","id":2},{"text":"From container registry","hash":"_from_container_registry","id":3},{"text":"From Eclipse Hawkbit","hash":"_from_eclipse_hawkbit","id":4},{"text":"Enabling firmware build","hash":"_enabling_firmware_build","id":5},{"text":"Triggering a build","hash":"_triggering_a_build","id":6}]},"216":{"id":216,"text":"So you’ve got one of the examples running, but what now? Let’s go through a simple application for the BBC:microbit to understand it better. The application is a simple game: As a cursor traverses the LED matrix, use the button to toggle the 'set' state of each individual LED. Once all LEDs are lit, you win! The full example can be found here. The first thing you’ll notice is a few declarations stating that the application requires some nightly features: #![no_std] #![no_main] #![macro_use] #![feature(type_alias_impl_trait)] Then, what follows are some declarations on how to deal with panics and faults. During development, a good practice is to rely on defmt-rtt and panic-probe to print diagnostics to the terminal: use panic_probe as _; Lets define the basic game first. We’ll model the game as an actor named Game, and it will drive the entire game logic and interact with the LED matrix and the 'A' button on the micro:bit board. Luckily, Drogue Device already have actors for buttons and a LED matrix driver, so we only need to create the Game actor. Lets start with the types: pub enum GameMessage { Toggle, } impl TryFrom for GameMessage { type Error = (); fn try_from(event: ButtonEvent) -> Result { match event { ButtonEvent::Released => Ok(GameMessage::Toggle), _ => Err(()), } } } impl Game { pub fn new(matrix: LedMatrix) -> Self { Self { matrix } } } #[actor] impl Actor for Game { type Message = GameMessage; async fn on_mount(&mut self, _: Address, mut inbox: M) The Game type holds on to the led matrix. In addition, we define the GameMessage message that our actor will expect to be notified of whenever the button is pressed. The Address type is a handle that you can use to send messages to an Actor. Our Game actor will be reachable using an Address instance, which you get when mounting an actor. The predefined Button actor can work with any handle that implements the TryFrom trait, so we’ll add an implemented for our GameMessage type. We can now have our Game type implement the Actor trait: M: Inbox + 'm, { defmt::info!(\"Starting game! Press the 'A' button to lit the LED at the cursor.\"); let speed = Duration::from_millis(200); let mut coordinates: [[bool; 5]; 5] = [[false; 5]; 5]; let mut cursor = 0; let (mut x, mut y) = (0, 0); The Message of an Actor defines the messages that our actor expects to handle. Why do you have to define the actor attribute? Rust does not yet support async methods in traits, and needs some assistance in knowing what to do. This is only temporary until Rust supports basic async traits, so for now we’ll have to live with it. We can now define the main actor logic in the on_mount implementation. The on_mount entry point is called only once, and should contain the Actor main loop. The actor is handed an address to itself. This can be useful if you need to register the Actor with other actors or types. The Address type can be cloned, so it’s easy to pass around. The Inbox parameter is a handle that the actor can use to wait for incoming messages. Having the boilerplate out of the way, we can now focus on our application. The game logic can be described as follows: Game logic Define a set of coordinates in a 5x5 matrix Initialize cursor at (0, 0) Initialize coordinates as not being visited While not all coordinates visited Lit the LED at the cursor coordinate Wait for a GameMessage to arrive within a timeout If a GameMessage::Toggle arrived, toggle the visited status at the cursor coordinate Unlit the LED at the cursor coordinate, if not visited Update cursor The game logic is implemented here: let mut done = false; let mut render = Ticker::every(Duration::from_millis(5)); while !done { self.matrix.on(x, y); // Race timeout and button press let timeout = Timer::after(speed); let event = inbox.next(); pin_mut!(timeout); pin_mut!(event); let mut logic = select(timeout, event); loop { let tick = render.next(); pin_mut!(tick); match select(tick, &mut logic).await { Either::Left((_, _)) => { self.matrix.render(); } Either::Right((f, _)) => match f { Either::Left(_) => { break; } Either::Right(_) => { // Set/unset coordinates[y][x] = !coordinates[y][x]; break; } }, } } // Unlit only if we're not set if !coordinates[y][x] { self.matrix.off(x, y) } // Check if game is done done = true; for x in 0..5 { for y in 0..5 { if !coordinates[y][x] { done = false; break; } } } x = cursor % 5; y = (cursor / 5) % 5; cursor += 1; self.matrix.render(); } } } #[embassy_executor::main] async fn main(spawner: embassy_executor::Spawner) { // Using a board support package to simplify setup The LedMatrix has an on and off method to toggle the LED at a given coordinate. In order to render the current LedMatrix state, we need to call a render function at the desired refresh interval. The \"outer\" loop does just that until one of the 'game logic' futures are completing. The inbox.next() is an async funtion that completes when an event have been received (i.e. button has been pressed). The Timer type can be used to asynchronously wait for an event. The futures select function can be used to \"race\" two async functions for completion. Therefore, the outer select races the rending loop and the inbox.next() and timer, whereas they are raced against eachother. If there is an event or timeout, we update the game state. With the game logic defined, we can now wire our three actors together in the application main: let game = spawn_actor!(spawner, GAME, Game, Game::new(board.display)); // Actor for button 'A' spawn_actor!(spawner, BUTTON_A, ButtonActor, ButtonActor::new(board.btn_a, game)); } The main entry point is defined using the #[embassy::main] macro. The entry point is also required to take a Spawner and a Peripherals argument. The Spawner is the way the main application spawns tasks and actors. The Peripherals type holds all peripherals that the application may use. For some boards, Drogue Device provide a Board Support Package (BSP) that helps locating peripherals for a given board. You can also access all peripherals using the Peripherals type. The board simply helps setting them up and giving them a name that maps to your particular board. In our case, we can use the Microbit board. Finally, we spawn an instance for each of the actors in our system: LED_MATRIX, GAME, and BUTTON_A. An Address handle of the actor is returned when spawned, and can be used as a parameter to other actors, or directly in the main function. We’ve gone through a basic application written for the BBC micro:bit. We’ve created our own Actor instance to drive the game logic, and wired it together with two other actors already defined by Drogue Device, which was simple due to the composability of actors.","title":"A basic application","component":"drogue-device","version":"dev","name":"basic_application","url":"/drogue-device/dev/basic_application.html","titles":[{"text":"Main","hash":"_main","id":1},{"text":"Rust Nightly","hash":"_rust_nightly","id":2},{"text":"Dealing with errors","hash":"_dealing_with_errors","id":3},{"text":"Defining actors","hash":"_defining_actors","id":4},{"text":"Game logic","hash":"_game_logic","id":5},{"text":"Application main","hash":"_application_main","id":6},{"text":"Summary","hash":"_summary","id":7}]},"217":{"id":217,"text":"Board Support Packages make it easier to use a particular board with Embassy, and typically uses pin and peripheral names that match what is defined on the board itself or in the board documentation. You are free to choose if you wish to use Board Support Packages or not, but we have found they remove some of the common boilerplate for board peripherals that are commonly used, and makes it easier to mentally map the pin names used in your code to the pin names on the board.","title":"Board Support Packages","component":"drogue-device","version":"dev","name":"bsp","url":"/drogue-device/dev/bsp.html","titles":[]},"218":{"id":218,"text":"Drogue Actor is an actor framework for microcontrollers. An actor system is a framework that allows for isolating state within narrow contexts, making it easier to reason about system. Within a actor system, the primary component is an Actor, which represents the boundary of state usage. Each actor has exclusive access to its own state and only communicates with other actors through message-passing. Each actor is single-threaded, able to process a single message at a time, allowing for lock-free processing of each event. As embedded processors are globally single-threaded, supporting multiple actors requires the usage of async and .await within the Rust ecosystem. Each actor can therefore process each message either synchronously if its logic is non-blocking or using an async block if complex processing is required. Each event is fully processed, in the order in which it is received, before the next event is considered. While processing an event, an actor may send a message to another actor, which itself is an asynchronous action, allowing the system to continue to make progress with actors that are able to. All messages are sent using async channels attached to each actor. The channel depth is configurable based on const generics. Upon starting, the actor is given a handle to an Inbox from which it can await messages to arrive. Each actor within the system has its own unique Address which is used to communicate with the actor (through it’s FIFO). There is an async request(msg) method on each address to send a message asynchronously to the actor, which may only be used from another async context, as the sender must .await the response. There is also a sync notify(msg) method on each address to send a message without awaiting a response. Specifically, the Address for a given actor may implement user provided traits to provide fluent APIs for communicating with the underlying actor. For instance, the Socket type wraps an Address for actors that implement the TcpSocket trait. Each actor is wrapped in an ActorContext object which is stored as a static (global). When the application starts, each context is `mount(…​)`ed, and provided an instance of the actor to \"run\". During mount, the actor system will initialize the channels, and spawn the underlying embassy task. Once spawned, the actors Address is made available. As with any embassy application, the entry point is specified using an async function marked with #[embassy::main], and it will be passed a Spawner that is passed to each actor context mount(…​). In some cases, it may be desirable to have two or more actors involve in a single semantic component or package. The Package trait may be implemented for any type. An actor must implement the Actor trait, which will allow it to be spawned by the Embassy executor. An actor providing an atomic counter using the above driver is shown below: #![feature(type_alias_impl_trait)] use drogue_device::*; pub struct AtomicCounter { counter: MyCounter } pub enum CounterMessage { Increment, Add(u32), } #[actor] impl Actor for AtomicCounter { type Message = CounterMessage; async fn on_mount(&mut self, _: Address, mut inbox: M) where M: Inbox { loop { if let Some(mut m) = inbox.next().await { match *m.message() { CounterMessage::Increment => self.counter.increment().await, CounterMessage::Add(value) => self.counter.add(*value).await, } } } } } Notice the actor attribute, which handles a lot of the boilerplate of writing actors. This actor expands the code to the following: impl Actor for AtomicCounter { type Message = CounterMessage; type OnMountFuture = impl Future + 'm; fn on_mount( &'m mut self, _: Address, inbox: &'m mut M, ) -> Self::OnMountFuture where M: Inbox + 'm { async move { loop { if let Some(mut m) = inbox.next().await { match *m.message() { CounterMessage::Increment => self.counter.increment().await, CounterMessage::Add(value) => self.counter.add(*value).await, } } } } } } Once Rust has native support for async traits, the attribute will no longer be necessary. Although a very complex way to implement an atomic counter, it gives you an idea of how actors provide exclusive access to a resource.","title":"Actors","component":"drogue-device","version":"dev","name":"concepts","url":"/drogue-device/dev/concepts.html","titles":[{"text":"Drogue Actor Model","hash":"_drogue_actor_model","id":1},{"text":"Async","hash":"_async","id":2},{"text":"Messages","hash":"_messages","id":3},{"text":"Addresses","hash":"_addresses","id":4},{"text":"Lifecycle","hash":"_lifecycle","id":5},{"text":"Bootstrap","hash":"_bootstrap","id":6},{"text":"Packages","hash":"_packages","id":7},{"text":"Writing an Actor","hash":"_writing_an_actor","id":8}]},"219":{"id":219,"text":"Async Drivers follow a common set of patterns that makes it easier to write new drivers. Device drivers can be written in different ways, but the common approach is to implement one or more of the following: Create a new Rust crate that implements the driver. Implement traits from embedded-hal-async if relevant. Unfortunately, the support in Rust for writing async traits is limited, but it is possible using features from Rust nightly. An async trait can be specified by enabling a feature named generic associcated types (GAT): pub trait Counter { type IncrementFuture: Future where Self: 'm; fn increment(&'m mut self) -> Self::IncrementFuture; type AddFuture: Future where Self: 'm; fn add(&'m mut self, value: u32) -> Self::AddFuture; } An implementor of the above trait will be able to write async code with some boilerplate, and application code can rely on the trait. A driver is an implementation of the trait that applications use. With the trait defined in the previous section, lets take a look at what a driver would look like: #![feature(type_alias_impl_trait)] pub struct MyCounter { value: u32, } impl Counter for MyCounter { type IncrementFuture = impl Future + 'm; fn increment(&'m mut self) -> Self::IncrementFuture { async move { self.value += 1; self.value } } type AddFuture = impl Future + 'm; fn add(&'m mut self, value: u32) -> Self::AddFuture { async move { self.value += value; self.value } } } You’ll notice that we’ve used yet another nightly feature that allows specifying the IncrementFuture associated type using the impl Future syntax. At the expense of needing to define the associated type and a somewhat awkward return value, the driver can write blocks of async code to implement the trait.","title":"Drivers","component":"drogue-device","version":"dev","name":"drivers","url":"/drogue-device/dev/drivers.html","titles":[{"text":"Writing async drivers","hash":"_writing_async_drivers","id":1},{"text":"Writing an async trait","hash":"_writing_an_async_trait","id":2},{"text":"Writing an async driver","hash":"_writing_an_async_driver","id":3}]},"220":{"id":220,"text":"There are several examples for different chips to show how drogue device can be used. The examples are grouped by how advanced they are, and what they demonstrate such as networking, but may overlap for examples that cover more than one area. All example can be run using cargo run, which in some cases require the probe-run tool (cargo install probe-run) to flash the program. Any examples requiring user credentials, e.g. WiFi, HTTP, OTAA, will expect them in the top-level keys of .drogue/config.toml. Similar to how cargo configuration works, the build script for each example looks for that configuration file in the manifest directory, all of its parent directories, and finally in $HOME/.drogue/config.toml. If a key is specified in multiple config files, the values will be merged, with the value in the deeper directory taking precedence over its parents, the home directory having the lowest priority. Credentials for your local WiFi network: wifi-ssid = \"...\" wifi-password = \"...\" HTTP authentication: http-username = \"...\" http-password = \"...\" Over The Air Authentication (OTAA) credentials: \"dev-eui\" = \"...\" \"app-eui\" = \"...\" \"app-key\" = \"...\" These values will be read during compilation and stored in the executable. Basic examples that only require a single board without any additional hardware. Raspberry Pi Pico Blinky (github) STM32 Nucleo-H743 blinky (github) STM32 IoT Discovery board blinky (github) Examples that demonstrates network connectivity using WiFi, usually using an additional network adapter module. May require setting up additional network services (locally or third party). BBC micro:bit v2 + ESP8266 WiFi adapter + MQTT (github) Example using a USB-to-Serial adapter + ESP8266 adapter (github) STM32 IoT Discovery board (iot01a) reporting sensor data using WiFi (github) Examples that demonstrates network connectivity using LoRaWAN. May require setting up additional network services (locally or third party). RAK811 LoRa Adapter with AT command firmware (github) STM32 LoRaWAN Discovery board connecting to The Things Network (github) RAK811 Tracker Node connecting to The Things Network (github) STM32 Nucleo-WL55 LoRaWAN and firmware updates OTA (github) STM32 Nucleo-WL55 using LoRaWAN connecting to The Things Network (github) Examples that demonstrates using Bluetooth Low Energy (BLE). May require running applications on a phone or PC. Adafruit Feather nRF52840 Bluetooth Mesh example (github) Microbit BLE Sensor example with DFU (github) Microbit Bluetooth Mesh example (github) nrf52840-dk BLE Mesh example (github) Examples that demonstrate connectivity to Drogue Cloud. BBC micro:bit v2 + ESP8266 WiFi adapter + MQTT (github) Example sending telemetry data from Drogue Device to Drogue Cloud (github) Example using a USB-to-Serial adapter + ESP8266 adapter (github) STM32 IoT Discovery board (iot01a) reporting sensor data using WiFi (github) Examples that demonstrates the use of displays, either on board or as external peripherals. STM32 Nucleo-H743 7-color e-paper display (github) Examples that demonstrates the use of a UART. Other examples that does not belong in any major category Bootloader for Adafruit nRF52840 chips (github) Bootloader for BBC Micro:bit chips (github) Bootloader for STM32L4 iot01a boards (github) Bootloader for STM32L4 iot01a boards (github)","title":"Examples","component":"drogue-device","version":"dev","name":"examples","url":"/drogue-device/dev/examples.html","titles":[{"text":"Basic examples","hash":"_basic_examples","id":1},{"text":"WiFi connectivity examples","hash":"_wifi_connectivity_examples","id":2},{"text":"LoRaWAN connectivity examples","hash":"_lorawan_connectivity_examples","id":3},{"text":"BLE connectivity examples","hash":"_ble_connectivity_examples","id":4},{"text":"Drogue Cloud connectivity examples","hash":"_drogue_cloud_connectivity_examples","id":5},{"text":"Display examples","hash":"_display_examples","id":6},{"text":"UART examples","hash":"_uart_examples","id":7},{"text":"Other examples","hash":"_other_examples","id":8}]},"221":{"id":221,"text":"Raspberry Pi Pico Blinky (github) STM32 Nucleo-H743 blinky (github) STM32 IoT Discovery board blinky (github)","title":"","component":"drogue-device","version":"dev","name":"examples_basic","url":"/drogue-device/dev/examples_basic.html","titles":[]},"222":{"id":222,"text":"Adafruit Feather nRF52840 Bluetooth Mesh example (github) Microbit BLE Sensor example with DFU (github) Microbit Bluetooth Mesh example (github) nrf52840-dk BLE Mesh example (github)","title":"","component":"drogue-device","version":"dev","name":"examples_ble","url":"/drogue-device/dev/examples_ble.html","titles":[]},"223":{"id":223,"text":"BBC micro:bit v2 + ESP8266 WiFi adapter + MQTT (github) Example sending telemetry data from Drogue Device to Drogue Cloud (github) Example using a USB-to-Serial adapter + ESP8266 adapter (github) STM32 IoT Discovery board (iot01a) reporting sensor data using WiFi (github)","title":"","component":"drogue-device","version":"dev","name":"examples_cloud","url":"/drogue-device/dev/examples_cloud.html","titles":[]},"224":{"id":224,"text":"STM32 Nucleo-H743 7-color e-paper display (github)","title":"","component":"drogue-device","version":"dev","name":"examples_display","url":"/drogue-device/dev/examples_display.html","titles":[]},"225":{"id":225,"text":"RAK811 LoRa Adapter with AT command firmware (github) STM32 LoRaWAN Discovery board connecting to The Things Network (github) RAK811 Tracker Node connecting to The Things Network (github) STM32 Nucleo-WL55 LoRaWAN and firmware updates OTA (github) STM32 Nucleo-WL55 using LoRaWAN connecting to The Things Network (github)","title":"","component":"drogue-device","version":"dev","name":"examples_lorawan","url":"/drogue-device/dev/examples_lorawan.html","titles":[]},"226":{"id":226,"text":"Bootloader for Adafruit nRF52840 chips (github) Bootloader for BBC Micro:bit chips (github) Bootloader for STM32L4 iot01a boards (github) Bootloader for STM32L4 iot01a boards (github)","title":"","component":"drogue-device","version":"dev","name":"examples_other","url":"/drogue-device/dev/examples_other.html","titles":[]},"227":{"id":227,"text":"","title":"","component":"drogue-device","version":"dev","name":"examples_uart","url":"/drogue-device/dev/examples_uart.html","titles":[]},"228":{"id":228,"text":"BBC micro:bit v2 + ESP8266 WiFi adapter + MQTT (github) Example using a USB-to-Serial adapter + ESP8266 adapter (github) STM32 IoT Discovery board (iot01a) reporting sensor data using WiFi (github)","title":"","component":"drogue-device","version":"dev","name":"examples_wifi","url":"/drogue-device/dev/examples_wifi.html","titles":[]},"229":{"id":229,"text":"So you want to try using Rust embedded, great! To get started, there are a few tools you need to install: rustup - the Rust toolchain is needed to compile Rust code. probe-run - to flash the firmware on your device. If you already have other tools like OpenOCD setup, you can use that as well. If you don’t have any supported board, don’t worry: you can also run the std on your PC. Embassy supports many microcontroller families, but the easiest ways to get started is if you have one of the more common development kits that there are examples for already. BBC micro:bit v2 nRF52 DK nRF9160 DK STM32 Nucleo-144 development board with STM32H743ZI MCU STM32L4+ Discovery kit IoT node, low-power wireless, BLE, NFC, WiFi STM32L0 Discovery kit LoRa, Sigfox, low-power wireless STM32 Nucleo-64 development board with STM32WL55JCI MCU Discovery kit for IoT node with STM32U5 series RAK811 based LoRa boards Raspberry Pi Pico First you need to clone the github repository; git clone https://github.com/drogue-iot/drogue-device.git cd drogue-device You can run an example by opening a terminal and entering the following commands: cd examples/std/pingpong RUST_LOG=info cargo run --release If you’re using any of the microcontroller examples: cd examples/nrf52/microbit/jukebox DEFMT_LOG=info cargo run --release The DEFMT_LOG environment variable controls the example log verbosity. If not set, you will not see anything logged to the console. Found an example you like? Using the examples in tree have all the dependencies set up for you, but which dependencies should you specify when creating your own project? Since drogue-device is still using nightly rust, and still have dependencies that are not released on crates.io, we’ve prepared a mechanism for you to clone an example into its own folder. To create a project based on one of the microbit examples, run the following command in the toplevel folder of the drogue-device repository: cargo xtask clone examples/nrf52/microbit/jukebox $HOME/myexample Congratulations, you have your first Rust async application running! Here are some alternatives on where to go from here: Write your own application Learn about Actors Write an async driver Connect to the cloud","title":"Getting started","component":"drogue-device","version":"dev","name":"getting_started","url":"/drogue-device/dev/getting_started.html","titles":[{"text":"Getting a board with examples","hash":"_getting_a_board_with_examples","id":1},{"text":"nRF kits","hash":"_nrf_kits","id":2},{"text":"STM32 kits","hash":"_stm32_kits","id":3},{"text":"RP2040 kits","hash":"_rp2040_kits","id":4},{"text":"Running an example","hash":"_running_an_example","id":5},{"text":"Creating your own project","hash":"_creating_your_own_project","id":6},{"text":"Whats next?","hash":"_whats_next","id":7}]},"230":{"id":230,"text":"Drogue device is a distribution of tools and examples for building embedded applications in Rust. In a world without memory management or operating system it is more important than ever to avoid memory corruption and undefined behavior. Rust is an efficient, memory safe and thread safe programming language. Embedded systems must make efficient uses of the resources available. At the same time, having a programming model that fits embedded devices is important. Embassy, the embedded async project, delivers a fast and small runtime and hardware abstraction layer that also provides a great programming experience. Code reuse and composition should be first class in embedded software! Use async task-based or actor-based programming models for writing efficient and composable applications. With actors, you can reuse application logic and compose other actors to build new functionality. Many developers just want to have drivers and functionality ready to be used so they can focus on their application. Drogue Device provides out of the box examples for WiFi, LoRaWAN, BLE combined with different sensors available on boards. Some of the examples are ready to be used with Drogue Cloud. All software is licensed under the Apache 2.0 open source license, no contributor agreement required.","title":"Drogue Device","component":"drogue-device","version":"dev","name":"index","url":"/drogue-device/dev/index.html","titles":[{"text":"Robustness","hash":"_robustness","id":1},{"text":"Efficiency","hash":"_efficiency","id":2},{"text":"Composition","hash":"_composition","id":3},{"text":"IoT Ready","hash":"_iot_ready","id":4},{"text":"Open Source","hash":"_open_source","id":5}]},"231":{"id":231,"text":"async and actors are not concepts commonly familiar to embedded developers, and have usually been associated with programming languages not suitable for embedded. With Rust, this is about to change, as Rust allows you to use these techniques without the traditional overhead associated with it. Software written without async may block on I/O operations. In an std environment, such as a PC, software can handle this either by using threads or non-blocking operations. With threads, one thread blocks on an I/O operation, another is able to take its place. However, even on a PC, threads are relatively heavy, and therefore some programming languages, such as Go, have implemented a concept called coroutines or 'goroutines' that are much lighter and less-intensive than threads. The other way to handle blocking I/O operations is to support polling the state of the underlying peripherals to check whether it is available to perform the requested operation. In programming languages without builtin async support, this requires building a complex loop checking for events. In Rust, non-blocking operations can be implemented using async-await. Async-await works by transforming each async function into an object called a future. When a future blocks on I/O the future yields, and the scheduler, called an executor, can select a different future to execute. Compared to alternatives such as an RTOS, async can yield better performance and lower power consumption because the executor doesn’t have to guess when a future is ready to execute. However, program size may be higher than other alternatives, which may be a problem for certain space-constrained devices with very low memory. On the devices Embassy supports, such as stm32 and nrf, memory is generally large enough to accommodate the modestly-increased program size. Actors make it convenient to write stateful concurrent systems using message passing. Actors only process one message at a time, and communicate with other actors by sending messages to their addresses. Actors compose easily due to their decoupled nature, making it easier to maintain an expanding code base. Actors in drogue-actor are async, which means that they process messages using async-await support in Rust. This does not mean you have to write async code, but you will have the option to do so. The async book is a great way to learn more about async Rust. Read more about actors here. Tasks are a good fit if: You are doing 'standalone' work that doesn’t require any input from other parts of your application You are not going to reuse the task functionality in multiple applications Actors are a good fit if: You want to run a process that handles messages through a channel You want to reuse this process in multiple applications or for multiple purposes You like the ability to compose your application and isolate the business logic in different units","title":"Introduction","component":"drogue-device","version":"dev","name":"introduction","url":"/drogue-device/dev/introduction.html","titles":[{"text":"What is async","hash":"_what_is_async","id":1},{"text":"What is an actor","hash":"_what_is_an_actor","id":2},{"text":"Actors vs Tasks","hash":"_actors_vs_tasks","id":3}]},"232":{"id":232,"text":"The examples are grouped by chip family, then board, then variant. I.e. For instance, the example in nrf52/microbit/esp8266 is for the nRF52 chip family, using the microbit board, with a variant that uses a esp8266 WiFi module. All example can be run using cargo run, which in some cases require the probe-run tool (cargo install probe-run) to flash the program. Any examples requiring user credentials, e.g. WiFi, HTTP, OTAA, will expect them in the top-level keys of .drogue/config.toml. Similar to how cargo configuration works, the build script for each example looks for that configuration file in the manifest directory, all of its parent directories, and finally in $HOME/.drogue/config.toml. If a key is specified in multiple config files, the values will be merged, with the value in the deeper directory taking precedence over its parents, the home directory having the lowest priority. Credentials for your local WiFi network: wifi-ssid = \"...\" wifi-password = \"...\" HTTP authentication: http-username = \"...\" http-password = \"...\" Over The Air Authentication (OTAA) credentials: \"dev-eui\" = \"...\" \"app-eui\" = \"...\" \"app-key\" = \"...\" These values will be read during compilation and stored in the executable.","title":"drogue-device examples","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/README.html","titles":[{"text":"Configuration","hash":"_configuration","id":1}]},"233":{"id":233,"text":"This example demonstrates using Drogue Device sending telemetry messages to Drogue Cloud. This example runs on any target supporting the Rust standard library. To build the example, you need to have rustup. A service like Drogue IoT Cloud. See drogue-cloud for how to run that, or use the sandbox (requires TLS). HTTP authentication will come from these entries in ~/.drogue/config.toml: http-username = \"...\" http-password = \"...\" For Drogue IoT Cloud, the username/password is stored in this form: device_id@application. To run the application: RUST_LOG=info cargo run --release","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/std/cloud/README.html","titles":[{"text":"std drogue cloud example","hash":"_std_drogue_cloud_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Software","hash":"_software","id":3},{"text":"Configuring","hash":"_configuring","id":4},{"text":"Running","hash":"_running","id":5}]},"234":{"id":234,"text":"This example demonstrates using a driver written for embedded on a standard computer with a module attached to a USB-to-Serial cable. The application runs out of the box on a PC with a ESP8266 breakout module flashed with AT firmware attached using a USB-to-Serial cable. USB to Serial cable ESP8266 module with AT-command firmware version 1.7.x or newer. To build the example, you need to have rustup. A TCP server (ncat) or a service like Drogue IoT Cloud. See drogue-cloud for how to run that, or use the sandbox (requires TLS). Credentials for your local WiFi network will come from these entries in ~/.drogue/config.toml: wifi-ssid = \"...\" wifi-password = \"...\" HTTP authentication will come from these entries in ~/.drogue/config.toml: http-username = \"...\" http-password = \"...\" For Drogue IoT Cloud, the username/password is stored in this form: device_id@application. You can configure the IP constant to point to any HTTP server to receive events, or you can use drogue cloud locally. For simplicity, start a local HTTP server in python that echoes the HTTP payload back: curl -s https://raw.githubusercontent.com/drogue-iot/drogue-device/main/apps/wifi/server.py | python3 To run the firmware: cargo run --release The application will wait until the ESP8266 is reset, some breakout modules provide a reset button, others require you to power the ESP8266 separately from the serial cable in order to proberly reset. Once reset, the application will connect to the WiFi access point and send a test message from your device. When the tls flag is enabled, the example is configured to use the Drogue IoT Cloud sandbox. To use this example with your own Drogue IoT Cloud instance, you need to edit the HOST and PORT constants in src/main.rs. To run the firmware: cargo +nightly run --release --features tls The application will wait until the ESP8266 is reset, some breakout modules provide a reset button, others require you to power the ESP8266 separately from the serial cable in order to proberly reset. Once reset, the application will connect to the WiFi access point and send a test message from your device.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/std/esp8266/README.html","titles":[{"text":"std esp8266 example","hash":"_std_esp8266_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Running with plain TCP","hash":"_running_with_plain_tcp","id":6},{"text":"Running with TLS","hash":"_running_with_tls","id":7}]},"235":{"id":235,"text":"This example application runs out of the box on a linux PC connected to a RAK811 breakout module loader with AT firmware using UART to communicate. RAK811 module with AT-command firmware version 2.x (3.x not yet supported by driver) To build and flash the example, you need to have rustup. In practice you can use whatever tool you want to flash the device, but this guide will assume that probe-run is used (cargo install probe-run). Over The Air Authentication (OTAA) credentials will come from these entries in ~/.drogue/config.toml: \"dev-eui\" = \"...\" \"app-eui\" = \"...\" \"app-key\" = \"...\" To build the application: RUST_LOG=info cargo build --release RUST_LOG=info cargo run --release","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/std/rak811/README.html","titles":[{"text":"rak811 drogue-device example","hash":"_rak811_drogue_device_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Building","hash":"_building","id":6}]},"236":{"id":236,"text":"This example application runs out of the box on the STM32 LoRa Discovery Kit (B-L072Z-LRWAN1). STM32 LoRa Discovery Kit To build and flash the example, you need to have rustup. In practice you can use whatever tool you want to flash the device, but this guide will assume that probe-run is used (cargo install probe-run). Over The Air Authentication (OTAA) credentials will come from these entries in ~/.drogue/config.toml: \"dev-eui\" = \"...\" \"app-eui\" = \"...\" \"app-key\" = \"...\" To build the firmware: cargo build --release Flashing the firmware uses probe-run which auto-detects the probe connected to your device. The following command will build and flash the firmware and open the debugger console so you can see the console debug output. cargo run --release If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe : Once the device is flashed, it will connect to the local LoRaWAN network. Once the network is joined, you can press the blue button on the development kit to send a test message ping:, where num-clicks is the number of times you pressed the button since resetting the board. The board features 4 user controllable LEDs. The program will use 3 of them to show the internal status: Red Will light up when starting and turn off once it joined the LoRa network. Green Turns on while sending the uplink message. Blue Can be controlled through the downlink message: led:on or led:off.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32l0/lora-discovery/README.html","titles":[{"text":"lora-discovery example","hash":"_lora_discovery_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Building","hash":"_building","id":6},{"text":"Flashing","hash":"_flashing","id":7},{"text":"Usage","hash":"_usage","id":8},{"text":"LEDs","hash":"_leds","id":9}]},"237":{"id":237,"text":"This example application runs out of the box on the RAK811 family of microncontrollers. The RAK811 is based on a STM32L151 and a Semtech Sx1276 radio. The random number generator used in this example is vulnerable to tampering if a user knows the oscillator frequency of the chip. The STM32L1 does not have an on-board random number generator peripheral. Verified on the out-of-production RAK811 Tracker Node, which has been replaced by: WisTrio LPWAN Tracker All boards with the RAK811 chip should function, but may have different capabilities in on board perpiheral support. To build and flash the example, you need to have rustup. In practice you can use whatever tool you want to flash the device, but this guide will assume that probe-run is used (cargo install probe-run). Over The Air Authentication (OTAA) credentials will come from these entries in ~/.drogue/config.toml: \"dev-eui\" = \"...\" \"app-eui\" = \"...\" \"app-key\" = \"...\" cargo build --release Flashing the firmware uses probe-run which auto-detects the probe connected to your device. The following command will build and flash the firmware and open the debugger console so you can see the console debug output. cargo run --release If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe : Once the device is flashed, it will connect to the local LoRaWAN network. Once the network is joined, it will send a message every 60 seconds. While joining/configuration is in progress, and whenever the board is sending data, the LED will be lit.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32l1/rak811/README.html","titles":[{"text":"RAK811 example","hash":"_rak811_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Building","hash":"_building","id":6},{"text":"Flashing","hash":"_flashing","id":7},{"text":"Usage","hash":"_usage","id":8}]},"238":{"id":238,"text":"The bootloader uses embassy-boot to interact with the flash. Flash the bootloader cargo flash --release --chip nRF52840_xxAA","title":"Bootloader for nRF 52840 with external flash capability","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/adafruit-feather-nrf52840/bootloader/README.html","titles":[{"text":"Usage","hash":"_usage","id":1}]},"239":{"id":239,"text":"This example application runs out of the box on the Adafruit nRF52840 Feather. It starts as a Bluetooth Mesh sensor server(as defined by specification) reporting from the on board temperature sensor. The example assumes that the nRF softdevice is installed. Adafruit Feather nRF52840 Make sure you have the latest versions (cargo install ) of these tools: rustup - To compile the example with the correct toolchain. probe-rs-cli - To flash the BLE protocol stack from Nordic Semiconductor. probe-run - To run the example. cargo-flash cargo-binutils probe-rs-cli erase --chip nRF52840_xxAA cargo flash --manifest-path ../bootloader/Cargo.toml --release --chip nRF52840_xxAA Download the softdevice version 7.3.0 here. probe-rs-cli download s140_nrf52_7.3.0_softdevice.hex --chip nRF52840_xxAA --format Hex cargo flash --release --chip nRF52840_xxAA When started, the device will blink blue LED. Once provisioned, the device will enable red LED. See the link:https://github.com/drogue-iot/drogue-device/blob/main/examples/nrf52/nrf52840-dk/ble-mesh/README.adoc[nRF52840-DK mesh example) for how to provision the device.","title":"Adafruit nRF52840 Feather Bluetooth Mesh example","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/adafruit-feather-nrf52840/bt-mesh/README.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Hardware","hash":"_hardware","id":2},{"text":"Software","hash":"_software","id":3},{"text":"Usage","hash":"_usage","id":4},{"text":"Erase current settings","hash":"_erase_current_settings","id":5},{"text":"Flash bootloader","hash":"_flash_bootloader","id":6},{"text":"Flash nRF Softdevice","hash":"_flash_nrf_softdevice","id":7},{"text":"Flash application","hash":"_flash_application","id":8},{"text":"Provisioning","hash":"_provisioning","id":9}]},"240":{"id":240,"text":"","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/adafruit-feather-nrf52840/neopixel/README.html","titles":[{"text":"Write me.","hash":"_write_me","id":1}]},"241":{"id":241,"text":"This example application runs out of the box on the BBC micro:bit v2.0. It starts a BLE (Bluetooth Low Energy) environment sensing service (as defined by specification) as well as a firmware update service if configured. The example assumes that the nRF softdevice is installed. With this example, you can use BLE to update your microbit. BBC Micro:bit Make sure you have the latest versions (cargo install ) of these tools: rustup - To compile the example with the correct toolchain. probe-rs-cli - To flash the BLE protocol stack from Nordic Semiconductor. probe-run - To run the example. cargo-flash cargo-binutils probe-rs-cli erase --chip nRF52833_xxAA Download the softdevice version 7.3.0 here. probe-rs-cli download s113_nrf52_7.3.0_softdevice.hex --chip nRF52833_xxAA --format Hex cargo flash --manifest-path ../bootloader/Cargo.toml --release --chip nRF52833_xxAA cargo flash --release --chip nRF52833_xxAA When started, the device will blink the letter 'A' on the LED matrix. One change you can do is to set the REVISION environment variable, which will adjust the text that is printed on the LED matrix. We can then rebuild the application and flash it using the drgdfu tool. REVISION=myupdate cargo objcopy --release -- -O binary update.bin Modifying the version in Cargo.toml or passing a REVISION environment variable will compile the firmware with a new version identifier. This identifier can be used to decide if a firmware update is needed at all by the drgdfu. To use the drgdfu tool to update over BLE, generate a metadata file first: drgdfu generate --version myupdate --file update.bin > update.json We can then use refer to the metadata file when running the DFU process (The MAC address can be found from discovering your device using any tool like bluetoothsctl and the command scan on): drgdfu upload ble-gatt --device F8:56:35:45:1C:3C file update.json Be patient! The firmware update process on the device takes up to 20-30 seconds. Once finished, the drgdfu tool will wait for the device to swap the new firmware and report back the expected version. If not, it will restart the DFU process.","title":"Microbit Bluetooth Low Energy example","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/microbit/ble/README.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Hardware","hash":"_hardware","id":2},{"text":"Software","hash":"_software","id":3},{"text":"Running","hash":"_running","id":4},{"text":"Erase current settings","hash":"_erase_current_settings","id":5},{"text":"Flash nRF Softdevice","hash":"_flash_nrf_softdevice","id":6},{"text":"Flash bootloader","hash":"_flash_bootloader","id":7},{"text":"Flash application","hash":"_flash_application","id":8},{"text":"Flashing a new revision using firmware update","hash":"_flashing_a_new_revision_using_firmware_update","id":9}]},"242":{"id":242,"text":"The bootloader uses embassy-boot to interact with the flash. Flash the bootloader cargo flash --release --chip nRF52833_xxAA","title":"Bootloader for nRF with external flash capability","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/microbit/bootloader/README.html","titles":[{"text":"Usage","hash":"_usage","id":1}]},"243":{"id":243,"text":"This example application runs out of the box on the BBC micro:bit. It starts as a Bluetooth Mesh sensor server(as defined by specification) reporting from the on board temperature sensor. The example assumes that the nRF softdevice is installed. BBC Micro:bit v2 Make sure you have the latest versions (cargo install ) of these tools: rustup - To compile the example with the correct toolchain. probe-rs-cli - To flash the BLE protocol stack from Nordic Semiconductor. probe-run - To run the example. cargo-flash cargo-binutils probe-rs-cli erase --chip nRF52833_xxAA Download the softdevice version 7.3.0 here. probe-rs-cli download s140_nrf52_7.3.0_softdevice.hex --chip nRF52833_xxAA --format Hex cargo flash --release --chip nRF52833_xxAA When started, the device will blink an 'X' every 5 seconds. When started, the device will blink a check mark every 5 seconds. See the link:https://github.com/drogue-iot/drogue-device/blob/main/examples/nrf52/nrf52840-dk/ble-mesh/README.adoc[nRF52840-DK mesh example) for how to provision the device.","title":"Microbit Bluetooth Mesh example","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/microbit/bt-mesh/README.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Hardware","hash":"_hardware","id":2},{"text":"Software","hash":"_software","id":3},{"text":"Usage","hash":"_usage","id":4},{"text":"Erase current settings","hash":"_erase_current_settings","id":5},{"text":"Flash nRF Softdevice","hash":"_flash_nrf_softdevice","id":6},{"text":"Flash application","hash":"_flash_application","id":7},{"text":"Provisioning","hash":"_provisioning","id":8}]},"244":{"id":244,"text":"This example application runs out of the box on the BBC micro:bit v2.0. It relies on a ESP8266 breakout module flashed with AT firmware. The micro:bit communicates with the ESP8266 using UART. The examples uses MQTT to publish and subscribe to an Drogue cloud sandbox. BBC micro:bit v2.0 ESP8266 module with AT-command firmware version 1.7.x or newer. Wire the ESP8266 module to the micro:bit as follows: Microbit ESP8266 Function P1 GPIO15 Flow control P2 GPIO13 Flow control P8 EN Enable P9 RST Reset P14 RX UART RX P15 TX UART TX V V+ POWER G GND GROUND To build the example, you need to have rustup. To flash the example on the device, you need probe-run installed (cargo install probe-run). Drogue IoT Cloud. See drogue-cloud for how to run that, or use the sandbox. Example requires enabled TLS on the cloud side. Credentials for your local WiFi network will come from these entries in ~/.drogue/config.toml: wifi-ssid = \"...\" wifi-password = \"...\" The example is expected to be run against Drogue cloud sandbox. There is script echo.sh that will create echo from the cloud side (listening on device mqtt integration and sending same message to command endpoint). The script is expected to be run like this: ./src/echo.sh your-application-in-cloud To run the firmware: cargo run --release If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe : Once flashed, the device will reset and attempt to join the WiFi network. If successful, it will print a message to the RTT log. You can then press the 'A' button on the micro:bit board to send a test message from the device.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/microbit/esp8266/README.html","titles":[{"text":"microbit-esp8266 drogue-device example","hash":"_microbit_esp8266_drogue_device_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Pin configuration","hash":"_pin_configuration","id":4},{"text":"Software","hash":"_software","id":5},{"text":"Configuring","hash":"_configuring","id":6},{"text":"Running","hash":"_running","id":7},{"text":"Troubleshooting","hash":"_troubleshooting","id":8}]},"245":{"id":245,"text":"The \"bullseye\" Raspbian distro should include enough kernel mods to let the PB-ADV mesh work. Unfortunately, the version of bluez is 5.55, which is known to be flaky. You should enable the apt testing repo to install at least version 5.62. This requires adding a line to /etc/apt/sources.list and creating a file beneath /etc/apt/preferences.d. To do that, run these commands: # Become root sudo su - # Add the testing repo cat >>/etc/apt/sources.list /etc/apt/preferences.d/prefs <<EOF Package: * Pin: release a=stable Pin-Priority: 700 Package: * Pin: release a=testing Pin-Priority: 650 EOF # Update the list of available packages apt update To get a working version of bluez, do the following: $ sudo apt -t testing install bluez bluez-meshd Now you’re ready to fire up a BLE mesh. Most of this is based upon the details from the Bluetooth Site # sudo service bluetooth stop Then start the PB-ADV-based mesh. # sudo /usr/libexec/bluetooth/bluetooth-meshd -nd --debug This will leave the process running in the foreground to help with debugging, etc. This can be done as non-root regular user. $ mesh-cfgclient If it fails silently, ensure you have a ~/.config directory. If it complains about a missing config_db.json file, create one using the create command: pi@raspberrypi:~ $ mesh-cfgclient Warning: config file \"/home/pi/.config/meshcfg/config_db.json\" not found Proxy added: org.bluez.mesh.Network1 (/org/bluez/mesh) [mesh-cfgclient]# create Created new node with token 176b9238fa48857c Proxy added: org.bluez.mesh.Node1 (/org/bluez/mesh/node326d83779e8ccbaf254d4b604dfec674) Proxy added: org.bluez.mesh.Management1 (/org/bluez/mesh/node326d83779e8ccbaf254d4b604dfec674) Attached with path /org/bluez/mesh/node326d83779e8ccbaf254d4b604dfec674 Flash this example onto an nRF 52840 DEFMT_LOG=debug cargo run --release If you get an error mentioning a more recent version of probe-run…​ cargo install probe-run …​for which, on linux, you may need libudev…​ sudo dnf install rust-libudev-devel If the app quits after a few seconds, try flashing the softdevice. If you know your board’s UUID — look in its startup output — feed it to the the provision command. For example, [mesh-cfgclient]# provision 066187E34A19B375F1A02A1E934DB15A If you don’t have the UUID, you can discover it: [mesh-cfgclient]# discover-unprovisioned on Unprovisioned scan started Wait for it to discover your nRF broadcasting the \"please provision me\" packets. Once you see the board’s UUID, provision it. [mesh-cfgclient]# discover-unprovisioned off [mesh-cfgclient]# provision 066187E34A19B375F1A02A1E934DB15A If all goes well, you should see it assigning addresses and other happiness. Right now, nothing you can really do other than taking note of the primary unicast address it assigned to your board, and then: [mesh-cfgclient]# menu config [mesh-cfgclient]# target 00d9 Configuring node 00d9 [config: Target = 00d9]# beacon-get Which should hopefully report back a 0x01 for the beacon-status. If the packet gets lost, you’ll see a no response type of output. This is where we are currently. If the packet goes lost, no retransmits of config stuff happens (yet) so just keep repeating it until you a response if you’ve successfully provisioned. If the board complains about nRF Softdevice interrupts being disabled for too long, that’s because of the debug output using too much critical sections. You can reduce the log level or just try again. If you want to start back from scratch, alter the main.rs to use the .force_reset() line (once) which will factory-reset the board. On the pi side, after menu config and setting the target to the board: [config: Target = 00d9]# node-reset This will remove it from the DB. You can then back and do the discover-unprovisioned on and the provision $UUID bits again.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/nrf52/nrf52840-dk/bt-mesh/README.html","titles":[{"text":"nRF 52840 Bluetooth Mesh Example","hash":"_nrf_52840_bluetooth_mesh_example","id":1},{"text":"Raspberry Pi with Bluetooth","hash":"_raspberry_pi_with_bluetooth","id":2},{"text":"First manually stop the existing bluetoothd","hash":"_first_manually_stop_the_existing_bluetoothd","id":3},{"text":"Secondly, on the Pi, use mesh-cfgclient","hash":"_secondly_on_the_pi_use_mesh_cfgclient","id":4},{"text":"On the board","hash":"_on_the_board","id":5},{"text":"If that fails…​","hash":"_if_that_fails","id":6},{"text":"Provision!","hash":"_provision","id":7},{"text":"On the pi, running mesh-cfgclient:","hash":"_on_the_pi_running_mesh_cfgclient","id":8},{"text":"Do Stuff","hash":"_do_stuff","id":9},{"text":"What might go wrong","hash":"_what_might_go_wrong","id":10}]},"246":{"id":246,"text":"This example application runs out of the box on the Raspberry Pi Pico. RaspBerry Pi Pico rustup to build the code Pico SDK to convert binary from ELF to UF2 format. Follow the instructions there to build the SDK. To build the firmware: cargo build --release Flashing the firmware uses the built-in bootloader on the pico (At present, probe-run does not support the pico). First, power up the pico while holding the BOOTSEL button. This should put turn the pico into a USB mass storage device that will be attached to your computer. To convert the firmware to the format expected by the SDK, run the elf2uf2 tool: $PICO_SDK_PATH/build/elf2uf2/elf2uf2 target/thumbv6m-none-eabi/release/blinky blinky.uf2 To flash the device, copy the blinky.uf2 to the attached mass storage device (path may vary depending on your OS): cp blinky.uf2 /run/media/myuser/RPI-RP2","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/rp/pico/blinky/README.html","titles":[{"text":"RaspBerry Pi Pico blinky example","hash":"_raspberry_pi_pico_blinky_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Building","hash":"_building","id":5},{"text":"Flashing","hash":"_flashing","id":6}]},"247":{"id":247,"text":"This example application runs out of the box on the STM32 Nucleo H743ZI development kit. STM32 Nucleo H743ZI development kit. A finger or other stick-like device to push a button. To build the example, you need to have rustup. To flash the example on the device, you need probe-run installed (cargo install probe-run). To run the firmware: cargo run --release If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe : Once flashed, the device will reset and look no different at first. Upon pressing the blue user button, the LEDS will randomly blink individually until the button is released.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32h7/nucleo-h743zi/blinky/README.html","titles":[{"text":"nucleo-h743zi-blinkdance drogue-device example","hash":"_nucleo_h743zi_blinkdance_drogue_device_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Running","hash":"_running","id":5},{"text":"Troubleshooting","hash":"_troubleshooting","id":6}]},"248":{"id":248,"text":"This example application runs on the STM32 Nucleo H743ZI development kit attached to a WaveShare 5.6inch 7-color e-Paper Display. STM32 Nucleo H743ZI development kit. WaveShare 5.6inch 7-color e-Paper Display. A finger or other stick-like device to push a button. To build the example, you need to have rustup. To flash the example on the device, you need probe-run installed (cargo install probe-run). To run the firmware: cargo run --release If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe : Once flashed, the device will reset and look no different at first. Upon pressing the blue user button, the display will show Rodney and some text. The text will update upon each button push.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32h7/nucleo-h743zi/epd/README.html","titles":[{"text":"nucleo-h743zi-epd drogue-device example","hash":"_nucleo_h743zi_epd_drogue_device_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Running","hash":"_running","id":5},{"text":"Troubleshooting","hash":"_troubleshooting","id":6}]},"249":{"id":249,"text":"This example application runs out of the box on the STM32 Nucleo H743ZI development kit. STM32 Nucleo H743ZI development kit. A finger or other stick-like device to push a button. To build the example, you need to have Rust Nightly. To flash the example on the device, you need probe-run installed (cargo install probe-run). Make sure you have the correct target architecture supported in rust: rustup target add thumbv7em-none-eabihf HTTP authentication will come from these entries in ~/.drogue/config.toml: http-username = \"...\" http-password = \"...\" To run the firmware: cargo +nightly run --release If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo +nightly run --release -- --probe : Once flashed, the device will reset and look no different at first. Upon pressing the blue user button, the LEDS will cycle from green to yellow to red and back again.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32h7/nucleo-h743zi/ethernet/README.html","titles":[{"text":"nucleo-h743zi-blinky drogue-device example","hash":"_nucleo_h743zi_blinky_drogue_device_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Running","hash":"_running","id":6},{"text":"Troubleshooting","hash":"_troubleshooting","id":7}]},"250":{"id":250,"text":"The bootloader uses embassy-boot to interact with the flash. Flash the bootloader cargo flash --features --release --chip STM32L475VG","title":"Bootloader for STM32","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32l4/iot01a/bootloader/README.html","titles":[{"text":"Usage","hash":"_usage","id":1}]},"251":{"id":251,"text":"This example application runs out of the box on the STM32 IOT01A development kits. The example can also be compiled with a dfu flag to enable firmware update capabilities. It uses the on board peripherals such as WiFi and the temperature sensor to send data to an HTTP endpoint such as Drogue Cloud, and (if the dfu feature is enabled) retrieve firmware updates. There are multiple variants of this kit, so the example must be compiled and run using feature flags. The example can operate using plain TCP, or using TLS by enabling the tls feature flag. STM32 IOT01A development kit To build the example, you need to have rustup. To flash the example on the device, you need probe-run installed (cargo install probe-run). A Drogue Cloud instance. See drogue-cloud for how to run that, or use the sandbox (requires TLS). Credentials for your local WiFi network will come from these entries in ~/.drogue/config.toml: wifi-ssid = \"...\" wifi-password = \"...\" HTTP authentication will come from these entries in ~/.drogue/config.toml: http-username = \"...\" http-password = \"...\" For Drogue Cloud, the username/password is stored in this form: device_id@application. The example config.toml file for connecting to public Drogue cloud sandbox application could look like this: hostname = \"http.sandbox.drogue.cloud\" # Replace with your own Drogue Cloud instance if you are not using the sandbox port = \"443\" wifi-ssid = \"...\" # The WiFi network SSID wifi-password = \"...\" # The WiFi network pre-shared key http-username = \"device1@wifi-workshop\" http-password = \"mysecretpassword\" Just enter your wifi details and you should be ready to go. If you have the B-L4S5I-IOT01A board, set the following environment variables: export CHIP=STM32L4S5VI CHIP_FEATURE=b-l4s5i-iot01a If you have the B-475E-IOT01A board, use the following settings instead: export CHIP=STM32L475VGTx CHIP_FEATURE=b-l475e-iot01a You can configure the IP constant to point to any HTTP server to receive events, or you can use drogue cloud locally. For simplicity, start a local HTTP server in python that echoes the HTTP payload back: curl -s https://raw.githubusercontent.com/drogue-iot/drogue-device/main/apps/drogue-temperature/server.py | python3 To run the firmware using a given chip: DEFMT_LOG=info PROBE_RUN_CHIP=${CHIP} cargo run --release --features ${CHIP_FEATURE},debug --no-default-features When the tls flag is enabled, the example is configured to use the Drogue Cloud sandbox. To use this example with your own Drogue Cloud instance, you need to edit the HOST and PORT constants in src/main.rs. To run the firmware using a given chip: DEFMT_LOG=info PROBE_RUN_CHIP=${CHIP} cargo run --release --features ${CHIP_FEATURE},tls,debug --no-default-features Once flashed, the device will reset and attempt to join the WiFi network. If successful, it will print a message to the RTT log. You can then press the blue/user button on the board to send a test message from the device. For this step, we need to flash a bootloader as well as the application. When the dfu flag is enabled, the example is configured to enable firmware updates using Drogue Cloud sandbox. To flash the bootloader for a given chip: cargo flash --manifest-path ../bootloader/Cargo.toml --release --features ${CHIP_FEATURE} --no-default-features --chip ${CHIP} To run the application using a given chip: DEFMT_LOG=info PROBE_RUN_CHIP=${CHIP} cargo run --release --features ${CHIP_FEATURE},tls,dfu,debug --no-default-features Once flashed, the device will reset and attempt to join the WiFi network as before, in addition to polling the Drogue Cloud for firmware update commands. If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run -- --probe : Additionally, the B-L4S5I-IOT01A board can have issues with running probe multiple times, leading to errors like Error: An error with the usage of the probe occured Caused by: Operation timed out If you experience that, the best way to restore the board is to reconnect it and use st-flash utility to write any binary to it, like st-flash write ../target/thumbv7em-none-eabihf/release/iot01a-wifi.d 0x8000000 After reconnecting the board again, you should be able to use cargo run again.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32l4/iot01a/wifi/README.html","titles":[{"text":"STM32 IOT01A example","hash":"_stm32_iot01a_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Running with plain TCP","hash":"_running_with_plain_tcp","id":6},{"text":"Running with TLS","hash":"_running_with_tls","id":7},{"text":"Enabling firmware update capabilities","hash":"_enabling_firmware_update_capabilities","id":8},{"text":"Flashing the bootloader","hash":"_flashing_the_bootloader","id":9},{"text":"Running the application","hash":"_running_the_application","id":10},{"text":"Troubleshooting","hash":"_troubleshooting","id":11}]},"252":{"id":252,"text":"This example application runs out of the box on the STM32U585AI-IOT02A development kit. STM32 U585AI-IOT02A development kit. A finger or other stick-like device to push a button. To build the example, you need to have rustup. To flash the example on the device, you need probe-run installed (cargo install probe-run). To run the firmware: cargo run --release If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe : Once flashed, the device will reset and look no different at first. Upon pressing the blue user button, the LEDS will cycle from green to blue to red and back again.","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32u5/iot02a/blinky/README.html","titles":[{"text":"stm32u585ai-iot02a-blinky drogue-device example","hash":"_stm32u585ai_iot02a_blinky_drogue_device_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Running","hash":"_running","id":5},{"text":"Troubleshooting","hash":"_troubleshooting","id":6}]},"253":{"id":253,"text":"The bootloader uses embassy-boot to interact with the flash. Flash the bootloader cargo flash --features --release --chip STM32L475VG","title":"Bootloader for STM32","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32wl/nucleo-wl55/bootloader/README.html","titles":[{"text":"Usage","hash":"_usage","id":1}]},"254":{"id":254,"text":"This example application runs out of the box on the STM32 Nucleo-WL55 Kit (NUCLEO-WL55JC2) STM32 NUCLEO-WL55JC2 To build and flash the example, you need to have rustup. In practice you can use whatever tool you want to flash the device, but this guide will assume that probe-run is used (cargo install probe-run). Over The Air Authentication (OTAA) credentials will come from these entries in ~/.drogue/config.toml: \"dev-eui\" = \"...\" \"app-eui\" = \"...\" \"app-key\" = \"...\" To build the firmware: cargo build --release Flashing the firmware uses probe-run which auto-detects the probe connected to your device. The following command will build and flash the firmware and open the debugger console so you can see the console debug output. DEFMT_LOG=info cargo run --release Once the device is flashed, it will connect to the local LoRaWAN network. Once the network is joined, you can press the B1 button on the development kit to send a test message ping:, where num-clicks is the number of times you pressed the button since resetting the board. The board features 3 user controllable LEDs. The program will use 3 of them to show the internal status: Blue Will light up when starting and turn off once it joined the LoRa network. Green Turns on while sending the uplink message. Red Can be controlled through the downlink message: led:on or led:off. If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe :","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32wl/nucleo-wl55/lorawan/README.html","titles":[{"text":"STM32 Nucleo-WL55 example","hash":"_stm32_nucleo_wl55_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Building","hash":"_building","id":6},{"text":"Running","hash":"_running","id":7},{"text":"Usage","hash":"_usage","id":8},{"text":"LEDs","hash":"_leds","id":9},{"text":"Troubleshooting","hash":"_troubleshooting","id":10}]},"255":{"id":255,"text":"This example application runs out of the box on the STM32 Nucleo-WL55 Kit (NUCLEO-WL55JC2) doing firmware updates OTA. STM32 NUCLEO-WL55JC2 To build and flash the example, you need to have rustup. In practice you can use whatever tool you want to flash the device, but this guide will assume that probe-run is used (cargo install probe-run). Over The Air Authentication (OTAA) credentials will come from these entries in ~/.drogue/config.toml: \"dev-eui\" = \"...\" \"app-eui\" = \"...\" \"app-key\" = \"...\" First, flash the bootloader: cargo flash --manifest-path ../bootloader/Cargo.toml --release --no-default-features --chip STM32WLE5JCIx You can then run the application with the dfu parameter: DEFMT_LOG=info cargo run --release Once the device is flashed, it will connect to the local LoRaWAN network. Once the network is joined, you can press the B1 button on the development kit to send a test message ping:, where num-clicks is the number of times you pressed the button since resetting the board. The board features 3 user controllable LEDs. The program will use 3 of them to show the internal status: Blue Will light up when starting and turn off once it joined the LoRa network. Green Turns on while sending the uplink message. Red Turns on when receiving a downlink message and waiting for next uplink message. If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run --release -- --probe :","title":"","component":"drogue-device","version":"dev","name":"README","url":"/drogue-device/dev/examples/stm32wl/nucleo-wl55/lorawan-dfu/README.html","titles":[{"text":"STM32 Nucleo-WL55 example","hash":"_stm32_nucleo_wl55_example","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Hardware","hash":"_hardware","id":3},{"text":"Software","hash":"_software","id":4},{"text":"Configuring","hash":"_configuring","id":5},{"text":"Running","hash":"_running","id":6},{"text":"Usage","hash":"_usage","id":7},{"text":"LEDs","hash":"_leds","id":8},{"text":"Troubleshooting","hash":"_troubleshooting","id":9}]},"256":{"id":256,"text":"This section of the book is about some hands-ons workshops. They are focused around a specific use case and will walk you through the different steps, explaining what to do any why. You need to bring a bit more time, and might need some preparation, but you will learn a lot. We do have a Getting Started workshop, which walks you through the very basics of Drogue IoT Cloud. Unless you really know what you are doing, it is recommended to complete this workshop before anything else. These workshops should run on all operating systems. However, testing them on all variations is a time-consuming task. We mostly test on Linux and macOS. Windows should work as well but is, most likely, less tested. Should you encounter some issues, pull-requests are always welcome ;-) Some workshops may require a specific version of Drogue IoT Cloud. When you self-host an instance, you can pick a specific version. However, in many cases you can also use the community hosted sandbox instance. The sandbox will always run the most recent, released version of Drogue IoT Cloud. You are welcome to contribute to this repository. Contributing can come in multiple ways, including constructive feedback, fixes, enhancements, or new content. Should you consider to adding new works-shops, we would as to reach out to us first. And, be committed on supporting them in the future.","title":"Introduction","component":"drogue-workshops","version":"master","name":"index","url":"/drogue-workshops/index.html","titles":[{"text":"Supported operating systems","hash":"_supported_operating_systems","id":1},{"text":"Drogue IoT Cloud version","hash":"_drogue_iot_cloud_version","id":2},{"text":"Contributing","hash":"_contributing","id":3}]},"257":{"id":257,"text":"The Telemetry end-to-end example is a package of the Eclipse IoT Packages™ project. It describes itself as: A package showing telemetry data acquisition end-to-end: Microcontroller firmware to cloud side data processing, using Drogue IoT and Apache Kafka in the process. As the content is part of the IoT packages project, we only link the tutorial. You can take a look at: https://www.eclipse.org/packages/packages/telemetry-e2e/","title":"Telemetry end-to-end","component":"drogue-workshops","version":"master","name":"telemetry-e2e","url":"/drogue-workshops/external/telemetry-e2e.html","titles":[]},"258":{"id":258,"text":"This is the most basic workshop. It should set you up with all tools and technologies that are required by all the other workshops. It is recommended to finish this workshop first, before diving into the others. A local computer The ability to install new application to your local machine Access to a Drogue IoT cloud instance A working internet connection Most likely, you are reading this already on a computer. For the tutorials a normal desktop computer should work just fine. Linux, macOS, Windows should be fine. Tablets and mobile phones will not be sufficient. If you want to self-host Drogue IoT on your local machine, you can do that too, but you will need considerably more RAM and CPU. For most workshops, you will need access to a Drogue IoT cloud instance. You can self-host one, even on a local machine using e.g. Kind or Minikube. Of course, you can also use our sandbox cluster. The sandbox cluster is a community hosted instance. Be nice, don’t break it. And, accept when it is down. It may also be, that we reset the instance every now and then, and all your data stored on it is lost. In order to configure cloud side components, we will use the drg command line tool. Technically the Drogue IoT Cloud offers a REST API, and you could simply use curl or http too. However, this makes examples rather verbose, and less understandable. All possible ways of installing are described in the drg repository: https://github.com/drogue-iot/drg#installation If you already have cargo and a Rust toolchain installed, you can simply execute: cargo install drg You can also download a pre-compiled binary from the releases page. Navigate your web browser to the console URL of your Drogue IoT Cloud instance. For the sandbox, this would be https://sandbox.drogue.cloud. Depending on the installation, you need to have some local user credentials, create a new account, or sign up with an external identity provider, like GitHub. Next, you will need to log in with drg to the instance as well. Run the following command: drg login For the sandbox, this would be: drg login https://api.sandbox.drogue.cloud drg login will open a browser window, to let you start the OpenID Connect login flow. This is required, as the Drogue Cloud instance may be paired with an external identity provider, like GitHub. Once the login is completed, you will be directed to the Drogue Cloud, which will then redirect to the local drg instance, receiving the OAuth2 access token. From now on, drg has access to your Drogue Cloud instance. When the access token expires, it will automatically fetch a fresh token, using the stored refresh token. Your password, is not stored locally. You can see which contexts you have created by: drg context list This will print out a list of known contexts on your system. To set a new active context, run: drg context set-active An application is a main resource in Drogue Cloud. It will contain devices, and provide access to data. Creating a new application is simply, and can be done by executing: drg create app my-app Application names are unique in the system. Workshops may use an application name like my-app, which may already be used by another use. In this case, you will need to select a different name. Same as creating a new application, you can create a new device too: drg create device --app my-app my-device As you can see, devices are scoped by applications. So, when creating a new device, you will also need to provide the application you want to create it in. Device names are unique too, however they need to be unique for an application. It is possible to have device1 as part of app1 and as part of app2. These are two distinct devices. Applications and devices can contain additional information like credentials, configurations, status. You can view and edit this information. From the command line, execute: drg get device --app my-app my-device This should print out something like: { \"metadata\": { \"application\": \"my-app\", \"creationTimestamp\": \"2021-04-30T08:36:41.982194Z\", \"generation\": 0, \"name\": \"my-device\", \"resourceVersion\": \"d2ca3370-49d8-4546-b1ac-960a4a7689ef\", \"uid\": \"5b10e583-8498-4697-8e0d-7ebd35496e91\" } } This might indeed remind you of Kubernetes. We tried to model the data structures similar to Kubernetes'. However, we didn’t blindly copy the structures, only adopted them where it made sense for our use case. When you see something that looks familiar, it is. Just don’t expect all other Kubernetes concept to be present as well. You can interactively edit a resource be executing: drg edit device --app my-app my-device This will load the current state, and open it in a local text editor. Once you save and close the editor, it will update the resource in the cloud. Finally, we can also delete a resource. Let’s just delete the whole application: Deleting the application will delete the application and all its devices. There is no way to bring them back. drg delete app my-app This will start by deleting devices, and then the application. It will also make the name available for others to use it. However, devices will still be deleted, when re-creating an appliction with the same name.","title":"Getting started","component":"drogue-workshops","version":"master","name":"index","url":"/drogue-workshops/getting-started/index.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"A local computer","hash":"_a_local_computer","id":2},{"text":"Access to a Drogue IoT cloud instance","hash":"_access_to_a_drogue_iot_cloud_instance","id":3},{"text":"Install the command line client","hash":"_install_the_command_line_client","id":4},{"text":"Install using cargo","hash":"_install_using_cargo","id":5},{"text":"Downloading a pre-compiled binary","hash":"_downloading_a_pre_compiled_binary","id":6},{"text":"Create an account in Drogue IoT Cloud","hash":"_create_an_account_in_drogue_iot_cloud","id":7},{"text":"Log in with drg","hash":"_log_in_with_drg","id":8},{"text":"Managing contexts","hash":"_managing_contexts","id":9},{"text":"Creating a new application","hash":"_creating_a_new_application","id":10},{"text":"Creating a new device","hash":"_creating_a_new_device","id":11},{"text":"Viewing and editing resources","hash":"_viewing_and_editing_resources","id":12},{"text":"Viewing the current state","hash":"_viewing_the_current_state","id":13},{"text":"Editing a resource","hash":"_editing_a_resource","id":14},{"text":"Deleting a resource","hash":"_deleting_a_resource","id":15}]},"259":{"id":259,"text":"So far, we have run the application locally, and then deployed it to the cloud. However, we could move our workflow even more to the cloud. In the next steps, will build and deploy in the cloud, and set up a cloud IDE afterwards. For this, you will need an account for the Developer Sandbox for OpenShift. The following steps assume that you have an active instance, and that kubectl or oc are logged in to this instance. Normally you have two namespaces pre-created (you cannot create new namespaces): -dev and -stage. We will use the -stage for deploying the application and leave the -dev to the cloud IDE. The first step is to deploy the same application, but let the OpenShift cluster build the container image. We can deploy this setup, using a Quarkus Helm chart: helm install --repo https://redhat-developer.github.io/redhat-helm-charts \\ my-drogue-quarkus-mqtt-integration quarkus \\ --set build.uri=https://github.com/drogue-iot/quarkus-mqtt-integration-starter (1) 1 The Git repository which will be fed into the build. You can replace this with your own Git repository. Once you ran the Helm chart, the \"Developer\" perspective of OpenShift should show you the current state: Note the ImagePullBackOff error, that is fine for the moment, as the build isn’t complete yet. Once the build is complete, it will trigger a re-deployment and roll out the new (first) version. Once the deployment has been rolled out, you can also click on the \"route\" on the right-hand side: Trigger a new build is easy: Just click on the \"Start Build\" button on the right side. You can also trigger a new build from the command line: oc start-build my-drogue-quarkus-mqtt-integration This will start a new build, push the image to the internal image registry, and notify the deployment to rollout a new version once the build is complete. Automatic builds You can also trigger builds automatically. Whenever you push to your git repository, it will pick up the change and start the whole process for you. However, setting this up is a bit off-topic for this tutorial. But if you are interested, maybe take a look at: Triggering and modifying builds. Now we can make local modifications, and push changes to our git repository, and build and rollout a new version from that. Cloud IDEs may or may not be your cup of tea. Anyway, let’s explore what we can do with it. Navigate to the CodeReady instance on the Developer Sandbox. From there, you can create a new workspace. Create a new workspace, and use the following URL as \"Devfile\": https://raw.githubusercontent.com/drogue-iot/quarkus-mqtt-integration-starter/main/devfile.yaml By default, the \"Devfile\", will import the original Git repository. Instead of using the URL for creating the workspace, you can also copy and paste the content of the Devfile into the creation screen, and tweak the repository URL to use your own. Starting the workspace may take a minute or two. Once it is ready, it will clone and import the Git repository. During this process, the IDE might offer you to install additional addons: If you like, go ahead and install additional functionality to your workspace. However, all the required plugins are already listed in the \"Devfile\", and so you can skip these offers as well. Once the source code is imported, click on My Workspace Start Development Mode to start a first build. This will trigger an initial Maven build, which may again take a bit until it is compiled: Once the build is finished, the Quarkus Maven plugin will run the application, just like on your local machine. Eclipse Che will ask you if you want to navigate your browser to the started endpoint: You can click on Open In New Tab to open the web frontend in your browser. You just built the example on the cluster itself, running inside a cloud IDE. And on the same cluster, you are running the actual application. Is that better than doing the same on your local machine? Maybe, maybe not. This really depends on your use case and environment. In this case you could simply access the MQTT data stream from a public endpoint. Just assume, that this MQTT stream is not a public one, but hosted inside a local area network. With an on-premise cloud IDE, you could get access from a remote place and develop with the actual stream of data. And if you set up the Git build trigger, then you can commit and push from the cloud IDE, and start a new build and rollout by doing so. This concludes the workshop. There are many things that you can try out next. Maybe show more than one bubble in the Web UI. Or show some more information (like timestamps and device IDs). Do some data processing, like building aggregated values for local regions.","title":"Moving to the cloud","component":"drogue-workshops","version":"master","name":"cloud","url":"/drogue-workshops/quarkus-mqtt-starter/cloud.html","titles":[{"text":"Creating the Quarkus build using Helm","hash":"_creating_the_quarkus_build_using_helm","id":1},{"text":"Rebuilding","hash":"_rebuilding","id":2},{"text":"Cloud IDE","hash":"_cloud_ide","id":3},{"text":"Getting ready","hash":"_getting_ready","id":4},{"text":"A first build","hash":"_a_first_build","id":5},{"text":"What just happened?","hash":"_what_just_happened","id":6},{"text":"What’s next?","hash":"_whats_next","id":7}]},"260":{"id":260,"text":"This workshop focuses on the consumption of telemetry data, coming from the MQTT integration API of Drogue Cloud. It will consume data from a public application, which runs on our public sandbox installation, so that the workshop can focus on the cloud side data processing. Drogue Cloud sandbox This workshop consumes data from the public sandbox. This allows you to re-use an existing stream of data, without the need to set up your own instance. However, it maybe the that the sandbox is down. We will definitely fix this, but it may take a bit. Of course, you can also host your own Drogue IoT cloud instance, and even use Minikube or Kind to do so. The final web dashboard can be viewed with just a web browser, as it is hosted on our sandbox server too. So all that you need is just a web browser. However, if you want to get a bit more hands-on, you might need some additional pre-requisites. For locally running the starter, you will need a standard Java developer setup. A Java 11+ JDK, a code editor or IDE, and the ability to run some commands like mvn. For this, you will of course need a Kubernetes cluster. If a local test deployment is sufficient for you, then you can also use something like Minikube or Kind. Instead of setting up your own cluster, you can also use something like the OpenShift Developer Sandbox. In any case, you will need the kubectl binary on your local machine, and be logged in to your Kubernetes cluster. You can also deploy the code using Helm. Additionally to a Kubernetes cluster (as described above), you will of course also need the helm binary (version 3.x).","title":"Quarkus MQTT integration starter","component":"drogue-workshops","version":"master","name":"index","url":"/drogue-workshops/quarkus-mqtt-starter/index.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"Local developer setup","hash":"_local_developer_setup","id":2},{"text":"Deploy to Kubernetes","hash":"_deploy_to_kubernetes","id":3},{"text":"Deploy to Kubernetes (using Helm)","hash":"_deploy_to_kubernetes_using_helm","id":4}]},"261":{"id":261,"text":"In the following sections we will walk through the important code sections of the different components. The full code is available at: https://github.com/drogue-iot/quarkus-mqtt-integration-starter/tree/main/src/main but here, we will show some of the most important concepts. A brief overview of the flow of events is: Receiving events from Drogue IoT is done using the MQTT integration. This endpoint of Drogue Cloud is an MQTT server to which an application can connect and subscribe to some specific topics, in order to receive events from the system. It is not a full MQTT broker though, and only provides some dedicates topics and operations, required for this use case. The core logic for receiving events is in the file Receiver.java. @Startup (1) @ApplicationScoped public class Receiver { @Incoming(Channels.DROGUE_INBOUND) @Outgoing(Channels.TELEMETRY) @Broadcast public DeviceEvent process(Message rawMessage ) { (2) // ... } } 1 The receiver is a bean, which is annotated with the @Startup annotation, so that it starts processing events, even if no user has yet to access the web frontend. This is required for this example, as events are already being generated and need to be processed by our logic, so that when a user connects to our application, there will be some existing data to show. This pattern also works in cases where you don’t even have a web frontend, but an application which only processes events in the background. 2 The message you will receive is a raw byte[] message. As Drogue IoT sends out Cloud Events, we need to parse the raw MQTT payload as a cloud event, and then map the payload of the cloud event to the actual payload we expect: var format = EventFormatProvider .getInstance() .resolveFormat(JsonFormat.CONTENT_TYPE); (1) var message = format.deserialize(rawMessage.getPayload()); (2) var mappedMessage = mapData( message, PojoCloudEventDataMapper.from(this.objectMapper, Payload.class) ); (3) var payload = mappedMessage.getValue(); (4) 1 Get the format provider for the Cloud Events JSON format. As we are using MQTT 3.1.1, we are sure that we are using the structural format, which encodes the full cloud event using JSON. 2 Deserialize the message using the format provider. 3 Map the payload of the cloud event to the Java class Payload. 4 Extract the mapped payload from the payload mapper. The actual code is a bit more complex, and properly handles error cases. That is why your local cloned code or the code from the git repository looks a bit more complex. The Receiver bean actually is an event transformer. It transforms the incoming MQTT messages into system internal events. The target event is created by the following section: var device = new DeviceEvent(); var deviceId = message.getExtension(\"device\"); (1) device.setDeviceId(deviceId.toString()); var timestamp = message.getTime(); (1) device.setTimestamp(timestamp.toInstant()); device.setTemperature(payload.getTemperature()); (2) device.setLocation(payload.getGeoloc()); (2) return device; (3) 1 Extracts information from the cloud event’s metadata 2 Extracts information from the payload 3 The resulting, internal, event As the process method is annotated with both the @Inbound and @Outbound annotation, it will receive events but also forward events which are returned by the method. The event which is returned, is sent on internally to the event channel defined by Channels.TELEMETRY. We saw before that events flow in from a channel Channels.DROGUE_INBOUND and leave to a channel named Channels.TELEMETRY. There is a bit more to the channels than just their names. Let’s take a look at the application configuration: application.yaml mp: messaging: # # Configure the MQTT source (we read from it) # incoming: drogue-inbound: (1) type: smallrye-mqtt (2) topic: app/${drogue.integration.application} (3) host: ${drogue.integration.mqtt.host} port: ${drogue.integration.mqtt.port} # # Configure the MQTT sink (we send commands to) # outgoing: drogue-outbound: (1) type: smallrye-mqtt (2) host: ${drogue.integration.mqtt.host} port: ${drogue.integration.mqtt.port} 1 The names of the channels, aligns with the constants in Channels. 2 Declares the channels as \"backed by MQTT\". 3 The inbound topic. For the outbound channel it is possible to provide this \"per message\", and so it may be omitted. Although this examples configures an outbound channel, it is actually not used in this starter. However, it is left in for completeness. As the internal telemetry channel does not have any configuration, it is an internal channel, not backed by any transport technology. The internal component, which consumes these events are actually two: state/CurrentState ui/EventsResource The bean CurrentState simply records the \"last known event\": public class CurrentState { private DeviceEvent lastEvent; @Incoming(Channels.TELEMETRY) (1) public void telemetryChange(final DeviceEvent event) { this.lastEvent = event; (2) } public DeviceEvent getLastEvent() { return this.lastEvent; (3) } } 1 Bind the method to receive events from the internal \"telemetry\" channel. The one we are feeding from the Receiver bean. 2 Simply remember the last known event. 3 Return the last known event when we need it. This example doesn’t make use of the state stored by this bean. In the next section you will see why. But still, this pattern might come in handy for you in other cases. The dashboard is connected to the backend using WebSockets. When the dashboard is loaded, it connects to the backend. Those connections are handled by the EventsResource bean: @ServerEndpoint(\"/ws\") @ApplicationScoped public class EventsResource { private final Map sessions = new ConcurrentHashMap<>(); (1) private Object lastEvent; (2) @OnOpen public void onOpen(Session session) { if (lastEvent != null) { session.getAsyncRemote().sendObject(lastEvent); (3) } sessions.put(session.getId(), session); } @OnClose public void onClose(Session session) { sessions.remove(session.getId()); } @OnError public void onError(Session session, Throwable throwable) { sessions.remove(session.getId()); } @Incoming(Channels.TELEMETRY) void telemetryEvent(DeviceEvent event) { (4) Object nextEvent = new JsonObject() .put(\"type\", \"telemetry\") .put(\"payload\", JsonObject.mapFrom(event)).toString(); this.lastEvent = nextEvent; (5) sessions.values().forEach(s -> { (6) s.getAsyncRemote().sendObject(nextEvent); }); } } 1 The map used to keep track of all connected clients. As the bean is annotated with @ApplicationScoped there will only be one instance of it, and we can track all sessions. 2 The last known state, preformatted for directly sending out to clients. 3 When a new client connects, and we have a previous state, we send it out before anything else. 4 The method which will receive the internal events from the Receiver bean. 5 Remembers the last event formatted for the client. 6 Send out the event to all known clients. We walked through the flow of events and learned how events get processes, converted and consumed in the application. You might want to take a look at the web frontend too. This is just a small HTML page, with some CSS and JavaScript to subscribe to the backend and receive data. The content is located at: main/src/main/resources/META-INF/resources/index.html. Maybe you already have some ideas to tweak this. Making changes is easy: take your editor of choice, and go ahead. In some cases, when modifying application global beans, you need to re-start the application, as hot-reloading doesn’t work. Press Ctrl+C and re-run mvn quarkus:dev.","title":"How does it work?","component":"drogue-workshops","version":"master","name":"internals","url":"/drogue-workshops/quarkus-mqtt-starter/internals.html","titles":[{"text":"Receiving events","hash":"_receiving_events","id":1},{"text":"MQTT Events","hash":"_mqtt_events","id":2},{"text":"Processing as a cloud event","hash":"_processing_as_a_cloud_event","id":3},{"text":"Assembling the outbound event","hash":"_assembling_the_outbound_event","id":4},{"text":"Understanding the channel mappings","hash":"_understanding_the_channel_mappings","id":5},{"text":"Consuming events","hash":"_consuming_events","id":6},{"text":"Current state","hash":"_current_state","id":7},{"text":"UI event stream","hash":"_ui_event_stream","id":8},{"text":"What’s next?","hash":"_whats_next","id":9}]},"262":{"id":262,"text":"In order to deploy this to a Kubernetes cluster, we will first need to create a container image for the application. Later on, we will also show how you can build this in the cloud, and automatically re-deploy when you make changes. You can build container images locally. First, ensure that you have an up-to-date Maven build: mvn clean package And then, create a container image from it: docker build -t my-quarkus-mqtt-starter . -f src/main/docker/Dockerfile.jvm Of course, you can simply replace the docker command with podman, it works the same way. The previous step created a container image in your local machine. However, when using a Kubernetes cluster, that may not be sufficient. You might need to push the image to a container registry. Reasonable choices are quay.io or GitHub container registry. Assuming you push to quay.io with your user being myaccount, you would need to run the following commands: docker tag my-quarkus-starter quay.io/myaccount/my-quarkus-mqtt-starter:latest docker push quay.io/myaccount/my-quarkus-mqtt-starter:latest In the folder deploy/, you will find some example deployment files. First, if you want to deploy your changed container image, you will need to replace the image name in the file deploy/020-deployment.yaml: kind: Deployment apiVersion: apps/v1 metadata: name: quarkus-mqtt-integration-starter # … spec: # … template: # … spec: containers: - name: service image: ghcr.io/drogue-iot/quarkus-mqtt-integration-starter-jvm:latest (1) imagePullPolicy: Always # … 1 The original name image, which you may replace if you want to deploy your own version For all examples, it is a good idea to use a dedicated namespace, in order to isolate your deployment. If you are using OpenShift as a cluster, you can simply run the following command to deploy the application: kubectl apply -f deploy/ You can then get the HTTP endpoint using the following command: kubectl get route quarkus-mqtt-integration-starter Which should print out the information on the console like this: NAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD quarkus-mqtt-integration-starter quarkus-mqtt-integration-starter-my-user-stage.apps.sandbox-m2.ll9k.p1.openshiftapps.com quarkus-mqtt-integration-starter http edge/Redirect None The hostname is in the \"HOST\" column, and normally it is an HTTPS link. So the web-frontend URL (in this case) would be https://quarkus-mqtt-integration-starter-my-user-stage.apps.sandbox-m2.ll9k.p1.openshiftapps.com You can also use the Developer Sandbox for Red Hat OpenShift to directly host this application. Before you start, you will need an Azure account and have the az command installed and connected to your account. This may cost money Deploying the example on Azure may result on costs being billed to your account. You need to understand what the following commands actually do and ensure that you clean up resources after you are finished testing. If in doubt, consider a locally hosted Kubernetes solution like Minikube or Kind. Also see the documentation: https://docs.microsoft.com/en-us/azure/aks/ If you don’t have a cluster yet, you can create a simple test cluster by executing the following commands. The following steps are an opinionated setup, focused on this specific use case. It follows the quick start instructions for the Azure Kubernetes Service. Also see the documentation: https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough az group create --name my-quarkus-mqtt-starter --location eastus az aks create --resource-group my-quarkus-mqtt-starter --name my-quarkus-mqtt-cluster --node-count 1 --enable-addons monitoring,http_application_routing --generate-ssh-keys az aks get-credentials --resource-group my-quarkus-mqtt-starter --name my-quarkus-mqtt-cluster Finally, verify that the cluster is running and that kubectl is properly configured to access it. Execute the following command: kubectl get nodes Which should result in an output like this: NAME STATUS ROLES AGE VERSION aks-nodepool1-20363394-vmss000000 Ready agent 81s v1.19.11 Create a new namespace: kubectl create namespace quarkus-mqtt-starter Deploy the application: kubectl -n quarkus-mqtt-starter apply -f deploy/010-configuration.yaml kubectl -n quarkus-mqtt-starter apply -f deploy/020-deployment.yaml kubectl -n quarkus-mqtt-starter apply -f deploy/030-service.yaml az aks show --resource-group my-quarkus-mqtt-starter --name my-quarkus-mqtt-cluster --query addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName -o table This should print out the cluster’s domain name: Result ------------------------------------- d578cb0564094cf8979c.eastus.aksapp.io (1) 1 Cluster DNS name Create a new ingress using: kubectl apply -f - <<EOF kind: Ingress apiVersion: networking.k8s.io/v1 metadata: namespace: quarkus-mqtt-starter name: web-frontend annotations: kubernetes.io/ingress.class: addon-http-application-routing spec: rules: - host: web-frontend.d578cb0564094cf8979c.eastus.aksapp.io (1) http: paths: - path: / pathType: Prefix backend: service: name: quarkus-mqtt-integration-starter port: name: http EOF 1 A combination of web-frontend. plus the cluster domain name from before. The link to the web-frontend is (in this case): http://web-frontend.d578cb0564094cf8979c.eastus.aksapp.io If you created a cluster in an earlier step, you should clean it up by deleting the resource group. The following command will delete the whole resource group without asking for confirmation. Ensure that this is really what you want to do. az group delete --name my-quarkus-mqtt-starter --yes To avoid unexpected charges, manually double check that all resources have indeed been cleaned up. For any other Kubernetes, you will need some kind of Ingress controller, and need to map the ingress traffic to the application Service. Since this is very difference between different Kubernetes providers, it is hard to give a reasonable example. We deployed the application into a Kubernetes cluster, and have it running and processing our data there. Of course, you can start making changes already. If you wait for the next chapter, you might see how you can make this process a bit simpler.","title":"Deploying to Kubernetes","component":"drogue-workshops","version":"master","name":"kubernetes","url":"/drogue-workshops/quarkus-mqtt-starter/kubernetes.html","titles":[{"text":"Creating a container","hash":"_creating_a_container","id":1},{"text":"Pushing images","hash":"_pushing_images","id":2},{"text":"Deploying the application","hash":"_deploying_the_application","id":3},{"text":"OpenShift","hash":"_openshift","id":4},{"text":"Using OpenShift Developer Sandbox","hash":"_using_openshift_developer_sandbox","id":5},{"text":"Azure Kubernetes Service","hash":"_azure_kubernetes_service","id":6},{"text":"Creating a cluster","hash":"_creating_a_cluster","id":7},{"text":"Deploying the application","hash":"_deploying_the_application_2","id":8},{"text":"Routing ingress traffic","hash":"_routing_ingress_traffic","id":9},{"text":"Clean up","hash":"_clean_up","id":10},{"text":"Any other Kubernetes","hash":"_any_other_kubernetes","id":11},{"text":"What’s next?","hash":"_whats_next","id":12}]},"263":{"id":263,"text":"The next step is to run this locally. Go to drogue-iot/quarkus-mqtt-integration-starter on GitHub and fork the repository. It is a template repository, which allows you to easily create a copy of it. This allows you to make and push changes to your own copy, and is required for other parts of the workshop. You can easily do this by making a copy: Choose a name, and then clone the repository on your local machine. Repository location The following commands and examples will still use the original HTTP link to the repository. If you created a copy, please be sure to adapt the name accordingly. On your local machine, you can clone the source using the git command line tool like this: git clone https://github.com/drogue-iot/quarkus-mqtt-integration-starter This is completely up to you! Quarkus works together with all kinds of IDEs and editors. In the following sections we will focus on command line usage of tools, like mvn. You know your environment best, so if you dislike using the command line, you can always use equivalent IDE operations instead. Quarkus applications can be started locally by executing the following command, and this application is no different: ./mvnw quarkus:dev This will compile and run the application in debug mode. Beside the Maven build output, you should see the application’s log output in the end: [INFO] No sources to compile Listening for transport dt_socket at address: 5005 __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\ --\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/ 2021-06-08 15:15:35,753 INFO [io.und.websockets] (Quarkus Main Thread) UT026003: Adding annotated server endpoint class io.drogue.iot.demo.ui.EventsResource for path /ws 2021-06-08 15:15:35,775 DEBUG [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00226: Found incoming connectors: [smallrye-mqtt] 2021-06-08 15:15:35,776 DEBUG [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00227: Found outgoing connectors: [smallrye-mqtt] 2021-06-08 15:15:35,777 DEBUG [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00229: Channel manager initializing... 2021-06-08 15:15:35,795 DEBUG [io.sma.rea.mes.mqt.ses.imp.MqttClientSessionImpl] (vert.x-eventloop-thread-0) Creating connection 2021-06-08 15:15:35,798 DEBUG [io.sma.rea.mes.mqt.ses.imp.MqttClientSessionImpl] (vert.x-eventloop-thread-0) setState - current: DISCONNECTED, next: CONNECTING 2021-06-08 15:15:35,823 DEBUG [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00209: Beginning graph resolution, number of components detected: 8 2021-06-08 15:15:35,825 DEBUG [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00210: Graph resolution completed in 1394483 ns 2021-06-08 15:15:35,825 DEBUG [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00235: Beginning materialization 2021-06-08 15:15:35,856 DEBUG [io.sma.rea.mes.provider] (Quarkus Main Thread) SRMSG00236: Materialization completed in 30541131 ns 2021-06-08 15:15:35,921 DEBUG [io.sma.rea.mes.mqt.ses.imp.MqttClientSessionImpl] (vert.x-eventloop-thread-0) Request to subscribe to: app/drogue-public-temperature / QOS_0 2021-06-08 15:15:35,922 DEBUG [io.sma.rea.mes.mqt.ses.imp.MqttClientSessionImpl] (vert.x-eventloop-thread-0) Requesting subscribe: app/drogue-public-temperature / QOS_0 2021-06-08 15:15:35,933 DEBUG [io.ver.mqt.imp.MqttClientImpl] (vert.x-eventloop-thread-0) Trying to connect with mqtt-integration-drogue-dev.apps.wonderful.iot-playground.org:443 2021-06-08 15:15:36,036 INFO [io.quarkus] (Quarkus Main Thread) drogue-quarkus-mqtt-integration-starter 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.0.0.CR3) started in 1.499s. Listening on: http://localhost:8080 The command will not return to the shell, you need to abort the command using Ctrl+C Watch out for a line like this: 2021-06-08 15:15:36,315 DEBUG [io.sma.rea.mes.mqt.ses.imp.MqttClientSessionImpl] (vert.x-eventloop-thread-0) setState - current: CONNECTING, next: CONNECTED The transition to CONNECTED shows, that the MQTT connection has been establishes successfully. After that, a line like the following should appear too: 2021-06-08 15:15:44,520 INFO [io.dro.iot.dem.int.Receiver] (vert.x-eventloop-thread-0) Received message: CloudEvent{id='dec025b8-3ef8-4a15-a531-bda944dcd9db', source=drogue://drogue%2Dpublic%2Dtemperature/A4%3AC1%3A38%3AA2%3A6D%3A42, type='io.drogue.event.v1', datacontenttype='application/json', dataschema=urn:drogue:iot:temperature, subject='status', time=2021-06-08T13:15:44.459994106Z, data=BytesCloudEventData{value=[123, 34, 116, 101, 109, 112, 34, 58, 32, 51, 48, 46, 56, 44, 32, 34, 104, 117, 109, 34, 58, 32, 52, 49, 44, 32, 34, 98, 97, 116, 116, 34, 58, 32, 57, 52, 44, 32, 34, 103, 101, 111, 108, 111, 99, 34, 58, 32, 123, 34, 108, 97, 116, 34, 58, 32, 52, 56, 46, 48, 55, 56, 56, 56, 44, 32, 34, 108, 111, 110, 34, 58, 32, 49, 49, 46, 56, 54, 49, 57, 52, 125, 125]}, extensions={knativehistory=iot-channel-kn-channel.drogue-dev.svc.cluster.local, instance=drogue, partitionkey=drogue%2Dpublic%2Dtemperature/A4%3AC1%3A38%3AA2%3A6D%3A42, application=drogue-public-temperature, device=A4:C1:38:A2:6D:42}} This indicates a received message, including its payload, in binary format. But you can already see that the message has been successfully decoded as a \"CloudEvent\". The metadata of the cloud event already gives a bit of information what the event is about. This already was the first step. You can take your browser and navigate to http://localhost:8080 and should see the same dashboard that the sandbox hosts. Now it is time to understand what is going on under the hood. And get ready to make some first changes.","title":"Running locally","component":"drogue-workshops","version":"master","name":"local","url":"/drogue-workshops/quarkus-mqtt-starter/local.html","titles":[{"text":"Getting the source code","hash":"_getting_the_source_code","id":1},{"text":"Which IDE/editor to use?","hash":"_which_ideeditor_to_use","id":2},{"text":"Starting locally","hash":"_starting_locally","id":3},{"text":"One small step …","hash":"_one_small_step","id":4},{"text":"What’s next?","hash":"_whats_next","id":5}]},"264":{"id":264,"text":"As mentioned before, we actually host the application on your sandbox cluster too. You can take a look at https://quarkus-mqtt-integration-starter-drogue-quarkus-demos.apps.wonderful.iot-playground.org/ On this page, you should see a dashboard like shown in the following screenshot: This dashboard shows the most recent received message from any device. If the message contained geolocation information, then it will also put a marker on the map. Only one marker will be shown at a time, so a new marker will replace any previous markers. The data comes from a publicly available data stream, hosted on the Drogue IoT sandbox cluster. You can subscribe to that data stream with a simple MQTT client yourself. Here? Not much! Now it is up to you to replicate this.","title":"What to expect?","component":"drogue-workshops","version":"master","name":"peeking","url":"/drogue-workshops/quarkus-mqtt-starter/peeking.html","titles":[{"text":"What do you see?","hash":"_what_do_you_see","id":1},{"text":"What’s next?","hash":"_whats_next","id":2}]},"265":{"id":265,"text":"The overall architecture of this tutorial looks like this: Figure 1. Architecture overview Drogue Cloud will receive the telemetry data from the devices. It will authenticate and authorize the devices, normalize the events into \"Cloud Events\", but keep the payload unchanged. The events will be pushed to a Knative serving endpoint. Knative will host an endpoint, which receives Cloud Events, and translates them into insert statement for the Timescale database. TimescaleDB is the database, which will persist the data and serve queries coming from different applications interested in the data, like Grafana. Grafana will act as visualization tool for the data. With the exception of Knative, we do re-use existing services, all managed for us. And even for Knative itself, we re-use an existing service and only need to focus on the actual translation of the data. Using this architecture, we do indeed achieve both: keeping our own, existing data structures, and on-boarding as many managed services as possible at the same time. Some solutions do offer you the ability to convert data using a script language, like JavaScript, in the processing. However, with existing data models and formats, you most likely already have code to process your data, but not necessarily in JavaScript. Or using the limited subset of JavaScript that the solution allows you to use. Having Knative in the mix, you can leverage your full existing portfolio of code, and favorite programming language to do the job. Still, you only need to focus on the actual translation. Deploying, scheduling, and scaling is all part of a Knative. And it will even scale down to zero. So if you don’t use it, you don’t pay for it.","title":"Architecture","component":"drogue-workshops","version":"master","name":"architecture","url":"/drogue-workshops/timeseries-as-a-service/architecture.html","titles":[]},"266":{"id":266,"text":"Drogue Cloud is our IoT connectivity layer. It will offer the IoT specific endpoints, authenticate devices, and normalize events. We will need to perform the following steps: Create a new application Register a new device Finally, send some data Costs We will be using the public Drogue IoT sandbox, which is completely free for trying out Drogue IoT. Log in to the public sandbox console, and navigate to the \"Applications\" view. Create a new application with a unique name and remember that name. Figure 1. New application dialog Once it is created, we need to configure the event source, sending data to our Knative endpoint. For this we need the following information from the previous steps: Public endpoint URL Endpoint token Go to the \"YAML\" tab of the application, and edit the .spec section (create one if there is none): spec: knative: endpoint: url: https://pusher.your-public-url.codeengine.appdomain.cloud (1) auth: bearer: token: abcdef123456 (2) 1 Public URL of Knative endpoint 2 Token configured in the Knative endpoint After storing the configuration, the changes will be applied. After a bit, the state should change back to \"Ready\" and in the YAML section, you should see the condition KnativeReady in the section .status.conditions to become True. Currently, you need to reload the data to see the change. Now we need to register a new device. While we don’t use any physical device, the procedure is the same for simulating one using e.g. curl, http or mqtt. Navigate to the \"Devices\" view, and select your application from the drop-down in the top. Use the New device button to create a new device named device1: Figure 2. Dialog to create a new device The newly created device does not have any credentials assigned, so it currently cannot be used to connect. For the sake of simplicity, we will just add a plain text password to the device. Navigate to the \"YAML\" tab of the device and add the following: spec: credentials: credentials: (1) - pass: my-password (2) 1 Indeed, the credentials field contains another field named credentials. 2 The password, stored plain text Plain text passwords Storing passwords plain text might not be a good idea. Don’t worry, Drogue Cloud can make use of hashed passwords or X.509 client certificates. Using the command line tool drg, you can make use of them pretty easily. But for this tutorial, we wanted to stick to the web browser. We are good to go for a first test. We wired up Drogue Cloud with TimescaleDB using Knative, registered a device, and created a table in the database. So, let’s send some data (be sure to replace the application and password): curl -v -XPOST -u device1@my-application:my-password https://http.sandbox.drogue.cloud/v1/state -d '{\"features\": {\"temperature\":{\"value\":42}}}' If you prefer MQTT, you can do the same using mqtt: mqtt pub -v -h mqtt.sandbox.drogue.cloud -p 443 -u 'device1@my-application' -pw 'my-password' -s -t telemetry -m '{\"features\": {\"temperature\":{\"value\":42}}}' When the command has completed successfully, check the table with psql: tsdb=> select * from temperatures; time | device_id | temperature -------------------------------+-----------+------------- 2022-03-11 16:41:44.799424+00 | device1 | 42 (1 row) tsdb=> Yay! So, we wired it all up and data ends up in the Timescale database. Now comes the fun part, as we want to make use of that data and leverage the powers of TimescaleDB, and draw some nice charts.","title":"Drogue Cloud","component":"drogue-workshops","version":"master","name":"drogue","url":"/drogue-workshops/timeseries-as-a-service/drogue.html","titles":[{"text":"Create application","hash":"_create_application","id":1},{"text":"Register device","hash":"_register_device","id":2},{"text":"Send some data","hash":"_send_some_data","id":3},{"text":"What’s next?","hash":"_whats_next","id":4}]},"267":{"id":267,"text":"Grafana is the tool we use to visualize the data we have in Timescale now. Setting it up will involve the following steps: Create a new Grafana instance Add a datasource Create a new dashboard Costs Grafana offers a \"free plan\", which is sufficient for our workshop. If you already have a Grafana instance, you can of course re-use that instance too. Log in to Grafana Cloud, and add a new stack using one of the Add stack buttons. Select a region that matches the other services and an instance URL that works for you. Once the deployment is ready, just navigate your browser to the instance and sign in. As a first step, we need to let Grafana know where to get data from. So navigate to Configuration Data sources and click the Add data source button. Select the \"PostgreSQL\" data source type, which should be installed by default to your instance. For filling out the form, you will need the following information from the previous steps: TimescaleDB hostname and port Credentials of the \"dashboard\" timescale user Fill out the form: Field Value Description Name Drogue IoT A name for the datasource PostreSQL connection Host host:1234 The hostname and port number of your TimescaleDB instance Database tsdb The database name, normally tsdb User dashboard The username of the \"dashboard\" user Password * The password of the \"dashboard\" user TLS/SSL Mode require Require TLS validation PostreSQL details Version 12+ The PostgreSQL version TimescaleDB true Activate this, as we are connecting to a TimescaleDB instance Min time interval 1s Lower to one second, to get more accurate data All other fields can be left with their default values. Click on the Save & Test button, you should get a confirmation that the connection is ok. The next step is to create a new dashboard, which makes use of the datasource we just added. Click on Create Dashboard in the left sidebar menu and press the Add a new panel button. Grafana allows all kinds of customizations and tweaks. Creating beautiful dashboards can be fun. However, in this workshop we focus on the important point. But if you like, feel free to spend some time in polishing your dashboards. Save early, save often! We don’t mention this explicitly in the following section, but be sure to safe your dashboard occasionally after making changes. This will give you a new chart, with a dummy datasource. Update the datasource and query to show the temperatures value we added previously: Setting Value Description Datasource Drogue IoT The datasource connecting to TimescaleDB FROM temperatures The name of the table Time column time The name of the field containing the timestamp Metric column device_id The name of the metric, in our case, this is the device id SELECT Column: temperature The field of the actual value WHERE Macro: $__timeFilter A macro, creating the where clause which matches the current dashboard time window Leave the other values to their defaults: Figure 1. First panel settings Don’t forget to press the Apply button, so commit the changes to the dashboard and exit the \"Edit panel\" mode. In order to better see when experimenting with data, let’s change the time window to 30 minutes. You can do this in the upper area of the screen: Figure 2. Select time window Also, by default the dashboard does not update data automatically. This can be changed by expanding the drop-down menu of the refresh menu and selecting a refresh period: Figure 3. Select auto-refresh Currently, this query shows all devices at the same time. With Grafana you can allow the user to select one or more devices, to focus more on specific data. Navigate to the dashboard settings (the cogwheel button in the top section of the screen). Then navigate to Settings Variables and add a new variable using the Add variable button. Enter the following information: Setting Value Description General Name device_id The name of the variable Type Query Values are acquired by executing a query Label Device Shows \"Device\" instead of \"device_id\" in the UI Query options Data source Drogue IoT The datasource used for the query Refresh On time range change Refreshes whenever the dashboard is reloaded, so we also get newlyl added devices. Query select distinct device_id from temperatures SQL query to get all device IDs Selection options Multi-value true Allow selecting one or more devices Include All option true Allow selecting \"all\" devices Leave the other fields with their defaults and commit the change using the Update button. We will need to adapt the query, to add the variable as a filter in the where clause. Click on the title of the panel and select the Panel Edit menu entry. This will bring you back to the query settings. Find the row that starts with the WHERE clause, and add a new element by pressing the + button, choose to add an \"Expression\". The first part of the expression is the field, choose device_id by clicking on the section of the element. The second part is the value to test for. Now the value part is a bit trickier. It could be a single device ID, it could be multiple device IDs, or none at all. No worries, SQL has you covered, and you can use the following expression: ANY(ARRAY[$device_id]::varchar[]), which performs a check if the value of the field (device_id) is in the provided array. Which also is true if the array is empty. Apply the changes again. Then you can use the drop-down labeled Device, in the top of the dashboard: Figure 4. Drop-down menu for the device_id variable Add more devices Of course, as the screenshot might already have hinted, this is more fun when adding additional devices. Take a look at the previous sections. Adding more devices should only be a few clicks in the Drogue IoT console now. Also be sure to push some data using the HTTP or MQTT commands. Congratulations. We have our basic setup complete. We have set up all the different components, using managed services in the process. Feel free to play around with this. We have a few ideas what you could try out in the summary of the workshop. However, if you are curious, stick around for the next section, where we dig a bit deeper into the features of TimescaleDB. Showing you what benefits you can get over a standard PostgreSQL database.","title":"Grafana","component":"drogue-workshops","version":"master","name":"grafana","url":"/drogue-workshops/timeseries-as-a-service/grafana.html","titles":[{"text":"Create instance","hash":"_create_instance","id":1},{"text":"Adding a datasource","hash":"_adding_a_datasource","id":2},{"text":"Create dashboard","hash":"_create_dashboard","id":3},{"text":"A first panel","hash":"_a_first_panel","id":4},{"text":"Time window & Auto-reload","hash":"_time_window_auto_reload","id":5},{"text":"Filtering by device","hash":"_filtering_by_device","id":6},{"text":"What’s next?","hash":"_whats_next","id":7}]},"268":{"id":268,"text":"In this workshop, we will take a look at TimescaleDB, a time series database based on PostgreSQL. Consuming measurements from a (simulated) temperate sensor, translating the payload using Knative, and storing the outcome in TimescaleDB. Visualizing the results with Grafana. And while all of these components are open source, and you can self-host any of this, we will use managed services all the way, not only for the time series database. Why? Just to prove that you can have both, the freedom of open source and the comfort of letting someone else maintain the service. Keeping you in control of the data. A common IoT application is to just store telemetry data from sensors and devices into a database, in order to store and analyze it immediately, or at a later time. Measurements coming from IoT devices however are a bit different from other data, which you would store in a database. First of all, this can get massive. Consider the number of sensors you have, times the number of measurements you want to take per time period. If you want to store temperate data for years, in high resolution, in order to be able to create some analytic models and prediction from it, that can take up some amount of space. In addition, IoT measurement data is an approximation in most cases. Sensors quantize the real world, and optimize the data for efficient transmission to some more central location, mainly \"the cloud\", today. Putting back the snippets of data together again on the analytics side requires some mathematical effort. Time series database is specialized for use cases like that. Instead of storing complex relational data, they focus on a series of measurements through time. Allowing for some optimizations when storing data: like compressing redundant information, or organizing data in clusters. At the same time, supporting the user to write queries, helping with factor of time. Just to give a simple example: Consider a temperature measurement, sent to the cloud every second, for thousands of devices. This is easy to store, as you simply need to store a tuple of: timestamp, device, value. Any database can handle this. However, a time series database could collapse redundant information like repeating temperature values, and at the same optimize the query to provide accurate information over the queried time range, including aggregations like a moving average. There is no cloud, just other people’s computers. And of course the time and effort to maintain a service for you. So managed services will have a cost attached. And someone needs to pay for that. Many service providers try to offer you a \"free tier\" or give you a free budget that you can work with. This tutorial will be limited to using \"free\" services only. In some cases this means you will still need to provide a credit card, as in theory, you could go above the free tier usage pattern. Rest assured, we will not. However, if you consider a service to add value to your use case, then consider spending the money. As we will be consuming managed services, you need to sign-up for free tiers on: The Drogue IoT Cloud public sandbox: https://sandbox.drogue.cloud All you need is a GitHub account, in order to sign up for the public sandbox. For Knative, either: An OpenShift developer sandbox instance: https://developers.redhat.com/developer-sandbox/get-started You can go without a credit card for 30 days Or, an IBM cloud account: https://www.ibm.com/cloud/free You will need to register a credit card, as this will unlock more (free) services, mainly \"Code Engine\", which we will require for this tutorial. A TimescaleDB instance: https://www.timescale.com/timescale-signup With Timescale, you will get 30 days free. That is all that we need. Grafana Cloud: https://grafana.com/auth/sign-up/create-user We will use the \"Grafana Cloud Free\" plan for this tutorial. All the sign-op options are pretty straightforward. However, they also involve a few steps each, and may differ depending on who you are and where you are located. And maybe, you are already signed up for any of these services. That is why we don’t provide step-by-step instructions, but hope that the provided links will give you a pointer into the right direction. If you run into any issues, please let us know.","title":"Time series data, using managed services","component":"drogue-workshops","version":"master","name":"index","url":"/drogue-workshops/timeseries-as-a-service/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Costs","hash":"_costs","id":2},{"text":"Pre-requisites","hash":"_pre_requisites","id":3}]},"269":{"id":269,"text":"Using Knative, we will send data towards the Timescale database. Coming from an IoT world, protocols like MQTT and HTTP are much more common than \"SQL\". So we need to translate the data coming from our devices into SQL statements, and execute them against the Timescale database, using a PostgresSQL connection. We will perform the following steps: Set up a new project Create a Knative endpoint Costs Using Knative, we actually run user provided code. That is why it is pretty hard to create a \"free tier\" for a service like that. You could just mine bitcoins. So what we get is some free CPU time. Once we used that up, we will get charged. However, for a simple workshop like this, that is more than enough. And don’t forget that when you don’t use the service, it will idle and scale down to zero. Assuming we receive \"Cloud Events\", that is actually rather simple: take the data, make an SQL statement, execute. Assuming further we already know the data format, that is just a few lines of code. However, we cannot just run a few lines of code. We need some service, some infrastructure, some storage, …​ or, do we? That is where the \"serverless\" buzzword comes into play. We focus on the actual code of the translation. A serverless stack will take care of running this. Ideal for this case. Going even further, we adopt \"Knative\" and \"Knative eventing\", which is based on \"Cloud Events\". And with that, we know how we receive our events, in which envelope format we get the event. The payload is still specific to our device. Still, what we can do, is to tap into the Knative eventing ecosystem, and pick an existing image, which takes care of extracting information from a JSON based payload using JSONPath, and assembling an SQL statement for us. That comes in the form of an existing container image, and all that we need to do is to configure it, using environment variables. If you are curious, you can check out the code at: https://github.com/drogue-iot/drogue-postgresql-pusher So all that we need to do, is to configure a service to run an existing container for us. Using Knative we get scalability, scale-down to zero, monitoring, A/B deployments, and much more for free. We’ll provide you with two options on where you can run your Knative function: OpenShift developer sandbox - provides you with an quick getting started experience and a place where you can host your function up to 30 days for free IBM Cloud instance - also provides you a free tier to start with, but offer you an option to automatically convert to paying option if you wish to run your function for a longer period of time. In both cases we need to configure our function with appropriate environment variables. Variable name Value Description ENDPOINT__TOKEN Some random value you define and recall later The bearer token a caller needs to present in order to get access to the endpoint POSTGRESQL__CONNECTION__HOST Hostname portion from the psql connection URL The hostname of the TimescaleDB instance POSTGRESQL__CONNECTION__PORT Port portion from the psql connection URL The port of the TimescaleDB instance POSTGRESQL__CONNECTION__DBNAME tsdb The name of the database POSTGRESQL__CONNECTION__USER pusher The database user which has write-access POSTGRESQL__CONNECTION__PASSWORD The password you in the previous section for the pusher database user The password of the database user. POSTGRESQL__TABLE temperatures The name of the table POSTGRESQL__TIME_COLUMN time The name of the timestamp field FIELD_TEMPERATURE $.features.temperature.value The JSON path for extracting the temperature value from the actual payload TYPE_FIELD_TEMPERATURE float The data type of the temperature TAG_DEVICE_ID $.device The JSON path for extracting the device ID from the full event As we’ll see in the following section, these variables are configured differently with various providers, but the values are always the same. Now let’s dig into the hosting our function. For OpenShift, log into the console, select \"Administration\" view and navigate to the \"Serverless\" section Figure 1. Serverless section Now select the \"Serving\" menu and click on the Create > Service button. Here, you can enter the YAML definition of your function, with all necessary variables properly configured, like: apiVersion: serving.knative.dev/v1 kind: Service metadata: name: sample namespace: dejan-bosanac-dev spec: template: spec: containers: - image: ghcr.io/drogue-iot/postgresql-pusher:0.2.1 env: - name: ENDPOINT__TOKEN value: \"abcdef123456\" - name: POSTGRESQL__CONNECTION__HOST value: \"xxx.tsdb.cloud.timescale.com\" - name: POSTGRESQL__CONNECTION__PORT value: \"32740\" - name: POSTGRESQL__CONNECTION__DBNAME value: \"tsdb\" - name: POSTGRESQL__CONNECTION__USER value: \"pusher\" - name: POSTGRESQL__CONNECTION__PASSWORD value: \"pusher-password\" - name: POSTGRESQL__TABLE value: \"temperatures\" - name: POSTGRESQL__TIME_COLUMN value: \"time\" - name: FIELD_TEMPERATURE value: \"$.features.temperature.value\" - name: TYPE_FIELD_TEMPERATURE value: \"float\" - name: TAG_DEVICE_ID value: \"$.device\" After you create it, you’ll have your serverless function ready to use and you can copy its URL for future use. Figure 2. Service overview If you choose to use IBM Cloud instance, log in to your and navigate to the \"Code Engine\" module. On the right-hand side, open the \"Projects\" view. We will create a new project for this tutorial, so go ahead and press the Create button. On the creation page, select the location, and use drogue-iot as the project name: Figure 3. Project creation Project creation can take a while. Once it is ready, navigate to the project overview page and click on the Create application button: Figure 4. Project overview page Creating a new application, we need to provide a name (use pusher) and choose \"Container image\" as code to run. The image to use is ghcr.io/drogue-iot/postgresql-pusher:0.2.1. The \"listening port\" is 8080 and the endpoint must be \"Public\". In the \"Runtime settings\" section, configure the smallest instance you can find (e.g. \"0.125 vCPU / 0.25 GB\"). We will be running a process written in the Rust language, which is highly efficient and will not run into any limits. An important part is the section \"Environment variables\", as it will contain our configuration. Here we need to add function configuration by clicking on the Add button, using a \"Literal value\" entry. This should look something like this: Figure 5. Section of the create application page Finally, click on the Create button on the right-hand side, which will start the deployment process of the application. Once it is deployed correctly, the overview should look like this: Figure 6. Application configuration screen Take a look at the \"Endpoints\" tab, and note down the \"Public URL\", which we will need later on. We’ve set up the service which translates the device payload into SQL statements for TimescaleDB. However, currently no one is sending data to this endpoint. And as long as that is the case, the service will be scaled down to zero and not consume any resources, or cost any money. So, it is time to send some data to this endpoint.","title":"Knative","component":"drogue-workshops","version":"master","name":"knative","url":"/drogue-workshops/timeseries-as-a-service/knative.html","titles":[{"text":"What’s the plan?","hash":"_whats_the_plan","id":1},{"text":"OpenShift","hash":"_openshift","id":2},{"text":"IBM Cloud","hash":"_ibm_cloud","id":3},{"text":"Create a new project","hash":"_create_a_new_project","id":4},{"text":"Create application","hash":"_create_application","id":5},{"text":"What’s next?","hash":"_whats_next","id":6}]},"270":{"id":270,"text":"As we have an end-to-end IoT deployment now, we could use some more data. So, let’s generate some and see what we can do with it. Of course, you can set up a device and publish real data to the device you configured. However, explaining this may take some time, and we would like to keep this example focused on part of processing the data on the cloud side. Of course, if you already have some devices that you feel comfortable hooking up to Drogue Cloud, you can do that too. So, for this workshop we are using our device simulator. Clicking on the following link, will open the simulator in your browser. It will simulate a device using MQTT over websocket, and comes pre-configured with a sine wave generator, which generates an artificial temperature value. You will need to update the device credentials (application, device id, password) on the connection screen after loading. Click here: open simulator Update the credentials on the \"Connection\" page. Activate them by pressing the Apply button. Persisting configuration By default, all changes made to the simulator instance are temporary. Closing the browser tab will simply discard them. If you want to persist the changes, you can store one configuration as default. Navigate to the \"Configuration\" page, and click on the Set as default button. In order to let the simulator send data, you need to start the connection by pressing on the ▶ button in the top right navigation area. Once the simulator is connected, it will start sending data towards the system with a 250ms update period. You should also see the data coming in the Grafana dashboard. Keep the simulator running for a while, and don’t close the tab. Maybe grab a coffee and check out the data when you come back. Maybe also disconnect the simulator for a few minutes, and reconnect it afterwards, letting it push some more data (simulating a gap in the data too) Now that we have more data pushed to TimescaleDB, let’s focus on the dashboard query a bit. The current query we have in Grafana is a pretty basic one. Great to get started, but TimescaleDB can do way better. Let’s take a look at the following query: SELECT $__timeGroup(\"time\", $__interval, NULL), device_id as metric, avg(avg(temperature)) OVER w as temp FROM temperatures WHERE $__timeFilter(\"time\") AND device_id = ANY(ARRAY[$device_id]::varchar[]) GROUP BY time, device_id WINDOW w as (PARTITION BY device_id ORDER BY time RANGE '1 minute'::INTERVAL PRECEDING) ORDER BY time, device_id In a nutshell, this query takes the data, and builds a moving average over a time period of 1 minute. Partitioning the data by device, so that the moving average is build for each device, instead of over all devices. It will also not just skip gaps, but actively report them using NULL as value. This can be used in Grafana to make the user aware of the gaps, rather than just drawing a straight line. In addition to the existing query, add a new panel in the Grafana dashboard, using the query from above. Apply and save, and then take a look at the different visualization of the data: You can see that the measurement is much smoother now. Still, internally you have the actual, raw data available. Also, it is pretty easy to spot the gap in the data. In both variants. Bust just assume how that would look if the data would not be in such a predictable pattern. You might actually miss if the sensor value is a flat line, or if it was a gap in the data.","title":"Simulating data","component":"drogue-workshops","version":"master","name":"simulating-data","url":"/drogue-workshops/timeseries-as-a-service/simulating-data.html","titles":[{"text":"Device simulator","hash":"_device_simulator","id":1},{"text":"Update credentials","hash":"_update_credentials","id":2},{"text":"Start the connection","hash":"_start_the_connection","id":3},{"text":"Send data","hash":"_send_data","id":4},{"text":"Improving the dashboard query","hash":"_improving_the_dashboard_query","id":5}]},"271":{"id":271,"text":"With a few managed services, you can create an end-to-end IoT scenario. Ingesting the data using MQTT, delivering it to a Knative serverless endpoint, storing it in a time-series database, and visualizing it. All with open source and still, managed for you. Of course, I would encourage you to get everything deployed locally. Just to see that you can indeed self-host all of this. You can also try to swap out components and service offerings, as it is an open architecture. Using the same mechanism, you could of course also push the data to another service. Or maybe enrich or pre-process it using a Knative serverless function. You could also build some application on top of the Timescale database, now that you have some data. Or if you like to work with SQL, create some fancy queries, and learn about the advanced features of TimescaleDB. Drogue IoT Knative Grafana TimescaleDB","title":"Conclusion","component":"drogue-workshops","version":"master","name":"summary","url":"/drogue-workshops/timeseries-as-a-service/summary.html","titles":[{"text":"What’s next?","hash":"_whats_next","id":1},{"text":"Also see","hash":"_also_see","id":2}]},"272":{"id":272,"text":"As all paths lead to Timescale, this is the first component we will set up. This will include the following steps: Create a new instance Create a table Create two users for accessing the database Costs An instance will cost a certain amount of money per hour. The amount depends on the resources you consume. The \"bigger\" your database is planned to be, the more it will cost. However, you can test some tiers of Timescale free for 30 days. That is all that we need, and you can shut it down at ant time. And in the end, if the data is important to you, why not spend a few bucks on someone to take care of it. Navigate your browser to the Timescale Cloud, and create a new instance. Figure 1. Creation dialog The default settings will work just fine. Of course, you can tweak settings like \"Region\" to suit your needs. Just be sure that you do not add \"demo data\", as we don’t want to get this in our way. While the provisioning process is running, pay attention to the credentials section of the page: Figure 2. Credentials section It does contain the admin password for your instance. You will once see this once. Once you closed this page, you can reset the password, but not recover it. In order to connect, we will need to connect to the database using a PostgreSQL client. Simple get psql for your favorite operating system. Clicking on the \"How to connect\" button will open a dialog that will help you out with all the details. If you use Fedora, you can simply install the PostgreSQL client by running: sudo dnf install postgresql When you have psql installed, just copy the command and get connected: $ psql \"postgres://tsdbadmin@af4k0qkmbz.yo2nkz74j4.tsdb.cloud.timescale.com:37249/tsdb?sslmode=require\" Password for user tsdbadmin: (1) psql (13.4, server 13.6 (Ubuntu 13.6-1.pgdg21.04+1)) SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off) Type \"help\" for help. tsdb=> (2) 1 Enter your password here 2 Have fun with SQL You are connected to your database. Currently, it is empty, so follow along the next steps to add some content. First, we will create a new table, which will hold our temperature data per device. So we need: a device ID, a timestamp, and the actual value. All information is required. In SQL, that looks like this: CREATE TABLE temperatures ( time TIMESTAMP WITH TIME ZONE NOT NULL, device_id VARCHAR(64) NOT NULL, temperature DOUBLE PRECISION NOT NULL ); Go ahead and execute this using psql. You can just copy & paste it, or create a .sql file and run it instead. Using CREATE TABLE we created a simple PostgreSQL table. Nothing fancy, yet. As a next step, we will convert this table into a \"hypertable\", which is a table optimized for time-series data. This is where the power of Timescale on top of PostgreSQL comes into play. Execute the following statement: SELECT create_hypertable('temperatures', 'time'); Pretty simple. There is a lot more to it, you can learn more about hypertables from the TimescaleDB documentation. Of course, we don’t want to use the \"admin\" user with the different services which need access to the database. So we will create two users: one for writing data, one for reading data. Just as you would do with a normal database: CREATE USER pusher WITH PASSWORD 'pusher-password'; GRANT INSERT ON ALL TABLES IN SCHEMA public TO pusher; CREATE USER dashboard WITH PASSWORD 'dashboard-password'; GRANT SELECT ON ALL TABLES IN SCHEMA public TO dashboard; Choose reasonably secure passwords. Just ensure that you recall them later on. So we created a new database and table for our time-series data. We created users and granted permissions. The database is ready to be used. Next, we will set up the payload translation using Knative.","title":"Timescale","component":"drogue-workshops","version":"master","name":"timescale","url":"/drogue-workshops/timeseries-as-a-service/timescale.html","titles":[{"text":"Create instance","hash":"_create_instance","id":1},{"text":"Connecting","hash":"_connecting","id":2},{"text":"Configure instance","hash":"_configure_instance","id":3},{"text":"What’s next?","hash":"_whats_next","id":4}]},"273":{"id":273,"text":"WORK IN PROGRESS! We got a nice IoT example set up. What we are missing, is data. So, let’s generate some and see what we can do with it. Of course, you can set up a device and publish real data to the device you configured. However, explaining this may take some time, and we would like to keep this example focused on part of processing the data on the cloud side. So, for this workshop we are using our device simulator. Clicking on the following link, will open the simulator in your browser. It will simulate a device using MQTT over websocket, and comes pre-configured with a sine wave generator, which generates an artificial temperature value. You will need to update the device credentials (application, device id, password) on the connection screen after loading. Click here: open simulator Update the credentials on the \"Connection\" page. Activate them by pressing the Apply button. Persisting configuration By default, all changes made to the simulator instance are temporary. Closing the browser tab will simply discard them. If you want to persist the changes, you can store one configuration as default. Navigate to the \"Configuration\" page, and click on the Set as default button. In order to let the simulator send data, you need to start the connection by pressing on the ▶ button in the top right navigation area. Once the simulator is connected, it will start sending data towards the system with a 250ms update period. You should also see the data coming in the Grafana dashboard. Keep the simulator running for a while, and don’t close the tab. Maybe grab a coffee and check out the data when you come back. Maybe also disconnect the simulator for a few minutes, and reconnect it afterwards, letting it push some more data (simulating a gap in the data too) Now that we have more data pushed to TimescaleDB, let’s focus on the dashboard query a bit. The current query we have in Grafana is a pretty basic one. Great to get started, but TimescaleDB can do way better. Let’s take a look at the following query: SELECT $__timeGroup(\"time\", $__interval, NULL), device_id as metric, avg(avg(temperature)) OVER w as temp FROM temperatures WHERE $__timeFilter(\"time\") AND device_id = ANY(ARRAY[$device_id]::varchar[]) GROUP BY time, device_id WINDOW w as (PARTITION BY device_id ORDER BY time RANGE '1 minute'::INTERVAL PRECEDING) ORDER BY time, device_id Prevents duplicate time entries. But re-runs average. SELECT time, metric, avg(temp) FROM ( SELECT $__timeGroup(\"time\", $__interval, NULL), device_id AS metric, avg(avg(temperature)) OVER w AS temp FROM temperatures WHERE $__timeFilter(\"time\") AND device_id = ANY(ARRAY[$device_id]::varchar[]) GROUP BY time, device_id WINDOW w as (PARTITION BY device_id ORDER BY time RANGE '1 minute'::INTERVAL PRECEDING) ORDER BY time, device_id ) grouped_temps GROUP BY time, metric In a nutshell, this query takes the data, and builds a moving average over a time period of 1 minute. Portioning the data by device, so that the moving average is build for each device, instead of over all devices. It will also not just skip gaps, but actively report them using NULL as value. This can be used in Grafana to make the user aware of the gaps, rather than just drawing a straight line. In addition to the existing query, add a new panel in the Grafana dashboard. Using the query from above. Apply and save, and then take a look at the different visualization of the data: You can see that the measurement is much smoother now. Still, internally you have the actual, raw data available. Also, it is pretty easy to spot the gap in the data. In both variants. Bust just assume how that would look if the data would not be in such a predictable pattern. You might actually miss if the sensor value is a flat line, or if it was a gap in the data. Of course, in the background, TimescaleDB knows how to best optimize the data and queries. By transforming the standard table into a \"hypertable\" earlier on, we allowed the database to create chunks of data, grouped by time. When building a Grafana dashboard, showing the last 30 minutes of data, some chunks might not even be touched when collecting the data. However, we can do even better. Remember that we allow the user to filter by device, and also used the \"device id\" when partitioning the data for the moving average. We could add the device ID as an additional portioning dimension. Execute the following statement using the psql tool: CREATE TABLE temperatures2 ( time TIMESTAMP WITH TIME ZONE NOT NULL, device_id VARCHAR(64) NOT NULL, temperature DOUBLE PRECISION NOT NULL ); SELECT create_hypertable('temperatures2', 'time', partitioning_column => 'device_id', number_partitions => 3); INSERT INTO temperatures2 (SELECT * FROM temperatures); -- now swap tables ALTER TABLE temperatures RENAME TO temperatures_old; ALTER TABLE temperatures2 RENAME TO temperatures; DROP TABLE temperatures_old; GRANT INSERT ON ALL TABLES IN SCHEMA public TO pusher; GRANT SELECT ON ALL TABLES IN SCHEMA public TO dashboard; CREATE MATERIALIZED VIEW temperature_summary_minute WITH (timescaledb.continuous) AS SELECT time_bucket_gapfill(INTERVAL '1 minute', time, NULL) AS ts, device_id, AVG(temperature) as temperature FROM temperatures GROUP BY ts, device_id; SELECT add_continuous_aggregate_policy('temperature_summary_minute', start_offset => INTERVAL '1 month', end_offset => INTERVAL '1 minute', schedule_interval => INTERVAL '1 minute'); GRANT SELECT ON ALL TABLES IN SCHEMA public TO dashboard; DROP MATERIALIZE VIEW temperature_summary_minute; SELECT ts, metric, avg(temp) FROM ( SELECT time_bucket('10s',\"time\") AS ts, device_id as metric, avg(avg(temperature)) OVER w as temp FROM temperatures WHERE \"time\" BETWEEN now() - INTERVAL '5m' AND NOW() AND device_id = 'device1' GROUP BY ts, time, device_id WINDOW w as (PARTITION BY device_id ORDER BY time RANGE '1 minute'::INTERVAL PRECEDING) ORDER BY ts, device_id ) grouped_temps GROUP BY ts, metric ;","title":"Wait, there is more!","component":"drogue-workshops","version":"master","name":"wait-there-is-more","url":"/drogue-workshops/timeseries-as-a-service/wait-there-is-more.html","titles":[{"text":"Generating data","hash":"_generating_data","id":1},{"text":"Update credentials","hash":"_update_credentials","id":2},{"text":"Start the connection","hash":"_start_the_connection","id":3},{"text":"Send data","hash":"_send_data","id":4},{"text":"Improving the dashboard query","hash":"_improving_the_dashboard_query","id":5},{"text":"Better partitioning","hash":"_better_partitioning","id":6},{"text":"Materializing queries","hash":"_materializing_queries","id":7},{"text":"Just testing","hash":"_just_testing","id":8}]},"274":{"id":274,"text":"The step will guide you through the setup of your TTN (v3) account. If you already have an account, you can of course re-use that. However, we will still need to create an API key. Of course, you can also re-use an existing one. Start by navigating to the \"cluster picker\": https://console.cloud.thethings.network/ Pick the location that is best for you and proceed. On the login screen, choose \"Login with The Things ID\". Then, continue through the registration process by clicking on \"Register\". Once you are done, you can create a new API key. Click on the \"Personal API keys\" menu entry, in the top right corner of the screen: The click on the button labeled \"+ Add API Key\": This will take you the screen for customizing the new API key. Enter a reasonable name, and select the option \"Grant all current and future rights\". Confirm by pressing button \"Create API key\" on the bottom of the page. Next, you will see a dialog page, showing the giving you access to the API key: This is the only time you will have access to the API key, unless you copy it now. Of course, you can delete the API key in the TTN console and set up a new one. Copy the API key, and store it somewhere safe! You will need it later on, but it will also give full access to your TTN account. The API key is longer than the text entry field in the dialog. Either use the copy button, or ensure that you really copied all characters in this field. The API key will give full access to your TTN account. Be sure not to leak it. Don’t make it public. If you did, e.g. by accidentally pushing it to GitHub, you can (and should) delete it right away. Close the dialog by pressing the button \"I have copied the key\". From this step, you should have noted the following pieces of information: Cluster location The cluster location, e.g. eu1 Account name The name of your TTN account, e.g. my-ttn-user API key The API key, e.g. 0123456789ABCDEF.0123456789ABCDEF (your actual API key will look different)","title":"TTN account setup","component":"drogue-workshops","version":"master","name":"account-setup","url":"/drogue-workshops/ttn-lorawan/account-setup.html","titles":[{"text":"Choose a location","hash":"_choose_a_location","id":1},{"text":"Create the account","hash":"_create_the_account","id":2},{"text":"Create an API key","hash":"_create_an_api_key","id":3},{"text":"Gather all important information","hash":"_gather_all_important_information","id":4}]},"275":{"id":275,"text":"We will need to create a new application inside Drogue Cloud and register a device with it. We will also enable the TTN integration so that application and device will be synchronized with the TTN system. Simply create a new application using drg, enabling the the TTN integration for the application by adding the .spec.ttn section: Application name By default, the Drogue IoT application name will also be used as the TTN application name. The name must be unique in both systems. You have the ability to override the application name, when synchronizing with the TTN system. However, this only makes things complicated. So try to come up with a name that should still be free. drg create app my-app --spec '{ \"ttn\": { \"api\": { \"apiKey\": \"...\", (1) \"id\": \"my-app-alias\", (2) \"owner\": \"my-user-name\", (3) \"region\": \"eu1\" (4) } } }' 1 The API key, generated earlier. 2 (Optionally) An alternative application name in the TTN system. By default, this is the Drogue application name. 3 The name of the TTN user, selected when creating the TTN account. 4 The cluster region, selected when creating the TTN account. Next, create a device and enable the TTN synchronization: drg create device my-device --app my-app --spec '{ \"ttn\": { \"app_eui\": \"0000000000000000\", \"dev_eui\": \"0123456789ABCDEF\", (1) \"app_key\": \"0123456789ABCDEFGHIJKLMNOPQRSTUV\", (2) \"frequency_plan_id\": \"...\", (3) \"lorawan_phy_version\": \"PHY_V1_0\", \"lorawan_version\": \"MAC_V1_0\" } }' 1 A 16 byte device identifier. This could be provided by the device manufacturer or randomly generated by the user. 2 A 32 byte application key. IMPORTANT This should be changed to a secret value. 3 An ID of the TTN supported frequency plans, e.g. EU_863_870_TTN. Also see: https://www.thethingsindustries.com/docs/reference/frequency-plans/ You can easily generate values for dev_eui or app_key from the command line like openssl rand -hex 16 | tr [a-z] [A-Z] while changing the the appropriate byte size as needed. Once you created the TTN settings, you should see a .status.ttn section for both of the resources. This section should show the state of the reconciliation process. If both resources are successfully reconciled, you can proceed.","title":"Drogue IoT Cloud setup","component":"drogue-workshops","version":"master","name":"drogue-cloud","url":"/drogue-workshops/ttn-lorawan/drogue-cloud.html","titles":[{"text":"Create a new application","hash":"_create_a_new_application","id":1},{"text":"Create device with TTN integration","hash":"_create_device_with_ttn_integration","id":2},{"text":"Checking the results","hash":"_checking_the_results","id":3}]},"276":{"id":276,"text":"The next step is to compile and flash the device’s firmware. Clone the git repository with the example and check out the 0.3.0 tag: git clone https://github.com/drogue-iot/drogue-device git checkout 0.3.0 For the next steps, you will need to change into the sub-directory examples/stm32l0xx/lora-discovery/: cd examples/stm32l0xx/lora-discovery/ If you don’t use the \"B-L072Z-LRWAN1\" board, you will need to adapt the firmware to match your device and hardware configuration! Locate the Device EUI, Application EUI, and Application Key, you created earlier. Add the keys into the following lines in $HOME/.drogue/config.toml: app-qui = \"\" dev-eui = \"\" app-key = \"\" You can now compile and flash the firmware. Execute the following command: You need to have the developer board attached to your computer. cargo run --release It may happen that the operation fails, especially when you try to flash the board for the first time. If that’s the case, you can try running the following. cargo build --release probe-run target/thumbv6m-none-eabi/release/lora-discovery --connect-under-reset --chip STM32L072CZ Once you flashed and started the program, cargo run will keep attached to the application running on the development board. The output should look something like this: Finished release [optimized + debuginfo] target(s) in 1.66s Running probe-run --chip STM32L072CZ target/thumbv6m-none-eabi/release/lora-discovery (HOST) INFO flashing program (73.77 KiB) (HOST) INFO success! ──────────────────────────────────────────────────────────────────────────────── INFO - Configuring with config LoraConfig { region: Some(EU868), lora_mode: Some(WAN), device_address: None, device_eui: Some(EUI([0, 54, 39, 147, 252, 241, 128, 45])), app_eui: Some(EUI([112, 179, 213, 126, 208, 2, 3, 105])), app_key: Some(AppKey([241, 86, 188, 53, 248, 3, 201, 238, 172, 50, 168, 119, 74, 114, 29, 198])) } INFO - LoRa driver configured TRACE - New Session Request TRACE - Event handled TRACE - Join Request Sending TRACE - Phy event TRACE - Event handled TRACE - TimeoutRequest: 4500 TRACE - Event handled TRACE - TimeoutRequest: 5300 TRACE - Phy event TRACE - Event handled INFO - Network joined (1) 1 Successfully joined the network Pay attention to the line indicating that the LoRa network was successfully joined. You can already give it a try, and press the blue button on the board. But before you do, open up the web console, navigate to the \"Spy\", and start it, using the Drogue application name you have assigned earlier. Now you can press the button! This will trigger the device to send some information to the LoRa network. There is no one there to receive yet, it should still work. INFO - Ticked: 1 INFO - Sending message... (1) INFO - Message: ping:1 TRACE - Uplink with FCnt 0 TRACE - Phy event TRACE - Event handled TRACE - TimeoutRequest: 4500 TRACE - Event handled TRACE - TimeoutRequest: 5300 TRACE - Phy event TRACE - Event handled TRACE - Downlink received (FcntDown=0) TRACE - Ack received! INFO - Message sent! (2) 1 Starting to send the message 2 Message acknowledged by TTN Be aware that the time from sending to receiving the acknowledgment may be around 5 seconds. On the web console, you should see the event, as received by Drogue Cloud.","title":"Device firmware","component":"drogue-workshops","version":"master","name":"firmware","url":"/drogue-workshops/ttn-lorawan/firmware.html","titles":[{"text":"Clone the Git repository","hash":"_clone_the_git_repository","id":1},{"text":"Update the device configuration","hash":"_update_the_device_configuration","id":2},{"text":"Compile and flash","hash":"_compile_and_flash","id":3},{"text":"Checking the result","hash":"_checking_the_result","id":4},{"text":"Pressing buttons","hash":"_pressing_buttons","id":5}]},"277":{"id":277,"text":"This workshop focuses on the use case of reporting data from an embedded device, to the cloud, and receive commands back. The idea is that you have some embedded device, with a LoRa modem, periodically reporting data to the cloud, and occasionally receiving back commands to control the device. Instead of implementing all the LoRa infrastructure ourselves, we re-use the infrastructure of The Things Network (TTN). However, we will want to process the data as part of our Drogue Cloud setup. This workshop requires additional hardware, as we need an embedded device with a LoRa modem. Additionally to the common pre-requisites, you will need: A Drogue Device supported development board and LoRa modem Coverage for \"The Things Network\" A \"The Things Network\" v3 account A publicly accessible Drogue IoT Cloud instance running version 0.5+ This workshop provides two backend implementations, one written in Java using Quarkus, and one written in JavaScript which uses Node.js. Depending on which backend is chosen one of the following will be required: Standard Java development tools: Java, Maven, Git Node.js version 16 or later Ideally, you have the STM32L0 discovery kit for LoRa (B-L072Z-LRWAN1). This kit has a Drogue Device supported STM32 board, and also has an SX1276 modem, for which Drogue Device has a LoRa driver. You may also use a different Drogue Device supported board, adding the SX1276 using SPI. However, this means that you need to adapt the provided example firmware yourself. You can think of TTN as your LoRa network provider. When your device wants to send over the TTN LoRa network, you need to ensure that you have network coverage. So you can check if your region is already covered. The good thing with TTN is, if your region is not covered, you can take care of this yourself. For this you will need to buy (or lend) a LoRa gateway. The LoRa gateway will open a local LoRa network cell, and connect via TCP/IP to the TTN LoRa network backend. LoRa gateways come in various flavors. You can build one yourself with a Raspberry Pi, you can go all-in and buy an industrial, rugged version, mounting this to your roof and cover some km² with LoRa. Or, you can go on the cheap side and simply buy the The Things Indoor Gateway (TTIG). This time, you cannot run Drogue Cloud on your local machine. The Things Network will need to reach out to your machine, in order to deliver events to Drouge Cloud. For this you need a publicly available instance.","title":"LoRaWAN end-to-end","component":"drogue-workshops","version":"master","name":"index","url":"/drogue-workshops/ttn-lorawan/index.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"Supported embedded device & LoRa modem","hash":"_supported_embedded_device_lora_modem","id":2},{"text":"The Things Network coverage","hash":"_the_things_network_coverage","id":3},{"text":"Publicly accessible Drogue Cloud version","hash":"_publicly_accessible_drogue_cloud_version","id":4}]},"278":{"id":278,"text":"As we are using over-the-air activation, the LoRa device will need the following information: Device EUI (8 bytes) Application EUI (8 bytes) Application key (16 bytes, not the API key) You can generate random numbers using the following shell script: head -c 8 /dev/urandom | od -An -tx8 | tr a-z A-Z (1) head -c 8 /dev/urandom | od -An -tx8 | tr a-z A-Z (2) head -c 16 /dev/urandom | od -An -tx16 | tr a-z A-Z (3) 1 For generating the Application EUI 2 For generating the Device EUI 3 For generating the Application Key For example: $ head -c 8 /dev/urandom | od -An -tx8 | tr a-z A-Z CDAE10B2F5D4B87C (1) 1 They value to copy, without the leading whitespace. You can also manually choose the values of the keys. The values must be unique throughout the LoRa system you are using. So you cannot just re-use them for other devices and setups. From this step, you should have noted the following pieces of information: Device EUI Application EUI Application Key","title":"Generating keys","component":"drogue-workshops","version":"master","name":"keys","url":"/drogue-workshops/ttn-lorawan/keys.html","titles":[{"text":"Create from the command line","hash":"_create_from_the_command_line","id":1},{"text":"Other ways","hash":"_other_ways","id":2},{"text":"Gather all important information","hash":"_gather_all_important_information","id":3}]},"279":{"id":279,"text":"Now that we have a LoRaWAN based end-to-end example, we are ready to make some changes. As mentioned earlier, it may happen that the device misses its downlink message from the cloud. However, it wouldn’t be a problem if the device would phone home on a regular basis[1]. Instead of publishing once when the user presses a button, let’s change the logic of the device in way that it periodically sends some data. This might be a more realistic scenario anyway, periodically sending gathered telemetry data, instead of waiting for a user to press a button. However, we need to be careful: LoRaWAN isn’t intended to constantly send data. First of all, the usage policy restricts you from doing so. Second, this is bad for power consumption and thus for the battery. The Things Network limits downlink messages to a few per day. So we also cannot always send a downlink message, like we currently do it, when the button is pressed. Here is what we need to change: The device needs to report the state of the LED to the cloud too. The device needs to periodically phone home The cloud side application needs to evaluate if the state of the device’s LED is in the desired state. If not, it needs to send out a command to the device to alter its state, but only in this case. Let prepare the cloud side first. All that we need to do is to change the Processor class: // first we split the payload var parts = event.getPayload().split(\",\"); // then we check if the payload is, what we expect... if (parts.length != 2 || !parts[0].startsWith(\"ping:\") || !parts[1].startsWith(\"led:\")) { // .. if not, return with no command return null; } // check if the configured response is about the LED, and if it matches ... if (!this.response.startsWith(\"led:\") || parts[1].equals(this.response)) { // ... it is not, or it matches, so we return with no command return null; } // if we end up here, we need to update the device LOG.info(\"Need to update device state\"); On the device side, we need to add a ticker. Take a look at the file main.rs, and make the following changes: use drogue_device::{ actors::button::*, actors::ticker::*, (1) drivers::led::*, drivers::lora::sx127x::*, … } use embassy::time::Duration; (2) 1 Import the ticker actor. 2 Import the Duration struct. #[derive(Device)] pub struct MyDevice { lora: ActorContext>>, button: ActorContext>>, MyApp>>, app: ActorContext, ticker: ActorContext>, (1) } 1 Add an actor context for the ticker Next, initialize the ticker for the device: context.configure(MyDevice { app: ActorContext::new(App::new(AppInitConfig { tx_led: led2, green_led: led1, init_led: led4, user_led: led3, lora: Some(config), })), lora: ActorContext::new(LoraActor::new(lora)), button: ActorContext::new(Button::new(pin)), ticker: ActorContext::new(Ticker::new(Duration::from_secs(60), Command::Send)), (1) }); 1 Add the ticker, and configure it so send the Command::Send event every 60 seconds. Now that the ticker takes care of sending the uplink message, we need to decouple this from the button push event. In the file app.rs, make the following changes: fn from(event: ButtonEvent) -> Option { match event { ButtonEvent::Pressed => None, ButtonEvent::Released => Some(Command::Tick), (1) } } 1 When the button is released, send Command::Tick only. Next, we change the context which is sent to the cloud. We simply append the LED state at the end of the current message: let mut tx = String::::new(); let led = match self.config.user_led.state().unwrap_or_default() { true => \"on\", false => \"off\", }; (1) write!(&mut tx, \"ping:{},led:{}\", self.counter, led).ok(); (2) log::info!(\"Message: {}\", &tx); let tx = tx.into_bytes(); 1 Generate the current state as a string. 2 Append the string to uplink message, using the prefix led:. After making those changes, you should be able to compile and flash the firmware again using: cargo run --release Pretty easy, wasn’t it? Noticed the bit of string handling on device side. And still, we are 100% sure we didn’t create any memory leaks or invalid pointer access in the process thanks to Rust. So after the device is flashed, let’s sit back and watch the device phone home. Make some change to the LED state, and watch the logs. The LED should change. But, you only see the message Need to update device state in the logs, when there was a mismatch between the actual and the desired state of the LED. Now it is time to come up with your own ideas. You could: Switch from sending string to some binary format, to make your LoRa messages more efficient. You could come up with some more elaborate processing on the cloud side. Maybe tie in some external service for evaluating the desired state of the LED. Attach a sensor to the device, and send some real data. 1. True, there are other ways to deal with this as well","title":"Making changes","component":"drogue-workshops","version":"master","name":"making-changes","url":"/drogue-workshops/ttn-lorawan/making-changes.html","titles":[{"text":"Making plans","hash":"_making_plans","id":1},{"text":"Changing the cloud side","hash":"_changing_the_cloud_side","id":2},{"text":"Changing the device","hash":"_changing_the_device","id":3},{"text":"Making tests","hash":"_making_tests","id":4},{"text":"More ideas","hash":"_more_ideas","id":5}]},"280":{"id":280,"text":"The last piece of the puzzle is a customer provided application. The application that wants to talk to the device, in order to provide some value-add. For this implementing we choose Node.js. There are plenty of tutorials on Node.js how to build and interface Node.js application. So in this workshop, we will focus on bridging the gap between enterprise and IoT. The core idea here is that you use Drogue IoT Cloud as a service. That means, we don’t plan on deploying our application inside the same cluster, but on a separate machine or cluster. Technically you can still do that! We just try to follow a more \"as-a-service\" approach, and you might see in a minute, that this also makes things easier, as you can run the application on your local machine, or use our sandbox, and still be connected to the public TTN network. We will be using the MQTT integration of Drogue IoT. This makes things easy, as we don’t need to bridge two Kafka clusters, and still can have multiple consumers. Also, it is possible to just re-use all your tools around MQTT that you already may know about, for testing and debugging. In order to get access to the application through the MQTT integration, we need an OAuth token or API token. As you need to periodically refresh an OAuth token, and most MQTT clients have no idea about that, we choose an API token here[1]. Getting a new API token currently requires to use a command line HTTP client, like HTTPie or curl. It is a simple operation though, and we will use drg whoami --token to acquire a fresh OAuth token for accessing the API. The following examples require you to replace with the actual API endpoint. You can get this from the web console, from the page named \"Home\": The API endpoint URL is located in the box \"API\" in the \"Services\" column. The following examples will use the command jq to pretty-format that the JSON result of the commands. If can’t use jq, you can also omit it as is it only used to improve readability of the result. curl -vs -H \"Authorization: Bearer $(drg whoami --token)\" -XPOST /api/tokens/v1alpha1 | jq The output should look something like: { \"prefix\": \"drg_g0yAUq\", \"token\": \"drg_g0yAUq_kwjRLA40hrt81bbKdGbcDOmlq2WASx6UyQi\" } The value of the field token is the actual API token. You will not be able to recover this token at a later time. So you need to note (copy) it somewhere. The \"prefix\" is used to identity the token, so that you can easily delete it later on. You can also list your existing API tokens using: curl -s -H \"Authorization: Bearer $(drg whoami --token)\" /api/tokens/v1alpha1 | jq Which should provide you can output like: [ { \"prefix\": \"drg_g0yAUq\", \"created\": \"2021-04-28T08:42:59.336402353Z\" } ] As you can see, the actual token is no longer part of the result. If you need to delete a token, you can easily achieve this using the DELETE verb: curl -s -H \"Authorization: Bearer $(drg whoami --token)\" -XDELETE /api/tokens/v1alpha1/drg_g0yAUq In addition to the API token, you will also need to know your username. You can check your username using the Web Console. In the top right corner of the console, you will find the user menu, which shows you your username: While we provide a ready to run container of this application, this workshop plans to make changes to the source code. We will start directly by cloning the source code of this example, and run it locally: git clone https://github.com/drogue-iot/nodejs-mqtt-integration-example Next, we need to insert the parameters for connecting the application to the MQTT integration: Copy the file config_sample.json into a file named config.json and change the following field: { \"drogue.application.name\": \"\", (1) \"drogue.api.user\": \"\", (2) \"drogue.api.token\": \"\", (3) \"drogue.integration.mqtt.host\": \"mqtts://mqtt-integration.sandbox.drogue.cloud\",(4) \"drogue.integration.mqtt.port\": 443 (5) } 1 The Drogue IoT application name 2 Your Drogue IoT username, as described in Finding your username 3 Your Drogue IoT application token, as described in Create a new API token 4 The hostname of the MQTT integration. 5 The port number of the MQTT integration. While 443 might look strange here for MQTT, it will still work in the case of OpenShift, as OpenShift routes patch through TLS based TCP connections directly through to the endpoint. Install the application: nvm install Start the application: $ npm start > nodejs-mqtt-integration-example@1.0.0 start > node --no-warnings index.js Server listening on http://0.0.0.0:8080 (1) Connected to mqtts://mqtt-integration.sandbox.drogue.cloud (2) 1 The URL to the web user interface for this example 2 Note the line \"Connected to\" showing that the example as connected to Drogue IoT Cloud The application will keep running until you terminate it, by pressing Ctrl+C. Navigate your browser to the web console, as shows in the previous step’s log output. It should look something like: Once you press the blue button on the board, you should see an incoming message, and with that, an outgoing message too. Try changing the response to led:on, and press the blue button again. The blue LED on the board should turn on, once the green send indicator LED turns off again. It may be that the blue LED doesn’t turn on. Give it a second try, by pressing the blue button again. Why is that needed? A short period after the uplink (device-to-cloud) message, the LoRa device switches into receive mode, awaiting an optional downlink (cloud-to-device) message. If that time window is missed, then the device will not receive the downlink message, and go back to sleep. We will deal with this later, so read on. Let’s take a quick tour through the code. The entry point of the application is index.js which configures and starts a HTTP server, and a MQTT client. The http server serves content from the static directory which contains an index.html file which is shown rendered in the above screenshots. This file contains a script element which uses Server Sent Events (SSE) to allow the server to send updates to it. In addition to serving the static content the httpserver is also written to handle the sending of events (SSE). The server is built using Fastify and the SSE handling is provided using fastify-sse. The MQTT client is used to subscribe to device uplink events, and is also used to publish downlink events. In lib/mqtt-client.js we have the following function: client.on('message', (receiveTopic, message) => { (1) const json = JSON.parse(message); const framePayload = Buffer.from(json.data.uplink_message.frm_payload, 'base64'); const event = { deviceId: json.device, timestamp: json.time, payload: framePayload.toString('utf8') }; sse.sendMessageEvent(event); (2) if (event.payload.startsWith('ping')) { const command = { deviceId: event.deviceId, payload: getPayload(event, sse) }; sse.updateResponse(sse.lastResponse); (3) sse.sendCommandEvent(command); (4) const sendTopic = `command/${appName}/${command.deviceId}/port:1`; const responsePayload = Buffer.from(command.payload, 'utf8'); client.publish(sendTopic, responsePayload, {qos: QOS_AT_LEAST_ONCE}); (5) } }); 1 Function for handling messages from the subscribed Drogue IoT Cloud app topic. 2 Send SSE event for Last Message part of the UI (left section of the UI). 3 Send SSE event for Response part of the UI (middle section of the UI). 4 Send SSE event for Latest Command part of the UI (right section of the UI). 5 Publishes/sends a downlink command to the Drogue IoT Cloud to Device topic. 1. API tokens don’t expire, while OAuth access tokens do. Even when you can refresh an access token using a refresh token, you still need to do this.","title":"Node.js application","component":"drogue-workshops","version":"master","name":"nodejs-application","url":"/drogue-workshops/ttn-lorawan/nodejs-application.html","titles":[{"text":"Creating a Drogue IoT cloud API token","hash":"_creating_a_drogue_iot_cloud_api_token","id":1},{"text":"Create a new API token","hash":"_create_a_new_api_token","id":2},{"text":"List API tokens","hash":"_list_api_tokens","id":3},{"text":"Deleting API tokens","hash":"_deleting_api_tokens","id":4},{"text":"Finding your username","hash":"_finding_your_username","id":5},{"text":"Preparing the application","hash":"_preparing_the_application","id":6},{"text":"Testing the setup","hash":"_testing_the_setup","id":7},{"text":"Testing it out","hash":"_testing_it_out","id":8},{"text":"Understanding the code","hash":"_understanding_the_code","id":9},{"text":"Processing","hash":"_processing","id":10}]},"281":{"id":281,"text":"The last piece of the puzzle is a customer provided application. The application that wants to talk to the device, in order to provide some value-add. For implementing this, we choose Quarkus. Java is great for business applications, there are plenty of tutorials on how to build and interface Quarkus application with enterprise systems. So in this workshop, we will focus on bridging the gap between enterprise and IoT. The core idea here is that you use Drogue IoT cloud as a service. That means, we don’t plan on deploying our application inside the same cluster, but on a separate machine or cluster. Technically you can still do that! We just try to follow a more \"as-a-service\" approach, and you might see in a minute, that this also makes things easier, as you can run the application in your local machine, use our sandbox, and still be connected to the public TTN network. We will be using the MQTT integration of Drogue IoT. This makes things easy, as we don’t need to bridge two Kafka clusters, and still can have multiple consumers. Also, it is possible to just re-use all your tools around MQTT that you already may know about, for testing and debugging. In order to get access to the application through the MQTT integration, we need an OAuth token or API token. As you need to periodically refresh an OAuth token, and most MQTT clients have no idea about that, we choose an API token here[1]. Getting a new API token currently requires to use a command line HTTP client, like HTTPie or curl. It is a simple operation though, and we will use drg whoami --token to acquire a fresh OAuth token for accessing the API. The following examples require you to replace with the actual API endpoint. You can get this from the web console, from the page named \"Home\": The API endpoint URL is located in the box \"API\" in the \"Services\" column. The following examples will use the command jq to pretty-format that the JSON result of the commands. If can’t use jq, you can also omit it as is it only used to improve readability of the result. curl -vs -H \"Authorization: Bearer $(drg whoami --token)\" -XPOST /api/tokens/v1alpha1 | jq The output should look something like: { \"prefix\": \"drg_g0yAUq\", \"token\": \"drg_g0yAUq_kwjRLA40hrt81bbKdGbcDOmlq2WASx6UyQi\" } The value of the field token is the actual API token. You will not be able to recover this token at a later time. So you need to note (copy) it somewhere. The \"prefix\" is used to identity the token, so that you can easily delete it later on. You can also list your existing API tokens using: curl -s -H \"Authorization: Bearer $(drg whoami --token)\" /api/tokens/v1alpha1 | jq Which should provide you can output like: [ { \"prefix\": \"drg_g0yAUq\", \"created\": \"2021-04-28T08:42:59.336402353Z\" } ] As you can see, the actual token is no longer part of the result. If you need to delete a token, you can easily achieve this using the DELETE verb: curl -s -H \"Authorization: Bearer $(drg whoami --token)\" -XDELETE /api/tokens/v1alpha1/drg_g0yAUq In addition to the API token, you will also need to know your username. You can check your username using the Web Console. In the top right corner of the console, you will find the user menu, which shows you your username: While we provide a ready to run container of this application, this workshop plans to make changes to the source code. While all the following steps are possible without an IDE, you may wish to set up of your favorite IDE alongside the process. The tutorial doesn’t require any IDE specific settings or tasks, everything could be done using plain Maven and the most basic text editor. But, feel free to make yourself comfortable. We will start directly by cloning the source code of this example, and run it locally: git clone https://github.com/drogue-iot/quarkus-mqtt-integration-example Next, we need to insert the parameters for connecting the application to the MQTT integration: Create the file src/main/resources/application-dev.properties and add the following content: drogue.application.name=my-app (1) drogue.api.user=my-username (2) drogue.api.key=drg_g0yAUq_3z5pasdcasdeI4YqOP123hdsa821VAtFs4x (3) drogue.integration.mqtt.host=mqtt-integration.sandbox.drogue.cloud (4) drogue.integration.mqtt.port=443 (5) 1 The Drogue IoT application name 2 Your Drogue IoT username, as described in Finding your username 3 Your Drogue IoT application token, as described in Create a new API token 4 The hostname of the MQTT integration. 5 The port number of the MQTT integration. While 443 might look strange here for MQTT, it will still work in the case of OpenShift, as OpenShift routes patch through TLS based TCP connections directly through to the endpoint. You can now start the application, like any other Quarkus application: mvn quarkus:dev The output should look something like: [INFO] Scanning for projects... [INFO] [INFO] ----------------- [INFO] Building quarkus-mqtt-integration-example 1.0.0-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO] [INFO] --- quarkus-maven-plugin:1.13.2.Final:dev (default-cli) @ quarkus-mqtt-integration-example --- [INFO] Using 'UTF-8' encoding to copy filtered resources. [INFO] Copying 4 resources [INFO] Nothing to compile - all classes are up to date Listening for transport dt_socket at address: 5005 __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\ --\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/ 2021-05-04 08:43:08,141 INFO [io.quarkus] (Quarkus Main Thread) quarkus-mqtt-integration-example 1.0.0-SNAPSHOT on JVM (powered by Quarkus 1.13.2.Final) started in 1.512s. Listening on: http://localhost:8080 (1) 2021-05-04 08:43:08,144 INFO [io.quarkus] (Quarkus Main Thread) Profile dev activated. Live Coding activated. 2021-05-04 08:43:08,144 INFO [io.quarkus] (Quarkus Main Thread) Installed features: [cdi, mutiny, oidc-client, resteasy-reactive, resteasy-reactive-jackson, smallrye-context-propagation, smallrye-health, smallrye-reactive-messaging, smallrye-reactive-messaging-mqtt, vertx] 2021-05-04 08:43:08,366 INFO [io.ver.mqt.imp.MqttClientImpl] (vert.x-eventloop-thread-0) Connection with mqtt-integration-drogue-dev.apps.wonderful.iot-playground.org:443 established successfully (2) 1 The URL to the web console 2 Note the line \"Connection … established successfully\" The application will keep running until you terminate it, by pressing Ctrl+C. Navigate your browser to the web console, as shows in the previous step’s log output. It should look something like: Once you press the blue button on the board, you should see an incoming message, and with that, an outgoing message too. Try changing the response to led:on, and press the blue button again. The blue LED on the board should turn on, once the green, send indicator, LED turns off again. It may be that the blue LED doesn’t turn on. Give it a second try, by pressing the blue button again. Why is that needed? A short period after the uplink (device-to-cloud) message, the LoRa device switches into receive mode, awaiting an optional downlink (cloud-to-device) message. If that time window is missed, then the device will not receive the downlink message, and go back to sleep. We will deal with this later, so read on. Let’s take a quick tour through the code. The main logic is in class io.drogue.iot.demo.Processor, and it is actually pretty simple: @Incoming(\"event-stream\") (1) @Outgoing(\"device-commands\") (2) @Broadcast (3) public DeviceCommand process(DeviceEvent event) { var payload = event.getPayload(); LOG.info(\"Received payload: {}\", payload); if (!event.getPayload().startsWith(\"ping:\")) { return null; } var command = new DeviceCommand(); command.setDeviceId(event.getDeviceId()); command.setPayload(this.response.getBytes(StandardCharsets.UTF_8)); return command; (4) } 1 Annotation for consuming messages from the event-stream channel. 2 Annotation for delivering messages, coming out of this method, to the device-commands channel. 3 Indication that all consumers of the device-commands channel should receive the event. This is required so that all browsers that are attached to the web frontend, and the device will receive the event. 4 The actual message we generated and want to send out. The processing part already expects messages of the type DeviceEvent. This is an application specific Java message, which we don’t send out in Drogue cloud. The conversion takes place in the class io.drogue.iot.demo.integration.Receiver. It will take the incoming MQTT message, which is a Cloud Events message in structured content mode, as with Quarkus, we are using MQTT v3. We decode the data section as a JSON encoded TTN uplink message, and extract the payload from it. As with the Processor class before, the return the processed (converted) message. The returned message will be sent to the event-stream, so that both the Processor and any attached web browser will receive it. The output of the Processor will be received by the io.drogue.iot.demo.integration.Sender class. This class will construct the MQTT message, which contains the command for the device. It will publish this as an MQTT message, which will then be forwarded by Drogue cloud to the command endpoint for the device. Which in our case here is the downlink API of The Things Network. 1. API tokens don’t expire, while OAuth access tokens do. Even when you can refresh an access token using a refresh token, you still need to do this.","title":"Quarkus application","component":"drogue-workshops","version":"master","name":"quarkus-application","url":"/drogue-workshops/ttn-lorawan/quarkus-application.html","titles":[{"text":"Creating a Drogue IoT cloud API token","hash":"_creating_a_drogue_iot_cloud_api_token","id":1},{"text":"Create a new API token","hash":"_create_a_new_api_token","id":2},{"text":"List API tokens","hash":"_list_api_tokens","id":3},{"text":"Deleting API tokens","hash":"_deleting_api_tokens","id":4},{"text":"Finding your username","hash":"_finding_your_username","id":5},{"text":"Preparing the application","hash":"_preparing_the_application","id":6},{"text":"Testing the setup","hash":"_testing_the_setup","id":7},{"text":"Testing it out","hash":"_testing_it_out","id":8},{"text":"Understanding the code","hash":"_understanding_the_code","id":9},{"text":"Processing","hash":"_processing","id":10},{"text":"Receiving events","hash":"_receiving_events","id":11},{"text":"Sending commands","hash":"_sending_commands","id":12}]},"282":{"id":282,"text":"In order to create a device firmware, you will need to set up an embedded toolchain for Rust. In order to install Rust and Rust components, you will need rustup: On Unix-like environment, the following command should work just fine: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh There are other ways to install rustup. Check its homepage to learn more. Also see: rustup homepage By default, rustup will install a toolchain (compiler, …) for your current host architecture and operating system. When compiling a device firmware, we need to have a compiler for a different architecture (CPU). The examples used in this workshop contain a rust-toolchain file which will tell rustup to automatically download the toolchain required for your board. In addition to the actual toolchain, you will need tools to flash the firmware to your device, and to monitor what is going on. There are a few tools for Rust which can help here. However, we will focus on the probe-run. You can install probe-run be executing the following command: cargo install probe-run","title":"Toolchain setup","component":"drogue-workshops","version":"master","name":"toolchain","url":"/drogue-workshops/ttn-lorawan/toolchain.html","titles":[{"text":"Install rustup","hash":"_install_rustup","id":1},{"text":"Install an embedded toolchain","hash":"_install_an_embedded_toolchain","id":2},{"text":"Additional tools","hash":"_additional_tools","id":3}]},"283":{"id":283,"text":"Having an easy way to visualize your data using Websocket application is great getting started experience. The next logical step for most applications is to provide a storage for the data along with the way to create custom dashboards. For this purpose, using TimescaleDB time series database based on Postgres and Grafana is a popular choice. For this purpose we provided a ready to use Helm chart that you can deploy in any Kubernetes cluster and get your IoT telemetry application ready to use. Let’s deploy this example and configure it to store and visualize our device temperature data. For that we will need Kubernetes cluster and Helm available on our machine. In this case we will use Minikube, but any other will work just fine. First, you need to start the Minikube minikube start --addons ingress Considering, we have our Drogue Cloud properly configured in the previous section, we need to create an Access Token to connect to the sandbox. $ drg admin tokens create A new Access Token was created: drg_HASH Make sure you save it, as you will not be able to display it again. Next, we’ll install the Helm chart using your username and the previously generated token $ helm repo add drogue-iot https://drogue-iot.github.io/drogue-cloud-helm-charts/ $ helm install --dependency-update --set global.domain=.$(minikube ip).nip.io \\ --set drogueApplication.name=wifi-workshop \\ --set source.drogue.user=dejanb \\ --set source.drogue.token=drg_HASH \\ drogue-cloud-examples Now that we have our example up and running, we can take a look at our data in the dashboard. First, you need to find out the ingress URL for your Grafana installation. $ kubectl get ingress NAME CLASS HOSTS ADDRESS PORTS AGE grafana grafana.192.168.64.86.nip.io 192.168.64.86 80 95s Now, you can point your browser to https://GRAFANA_INGRESS_HOST (grafana.192.168.64.86.nip.io in this example) and login to the dashboard with admin/admin123456. Your device temperature should show up in the Example dashboard similar to this Feel free to play around with the dashboard and adjust it to your liking.","title":"TimescaleDB and Grafana","component":"drogue-workshops","version":"master","name":"db-and-grafana","url":"/drogue-workshops/wifi-websockets/db-and-grafana.html","titles":[{"text":"Deploying","hash":"_deploying","id":1},{"text":"Using","hash":"_using","id":2}]},"284":{"id":284,"text":"We will need to create a new application inside Drogue Cloud and register a device with it. Log into the sandbox using the drg tool: drg login https://api.sandbox.drogue.cloud/ Simply create a new application using drg: drg create app wifi-workshop Next, create a device: drg create device --app wifi-workshop device1 --data '{\"credentials\":{\"credentials\":[{\"pass\":\"mysecretpassword\"}]}}' If the device has been created successfully, proceed to the next step.","title":"Drogue IoT Cloud setup","component":"drogue-workshops","version":"master","name":"drogue-cloud","url":"/drogue-workshops/wifi-websockets/drogue-cloud.html","titles":[{"text":"Log in","hash":"_log_in","id":1},{"text":"Create a new application","hash":"_create_a_new_application","id":2},{"text":"Create device","hash":"_create_device","id":3}]},"285":{"id":285,"text":"The next step is to compile and flash the device’s firmware. Clone the git repository with the workshops: git clone https://github.com/drogue-iot/drogue-workshops For the next steps, you will need to change into the sub-directory examples/wifi-websockets-workshop: cd examples/wifi-websockets-workshop If you don’t use the iot01a board, you will need to adapt the firmware to match your device and hardware configuration! For the device to access your WiFi network and Drogue Cloud, you must add the WiFi and device credentials to the ~/.drogue/config.toml file: hostname = \"http.sandbox.drogue.cloud\" # Replace with your own Drogue Cloud instance if you are not using the sandbox port = \"443\" wifi-ssid = \"...\" # The WiFi network SSID wifi-password = \"...\" # The WiFi network pre-shared key http-username = \"...\" # The device username (I.e. `device1@wifi-workshop`) http-password = \"...\" # The device password (I.e. `mysecretpassword`) You can now compile and flash the firmware. Execute the following command: You need to have the developer board attached to your computer. DEFMT_LOG=info PROBE_RUN_CHIP=STM32L475VG cargo run --release --features b-l475e-iot01a --no-default-features You might have an IoT01A board with a different chip, e.g. L4S5VI. Please check your board and use appropriate value for the PROBE_RUN_CHIP variable , like PROBE_RUN_CHIP=STM32L4S5VI: DEFMT_LOG=info PROBE_RUN_CHIP=STM32L4S5VI cargo run --release --features b-l4s5i-iot01a --no-default-features Once you flashed and started the program, cargo run will keep attached to the application running on the development board. The output should look something like this: Running probe-run target/thumbv7em-none-eabihf/release/wifi-websockets-workshop (HOST) WARN (BUG) location info is incomplete; it will be omitted from the output (HOST) INFO flashing program (164.62 KiB) (HOST) INFO success! ──────────────────────────────────────────────────────────────────────────────── INFO Starting eS-WiFi adapter! INFO eS-WiFi adapter is ready INFO Started... INFO Joining WiFi network... (1) INFO WiFi network joined INFO Application initialized. Press 'User' button to send data INFO Sending temperature measurement number 0 (2) INFO Connected to 192.168.1.2:8088 INFO Response status: Accepted (3) 1 Successfully joined the WiFi network 2 At this point the HTTP request is going to be sent 3 The Response status indicates if data was sent successfully Pay attention to the output in the event of an error. The sensor data is automatically sent every 30 seconds. To send a message to Drogue Cloud manually, press the blue button on the board. If the device is sending data successfully, we can confirm that the event is processed by Drogue Cloud by opening the web console, navigate to the \"Spy\", and start it, using the Drogue application name you have assigned earlier. On the web console, you should see the event, as received by Drogue Cloud. If you’re experiencing problems, try setting the VID:PID values to that of your probe (you can find that from lsusb once your board is powered). cargo run -- --probe : Additionally, the B-L4S5I-IOT01A board can have issues with running cargo run multiple times, leading to errors like Error: An error with the usage of the probe occured Caused by: Operation timed out If you experience that, the best way to restore the board is to reconnect it and use st-flash utility to write any binary to it, like st-flash write ../target/thumbv7em-none-eabihf/release/wifi-websockets-workshop.d 0x8000000 After reconnecting the board again, you should be able to use cargo run again. If your application starts but reports errors like ERROR Error sending measurement you can run it by using DEFMT_LOG=trace to get more information about the error.","title":"Device firmware","component":"drogue-workshops","version":"master","name":"firmware","url":"/drogue-workshops/wifi-websockets/firmware.html","titles":[{"text":"Clone the Git repository","hash":"_clone_the_git_repository","id":1},{"text":"Update the device configuration","hash":"_update_the_device_configuration","id":2},{"text":"Compile and flash","hash":"_compile_and_flash","id":3},{"text":"Checking the result","hash":"_checking_the_result","id":4},{"text":"Troubleshooting","hash":"_troubleshooting","id":5}]},"286":{"id":286,"text":"This workshop focuses on the use case of reporting data from an embedded device with a HTTP client, to the cloud and receive and visualize telemetry data. The workshop is split into three phases. In phase one, we will use the embedded device to send temperature and humidity data to an instance of Drogue Cloud using a WiFi-capable development kit. In the second phase, we will demonstrate the websocket integration of Drogue Cloud, and run a simple web application locally that consumes telemetry and creates a live graph of the temperature data. In the third phase, we will deploy an application to the cloud that consumes the same telemetry data and storing it in a database, and uses Grafana to create a dashboard for our application. This workshop requires additional hardware, as we need an embedded device with a WiFi modem. Additionally to the common pre-requisites, you will need: A GitHub account for logging in to the Drogue Cloud. A Drogue Device supported development board and WiFi modem Development tools: Git, Rust and Npm You need a board with network connectivity, such as the STM32L4 IoT Discovery Kit. You may also use a different board that can run Drogue Device. However, this means that you need to adapt the provided example firmware yourself. For this workshop, we recommend using the Drogue Cloud Sandbox, but you can use your own instance of Drogue Cloud if you do not wish to use the sandbox.","title":"Visualizing Sensor Data","component":"drogue-workshops","version":"master","name":"index","url":"/drogue-workshops/wifi-websockets/index.html","titles":[{"text":"Pre-requisites","hash":"_pre_requisites","id":1},{"text":"Supported embedded device","hash":"_supported_embedded_device","id":2},{"text":"Drogue Cloud","hash":"_drogue_cloud","id":3}]},"287":{"id":287,"text":"Now that we have a WiFi based end-to-end example, we are ready to make some changes. Although reporting telemetry to the cloud is great, it gets even more interesting when you can send commands back to the device. Lets change our application to send a command back if the reported temperature is too high. Here is what we need to change: The device needs to keep an ON/OFF state, signaled by a LED The cloud side application needs to evaluate if the temperature is too high If it is, it needs to send out a command to the device to switch off Let prepare the cloud side first. All that we need to do is to change the Processor class: On the device side, we need to add a fake switch. Take a look at the file main.rs, and make the following changes: After making those changes, you should be able to compile and flash the firmware again using: cargo run --release Pretty easy, wasn’t it? Noticed the bit of string handling on device side. And still, we are 100% sure we didn’t create any memory leaks or invalid pointer access in the process thanks to Rust. So after the device is flashed, let’s sit back and let the device report the temperatures for a while. Then, make the temperature rise by breathing on the temperature sensor on the board. The reported temperature should start to rise and the cloud will tell it to 'switch OFF'. Now it is time to come up with your own ideas. You could: Switch from sending string to some binary format, to make your messages more efficient. You could come up with some more elaborate processing on the cloud side. Maybe tie in some external service for evaluating the desired state of the heater.","title":"Making changes","component":"drogue-workshops","version":"master","name":"making-changes","url":"/drogue-workshops/wifi-websockets/making-changes.html","titles":[{"text":"Sending commands back","hash":"_sending_commands_back","id":1},{"text":"Changing the cloud side","hash":"_changing_the_cloud_side","id":2},{"text":"Changing the device","hash":"_changing_the_device","id":3},{"text":"Making tests","hash":"_making_tests","id":4},{"text":"More ideas","hash":"_more_ideas","id":5}]},"288":{"id":288,"text":"That concludes the workshop! We’ve seen how you can use a WiFi-enabled microcontroller with a temperature sensor to send temperature data to Drogue Cloud, using the already available sandbox. After making sure the telemetry events arrived at the cloud, we ran a simple WebAssembly application to demonstrate how you can consume events from Drogue Cloud websockets, using the publicly available drogue-public-temperature application available on the sandbox. We then saw how you tap into the Websocket event stream and forward it to another data store used by Grafana to build a more powerful dashboard for long term monitoring of the telemetry data. With the end to end setup complete, you can adopt the architecture to your specific use case and go on from there. Some examples: Make Websocket example use your application instead of using drogue-public-temperature Add more devices and more sensor data to the mix Modify the device firmware to accept commands and send commands using the command API On our side, the current Grafana example is just a first step in providing easy getting started telemetry application for Drogue Cloud. While it works nicely in the scenario we covered, there are a lot more we can improve upon: Provide more integration options - current implementation supports only web sockets. We’d like to provide more connectivity options (MQTT and Kafka) and more resilience to connection handling Run in serverless environment - Many cloud environments, like Openshift developer sandbox provide Servlerless/Knative support for its users. We should leverage it when we can and provide seamless integration. Run outside of Kubernetes - Although Kubernetes is very popular today, there are many situation where you want to run an application like this without the access to the cluster. We should provide a way to run the application in plain Docker/Podman installations. So stay tuned!","title":"Summary","component":"drogue-workshops","version":"master","name":"summary","url":"/drogue-workshops/wifi-websockets/summary.html","titles":[{"text":"Whats next?","hash":"_whats_next","id":1}]},"289":{"id":289,"text":"In order to create a device firmware, you will need to set up an embedded toolchain for Rust. In order to install Rust and Rust components, you will need rustup: On Unix-like environment, the following command should work just fine: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh There are other ways to install rustup. Check its homepage to learn more. Also see: rustup homepage You’ll also need to install nightly toolchain with by running rustup toolchain install nightly` By default, rustup will install a toolchain (compiler, …) for your current host architecture and operating system. When compiling a device firmware, we need to have a compiler for a different architecture (CPU). The examples used in this workshop contain a rust-toolchain file which will tell rustup to automatically download the toolchain required for your board. In addition to the actual toolchain, you will need tools to flash the firmware to your device, and to monitor what is going on. There are a few tools for Rust which can help here. However, we will focus on the probe-run. You can install probe-run be executing the following command: cargo install probe-run Make sure you properly set up probe, like for example set udev rules on Linux to allow users without root privileges access to the debug probes as well.","title":"Toolchain setup","component":"drogue-workshops","version":"master","name":"toolchain","url":"/drogue-workshops/wifi-websockets/toolchain.html","titles":[{"text":"Install rustup","hash":"_install_rustup","id":1},{"text":"Install an embedded toolchain","hash":"_install_an_embedded_toolchain","id":2},{"text":"Additional tools","hash":"_additional_tools","id":3}]},"290":{"id":290,"text":"Now that we have events flowing into Drogue Cloud, it’s time to visualize the data. We’ll start of with a web assembly application consuming events from the Websocket integration of Drogue Cloud. You can use a pre-running instance of this application at https://drogue-iot.github.io/wasm-websocket-integration-example. Read on if you want to run this application locally as well: Clone the git repository with the integration example: git clone https://github.com/drogue-iot/wasm-websocket-integration-example For the next steps, make sure you have npm installed as listed in the prerequisites. To build the WASM application and test it locally, we need the trunk tool: cargo install trunk To build the application, we must first install the dependencies: npm install Once installed, we can build and run the main application locally: trunk serve --port 8080 Open your browser at http://localhost:8080, and you should see the temperature dashboard: You can adjust the URL in the text field, but for this workshop you can just use the default URL. Click Connect to start plotting temperature data. After running for a while, you should see a graph, like this: Feel free to play around with the application and use it as a base for creating more advanced visuals of the data.","title":"Websocket Application","component":"drogue-workshops","version":"master","name":"websocket","url":"/drogue-workshops/wifi-websockets/websocket.html","titles":[{"text":"Clone the Git repository","hash":"_clone_the_git_repository","id":1},{"text":"Installing the development tools","hash":"_installing_the_development_tools","id":2},{"text":"Running the application","hash":"_running_the_application","id":3}]},"291":{"id":291,"text":"This describes the Drogue IoT cloud management API. It is intended to be used to manage and configure cloud side aspects of Drogue IoT cloud.For device-facing endpoints, see the different protocol endpoints documentation.","title":"Drogue Cloud API 0.11","component":"drogue-cloud","version":"dev","name":"index","url":"/drogue-cloud/dev/api/index.html","titles":[]},"292":{"id":292,"text":"Manage personal access tokens to authenticate with Drogue Cloud. List access tokens for this user. Code Description 200 All access tokens for this user. application/json List of ResponseApiTokensV1alpha1Get200ApplicationJsonItems Create a new access tokens for this user. Name Location Type Description description query string A description to attach to the token entry. Code Description 200 A new access token was created. application/json ResponseApiTokensV1alpha1Post200ApplicationJson Delete an access token by prefix. Name Location Type Description prefix* path string The prefix of the access token to delete. Code Description 204 Successfully deleted the token. If the access token didn't exist, still 204 will be returned. Manage application and devices in the registry. Return all the applications the user has access to Name Location Type Description labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of applications. 401 Unauthorized. create new application. The data section of the application to add Content Type Description application/json App Code Description 201 If the application is created 409 If the application id is already used. Return application details. Name Location Type Description application* path string The name of the application. Code Description 200 The data of the application application/json App 404 If the requested application does not exist or if the user has no access to it. update existing app Name Location Type Description application* path string The name of the application. The data of the application to update Content Type Description application/json App Code Description 204 If the application is updated 404 If the requested application does not exist or if the user has no access to it. Delete existing application Name Location Type Description application* path string The name of the application. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the application is deleted 404 If the requested application does not exist or if the user has not access to it. FUTURE USE: Patch existing app Name Location Type Description application* path string The name of the application. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json #/components/schema/Patch Code Description 204 If the app is updated 404 If requested apps do not exits or if the user has not access to them. Return all the devices of the application. Name Location Type Description application* path string The name of the application. labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of devices. 401 Unauthorized. Create a new device. Name Location Type Description application* path string The name of the application. The device object to add. Content Type Description application/json Device Code Description 201 If the device is created. 409 If the device id is already used. Return device details. Name Location Type Description application* path string The name of the application. device* path string The name of the device. Code Description 200 The data of the device application/json Device 404 If requested device does not exist or if the user has no access to it. update existing device Name Location Type Description application* path string The name of the application. device* path string The name of the device. The data object of the device to update Content Type Description application/json Device Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Delete existing device Name Location Type Description application* path string The name of the application. device* path string The name of the device. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the device is deleted 404 If requested device does not exist or if the user has no access to it. FUTURE USE: Patch existing device Name Location Type Description application* path string The name of the application. device* path string The name of the device. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json Patch Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Manage applications members and authorizations. Retrieve state of the application transfer Name Location Type Description application* path string The name of the application. Code Description 200 An transfer is pending for this application. application/json ResponseApiAdminV1alpha1AppsApplicationTransferOwnershipGet200ApplicationJson 204 There is no current pending transfer for this application. 404 The application does not exist, or the user does not have access to the information. Initiate the process to transfer the ownership. Name Location Type Description application* path string The name of the application. Content Type Description application/json RequestBodyApiAdminV1alpha1AppsApplicationTransferOwnershipPutApplicationJson Code Description 202 Transfer process is initiated. 404 If the requested application does not exist or if the user has no access to it. Cancel an ownership transfer. Name Location Type Description application* path string The name of the application. Code Description 204 The transfer was successfully canceled. 404 The user has no access to the resource. This is also the case, when the transfer was already completed successfully. Accept an application as new owner. Name Location Type Description application* path string The name of the application. Code Description 204 Ownership is transfered. 404 If the requested application does not exist or if the user has no access to it. Get the application members. Name Location Type Description application* path string The name of the application. Code Description 200 The list of members for this application. application/json ApplicationMembers 404 If the requested application does not exist or if the user has no access to it. Update existing application member list. Name Location Type Description application* path string The name of the application. The new application member list. Content Type Description application/json ApplicationMembers Code Description 204 The application's member list was updated. 400 The payload format was invalid. 404 If requested application does not exist or if the user has no access to it. 409 In case a resource version was provided in the update, but it did not match the current version of the resource. Manage users Get information about the current user. Code Description 200 Information about the current user. application/json ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson 403 In case the user is not logged in. Send commands to devices and check the results. Send one way commands to devices. Name Location Type Description application* path string The name of the application. device* path string The name of the device. command* query CommandName Command to execute Optional payload for the command Content Type Description application/json CommandObject Code Description 202 The command was accepted for processing, but there is no further information if or when the command will be sent to the device. As commands are considered short-lived, command which cannot be sent in the near future will get discarded. 401 Invalid authentication. 404 Device or application not found. 406 Device is not found or disabled. Explicitly wait for commands Name Location Type Description application* path string The name of the application. device* path string The name of the device. timeout query Timeout Wait for commands for specified amount of time in seconds. Code Description 200 The response contain a command. application/json CommandObject Command Command to be executed Map of objects Request Request identifier used to correlate response with. string 404 No command available. Send a command result. Name Location Type Description application* path string The name of the application. device* path string The name of the device. request query string Request identifier used to correlate response with. status* query string Status code of commands execution. Optional payload for the command response Content Type Description application/json Map of objects Code Description 200 Command result saved. Get information of the system. Get version Code Description 200 Version response application/json ResponseWellKnownDrogueVersionGet200ApplicationJson Get publicly known endpoints Code Description 200 Public endpoints application/json Map of objects","title":"Endpoints","component":"drogue-cloud","version":"dev","name":"endpoints","url":"/drogue-cloud/dev/api/endpoints.html","titles":[{"text":"Access Token","hash":"_access_token","id":1},{"text":"GET /api/tokens/v1alpha1","hash":"_get_apitokensv1alpha1","id":2},{"text":"Responses","hash":"_responses","id":3},{"text":"POST /api/tokens/v1alpha1","hash":"_post_apitokensv1alpha1","id":4},{"text":"Parameters","hash":"_parameters","id":5},{"text":"Responses","hash":"_responses_2","id":6},{"text":"DELETE /api/tokens/v1alpha1/{prefix}","hash":"_delete_apitokensv1alpha1prefix","id":7},{"text":"Parameters","hash":"_parameters_2","id":8},{"text":"Responses","hash":"_responses_3","id":9},{"text":"Registry","hash":"_registry","id":10},{"text":"GET /api/registry/v1alpha1/apps","hash":"_get_apiregistryv1alpha1apps","id":11},{"text":"Parameters","hash":"_parameters_3","id":12},{"text":"Responses","hash":"_responses_4","id":13},{"text":"POST /api/registry/v1alpha1/apps","hash":"_post_apiregistryv1alpha1apps","id":14},{"text":"Request","hash":"_request","id":15},{"text":"Responses","hash":"_responses_5","id":16},{"text":"GET /api/registry/v1alpha1/apps/{application}","hash":"_get_apiregistryv1alpha1appsapplication","id":17},{"text":"Parameters","hash":"_parameters_4","id":18},{"text":"Responses","hash":"_responses_6","id":19},{"text":"PUT /api/registry/v1alpha1/apps/{application}","hash":"_put_apiregistryv1alpha1appsapplication","id":20},{"text":"Parameters","hash":"_parameters_5","id":21},{"text":"Request","hash":"_request_2","id":22},{"text":"Responses","hash":"_responses_7","id":23},{"text":"DELETE /api/registry/v1alpha1/apps/{application}","hash":"_delete_apiregistryv1alpha1appsapplication","id":24},{"text":"Parameters","hash":"_parameters_6","id":25},{"text":"Responses","hash":"_responses_8","id":26},{"text":"PATCH /api/registry/v1alpha1/apps/{application}","hash":"_patch_apiregistryv1alpha1appsapplication","id":27},{"text":"Parameters","hash":"_parameters_7","id":28},{"text":"Request","hash":"_request_3","id":29},{"text":"Responses","hash":"_responses_9","id":30},{"text":"GET /api/registry/v1alpha1/apps/{application}/devices","hash":"_get_apiregistryv1alpha1appsapplicationdevices","id":31},{"text":"Parameters","hash":"_parameters_8","id":32},{"text":"Responses","hash":"_responses_10","id":33},{"text":"POST /api/registry/v1alpha1/apps/{application}/devices","hash":"_post_apiregistryv1alpha1appsapplicationdevices","id":34},{"text":"Parameters","hash":"_parameters_9","id":35},{"text":"Request","hash":"_request_4","id":36},{"text":"Responses","hash":"_responses_11","id":37},{"text":"GET /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_get_apiregistryv1alpha1appsapplicationdevicesdevice","id":38},{"text":"Parameters","hash":"_parameters_10","id":39},{"text":"Responses","hash":"_responses_12","id":40},{"text":"PUT /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_put_apiregistryv1alpha1appsapplicationdevicesdevice","id":41},{"text":"Parameters","hash":"_parameters_11","id":42},{"text":"Request","hash":"_request_5","id":43},{"text":"Responses","hash":"_responses_13","id":44},{"text":"DELETE /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_delete_apiregistryv1alpha1appsapplicationdevicesdevice","id":45},{"text":"Parameters","hash":"_parameters_12","id":46},{"text":"Responses","hash":"_responses_14","id":47},{"text":"PATCH /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_patch_apiregistryv1alpha1appsapplicationdevicesdevice","id":48},{"text":"Parameters","hash":"_parameters_13","id":49},{"text":"Request","hash":"_request_6","id":50},{"text":"Responses","hash":"_responses_15","id":51},{"text":"Application administration","hash":"_application_administration","id":52},{"text":"GET /api/admin/v1alpha1/apps/{application}/transfer-ownership","hash":"_get_apiadminv1alpha1appsapplicationtransfer_ownership","id":53},{"text":"Parameters","hash":"_parameters_14","id":54},{"text":"Responses","hash":"_responses_16","id":55},{"text":"PUT /api/admin/v1alpha1/apps/{application}/transfer-ownership","hash":"_put_apiadminv1alpha1appsapplicationtransfer_ownership","id":56},{"text":"Parameters","hash":"_parameters_15","id":57},{"text":"Request","hash":"_request_7","id":58},{"text":"Responses","hash":"_responses_17","id":59},{"text":"DELETE /api/admin/v1alpha1/apps/{application}/transfer-ownership","hash":"_delete_apiadminv1alpha1appsapplicationtransfer_ownership","id":60},{"text":"Parameters","hash":"_parameters_16","id":61},{"text":"Responses","hash":"_responses_18","id":62},{"text":"PUT /api/admin/v1alpha1/apps/{application}/accept-ownership","hash":"_put_apiadminv1alpha1appsapplicationaccept_ownership","id":63},{"text":"Parameters","hash":"_parameters_17","id":64},{"text":"Responses","hash":"_responses_19","id":65},{"text":"GET /api/admin/v1alpha1/apps/{application}/members","hash":"_get_apiadminv1alpha1appsapplicationmembers","id":66},{"text":"Parameters","hash":"_parameters_18","id":67},{"text":"Responses","hash":"_responses_20","id":68},{"text":"PUT /api/admin/v1alpha1/apps/{application}/members","hash":"_put_apiadminv1alpha1appsapplicationmembers","id":69},{"text":"Parameters","hash":"_parameters_19","id":70},{"text":"Request","hash":"_request_8","id":71},{"text":"Responses","hash":"_responses_21","id":72},{"text":"User administration","hash":"_user_administration","id":73},{"text":"GET /api/admin/v1alpha1/user/whoami","hash":"_get_apiadminv1alpha1userwhoami","id":74},{"text":"Responses","hash":"_responses_22","id":75},{"text":"Command & Control","hash":"_command_control","id":76},{"text":"POST /api/command/v1alpha1/apps/{application}/devices/{device}","hash":"_post_apicommandv1alpha1appsapplicationdevicesdevice","id":77},{"text":"Parameters","hash":"_parameters_20","id":78},{"text":"Request","hash":"_request_9","id":79},{"text":"Responses","hash":"_responses_23","id":80},{"text":"GET /api/command/v1alpha1/inbox/apps/{application}/devices/{device}","hash":"_get_apicommandv1alpha1inboxappsapplicationdevicesdevice","id":81},{"text":"Parameters","hash":"_parameters_21","id":82},{"text":"Responses","hash":"_responses_24","id":83},{"text":"Headers","hash":"_headers","id":84},{"text":"POST /api/command/v1alpha1/outbox/apps/{application}/devices/{device}","hash":"_post_apicommandv1alpha1outboxappsapplicationdevicesdevice","id":85},{"text":"Parameters","hash":"_parameters_22","id":86},{"text":"Request","hash":"_request_10","id":87},{"text":"Responses","hash":"_responses_25","id":88},{"text":"System information","hash":"_system_information","id":89},{"text":"GET /.well-known/drogue-version","hash":"_get_well_knowndrogue_version","id":90},{"text":"Responses","hash":"_responses_26","id":91},{"text":"GET /.well-known/drogue-endpoints","hash":"_get_well_knowndrogue_endpoints","id":92},{"text":"Responses","hash":"_responses_27","id":93}]},"293":{"id":293,"text":"Property Type Description aliases List of string A list of alternates names that the device can authenticate with. Must conform to UTF-8. Property Type Description metadata NonScopedMetadata spec ApplicationSpec status ApplicationStatus Property Type Description resourceVersion string The version of the resource. When setting a new member list, this value is optional. But if present, the application will only be updated if the resource version matches. Otherwise it will return a \"Conflict\". members* Map of MemberEntry Example { \"resourceVersion\": \"ced63698-a0da-11eb-97e8-d45d6455d2cc\", \"members\": { \"d84eb308-a0da-11eb-9e90-d45d6455d2cc\": { \"role\": \"admin\" }, \"03e32c1a-a0db-11eb-9e9b-d45d6455d2cc\": { \"role\": \"manager\" }, \"0a111dfe-a0db-11eb-a953-d45d6455d2cc\": { \"role\": \"reader\" } } } A JSON object containing arbritrary data attached to an application. Type: Map of objects A JSON object containing arbritrary status information attached to an application. Type: Map of objects The public key of the device X509 certificate. Property Type Description cert* string The name of the command. Type: string Example \"set-value\" Additional command payload. Type: Map of objects Example { \"set-temp\": 21, \"set-light-color\": \"FDF4DC\" } Property Type Description metadata ScopedMetadata spec DeviceSpec status DeviceStatus Type: List of One of: UserCredential PassCredential CertCredential A JSON object containing arbritrary data attached to a device. Property Type Description credentials DeviceSpec_credentials gatewaySelector GatewaySelector alias Alias Property Type Description credentials DeviceCredentials A JSON object containing arbritrary status information attached to a device. Type: Map of objects Property Type Description matchNames List of string Each: The device ID of the device to use as a gateway. Property Type Description role* string reader writer admin Property Type Description creationTimestamp* string (date-time) name* string resourceVersion* string An ID of the current version of this resource. This should be treated as a string and its content should not be interpreted by clients in any way. uid* string A unique ID of the resource. Deleting and re-creating a resource with the same name will still result in a different unique ID. generation* integer deletionTimestamp string (date-time) A marker for soft-deletion. When the resource is deleted, it will first be marked as deleted, by setting the deletion timestamp. Once all finalizers are removed, the resource will actually be deleted. finalizers List of string A list of finalizers. As long as finalizers are present, the resource will not be deleted even if the deletionTimestamp is set. annotations Map of string Arbitrary additional information. labels Map of string Additional labels which can used for searching.Labels are limited in size and format, similar to the Kubernetes labels.Also see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ All of: Metadata password credential. Property Type Description pass* Password A password, either plain or hashed. One of: string Property Type Description plain* string Property Type Description bcrypt* string Property Type Description sha512* string Property Type Description newUser* string Property Type Description newUser* string Property Type Description id* string The ID of the current user.NOTE: This ID may be different to the name of the user. Property Type Description created string (date-time) prefix string Property Type Description key* string prefix* string Property Type Description success* string true All of: Metadata Property Type Description application* string The name of the application the resource is scoped to. Type: integer Example 30 Username and password credentials. Property Type Description user* UserCredential_user The username and password combination. The username and password combination. Property Type Description usename string password Password","title":"Schemas","component":"drogue-cloud","version":"dev","name":"schemas","url":"/drogue-cloud/dev/api/schemas.html","titles":[{"text":"Alias","hash":"_alias","id":1},{"text":"App","hash":"_app","id":2},{"text":"ApplicationMembers","hash":"_applicationmembers","id":3},{"text":"ApplicationSpec","hash":"_applicationspec","id":4},{"text":"ApplicationStatus","hash":"_applicationstatus","id":5},{"text":"CertCredential","hash":"_certcredential","id":6},{"text":"CommandName","hash":"_commandname","id":7},{"text":"CommandObject","hash":"_commandobject","id":8},{"text":"Device","hash":"_device","id":9},{"text":"DeviceCredentials","hash":"_devicecredentials","id":10},{"text":"DeviceSpec","hash":"_devicespec","id":11},{"text":"DeviceSpec_credentials","hash":"_devicespec_credentials","id":12},{"text":"DeviceStatus","hash":"_devicestatus","id":13},{"text":"GatewaySelector","hash":"_gatewayselector","id":14},{"text":"MemberEntry","hash":"_memberentry","id":15},{"text":"Metadata","hash":"_metadata","id":16},{"text":"NonScopedMetadata","hash":"_nonscopedmetadata","id":17},{"text":"PassCredential","hash":"_passcredential","id":18},{"text":"Password","hash":"_password","id":19},{"text":"RequestBodyApiAdminV1alpha1AppsApplicationTransferOwnershipPutApplicationJson","hash":"_requestbodyapiadminv1alpha1appsapplicationtransferownershipputapplicationjson","id":20},{"text":"ResponseApiAdminV1alpha1AppsApplicationTransferOwnershipGet200ApplicationJson","hash":"_responseapiadminv1alpha1appsapplicationtransferownershipget200applicationjson","id":21},{"text":"ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson","hash":"_responseapiadminv1alpha1userwhoamiget200applicationjson","id":22},{"text":"ResponseApiTokensV1alpha1Get200ApplicationJsonItems","hash":"_responseapitokensv1alpha1get200applicationjsonitems","id":23},{"text":"ResponseApiTokensV1alpha1Post200ApplicationJson","hash":"_responseapitokensv1alpha1post200applicationjson","id":24},{"text":"ResponseWellKnownDrogueVersionGet200ApplicationJson","hash":"_responsewellknowndrogueversionget200applicationjson","id":25},{"text":"ScopedMetadata","hash":"_scopedmetadata","id":26},{"text":"Timeout","hash":"_timeout","id":27},{"text":"UserCredential","hash":"_usercredential","id":28},{"text":"UserCredential_user","hash":"_usercredential_user","id":29}]},"294":{"id":294,"text":"This describes the Drogue IoT cloud management API. It is intended to be used to manage and configure cloud side aspects of Drogue IoT cloud.For device-facing endpoints, see the different protocol endpoints documentation.","title":"Drogue Cloud API 0.10","component":"drogue-cloud","version":"0.1","name":"index","url":"/drogue-cloud/0.1/api/index.html","titles":[]},"295":{"id":295,"text":"Manage personal access tokens to authenticate with Drogue Cloud. List access tokens for this user. Code Description 200 All access tokens for this user. application/json List of ResponseApiTokensV1alpha1Get200ApplicationJsonItems Create a new access tokens for this user. Name Location Type Description description query string A description to attach to the token entry. Code Description 200 A new access token was created. application/json ResponseApiTokensV1alpha1Post200ApplicationJson Delete an access token by prefix. Name Location Type Description prefix* path string The prefix of the access token to delete. Code Description 204 Successfully deleted the token. If the access token didn't exist, still 204 will be returned. Manage application and devices in the registry. Return all the applications the user has access to Name Location Type Description labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of applications. 401 Unauthorized. create new application. The data section of the application to add Content Type Description application/json App Code Description 201 If the application is created 409 If the application id is already used. Return application details. Name Location Type Description application* path string The name of the application. Code Description 200 The data of the application application/json App 404 If the requested application does not exist or if the user has no access to it. update existing app Name Location Type Description application* path string The name of the application. The data of the application to update Content Type Description application/json App Code Description 204 If the application is updated 404 If the requested application does not exist or if the user has no access to it. Delete existing application Name Location Type Description application* path string The name of the application. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the application is deleted 404 If the requested application does not exist or if the user has not access to it. FUTURE USE: Patch existing app Name Location Type Description application* path string The name of the application. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json #/components/schema/Patch Code Description 204 If the app is updated 404 If requested apps do not exits or if the user has not access to them. Return all the devices of the application. Name Location Type Description application* path string The name of the application. labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of devices. 401 Unauthorized. Create a new device. Name Location Type Description application* path string The name of the application. The device object to add. Content Type Description application/json Device Code Description 201 If the device is created. 409 If the device id is already used. Return device details. Name Location Type Description application* path string The name of the application. device* path string The name of the device. Code Description 200 The data of the device application/json Device 404 If requested device does not exist or if the user has no access to it. update existing device Name Location Type Description application* path string The name of the application. device* path string The name of the device. The data object of the device to update Content Type Description application/json Device Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Delete existing device Name Location Type Description application* path string The name of the application. device* path string The name of the device. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the device is deleted 404 If requested device does not exist or if the user has no access to it. FUTURE USE: Patch existing device Name Location Type Description application* path string The name of the application. device* path string The name of the device. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json Patch Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Manage applications members and authorizations. Retrieve state of the application transfer Name Location Type Description application* path string The name of the application. Code Description 200 An transfer is pending for this application. application/json ResponseApiAdminV1alpha1AppsApplicationTransferOwnershipGet200ApplicationJson 204 There is no current pending transfer for this application. 404 The application does not exist, or the user does not have access to the information. Initiate the process to transfer the ownership. Name Location Type Description application* path string The name of the application. Content Type Description application/json RequestBodyApiAdminV1alpha1AppsApplicationTransferOwnershipPutApplicationJson Code Description 202 Transfer process is initiated. 404 If the requested application does not exist or if the user has no access to it. Cancel an ownership transfer. Name Location Type Description application* path string The name of the application. Code Description 204 The transfer was successfully canceled. 404 The user has no access to the resource. This is also the case, when the transfer was already completed successfully. Accept an application as new owner. Name Location Type Description application* path string The name of the application. Code Description 204 Ownership is transfered. 404 If the requested application does not exist or if the user has no access to it. Get the application members. Name Location Type Description application* path string The name of the application. Code Description 200 The list of members for this application. application/json ApplicationMembers 404 If the requested application does not exist or if the user has no access to it. Update existing application member list. Name Location Type Description application* path string The name of the application. The new application member list. Content Type Description application/json ApplicationMembers Code Description 204 The application's member list was updated. 400 The payload format was invalid. 404 If requested application does not exist or if the user has no access to it. 409 In case a resource version was provided in the update, but it did not match the current version of the resource. Manage users Get information about the current user. Code Description 200 Information about the current user. application/json ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson 403 In case the user is not logged in. Send commands to devices and check the results. Send one way commands to devices. Name Location Type Description application* path string The name of the application. device* path string The name of the device. command* query CommandName Command to execute Optional payload for the command Content Type Description application/json CommandObject Code Description 202 The command was accepted for processing, but there is no further information if or when the command will be sent to the device. As commands are considered short-lived, command which cannot be sent in the near future will get discarded. 401 Invalid authentication. 404 Device or application not found. 406 Device is not found or disabled. Explicitly wait for commands Name Location Type Description application* path string The name of the application. device* path string The name of the device. timeout query Timeout Wait for commands for specified amount of time in seconds. Code Description 200 The response contain a command. application/json CommandObject Command Command to be executed Map of objects Request Request identifier used to correlate response with. string 404 No command available. Send a command result. Name Location Type Description application* path string The name of the application. device* path string The name of the device. request query string Request identifier used to correlate response with. status* query string Status code of commands execution. Optional payload for the command response Content Type Description application/json Map of objects Code Description 200 Command result saved. Get information of the system. Get version Code Description 200 Version response application/json ResponseWellKnownDrogueVersionGet200ApplicationJson Get publicly known endpoints Code Description 200 Public endpoints application/json Map of objects","title":"Endpoints","component":"drogue-cloud","version":"0.1","name":"endpoints","url":"/drogue-cloud/0.1/api/endpoints.html","titles":[{"text":"Access Token","hash":"_access_token","id":1},{"text":"GET /api/tokens/v1alpha1","hash":"_get_apitokensv1alpha1","id":2},{"text":"Responses","hash":"_responses","id":3},{"text":"POST /api/tokens/v1alpha1","hash":"_post_apitokensv1alpha1","id":4},{"text":"Parameters","hash":"_parameters","id":5},{"text":"Responses","hash":"_responses_2","id":6},{"text":"DELETE /api/tokens/v1alpha1/{prefix}","hash":"_delete_apitokensv1alpha1prefix","id":7},{"text":"Parameters","hash":"_parameters_2","id":8},{"text":"Responses","hash":"_responses_3","id":9},{"text":"Registry","hash":"_registry","id":10},{"text":"GET /api/registry/v1alpha1/apps","hash":"_get_apiregistryv1alpha1apps","id":11},{"text":"Parameters","hash":"_parameters_3","id":12},{"text":"Responses","hash":"_responses_4","id":13},{"text":"POST /api/registry/v1alpha1/apps","hash":"_post_apiregistryv1alpha1apps","id":14},{"text":"Request","hash":"_request","id":15},{"text":"Responses","hash":"_responses_5","id":16},{"text":"GET /api/registry/v1alpha1/apps/{application}","hash":"_get_apiregistryv1alpha1appsapplication","id":17},{"text":"Parameters","hash":"_parameters_4","id":18},{"text":"Responses","hash":"_responses_6","id":19},{"text":"PUT /api/registry/v1alpha1/apps/{application}","hash":"_put_apiregistryv1alpha1appsapplication","id":20},{"text":"Parameters","hash":"_parameters_5","id":21},{"text":"Request","hash":"_request_2","id":22},{"text":"Responses","hash":"_responses_7","id":23},{"text":"DELETE /api/registry/v1alpha1/apps/{application}","hash":"_delete_apiregistryv1alpha1appsapplication","id":24},{"text":"Parameters","hash":"_parameters_6","id":25},{"text":"Responses","hash":"_responses_8","id":26},{"text":"PATCH /api/registry/v1alpha1/apps/{application}","hash":"_patch_apiregistryv1alpha1appsapplication","id":27},{"text":"Parameters","hash":"_parameters_7","id":28},{"text":"Request","hash":"_request_3","id":29},{"text":"Responses","hash":"_responses_9","id":30},{"text":"GET /api/registry/v1alpha1/apps/{application}/devices","hash":"_get_apiregistryv1alpha1appsapplicationdevices","id":31},{"text":"Parameters","hash":"_parameters_8","id":32},{"text":"Responses","hash":"_responses_10","id":33},{"text":"POST /api/registry/v1alpha1/apps/{application}/devices","hash":"_post_apiregistryv1alpha1appsapplicationdevices","id":34},{"text":"Parameters","hash":"_parameters_9","id":35},{"text":"Request","hash":"_request_4","id":36},{"text":"Responses","hash":"_responses_11","id":37},{"text":"GET /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_get_apiregistryv1alpha1appsapplicationdevicesdevice","id":38},{"text":"Parameters","hash":"_parameters_10","id":39},{"text":"Responses","hash":"_responses_12","id":40},{"text":"PUT /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_put_apiregistryv1alpha1appsapplicationdevicesdevice","id":41},{"text":"Parameters","hash":"_parameters_11","id":42},{"text":"Request","hash":"_request_5","id":43},{"text":"Responses","hash":"_responses_13","id":44},{"text":"DELETE /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_delete_apiregistryv1alpha1appsapplicationdevicesdevice","id":45},{"text":"Parameters","hash":"_parameters_12","id":46},{"text":"Responses","hash":"_responses_14","id":47},{"text":"PATCH /api/registry/v1alpha1/apps/{application}/devices/{device}","hash":"_patch_apiregistryv1alpha1appsapplicationdevicesdevice","id":48},{"text":"Parameters","hash":"_parameters_13","id":49},{"text":"Request","hash":"_request_6","id":50},{"text":"Responses","hash":"_responses_15","id":51},{"text":"Application administration","hash":"_application_administration","id":52},{"text":"GET /api/admin/v1alpha1/apps/{application}/transfer-ownership","hash":"_get_apiadminv1alpha1appsapplicationtransfer_ownership","id":53},{"text":"Parameters","hash":"_parameters_14","id":54},{"text":"Responses","hash":"_responses_16","id":55},{"text":"PUT /api/admin/v1alpha1/apps/{application}/transfer-ownership","hash":"_put_apiadminv1alpha1appsapplicationtransfer_ownership","id":56},{"text":"Parameters","hash":"_parameters_15","id":57},{"text":"Request","hash":"_request_7","id":58},{"text":"Responses","hash":"_responses_17","id":59},{"text":"DELETE /api/admin/v1alpha1/apps/{application}/transfer-ownership","hash":"_delete_apiadminv1alpha1appsapplicationtransfer_ownership","id":60},{"text":"Parameters","hash":"_parameters_16","id":61},{"text":"Responses","hash":"_responses_18","id":62},{"text":"PUT /api/admin/v1alpha1/apps/{application}/accept-ownership","hash":"_put_apiadminv1alpha1appsapplicationaccept_ownership","id":63},{"text":"Parameters","hash":"_parameters_17","id":64},{"text":"Responses","hash":"_responses_19","id":65},{"text":"GET /api/admin/v1alpha1/apps/{application}/members","hash":"_get_apiadminv1alpha1appsapplicationmembers","id":66},{"text":"Parameters","hash":"_parameters_18","id":67},{"text":"Responses","hash":"_responses_20","id":68},{"text":"PUT /api/admin/v1alpha1/apps/{application}/members","hash":"_put_apiadminv1alpha1appsapplicationmembers","id":69},{"text":"Parameters","hash":"_parameters_19","id":70},{"text":"Request","hash":"_request_8","id":71},{"text":"Responses","hash":"_responses_21","id":72},{"text":"User administration","hash":"_user_administration","id":73},{"text":"GET /api/admin/v1alpha1/user/whoami","hash":"_get_apiadminv1alpha1userwhoami","id":74},{"text":"Responses","hash":"_responses_22","id":75},{"text":"Command & Control","hash":"_command_control","id":76},{"text":"POST /api/command/v1alpha1/apps/{application}/devices/{device}","hash":"_post_apicommandv1alpha1appsapplicationdevicesdevice","id":77},{"text":"Parameters","hash":"_parameters_20","id":78},{"text":"Request","hash":"_request_9","id":79},{"text":"Responses","hash":"_responses_23","id":80},{"text":"GET /api/command/v1alpha1/inbox/apps/{application}/devices/{device}","hash":"_get_apicommandv1alpha1inboxappsapplicationdevicesdevice","id":81},{"text":"Parameters","hash":"_parameters_21","id":82},{"text":"Responses","hash":"_responses_24","id":83},{"text":"Headers","hash":"_headers","id":84},{"text":"POST /api/command/v1alpha1/outbox/apps/{application}/devices/{device}","hash":"_post_apicommandv1alpha1outboxappsapplicationdevicesdevice","id":85},{"text":"Parameters","hash":"_parameters_22","id":86},{"text":"Request","hash":"_request_10","id":87},{"text":"Responses","hash":"_responses_25","id":88},{"text":"System information","hash":"_system_information","id":89},{"text":"GET /.well-known/drogue-version","hash":"_get_well_knowndrogue_version","id":90},{"text":"Responses","hash":"_responses_26","id":91},{"text":"GET /.well-known/drogue-endpoints","hash":"_get_well_knowndrogue_endpoints","id":92},{"text":"Responses","hash":"_responses_27","id":93}]},"296":{"id":296,"text":"Property Type Description aliases List of string A list of alternates names that the device can authenticate with. Must conform to UTF-8. Property Type Description metadata NonScopedMetadata spec ApplicationSpec status ApplicationStatus Property Type Description resourceVersion string The version of the resource. When setting a new member list, this value is optional. But if present, the application will only be updated if the resource version matches. Otherwise it will return a \"Conflict\". members* Map of MemberEntry Example { \"resourceVersion\": \"ced63698-a0da-11eb-97e8-d45d6455d2cc\", \"members\": { \"d84eb308-a0da-11eb-9e90-d45d6455d2cc\": { \"role\": \"admin\" }, \"03e32c1a-a0db-11eb-9e9b-d45d6455d2cc\": { \"role\": \"manager\" }, \"0a111dfe-a0db-11eb-a953-d45d6455d2cc\": { \"role\": \"reader\" } } } A JSON object containing arbritrary data attached to an application. Type: Map of objects A JSON object containing arbritrary status information attached to an application. Type: Map of objects The public key of the device X509 certificate. Property Type Description cert* string The name of the command. Type: string Example \"set-value\" Additional command payload. Type: Map of objects Example { \"set-temp\": 21, \"set-light-color\": \"FDF4DC\" } Property Type Description metadata ScopedMetadata spec DeviceSpec status DeviceStatus Type: List of One of: UserCredential PassCredential CertCredential A JSON object containing arbritrary data attached to a device. Property Type Description credentials DeviceSpec_credentials gatewaySelector GatewaySelector alias Alias Property Type Description credentials DeviceCredentials A JSON object containing arbritrary status information attached to a device. Type: Map of objects Property Type Description matchNames List of string Each: The device ID of the device to use as a gateway. Property Type Description role* string reader writer admin Property Type Description creationTimestamp* string (date-time) name* string resourceVersion* string An ID of the current version of this resource. This should be treated as a string and its content should not be interpreted by clients in any way. uid* string A unique ID of the resource. Deleting and re-creating a resource with the same name will still result in a different unique ID. generation* integer deletionTimestamp string (date-time) A marker for soft-deletion. When the resource is deleted, it will first be marked as deleted, by setting the deletion timestamp. Once all finalizers are removed, the resource will actually be deleted. finalizers List of string A list of finalizers. As long as finalizers are present, the resource will not be deleted even if the deletionTimestamp is set. annotations Map of string Arbitrary additional information. labels Map of string Additional labels which can used for searching.Labels are limited in size and format, similar to the Kubernetes labels.Also see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ All of: Metadata password credential. Property Type Description pass* Password A password, either plain or hashed. One of: string Property Type Description plain* string Property Type Description bcrypt* string Property Type Description sha512* string Property Type Description newUser* string Property Type Description newUser* string Property Type Description id* string The ID of the current user.NOTE: This ID may be different to the name of the user. Property Type Description created string (date-time) prefix string Property Type Description key* string prefix* string Property Type Description success* string true All of: Metadata Property Type Description application* string The name of the application the resource is scoped to. Type: integer Example 30 Username and password credentials. Property Type Description user* UserCredential_user The username and password combination. The username and password combination. Property Type Description usename string password Password","title":"Schemas","component":"drogue-cloud","version":"0.1","name":"schemas","url":"/drogue-cloud/0.1/api/schemas.html","titles":[{"text":"Alias","hash":"_alias","id":1},{"text":"App","hash":"_app","id":2},{"text":"ApplicationMembers","hash":"_applicationmembers","id":3},{"text":"ApplicationSpec","hash":"_applicationspec","id":4},{"text":"ApplicationStatus","hash":"_applicationstatus","id":5},{"text":"CertCredential","hash":"_certcredential","id":6},{"text":"CommandName","hash":"_commandname","id":7},{"text":"CommandObject","hash":"_commandobject","id":8},{"text":"Device","hash":"_device","id":9},{"text":"DeviceCredentials","hash":"_devicecredentials","id":10},{"text":"DeviceSpec","hash":"_devicespec","id":11},{"text":"DeviceSpec_credentials","hash":"_devicespec_credentials","id":12},{"text":"DeviceStatus","hash":"_devicestatus","id":13},{"text":"GatewaySelector","hash":"_gatewayselector","id":14},{"text":"MemberEntry","hash":"_memberentry","id":15},{"text":"Metadata","hash":"_metadata","id":16},{"text":"NonScopedMetadata","hash":"_nonscopedmetadata","id":17},{"text":"PassCredential","hash":"_passcredential","id":18},{"text":"Password","hash":"_password","id":19},{"text":"RequestBodyApiAdminV1alpha1AppsApplicationTransferOwnershipPutApplicationJson","hash":"_requestbodyapiadminv1alpha1appsapplicationtransferownershipputapplicationjson","id":20},{"text":"ResponseApiAdminV1alpha1AppsApplicationTransferOwnershipGet200ApplicationJson","hash":"_responseapiadminv1alpha1appsapplicationtransferownershipget200applicationjson","id":21},{"text":"ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson","hash":"_responseapiadminv1alpha1userwhoamiget200applicationjson","id":22},{"text":"ResponseApiTokensV1alpha1Get200ApplicationJsonItems","hash":"_responseapitokensv1alpha1get200applicationjsonitems","id":23},{"text":"ResponseApiTokensV1alpha1Post200ApplicationJson","hash":"_responseapitokensv1alpha1post200applicationjson","id":24},{"text":"ResponseWellKnownDrogueVersionGet200ApplicationJson","hash":"_responsewellknowndrogueversionget200applicationjson","id":25},{"text":"ScopedMetadata","hash":"_scopedmetadata","id":26},{"text":"Timeout","hash":"_timeout","id":27},{"text":"UserCredential","hash":"_usercredential","id":28},{"text":"UserCredential_user","hash":"_usercredential_user","id":29}]},"297":{"id":297,"text":"This describes the Drogue IoT cloud management API. It is intended to be used to manage and configure cloud side aspects of Drogue IoT cloud.For device-facing endpoints, see the different protocol endpoints documentation.","title":"Drogue Cloud API 0.8","component":"drogue-cloud","version":"0.8","name":"index","url":"/drogue-cloud/0.8/api/index.html","titles":[]},"298":{"id":298,"text":"Manage personal access tokens to authenticate with drogue cloud. List access tokens for this user. Code Description 200 All access tokens for this user. application/json List of ResponseApiTokensV1alpha1Get200ApplicationJsonItems Create a new access tokens for this user. Code Description 200 A new access token was created. application/json ResponseApiTokensV1alpha1Post200ApplicationJson Delete an access token by prefix. Name Location Type Description prefix* path string The prefix of the access token to delete. Code Description 204 Successfully deleted the token. If the access token didn't exist, still 204 will be returned. Manage application and devices in the registry. Return all the applications the user has access to Name Location Type Description labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of applications. 401 Unauthorized. create new application. The data section of the application to add Content Type Description application/json App Code Description 201 If the application is created 409 If the application id is already used. Return application details. Name Location Type Description appId* path string The Application ID. Code Description 200 The data of the application application/json App 404 If the requested application does not exist or if the user has no access to it. update existing app Name Location Type Description appId* path string The Application ID. The data of the application to update Content Type Description application/json App Code Description 204 If the application is updated 404 If the requested application does not exist or if the user has no access to it. Delete existing application Name Location Type Description appId* path string The Application ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the application is deleted 404 If the requested application does not exist or if the user has not access to it. FUTURE USE: Patch existing app Name Location Type Description appId* path string The Application ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json #/components/schema/Patch Code Description 204 If the app is updated 404 If requested apps do not exits or if the user has not access to them. Return all the devices of the application. Name Location Type Description appId* path string The Application ID. labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of devices. 401 Unauthorized. Create a new device. Name Location Type Description appId* path string The Application ID. The device object to add. Content Type Description application/json Device Code Description 201 If the device is created. 409 If the device id is already used. Return device details. Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. Code Description 200 The data of the device application/json Device 404 If requested device does not exist or if the user has no access to it. update existing device Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. The data object of the device to update Content Type Description application/json Device Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Delete existing device Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the device is deleted 404 If requested device does not exist or if the user has no access to it. FUTURE USE: Patch existing device Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json Patch Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Manage applications members and authorizations. Retrieve state of the application transfer Name Location Type Description appId* path string The Application ID. Code Description 200 An transfer is pending for this application. application/json ResponseApiAdminV1alpha1AppsAppIdTransferOwnershipGet200ApplicationJson 204 There is no current pending transfer for this application. 404 The application does not exist, or the user does not have access to the information. Initiate the process to transfer the ownership. Name Location Type Description appId* path string The Application ID. Content Type Description application/json RequestBodyApiAdminV1alpha1AppsAppIdTransferOwnershipPutApplicationJson Code Description 202 Transfer process is initiated. 404 If the requested application does not exist or if the user has no access to it. Cancel an ownership transfer. Name Location Type Description appId* path string The Application ID. Code Description 204 The transfer was successfully canceled. 404 The user has no access to the resource. This is also the case, when the transfer was already completed successfully. Accept an application as new owner. Name Location Type Description appId* path string The Application ID. Code Description 204 Ownership is transfered. 404 If the requested application does not exist or if the user has no access to it. Get curretn application members. Name Location Type Description appId* path string The Application ID. Code Description 200 The list of members for this application. application/json ApplicationMembers 404 If the requested application does not exist or if the user has no access to it. Update existing application member list. Name Location Type Description appId* path string The Application ID. The new application member list. Content Type Description application/json ApplicationMembers Code Description 204 The application's member list was updated. 400 The payload format was invalid. 404 If requested application does not exist or if the user has no access to it. 409 In case a resource version was provided in the update, but it did not match the current version of the resource. Manage users Get information about the current user. Code Description 200 Information about the current user. application/json ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson 403 In case the user is not logged in. Send commands to devices and check the results. Send one way commands to devices. Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. command* query CommandName Command to execute Optional payload for the command Content Type Description application/json CommandObject Code Description 202 The command was accepted for processing, but there is no further information if or when the command will be sent to the device. As commands are considered short-lived, command which cannot be sent in the near future will get discarded. 401 Invalid authentication. 404 Device or application not found. 406 Device is not found or disabled. Explicitly wait for commands Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. timeout query Timeout Wait for commands for specified amount of time in seconds. Code Description 200 The response contain a command. application/json CommandObject Command Command to be executed Map of objects Request Request identifier used to correlate response with. string 404 No command available. Send a command result. Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. request query string Request identifier used to correlate response with. status* query string Status code of commands execution. Optional payload for the command response Content Type Description application/json Map of objects Code Description 200 Command result saved. Get information of the system. Get version Code Description 200 Version response application/json ResponseWellKnownDrogueVersionGet200ApplicationJson Get publicly known endpoints Code Description 200 Public endpoints application/json Map of objects","title":"Endpoints","component":"drogue-cloud","version":"0.8","name":"endpoints","url":"/drogue-cloud/0.8/api/endpoints.html","titles":[{"text":"Access Token","hash":"_access_token","id":1},{"text":"GET /api/tokens/v1alpha1","hash":"_get_apitokensv1alpha1","id":2},{"text":"Responses","hash":"_responses","id":3},{"text":"POST /api/tokens/v1alpha1","hash":"_post_apitokensv1alpha1","id":4},{"text":"Responses","hash":"_responses_2","id":5},{"text":"DELETE /api/tokens/v1alpha1/{prefix}","hash":"_delete_apitokensv1alpha1prefix","id":6},{"text":"Parameters","hash":"_parameters","id":7},{"text":"Responses","hash":"_responses_3","id":8},{"text":"Registry","hash":"_registry","id":9},{"text":"GET /api/registry/v1alpha1/apps","hash":"_get_apiregistryv1alpha1apps","id":10},{"text":"Parameters","hash":"_parameters_2","id":11},{"text":"Responses","hash":"_responses_4","id":12},{"text":"POST /api/registry/v1alpha1/apps","hash":"_post_apiregistryv1alpha1apps","id":13},{"text":"Request","hash":"_request","id":14},{"text":"Responses","hash":"_responses_5","id":15},{"text":"GET /api/registry/v1alpha1/apps/{appId}","hash":"_get_apiregistryv1alpha1appsappid","id":16},{"text":"Parameters","hash":"_parameters_3","id":17},{"text":"Responses","hash":"_responses_6","id":18},{"text":"PUT /api/registry/v1alpha1/apps/{appId}","hash":"_put_apiregistryv1alpha1appsappid","id":19},{"text":"Parameters","hash":"_parameters_4","id":20},{"text":"Request","hash":"_request_2","id":21},{"text":"Responses","hash":"_responses_7","id":22},{"text":"DELETE /api/registry/v1alpha1/apps/{appId}","hash":"_delete_apiregistryv1alpha1appsappid","id":23},{"text":"Parameters","hash":"_parameters_5","id":24},{"text":"Responses","hash":"_responses_8","id":25},{"text":"PATCH /api/registry/v1alpha1/apps/{appId}","hash":"_patch_apiregistryv1alpha1appsappid","id":26},{"text":"Parameters","hash":"_parameters_6","id":27},{"text":"Request","hash":"_request_3","id":28},{"text":"Responses","hash":"_responses_9","id":29},{"text":"GET /api/registry/v1alpha1/apps/{appId}/devices","hash":"_get_apiregistryv1alpha1appsappiddevices","id":30},{"text":"Parameters","hash":"_parameters_7","id":31},{"text":"Responses","hash":"_responses_10","id":32},{"text":"POST /api/registry/v1alpha1/apps/{appId}/devices","hash":"_post_apiregistryv1alpha1appsappiddevices","id":33},{"text":"Parameters","hash":"_parameters_8","id":34},{"text":"Request","hash":"_request_4","id":35},{"text":"Responses","hash":"_responses_11","id":36},{"text":"GET /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_get_apiregistryv1alpha1appsappiddevicesdeviceid","id":37},{"text":"Parameters","hash":"_parameters_9","id":38},{"text":"Responses","hash":"_responses_12","id":39},{"text":"PUT /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_put_apiregistryv1alpha1appsappiddevicesdeviceid","id":40},{"text":"Parameters","hash":"_parameters_10","id":41},{"text":"Request","hash":"_request_5","id":42},{"text":"Responses","hash":"_responses_13","id":43},{"text":"DELETE /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_delete_apiregistryv1alpha1appsappiddevicesdeviceid","id":44},{"text":"Parameters","hash":"_parameters_11","id":45},{"text":"Responses","hash":"_responses_14","id":46},{"text":"PATCH /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_patch_apiregistryv1alpha1appsappiddevicesdeviceid","id":47},{"text":"Parameters","hash":"_parameters_12","id":48},{"text":"Request","hash":"_request_6","id":49},{"text":"Responses","hash":"_responses_15","id":50},{"text":"Application administration","hash":"_application_administration","id":51},{"text":"GET /api/admin/v1alpha1/apps/{appId}/transfer-ownership","hash":"_get_apiadminv1alpha1appsappidtransfer_ownership","id":52},{"text":"Parameters","hash":"_parameters_13","id":53},{"text":"Responses","hash":"_responses_16","id":54},{"text":"PUT /api/admin/v1alpha1/apps/{appId}/transfer-ownership","hash":"_put_apiadminv1alpha1appsappidtransfer_ownership","id":55},{"text":"Parameters","hash":"_parameters_14","id":56},{"text":"Request","hash":"_request_7","id":57},{"text":"Responses","hash":"_responses_17","id":58},{"text":"DELETE /api/admin/v1alpha1/apps/{appId}/transfer-ownership","hash":"_delete_apiadminv1alpha1appsappidtransfer_ownership","id":59},{"text":"Parameters","hash":"_parameters_15","id":60},{"text":"Responses","hash":"_responses_18","id":61},{"text":"PUT /api/admin/v1alpha1/apps/{appId}/accept-ownership","hash":"_put_apiadminv1alpha1appsappidaccept_ownership","id":62},{"text":"Parameters","hash":"_parameters_16","id":63},{"text":"Responses","hash":"_responses_19","id":64},{"text":"GET /api/admin/v1alpha1/apps/{appId}/members","hash":"_get_apiadminv1alpha1appsappidmembers","id":65},{"text":"Parameters","hash":"_parameters_17","id":66},{"text":"Responses","hash":"_responses_20","id":67},{"text":"PUT /api/admin/v1alpha1/apps/{appId}/members","hash":"_put_apiadminv1alpha1appsappidmembers","id":68},{"text":"Parameters","hash":"_parameters_18","id":69},{"text":"Request","hash":"_request_8","id":70},{"text":"Responses","hash":"_responses_21","id":71},{"text":"User administration","hash":"_user_administration","id":72},{"text":"GET /api/admin/v1alpha1/user/whoami","hash":"_get_apiadminv1alpha1userwhoami","id":73},{"text":"Responses","hash":"_responses_22","id":74},{"text":"Command & Control","hash":"_command_control","id":75},{"text":"POST /api/command/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_post_apicommandv1alpha1appsappiddevicesdeviceid","id":76},{"text":"Parameters","hash":"_parameters_19","id":77},{"text":"Request","hash":"_request_9","id":78},{"text":"Responses","hash":"_responses_23","id":79},{"text":"GET /api/command/v1alpha1/inbox/apps/{appId}/devices/{deviceId}","hash":"_get_apicommandv1alpha1inboxappsappiddevicesdeviceid","id":80},{"text":"Parameters","hash":"_parameters_20","id":81},{"text":"Responses","hash":"_responses_24","id":82},{"text":"Headers","hash":"_headers","id":83},{"text":"POST /api/command/v1alpha1/outbox/apps/{appId}/devices/{deviceId}","hash":"_post_apicommandv1alpha1outboxappsappiddevicesdeviceid","id":84},{"text":"Parameters","hash":"_parameters_21","id":85},{"text":"Request","hash":"_request_10","id":86},{"text":"Responses","hash":"_responses_25","id":87},{"text":"System information","hash":"_system_information","id":88},{"text":"GET /.well-known/drogue-version","hash":"_get_well_knowndrogue_version","id":89},{"text":"Responses","hash":"_responses_26","id":90},{"text":"GET /.well-known/drogue-endpoints","hash":"_get_well_knowndrogue_endpoints","id":91},{"text":"Responses","hash":"_responses_27","id":92}]},"299":{"id":299,"text":"Property Type Description aliases List of string A list of alternates names that the device can authenticate with. Must conform to UTF-8. Property Type Description metadata NonScopedMetadata spec ApplicationSpec status ApplicationStatus Property Type Description resourceVersion string The version of the resource. When setting a new member list, this value is optional. But if present, the application will only be updated if the resource version matches. Otherwise it will return a \"Conflict\". members* Map of MemberEntry Example { \"resourceVersion\": \"ced63698-a0da-11eb-97e8-d45d6455d2cc\", \"members\": { \"d84eb308-a0da-11eb-9e90-d45d6455d2cc\": { \"role\": \"admin\" }, \"03e32c1a-a0db-11eb-9e9b-d45d6455d2cc\": { \"role\": \"manager\" }, \"0a111dfe-a0db-11eb-a953-d45d6455d2cc\": { \"role\": \"reader\" } } } A JSON object containing arbritrary data attached to an application. Type: Map of objects A JSON object containing arbritrary status information attached to an application. Type: Map of objects The public key of the device X509 certificate. Property Type Description cert* string The name of the command. Type: string Example \"set-value\" Additional command payload. Type: Map of objects Example { \"set-temp\": 21, \"set-light-color\": \"FDF4DC\" } Property Type Description metadata ScopedMetadata spec DeviceSpec status DeviceStatus Type: List of One of: UserCredential PassCredential CertCredential A JSON object containing arbritrary data attached to a device. Property Type Description credentials DeviceSpec_credentials gatewaySelector GatewaySelector alias Alias Property Type Description credentials DeviceCredentials A JSON object containing arbritrary status information attached to a device. Type: Map of objects Property Type Description matchNames List of string Each: The device ID of the device to use as a gateway. Property Type Description role* string reader writer admin Property Type Description creationTimestamp* string (date-time) name* string resourceVersion* string An ID of the current version of this resource. This should be treated as a string and its content should not be interpreted by clients in any way. uid* string A unique ID of the resource. Deleting and re-creating a resource with the same name will still result in a different unique ID. generation* integer deletionTimestamp string (date-time) A marker for soft-deletion. When the resource is deleted, it will first be marked as deleted, by setting the deletion timestamp. Once all finalizers are removed, the resource will actually be deleted. finalizers List of string A list of finalizers. As long as finalizers are present, the resource will not be deleted even if the deletionTimestamp is set. annotations Map of string Arbitrary additional information. labels Map of string Additional labels which can used for searching.Labels are limited in size and format, similar to the Kubernetes labels.Also see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ All of: Metadata password credential. Property Type Description pass* Password A password, either plain or hashed. One of: string Property Type Description plain* string Property Type Description bcrypt* string Property Type Description sha512* string Property Type Description newUser* string Property Type Description newUser* string Property Type Description id* string The ID of the current user.NOTE: This ID may be different to the name of the user. Property Type Description created string (date-time) prefix string Property Type Description key* string prefix* string Property Type Description success* string true All of: Metadata Property Type Description application* string The name of the application the resource is scoped to. Type: integer Example 30 Username and password credentials. Property Type Description user* UserCredential_user The username and password combination. The username and password combination. Property Type Description usename string password Password","title":"Schemas","component":"drogue-cloud","version":"0.8","name":"schemas","url":"/drogue-cloud/0.8/api/schemas.html","titles":[{"text":"Alias","hash":"_alias","id":1},{"text":"App","hash":"_app","id":2},{"text":"ApplicationMembers","hash":"_applicationmembers","id":3},{"text":"ApplicationSpec","hash":"_applicationspec","id":4},{"text":"ApplicationStatus","hash":"_applicationstatus","id":5},{"text":"CertCredential","hash":"_certcredential","id":6},{"text":"CommandName","hash":"_commandname","id":7},{"text":"CommandObject","hash":"_commandobject","id":8},{"text":"Device","hash":"_device","id":9},{"text":"DeviceCredentials","hash":"_devicecredentials","id":10},{"text":"DeviceSpec","hash":"_devicespec","id":11},{"text":"DeviceSpec_credentials","hash":"_devicespec_credentials","id":12},{"text":"DeviceStatus","hash":"_devicestatus","id":13},{"text":"GatewaySelector","hash":"_gatewayselector","id":14},{"text":"MemberEntry","hash":"_memberentry","id":15},{"text":"Metadata","hash":"_metadata","id":16},{"text":"NonScopedMetadata","hash":"_nonscopedmetadata","id":17},{"text":"PassCredential","hash":"_passcredential","id":18},{"text":"Password","hash":"_password","id":19},{"text":"RequestBodyApiAdminV1alpha1AppsAppIdTransferOwnershipPutApplicationJson","hash":"_requestbodyapiadminv1alpha1appsappidtransferownershipputapplicationjson","id":20},{"text":"ResponseApiAdminV1alpha1AppsAppIdTransferOwnershipGet200ApplicationJson","hash":"_responseapiadminv1alpha1appsappidtransferownershipget200applicationjson","id":21},{"text":"ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson","hash":"_responseapiadminv1alpha1userwhoamiget200applicationjson","id":22},{"text":"ResponseApiTokensV1alpha1Get200ApplicationJsonItems","hash":"_responseapitokensv1alpha1get200applicationjsonitems","id":23},{"text":"ResponseApiTokensV1alpha1Post200ApplicationJson","hash":"_responseapitokensv1alpha1post200applicationjson","id":24},{"text":"ResponseWellKnownDrogueVersionGet200ApplicationJson","hash":"_responsewellknowndrogueversionget200applicationjson","id":25},{"text":"ScopedMetadata","hash":"_scopedmetadata","id":26},{"text":"Timeout","hash":"_timeout","id":27},{"text":"UserCredential","hash":"_usercredential","id":28},{"text":"UserCredential_user","hash":"_usercredential_user","id":29}]},"300":{"id":300,"text":"This describes the Drogue IoT cloud management API. It is intended to be used to manage and configure cloud side aspects of Drogue IoT cloud.For device-facing endpoints, see the different protocol endpoints documentation.","title":"Drogue Cloud API 0.9","component":"drogue-cloud","version":"0.9","name":"index","url":"/drogue-cloud/0.9/api/index.html","titles":[]},"301":{"id":301,"text":"Manage personal access tokens to authenticate with drogue cloud. List access tokens for this user. Code Description 200 All access tokens for this user. application/json List of ResponseApiTokensV1alpha1Get200ApplicationJsonItems Create a new access tokens for this user. Name Location Type Description description query string A description to attach to the token entry. Code Description 200 A new access token was created. application/json ResponseApiTokensV1alpha1Post200ApplicationJson Delete an access token by prefix. Name Location Type Description prefix* path string The prefix of the access token to delete. Code Description 204 Successfully deleted the token. If the access token didn't exist, still 204 will be returned. Manage application and devices in the registry. Return all the applications the user has access to Name Location Type Description labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of applications. 401 Unauthorized. create new application. The data section of the application to add Content Type Description application/json App Code Description 201 If the application is created 409 If the application id is already used. Return application details. Name Location Type Description appId* path string The Application ID. Code Description 200 The data of the application application/json App 404 If the requested application does not exist or if the user has no access to it. update existing app Name Location Type Description appId* path string The Application ID. The data of the application to update Content Type Description application/json App Code Description 204 If the application is updated 404 If the requested application does not exist or if the user has no access to it. Delete existing application Name Location Type Description appId* path string The Application ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the application is deleted 404 If the requested application does not exist or if the user has not access to it. FUTURE USE: Patch existing app Name Location Type Description appId* path string The Application ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json #/components/schema/Patch Code Description 204 If the app is updated 404 If requested apps do not exits or if the user has not access to them. Return all the devices of the application. Name Location Type Description appId* path string The Application ID. labels query List of string Labels selectors.Labels are arbitrary : pairs that can be associated with a resource. A selector matches labels values using equality, inequality and filtering. It can check the existence of a label key, ignoring the value. To summarize, there are 6 available operations and their associated symbol : equality: = inequality: != filtering: in negative-filetering: notin existence: non-existence: ! For example : zone=europe will match a label where the value for key zone is equal to europe. zone!=europe will match all the labels where the value for key zone is not equal to europe. country in (france, germany) will match all the labels where the value for key country is equal to france or germany. country notin (spain, italy) will match all the labels where the value for key country is not equal to spain or italy. power will match all the labels where the key power exist, regardless of the value. !power will match all the labels where the key power do not exist.Multiple selectors can be submited, separated with a coma. A coma implies a AND operation between selectors. This is modeled after the kubernetes labels. limit query integer The maximum number of elements to return. offset query integer The number of elements to skip when returning. The elements will by ordered \"by name\". Code Description 200 A list of devices. 401 Unauthorized. Create a new device. Name Location Type Description appId* path string The Application ID. The device object to add. Content Type Description application/json Device Code Description 201 If the device is created. 409 If the device id is already used. Return device details. Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. Code Description 200 The data of the device application/json Device 404 If requested device does not exist or if the user has no access to it. update existing device Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. The data object of the device to update Content Type Description application/json Device Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Delete existing device Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. Code Description 204 If the device is deleted 404 If requested device does not exist or if the user has no access to it. FUTURE USE: Patch existing device Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. uid query string The expected UID of the entry, for optimistic locking. resourceVersion query string The resource version of the existing data, for optimistic locking. The JSON patch to apply Content Type Description application/json Patch Code Description 204 If the device is updated 404 If requested device does not exist or if the user has no access to it. Manage applications members and authorizations. Retrieve state of the application transfer Name Location Type Description appId* path string The Application ID. Code Description 200 An transfer is pending for this application. application/json ResponseApiAdminV1alpha1AppsAppIdTransferOwnershipGet200ApplicationJson 204 There is no current pending transfer for this application. 404 The application does not exist, or the user does not have access to the information. Initiate the process to transfer the ownership. Name Location Type Description appId* path string The Application ID. Content Type Description application/json RequestBodyApiAdminV1alpha1AppsAppIdTransferOwnershipPutApplicationJson Code Description 202 Transfer process is initiated. 404 If the requested application does not exist or if the user has no access to it. Cancel an ownership transfer. Name Location Type Description appId* path string The Application ID. Code Description 204 The transfer was successfully canceled. 404 The user has no access to the resource. This is also the case, when the transfer was already completed successfully. Accept an application as new owner. Name Location Type Description appId* path string The Application ID. Code Description 204 Ownership is transfered. 404 If the requested application does not exist or if the user has no access to it. Get curretn application members. Name Location Type Description appId* path string The Application ID. Code Description 200 The list of members for this application. application/json ApplicationMembers 404 If the requested application does not exist or if the user has no access to it. Update existing application member list. Name Location Type Description appId* path string The Application ID. The new application member list. Content Type Description application/json ApplicationMembers Code Description 204 The application's member list was updated. 400 The payload format was invalid. 404 If requested application does not exist or if the user has no access to it. 409 In case a resource version was provided in the update, but it did not match the current version of the resource. Manage users Get information about the current user. Code Description 200 Information about the current user. application/json ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson 403 In case the user is not logged in. Send commands to devices and check the results. Send one way commands to devices. Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. command* query CommandName Command to execute Optional payload for the command Content Type Description application/json CommandObject Code Description 202 The command was accepted for processing, but there is no further information if or when the command will be sent to the device. As commands are considered short-lived, command which cannot be sent in the near future will get discarded. 401 Invalid authentication. 404 Device or application not found. 406 Device is not found or disabled. Explicitly wait for commands Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. timeout query Timeout Wait for commands for specified amount of time in seconds. Code Description 200 The response contain a command. application/json CommandObject Command Command to be executed Map of objects Request Request identifier used to correlate response with. string 404 No command available. Send a command result. Name Location Type Description appId* path string The Application ID. deviceId* path string The device ID. request query string Request identifier used to correlate response with. status* query string Status code of commands execution. Optional payload for the command response Content Type Description application/json Map of objects Code Description 200 Command result saved. Get information of the system. Get version Code Description 200 Version response application/json ResponseWellKnownDrogueVersionGet200ApplicationJson Get publicly known endpoints Code Description 200 Public endpoints application/json Map of objects","title":"Endpoints","component":"drogue-cloud","version":"0.9","name":"endpoints","url":"/drogue-cloud/0.9/api/endpoints.html","titles":[{"text":"Access Token","hash":"_access_token","id":1},{"text":"GET /api/tokens/v1alpha1","hash":"_get_apitokensv1alpha1","id":2},{"text":"Responses","hash":"_responses","id":3},{"text":"POST /api/tokens/v1alpha1","hash":"_post_apitokensv1alpha1","id":4},{"text":"Parameters","hash":"_parameters","id":5},{"text":"Responses","hash":"_responses_2","id":6},{"text":"DELETE /api/tokens/v1alpha1/{prefix}","hash":"_delete_apitokensv1alpha1prefix","id":7},{"text":"Parameters","hash":"_parameters_2","id":8},{"text":"Responses","hash":"_responses_3","id":9},{"text":"Registry","hash":"_registry","id":10},{"text":"GET /api/registry/v1alpha1/apps","hash":"_get_apiregistryv1alpha1apps","id":11},{"text":"Parameters","hash":"_parameters_3","id":12},{"text":"Responses","hash":"_responses_4","id":13},{"text":"POST /api/registry/v1alpha1/apps","hash":"_post_apiregistryv1alpha1apps","id":14},{"text":"Request","hash":"_request","id":15},{"text":"Responses","hash":"_responses_5","id":16},{"text":"GET /api/registry/v1alpha1/apps/{appId}","hash":"_get_apiregistryv1alpha1appsappid","id":17},{"text":"Parameters","hash":"_parameters_4","id":18},{"text":"Responses","hash":"_responses_6","id":19},{"text":"PUT /api/registry/v1alpha1/apps/{appId}","hash":"_put_apiregistryv1alpha1appsappid","id":20},{"text":"Parameters","hash":"_parameters_5","id":21},{"text":"Request","hash":"_request_2","id":22},{"text":"Responses","hash":"_responses_7","id":23},{"text":"DELETE /api/registry/v1alpha1/apps/{appId}","hash":"_delete_apiregistryv1alpha1appsappid","id":24},{"text":"Parameters","hash":"_parameters_6","id":25},{"text":"Responses","hash":"_responses_8","id":26},{"text":"PATCH /api/registry/v1alpha1/apps/{appId}","hash":"_patch_apiregistryv1alpha1appsappid","id":27},{"text":"Parameters","hash":"_parameters_7","id":28},{"text":"Request","hash":"_request_3","id":29},{"text":"Responses","hash":"_responses_9","id":30},{"text":"GET /api/registry/v1alpha1/apps/{appId}/devices","hash":"_get_apiregistryv1alpha1appsappiddevices","id":31},{"text":"Parameters","hash":"_parameters_8","id":32},{"text":"Responses","hash":"_responses_10","id":33},{"text":"POST /api/registry/v1alpha1/apps/{appId}/devices","hash":"_post_apiregistryv1alpha1appsappiddevices","id":34},{"text":"Parameters","hash":"_parameters_9","id":35},{"text":"Request","hash":"_request_4","id":36},{"text":"Responses","hash":"_responses_11","id":37},{"text":"GET /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_get_apiregistryv1alpha1appsappiddevicesdeviceid","id":38},{"text":"Parameters","hash":"_parameters_10","id":39},{"text":"Responses","hash":"_responses_12","id":40},{"text":"PUT /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_put_apiregistryv1alpha1appsappiddevicesdeviceid","id":41},{"text":"Parameters","hash":"_parameters_11","id":42},{"text":"Request","hash":"_request_5","id":43},{"text":"Responses","hash":"_responses_13","id":44},{"text":"DELETE /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_delete_apiregistryv1alpha1appsappiddevicesdeviceid","id":45},{"text":"Parameters","hash":"_parameters_12","id":46},{"text":"Responses","hash":"_responses_14","id":47},{"text":"PATCH /api/registry/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_patch_apiregistryv1alpha1appsappiddevicesdeviceid","id":48},{"text":"Parameters","hash":"_parameters_13","id":49},{"text":"Request","hash":"_request_6","id":50},{"text":"Responses","hash":"_responses_15","id":51},{"text":"Application administration","hash":"_application_administration","id":52},{"text":"GET /api/admin/v1alpha1/apps/{appId}/transfer-ownership","hash":"_get_apiadminv1alpha1appsappidtransfer_ownership","id":53},{"text":"Parameters","hash":"_parameters_14","id":54},{"text":"Responses","hash":"_responses_16","id":55},{"text":"PUT /api/admin/v1alpha1/apps/{appId}/transfer-ownership","hash":"_put_apiadminv1alpha1appsappidtransfer_ownership","id":56},{"text":"Parameters","hash":"_parameters_15","id":57},{"text":"Request","hash":"_request_7","id":58},{"text":"Responses","hash":"_responses_17","id":59},{"text":"DELETE /api/admin/v1alpha1/apps/{appId}/transfer-ownership","hash":"_delete_apiadminv1alpha1appsappidtransfer_ownership","id":60},{"text":"Parameters","hash":"_parameters_16","id":61},{"text":"Responses","hash":"_responses_18","id":62},{"text":"PUT /api/admin/v1alpha1/apps/{appId}/accept-ownership","hash":"_put_apiadminv1alpha1appsappidaccept_ownership","id":63},{"text":"Parameters","hash":"_parameters_17","id":64},{"text":"Responses","hash":"_responses_19","id":65},{"text":"GET /api/admin/v1alpha1/apps/{appId}/members","hash":"_get_apiadminv1alpha1appsappidmembers","id":66},{"text":"Parameters","hash":"_parameters_18","id":67},{"text":"Responses","hash":"_responses_20","id":68},{"text":"PUT /api/admin/v1alpha1/apps/{appId}/members","hash":"_put_apiadminv1alpha1appsappidmembers","id":69},{"text":"Parameters","hash":"_parameters_19","id":70},{"text":"Request","hash":"_request_8","id":71},{"text":"Responses","hash":"_responses_21","id":72},{"text":"User administration","hash":"_user_administration","id":73},{"text":"GET /api/admin/v1alpha1/user/whoami","hash":"_get_apiadminv1alpha1userwhoami","id":74},{"text":"Responses","hash":"_responses_22","id":75},{"text":"Command & Control","hash":"_command_control","id":76},{"text":"POST /api/command/v1alpha1/apps/{appId}/devices/{deviceId}","hash":"_post_apicommandv1alpha1appsappiddevicesdeviceid","id":77},{"text":"Parameters","hash":"_parameters_20","id":78},{"text":"Request","hash":"_request_9","id":79},{"text":"Responses","hash":"_responses_23","id":80},{"text":"GET /api/command/v1alpha1/inbox/apps/{appId}/devices/{deviceId}","hash":"_get_apicommandv1alpha1inboxappsappiddevicesdeviceid","id":81},{"text":"Parameters","hash":"_parameters_21","id":82},{"text":"Responses","hash":"_responses_24","id":83},{"text":"Headers","hash":"_headers","id":84},{"text":"POST /api/command/v1alpha1/outbox/apps/{appId}/devices/{deviceId}","hash":"_post_apicommandv1alpha1outboxappsappiddevicesdeviceid","id":85},{"text":"Parameters","hash":"_parameters_22","id":86},{"text":"Request","hash":"_request_10","id":87},{"text":"Responses","hash":"_responses_25","id":88},{"text":"System information","hash":"_system_information","id":89},{"text":"GET /.well-known/drogue-version","hash":"_get_well_knowndrogue_version","id":90},{"text":"Responses","hash":"_responses_26","id":91},{"text":"GET /.well-known/drogue-endpoints","hash":"_get_well_knowndrogue_endpoints","id":92},{"text":"Responses","hash":"_responses_27","id":93}]},"302":{"id":302,"text":"Property Type Description aliases List of string A list of alternates names that the device can authenticate with. Must conform to UTF-8. Property Type Description metadata NonScopedMetadata spec ApplicationSpec status ApplicationStatus Property Type Description resourceVersion string The version of the resource. When setting a new member list, this value is optional. But if present, the application will only be updated if the resource version matches. Otherwise it will return a \"Conflict\". members* Map of MemberEntry Example { \"resourceVersion\": \"ced63698-a0da-11eb-97e8-d45d6455d2cc\", \"members\": { \"d84eb308-a0da-11eb-9e90-d45d6455d2cc\": { \"role\": \"admin\" }, \"03e32c1a-a0db-11eb-9e9b-d45d6455d2cc\": { \"role\": \"manager\" }, \"0a111dfe-a0db-11eb-a953-d45d6455d2cc\": { \"role\": \"reader\" } } } A JSON object containing arbritrary data attached to an application. Type: Map of objects A JSON object containing arbritrary status information attached to an application. Type: Map of objects The public key of the device X509 certificate. Property Type Description cert* string The name of the command. Type: string Example \"set-value\" Additional command payload. Type: Map of objects Example { \"set-temp\": 21, \"set-light-color\": \"FDF4DC\" } Property Type Description metadata ScopedMetadata spec DeviceSpec status DeviceStatus Type: List of One of: UserCredential PassCredential CertCredential A JSON object containing arbritrary data attached to a device. Property Type Description credentials DeviceSpec_credentials gatewaySelector GatewaySelector alias Alias Property Type Description credentials DeviceCredentials A JSON object containing arbritrary status information attached to a device. Type: Map of objects Property Type Description matchNames List of string Each: The device ID of the device to use as a gateway. Property Type Description role* string reader writer admin Property Type Description creationTimestamp* string (date-time) name* string resourceVersion* string An ID of the current version of this resource. This should be treated as a string and its content should not be interpreted by clients in any way. uid* string A unique ID of the resource. Deleting and re-creating a resource with the same name will still result in a different unique ID. generation* integer deletionTimestamp string (date-time) A marker for soft-deletion. When the resource is deleted, it will first be marked as deleted, by setting the deletion timestamp. Once all finalizers are removed, the resource will actually be deleted. finalizers List of string A list of finalizers. As long as finalizers are present, the resource will not be deleted even if the deletionTimestamp is set. annotations Map of string Arbitrary additional information. labels Map of string Additional labels which can used for searching.Labels are limited in size and format, similar to the Kubernetes labels.Also see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ All of: Metadata password credential. Property Type Description pass* Password A password, either plain or hashed. One of: string Property Type Description plain* string Property Type Description bcrypt* string Property Type Description sha512* string Property Type Description newUser* string Property Type Description newUser* string Property Type Description id* string The ID of the current user.NOTE: This ID may be different to the name of the user. Property Type Description created string (date-time) prefix string Property Type Description key* string prefix* string Property Type Description success* string true All of: Metadata Property Type Description application* string The name of the application the resource is scoped to. Type: integer Example 30 Username and password credentials. Property Type Description user* UserCredential_user The username and password combination. The username and password combination. Property Type Description usename string password Password","title":"Schemas","component":"drogue-cloud","version":"0.9","name":"schemas","url":"/drogue-cloud/0.9/api/schemas.html","titles":[{"text":"Alias","hash":"_alias","id":1},{"text":"App","hash":"_app","id":2},{"text":"ApplicationMembers","hash":"_applicationmembers","id":3},{"text":"ApplicationSpec","hash":"_applicationspec","id":4},{"text":"ApplicationStatus","hash":"_applicationstatus","id":5},{"text":"CertCredential","hash":"_certcredential","id":6},{"text":"CommandName","hash":"_commandname","id":7},{"text":"CommandObject","hash":"_commandobject","id":8},{"text":"Device","hash":"_device","id":9},{"text":"DeviceCredentials","hash":"_devicecredentials","id":10},{"text":"DeviceSpec","hash":"_devicespec","id":11},{"text":"DeviceSpec_credentials","hash":"_devicespec_credentials","id":12},{"text":"DeviceStatus","hash":"_devicestatus","id":13},{"text":"GatewaySelector","hash":"_gatewayselector","id":14},{"text":"MemberEntry","hash":"_memberentry","id":15},{"text":"Metadata","hash":"_metadata","id":16},{"text":"NonScopedMetadata","hash":"_nonscopedmetadata","id":17},{"text":"PassCredential","hash":"_passcredential","id":18},{"text":"Password","hash":"_password","id":19},{"text":"RequestBodyApiAdminV1alpha1AppsAppIdTransferOwnershipPutApplicationJson","hash":"_requestbodyapiadminv1alpha1appsappidtransferownershipputapplicationjson","id":20},{"text":"ResponseApiAdminV1alpha1AppsAppIdTransferOwnershipGet200ApplicationJson","hash":"_responseapiadminv1alpha1appsappidtransferownershipget200applicationjson","id":21},{"text":"ResponseApiAdminV1alpha1UserWhoamiGet200ApplicationJson","hash":"_responseapiadminv1alpha1userwhoamiget200applicationjson","id":22},{"text":"ResponseApiTokensV1alpha1Get200ApplicationJsonItems","hash":"_responseapitokensv1alpha1get200applicationjsonitems","id":23},{"text":"ResponseApiTokensV1alpha1Post200ApplicationJson","hash":"_responseapitokensv1alpha1post200applicationjson","id":24},{"text":"ResponseWellKnownDrogueVersionGet200ApplicationJson","hash":"_responsewellknowndrogueversionget200applicationjson","id":25},{"text":"ScopedMetadata","hash":"_scopedmetadata","id":26},{"text":"Timeout","hash":"_timeout","id":27},{"text":"UserCredential","hash":"_usercredential","id":28},{"text":"UserCredential_user","hash":"_usercredential_user","id":29}]},"303":{"id":303,"text":"This describes the Drogue Ajour build management API. It is intended to be used to manage and configure firmware builds.","title":"Drogue Ajour API 0.1","component":"drogue-ajour","version":"dev","name":"index","url":"/drogue-ajour/dev/api/index.html","titles":[]},"304":{"id":304,"text":"Read firmware builds with Drogue Ajour Return all the builds the user has access to Code Description 200 A list of builds. application/json BuildInfo 401 Unauthorized. Trigger firmware builds with Drogue Ajour Trigger firmware build using the build specification in a specific application. Code Description 200 Build triggered successfully 401 If the user does not have access to trigger builds. 404 If the requested application does not exist or if the user has no access to it. Trigger firmware build using the build specification in a specific device. Code Description 200 Build triggered successfully 401 If the user does not have access to trigger builds. 404 If the requested application does not exist or if the user has no access to it.","title":"Endpoints","component":"drogue-ajour","version":"dev","name":"endpoints","url":"/drogue-ajour/dev/api/endpoints.html","titles":[{"text":"Build","hash":"_build","id":1},{"text":"GET /api/build/v1alpha1","hash":"_get_apibuildv1alpha1","id":2},{"text":"Responses","hash":"_responses","id":3},{"text":"Trigger","hash":"_trigger","id":4},{"text":"POST /api/build/v1alpha1/apps/{application}/trigger","hash":"_post_apibuildv1alpha1appsapplicationtrigger","id":5},{"text":"Responses","hash":"_responses_2","id":6},{"text":"POST /api/build/v1alpha1/apps/{application}/devices/{device}/trigger","hash":"_post_apibuildv1alpha1appsapplicationdevicesdevicetrigger","id":7},{"text":"Responses","hash":"_responses_3","id":8}]},"305":{"id":305,"text":"Property Type Description app* string The application owning this build. device string The device owning this build started string The start time of this build completed string The completion time of this build status string The last known status of this build","title":"Schemas","component":"drogue-ajour","version":"dev","name":"schemas","url":"/drogue-ajour/dev/api/schemas.html","titles":[{"text":"BuildInfo","hash":"_buildinfo","id":1}]}},"components":{},"componentVersions":{"drogue-book/master":{"displayVersion":"master","title":"Drogue IoT","version":"master","name":"drogue-book","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-book/index.html","navigation":[{"items":[{"content":"Drogue Cloud","url":"/drogue-cloud/dev/index.html","urlType":"internal"},{"content":"Drogue Ajour","url":"/drogue-ajour/dev/index.html","urlType":"internal"},{"content":"Drogue Device","url":"/drogue-device/dev/index.html","urlType":"internal"},{"content":"Workshops","url":"/drogue-workshops/index.html","urlType":"internal"}],"root":true,"order":0}]},"drogue-cloud/dev":{"displayVersion":"dev","title":"Drogue Cloud","version":"dev","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/dev/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/dev/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Use Cases","url":"/drogue-cloud/dev/use-cases/index.html","urlType":"internal","items":[{"content":"Environmental Monitoring","url":"/drogue-cloud/dev/use-cases/environmental-monitoring.html","urlType":"internal"},{"content":"Smart Factories","url":"/drogue-cloud/dev/use-cases/smart-factories.html","urlType":"internal"},{"content":"Predictive Maintenance","url":"/drogue-cloud/dev/use-cases/predictive-maintenance.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Introduction","url":"/drogue-cloud/dev/introduction/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/dev/introduction/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/dev/introduction/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/dev/introduction/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/dev/introduction/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/dev/introduction/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/dev/introduction/services.html","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"Deployment","url":"/drogue-cloud/dev/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/dev/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/dev/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/dev/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/dev/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/dev/deployment/development.html","urlType":"internal"},{"content":"Deploying on bare metal","url":"/drogue-cloud/dev/deployment/bare-metal.html","urlType":"internal"},{"content":"Monitoring a deployment","url":"/drogue-cloud/dev/deployment/monitoring.html","urlType":"internal"},{"content":"Tracing","url":"/drogue-cloud/dev/deployment/tracing.html","urlType":"internal"}]}],"root":true,"order":3},{"items":[{"content":"User Guide","url":"/drogue-cloud/dev/user-guide/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/dev/user-guide/index.html","urlType":"internal"},{"content":"Common topics","url":"/drogue-cloud/dev/user-guide/common-concepts.html","urlType":"internal","items":[{"content":"Concepts","url":"/drogue-cloud/dev/user-guide/common-concepts.html","urlType":"internal"},{"content":"Configuration","url":"/drogue-cloud/dev/user-guide/common-configuration.html","urlType":"internal"},{"content":"MQTT over websocket","url":"/drogue-cloud/dev/user-guide/common-mqtt-websocket.html","urlType":"internal"}]},{"content":"Management","url":"/drogue-cloud/dev/user-guide/management.html","urlType":"internal","items":[{"content":"Applications","url":"/drogue-cloud/dev/user-guide/management.html#applications","urlType":"internal","hash":"#applications"},{"content":"Devices","url":"/drogue-cloud/dev/user-guide/management.html#devices","urlType":"internal","hash":"#devices"},{"content":"Application sharing","url":"/drogue-cloud/dev/user-guide/management-app-members.html","urlType":"internal"},{"content":"Event pre-processing","url":"/drogue-cloud/dev/user-guide/management-rules.html","urlType":"internal"},{"content":"MQTT dialects","url":"/drogue-cloud/dev/user-guide/management-mqtt.html","urlType":"internal"}]},{"content":"Endpoints","items":[{"content":"CoAP Endpoint","url":"/drogue-cloud/dev/user-guide/endpoint-coap.html","urlType":"internal"},{"content":"HTTP Endpoint","url":"/drogue-cloud/dev/user-guide/endpoint-http.html","urlType":"internal"},{"content":"MQTT Endpoint","url":"/drogue-cloud/dev/user-guide/endpoint-mqtt.html","urlType":"internal"}]},{"content":"Integrations","url":"/drogue-cloud/dev/user-guide/integration.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/dev/user-guide/integration.html","urlType":"internal"},{"content":"Apache Kafka™ Integration","url":"/drogue-cloud/dev/user-guide/integration-kafka.html","urlType":"internal"},{"content":"HTTP Command Integration","url":"/drogue-cloud/dev/user-guide/integration-command.html","urlType":"internal"},{"content":"Knative Integration","url":"/drogue-cloud/dev/user-guide/integration-knative.html","urlType":"internal"},{"content":"MQTT Integration","url":"/drogue-cloud/dev/user-guide/integration-mqtt.html","urlType":"internal"},{"content":"WebSocket Integration","url":"/drogue-cloud/dev/user-guide/integration-ws.html","urlType":"internal"}]}]}],"root":true,"order":4},{"items":[{"content":"System Integrations","items":[{"content":"The Things Network","items":[{"content":"Overview","url":"/drogue-cloud/dev/ttn/index.html","urlType":"internal"},{"content":"Managing applications","url":"/drogue-cloud/dev/ttn/app.html","urlType":"internal"},{"content":"Managing devices","url":"/drogue-cloud/dev/ttn/device.html","urlType":"internal"}]}]}],"root":true,"order":5},{"items":[{"content":"API","url":"/drogue-cloud/dev/api/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/dev/api/index.html","urlType":"internal"},{"content":"Endpoints","url":"/drogue-cloud/dev/api/endpoints.html","urlType":"internal"},{"content":"Schemas","url":"/drogue-cloud/dev/api/schemas.html","urlType":"internal"}]}],"root":true,"order":6},{"items":[{"content":"Developer Guide","url":"/drogue-cloud/dev/developer-guide/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/dev/developer-guide/index.html","urlType":"internal"}]}],"root":true,"order":7}]},"drogue-cloud/0.9":{"displayVersion":"0.9","title":"Drogue Cloud","version":"0.9","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/0.9/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/0.9/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Introduction","url":"/drogue-cloud/0.9/introduction/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.9/introduction/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/0.9/introduction/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/0.9/introduction/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/0.9/introduction/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/0.9/introduction/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/0.9/introduction/services.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Deployment","url":"/drogue-cloud/0.9/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.9/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/0.9/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/0.9/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/0.9/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/0.9/deployment/development.html","urlType":"internal"},{"content":"Deploying on bare metal","url":"/drogue-cloud/0.9/deployment/bare-metal.html","urlType":"internal"},{"content":"Monitoring a deployment","url":"/drogue-cloud/0.9/deployment/monitoring.html","urlType":"internal"},{"content":"Tracing","url":"/drogue-cloud/0.9/deployment/tracing.html","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"User Guide","url":"/drogue-cloud/0.9/user-guide/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.9/user-guide/index.html","urlType":"internal"},{"content":"Management","url":"/drogue-cloud/0.9/user-guide/management.html","urlType":"internal","items":[{"content":"Applications","url":"/drogue-cloud/0.9/user-guide/management.html#_applications","urlType":"internal","hash":"#_applications"},{"content":"Devices","url":"/drogue-cloud/0.9/user-guide/management.html#devices","urlType":"internal","hash":"#devices"},{"content":"Event pre-processing","url":"/drogue-cloud/0.9/user-guide/management-rules.html","urlType":"internal"},{"content":"MQTT dialects","url":"/drogue-cloud/0.9/user-guide/management-mqtt.html","urlType":"internal"}]},{"content":"Endpoints","items":[{"content":"CoAP Endpoint","url":"/drogue-cloud/0.9/user-guide/endpoint-coap.html","urlType":"internal"},{"content":"HTTP Endpoint","url":"/drogue-cloud/0.9/user-guide/endpoint-http.html","urlType":"internal"},{"content":"MQTT Endpoint","url":"/drogue-cloud/0.9/user-guide/endpoint-mqtt.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Apache Kafka™ Integration","url":"/drogue-cloud/0.9/user-guide/integration-kafka.html","urlType":"internal"},{"content":"HTTP Command Integration","url":"/drogue-cloud/0.9/user-guide/integration-command.html","urlType":"internal"},{"content":"Knative Integration","url":"/drogue-cloud/0.9/user-guide/integration-knative.html","urlType":"internal"},{"content":"MQTT Integration","url":"/drogue-cloud/0.9/user-guide/integration-mqtt.html","urlType":"internal"},{"content":"WebSocket Integration","url":"/drogue-cloud/0.9/user-guide/integration-ws.html","urlType":"internal"}]},{"content":"Common topics","url":"/drogue-cloud/0.9/user-guide/common.html","urlType":"internal","items":[{"content":"Configuration","url":"/drogue-cloud/0.9/user-guide/common.html","urlType":"internal"},{"content":"MQTT over websocket","url":"/drogue-cloud/0.9/user-guide/common-mqtt-websocket.html","urlType":"internal"}]}]}],"root":true,"order":3},{"items":[{"content":"System Integrations","items":[{"content":"The Things Network","items":[{"content":"Overview","url":"/drogue-cloud/0.9/ttn/index.html","urlType":"internal"},{"content":"Managing applications","url":"/drogue-cloud/0.9/ttn/app.html","urlType":"internal"},{"content":"Managing devices","url":"/drogue-cloud/0.9/ttn/device.html","urlType":"internal"}]}]}],"root":true,"order":4},{"items":[{"content":"API","url":"/drogue-cloud/0.9/api/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.9/api/index.html","urlType":"internal"},{"content":"Endpoints","url":"/drogue-cloud/0.9/api/endpoints.html","urlType":"internal"},{"content":"Schemas","url":"/drogue-cloud/0.9/api/schemas.html","urlType":"internal"}]}],"root":true,"order":5}]},"drogue-cloud/0.8":{"displayVersion":"0.8","title":"Drogue Cloud","version":"0.8","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/0.8/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/0.8/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Introduction","url":"/drogue-cloud/0.8/introduction/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.8/introduction/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/0.8/introduction/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/0.8/introduction/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/0.8/introduction/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/0.8/introduction/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/0.8/introduction/services.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Deployment","url":"/drogue-cloud/0.8/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.8/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/0.8/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/0.8/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/0.8/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/0.8/deployment/development.html","urlType":"internal"},{"content":"Deploying on bare metal","url":"/drogue-cloud/0.8/deployment/bare-metal.html","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"User Guide","url":"/drogue-cloud/0.8/user-guide/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.8/user-guide/index.html","urlType":"internal"},{"content":"Management","url":"/drogue-cloud/0.8/user-guide/management.html","urlType":"internal"},{"content":"Endpoints","items":[{"content":"CoAP Endpoint","url":"/drogue-cloud/0.8/user-guide/endpoint-coap.html","urlType":"internal"},{"content":"HTTP Endpoint","url":"/drogue-cloud/0.8/user-guide/endpoint-http.html","urlType":"internal"},{"content":"MQTT Endpoint","url":"/drogue-cloud/0.8/user-guide/endpoint-mqtt.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Apache Kafka™ Integration","url":"/drogue-cloud/0.8/user-guide/integration-kafka.html","urlType":"internal"},{"content":"HTTP Command Integration","url":"/drogue-cloud/0.8/user-guide/integration-command.html","urlType":"internal"},{"content":"MQTT Integration","url":"/drogue-cloud/0.8/user-guide/integration-mqtt.html","urlType":"internal"},{"content":"WebSocket Integration","url":"/drogue-cloud/0.8/user-guide/integration-ws.html","urlType":"internal"}]}]}],"root":true,"order":3},{"items":[{"content":"System Integrations","items":[{"content":"The Things Network","items":[{"content":"Overview","url":"/drogue-cloud/0.8/ttn/index.html","urlType":"internal"},{"content":"Managing applications","url":"/drogue-cloud/0.8/ttn/app.html","urlType":"internal"},{"content":"Managing devices","url":"/drogue-cloud/0.8/ttn/device.html","urlType":"internal"}]}]}],"root":true,"order":4},{"items":[{"content":"API","url":"/drogue-cloud/0.8/api/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.8/api/index.html","urlType":"internal"},{"content":"Endpoints","url":"/drogue-cloud/0.8/api/endpoints.html","urlType":"internal"},{"content":"Schemas","url":"/drogue-cloud/0.8/api/schemas.html","urlType":"internal"}]}],"root":true,"order":5}]},"drogue-cloud/0.7":{"displayVersion":"0.7","title":"Drogue Cloud","version":"0.7","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/0.7/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/0.7/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Introduction","url":"/drogue-cloud/0.7/introduction/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.7/introduction/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/0.7/introduction/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/0.7/introduction/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/0.7/introduction/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/0.7/introduction/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/0.7/introduction/services.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Deployment","url":"/drogue-cloud/0.7/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.7/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/0.7/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/0.7/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/0.7/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/0.7/deployment/development.html","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"User Guide","url":"/drogue-cloud/0.7/user-guide/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.7/user-guide/index.html","urlType":"internal"},{"content":"Management","url":"/drogue-cloud/0.7/user-guide/management.html","urlType":"internal"},{"content":"Endpoints","items":[{"content":"CoAP Endpoint","url":"/drogue-cloud/0.7/user-guide/endpoint-coap.html","urlType":"internal"},{"content":"HTTP Endpoint","url":"/drogue-cloud/0.7/user-guide/endpoint-http.html","urlType":"internal"},{"content":"MQTT Endpoint","url":"/drogue-cloud/0.7/user-guide/endpoint-mqtt.html","urlType":"internal"}]},{"content":"Integrations","items":[{"content":"Apache Kafka™ Integration","url":"/drogue-cloud/0.7/user-guide/integration-kafka.html","urlType":"internal"},{"content":"HTTP Command Integration","url":"/drogue-cloud/0.7/user-guide/integration-command.html","urlType":"internal"},{"content":"MQTT Integration","url":"/drogue-cloud/0.7/user-guide/integration-mqtt.html","urlType":"internal"},{"content":"WebSocket Integration","url":"/drogue-cloud/0.7/user-guide/integration-ws.html","urlType":"internal"}]}]}],"root":true,"order":3},{"items":[{"content":"System Integrations","items":[{"content":"The Things Network","items":[{"content":"Overview","url":"/drogue-cloud/0.7/ttn/index.html","urlType":"internal"},{"content":"Managing applications","url":"/drogue-cloud/0.7/ttn/app.html","urlType":"internal"},{"content":"Managing devices","url":"/drogue-cloud/0.7/ttn/device.html","urlType":"internal"}]}]}],"root":true,"order":4}]},"drogue-cloud/0.6":{"displayVersion":"0.6","title":"Drogue Cloud","version":"0.6","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/0.6/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/0.6/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Architecture","url":"/drogue-cloud/0.6/architecture/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.6/architecture/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/0.6/architecture/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/0.6/architecture/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/0.6/architecture/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/0.6/architecture/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/0.6/architecture/services.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Deployment","url":"/drogue-cloud/0.6/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.6/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/0.6/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/0.6/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/0.6/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/0.6/deployment/development.html","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"Integrations","items":[{"content":"The Things Network","items":[{"content":"Overview","url":"/drogue-cloud/0.6/ttn/index.html","urlType":"internal"},{"content":"Managing applications","url":"/drogue-cloud/0.6/ttn/app.html","urlType":"internal"},{"content":"Managing devices","url":"/drogue-cloud/0.6/ttn/device.html","urlType":"internal"}]}]}],"root":true,"order":3}]},"drogue-cloud/0.5":{"displayVersion":"0.5","title":"Drogue Cloud","version":"0.5","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/0.5/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/0.5/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Architecture","url":"/drogue-cloud/0.5/architecture/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.5/architecture/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/0.5/architecture/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/0.5/architecture/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/0.5/architecture/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/0.5/architecture/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/0.5/architecture/services.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Deployment","url":"/drogue-cloud/0.5/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.5/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/0.5/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/0.5/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/0.5/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/0.5/deployment/development.html","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"Integrations","items":[{"content":"The Things Network","items":[{"content":"Overview","url":"/drogue-cloud/0.5/ttn/index.html","urlType":"internal"},{"content":"Managing applications","url":"/drogue-cloud/0.5/ttn/app.html","urlType":"internal"},{"content":"Managing devices","url":"/drogue-cloud/0.5/ttn/device.html","urlType":"internal"}]}]}],"root":true,"order":3}]},"drogue-cloud/0.4":{"displayVersion":"0.4","title":"Drogue Cloud","version":"0.4","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/0.4/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/0.4/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Architecture","url":"/drogue-cloud/0.4/architecture/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.4/architecture/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/0.4/architecture/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/0.4/architecture/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/0.4/architecture/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/0.4/architecture/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/0.4/architecture/services.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Deployment","url":"/drogue-cloud/0.4/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.4/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/0.4/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/0.4/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/0.4/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/0.4/deployment/development.html","urlType":"internal"}]}],"root":true,"order":2}]},"drogue-cloud/0.1":{"displayVersion":"0.1","title":"Drogue Cloud","version":"0.1","name":"drogue-cloud","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-cloud/0.1/index.html","navigation":[{"items":[{"content":"Concepts","url":"/drogue-cloud/0.1/concepts.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Use Cases","url":"/drogue-cloud/0.1/use-cases/index.html","urlType":"internal","items":[{"content":"Environmental Monitoring","url":"/drogue-cloud/0.1/use-cases/environmental-monitoring.html","urlType":"internal"},{"content":"Smart Factories","url":"/drogue-cloud/0.1/use-cases/smart-factories.html","urlType":"internal"},{"content":"Predictive Maintenance","url":"/drogue-cloud/0.1/use-cases/predictive-maintenance.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Introduction","url":"/drogue-cloud/0.1/introduction/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.1/introduction/index.html","urlType":"internal"},{"content":"Data plane","url":"/drogue-cloud/0.1/introduction/data.html","urlType":"internal"},{"content":"Control plane","url":"/drogue-cloud/0.1/introduction/control.html","urlType":"internal"},{"content":"Devices, gateways &amp; services","url":"/drogue-cloud/0.1/introduction/devices.html","urlType":"internal"},{"content":"Additional components","url":"/drogue-cloud/0.1/introduction/addons.html","urlType":"internal"},{"content":"Noteworthy services","url":"/drogue-cloud/0.1/introduction/services.html","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"Deployment","url":"/drogue-cloud/0.1/deployment/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.1/deployment/index.html","urlType":"internal"},{"content":"Pre-Requisites","url":"/drogue-cloud/0.1/deployment/pre-reqs.html","urlType":"internal"},{"content":"Prepare the cluster","url":"/drogue-cloud/0.1/deployment/cluster.html","urlType":"internal"},{"content":"Run the installer","url":"/drogue-cloud/0.1/deployment/installer.html","urlType":"internal"},{"content":"Deploy from the repository","url":"/drogue-cloud/0.1/deployment/development.html","urlType":"internal"},{"content":"Deploying on bare metal","url":"/drogue-cloud/0.1/deployment/bare-metal.html","urlType":"internal"},{"content":"Monitoring a deployment","url":"/drogue-cloud/0.1/deployment/monitoring.html","urlType":"internal"},{"content":"Tracing","url":"/drogue-cloud/0.1/deployment/tracing.html","urlType":"internal"}]}],"root":true,"order":3},{"items":[{"content":"User Guide","url":"/drogue-cloud/0.1/user-guide/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.1/user-guide/index.html","urlType":"internal"},{"content":"Management","url":"/drogue-cloud/0.1/user-guide/management.html","urlType":"internal","items":[{"content":"Applications","url":"/drogue-cloud/0.1/user-guide/management.html#applications","urlType":"internal","hash":"#applications"},{"content":"Devices","url":"/drogue-cloud/0.1/user-guide/management.html#devices","urlType":"internal","hash":"#devices"},{"content":"Event pre-processing","url":"/drogue-cloud/0.1/user-guide/management-rules.html","urlType":"internal"},{"content":"MQTT dialects","url":"/drogue-cloud/0.1/user-guide/management-mqtt.html","urlType":"internal"}]},{"content":"Endpoints","items":[{"content":"CoAP Endpoint","url":"/drogue-cloud/0.1/user-guide/endpoint-coap.html","urlType":"internal"},{"content":"HTTP Endpoint","url":"/drogue-cloud/0.1/user-guide/endpoint-http.html","urlType":"internal"},{"content":"MQTT Endpoint","url":"/drogue-cloud/0.1/user-guide/endpoint-mqtt.html","urlType":"internal"}]},{"content":"Integrations","url":"/drogue-cloud/0.1/user-guide/integration.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.1/user-guide/integration.html","urlType":"internal"},{"content":"Apache Kafka™ Integration","url":"/drogue-cloud/0.1/user-guide/integration-kafka.html","urlType":"internal"},{"content":"HTTP Command Integration","url":"/drogue-cloud/0.1/user-guide/integration-command.html","urlType":"internal"},{"content":"Knative Integration","url":"/drogue-cloud/0.1/user-guide/integration-knative.html","urlType":"internal"},{"content":"MQTT Integration","url":"/drogue-cloud/0.1/user-guide/integration-mqtt.html","urlType":"internal"},{"content":"WebSocket Integration","url":"/drogue-cloud/0.1/user-guide/integration-ws.html","urlType":"internal"}]},{"content":"Common topics","url":"/drogue-cloud/0.1/user-guide/common.html","urlType":"internal","items":[{"content":"Configuration","url":"/drogue-cloud/0.1/user-guide/common.html","urlType":"internal"},{"content":"MQTT over websocket","url":"/drogue-cloud/0.1/user-guide/common-mqtt-websocket.html","urlType":"internal"}]}]}],"root":true,"order":4},{"items":[{"content":"System Integrations","items":[{"content":"The Things Network","items":[{"content":"Overview","url":"/drogue-cloud/0.1/ttn/index.html","urlType":"internal"},{"content":"Managing applications","url":"/drogue-cloud/0.1/ttn/app.html","urlType":"internal"},{"content":"Managing devices","url":"/drogue-cloud/0.1/ttn/device.html","urlType":"internal"}]}]}],"root":true,"order":5},{"items":[{"content":"API","url":"/drogue-cloud/0.1/api/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.1/api/index.html","urlType":"internal"},{"content":"Endpoints","url":"/drogue-cloud/0.1/api/endpoints.html","urlType":"internal"},{"content":"Schemas","url":"/drogue-cloud/0.1/api/schemas.html","urlType":"internal"}]}],"root":true,"order":6},{"items":[{"content":"Developer Guide","url":"/drogue-cloud/0.1/developer-guide/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-cloud/0.1/developer-guide/index.html","urlType":"internal"}]}],"root":true,"order":7}]},"drogue-ajour/dev":{"displayVersion":"dev","title":"Drogue Ajour","version":"dev","name":"drogue-ajour","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-ajour/dev/index.html","navigation":[{"items":[{"content":"User Guide","url":"/drogue-ajour/dev/using.html","urlType":"internal"},{"content":"Admin Guide","url":"/drogue-ajour/dev/installation.html","urlType":"internal"},{"content":"Update Protocol","url":"/drogue-ajour/dev/protocol.html","urlType":"internal"},{"content":"Image Format","url":"/drogue-ajour/dev/image-format.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"API","url":"/drogue-ajour/dev/api/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-ajour/dev/api/index.html","urlType":"internal"},{"content":"Endpoints","url":"/drogue-ajour/dev/api/endpoints.html","urlType":"internal"},{"content":"Schemas","url":"/drogue-ajour/dev/api/schemas.html","urlType":"internal"}]}],"root":true,"order":1}]},"drogue-device/dev":{"displayVersion":"dev","title":"Drogue Device","version":"dev","name":"drogue-device","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-device/dev/index.html","navigation":[{"items":[{"content":"Introduction","url":"/drogue-device/dev/introduction.html","urlType":"internal"},{"content":"Actors","url":"/drogue-device/dev/concepts.html","urlType":"internal"},{"content":"Getting Started","url":"/drogue-device/dev/getting_started.html","urlType":"internal"},{"content":"Basic Application","url":"/drogue-device/dev/basic_application.html","urlType":"internal"},{"content":"Drivers","url":"/drogue-device/dev/drivers.html","urlType":"internal"},{"content":"Board Support Packages","url":"/drogue-device/dev/bsp.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Examples","url":"/drogue-device/dev/examples.html","urlType":"internal","items":[{"content":"Basic","items":[{"content":"Raspberry Pi Pico Blinky","url":"/drogue-device/dev/examples/rp/pico/blinky/README.html","urlType":"internal"},{"content":"STM32 Nucleo-H743 blinky","url":"/drogue-device/dev/examples/stm32h7/nucleo-h743zi/blinky/README.html","urlType":"internal"},{"content":"STM32 IoT Discovery board blinky","url":"/drogue-device/dev/examples/stm32u5/iot02a/blinky/README.html","urlType":"internal"}]},{"content":"Ble","items":[{"content":"Adafruit Feather nRF52840 Bluetooth Mesh example","url":"/drogue-device/dev/examples/nrf52/adafruit-feather-nrf52840/bt-mesh/README.html","urlType":"internal"},{"content":"Microbit BLE Sensor example with DFU","url":"/drogue-device/dev/examples/nrf52/microbit/ble/README.html","urlType":"internal"},{"content":"Microbit Bluetooth Mesh example","url":"/drogue-device/dev/examples/nrf52/microbit/bt-mesh/README.html","urlType":"internal"},{"content":"nrf52840-dk BLE Mesh example","url":"/drogue-device/dev/examples/nrf52/nrf52840-dk/bt-mesh/README.html","urlType":"internal"}]},{"content":"Cloud","items":[{"content":"BBC micro:bit v2 + ESP8266 WiFi adapter + MQTT","url":"/drogue-device/dev/examples/nrf52/microbit/esp8266/README.html","urlType":"internal"},{"content":"Example sending telemetry data from Drogue Device to Drogue Cloud","url":"/drogue-device/dev/examples/std/cloud/README.html","urlType":"internal"},{"content":"Example using a USB-to-Serial adapter + ESP8266 adapter","url":"/drogue-device/dev/examples/std/esp8266/README.html","urlType":"internal"},{"content":"STM32 IoT Discovery board (iot01a) reporting sensor data using WiFi","url":"/drogue-device/dev/examples/stm32l4/iot01a/wifi/README.html","urlType":"internal"}]},{"content":"Display","items":[{"content":"STM32 Nucleo-H743 7-color e-paper display","url":"/drogue-device/dev/examples/stm32h7/nucleo-h743zi/epd/README.html","urlType":"internal"}]},{"content":"Lorawan","items":[{"content":"RAK811 LoRa Adapter with AT command firmware","url":"/drogue-device/dev/examples/std/rak811/README.html","urlType":"internal"},{"content":"STM32 LoRaWAN Discovery board connecting to The Things Network","url":"/drogue-device/dev/examples/stm32l0/lora-discovery/README.html","urlType":"internal"},{"content":"RAK811 Tracker Node connecting to The Things Network","url":"/drogue-device/dev/examples/stm32l1/rak811/README.html","urlType":"internal"},{"content":"STM32 Nucleo-WL55 LoRaWAN and firmware updates OTA","url":"/drogue-device/dev/examples/stm32wl/nucleo-wl55/lorawan-dfu/README.html","urlType":"internal"},{"content":"STM32 Nucleo-WL55 using LoRaWAN connecting to The Things Network","url":"/drogue-device/dev/examples/stm32wl/nucleo-wl55/lorawan/README.html","urlType":"internal"}]},{"content":"Other","items":[{"content":"Bootloader for Adafruit nRF52840 chips","url":"/drogue-device/dev/examples/nrf52/adafruit-feather-nrf52840/bootloader/README.html","urlType":"internal"},{"content":"Bootloader for BBC Micro:bit chips","url":"/drogue-device/dev/examples/nrf52/microbit/bootloader/README.html","urlType":"internal"},{"content":"Bootloader for STM32L4 iot01a boards","url":"/drogue-device/dev/examples/stm32l4/iot01a/bootloader/README.html","urlType":"internal"},{"content":"Bootloader for STM32L4 iot01a boards","url":"/drogue-device/dev/examples/stm32wl/nucleo-wl55/bootloader/README.html","urlType":"internal"}]},{"content":"Wifi","items":[{"content":"BBC micro:bit v2 + ESP8266 WiFi adapter + MQTT","url":"/drogue-device/dev/examples/nrf52/microbit/esp8266/README.html","urlType":"internal"},{"content":"Example using a USB-to-Serial adapter + ESP8266 adapter","url":"/drogue-device/dev/examples/std/esp8266/README.html","urlType":"internal"},{"content":"STM32 IoT Discovery board (iot01a) reporting sensor data using WiFi","url":"/drogue-device/dev/examples/stm32l4/iot01a/wifi/README.html","urlType":"internal"}]}]}],"root":true,"order":1}]},"drogue-workshops/master":{"displayVersion":"master","title":"Drogue IoT Workshops","version":"master","name":"drogue-workshops","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Drogue IoT"},"sourcemap":false},"url":"/drogue-workshops/index.html","navigation":[{"items":[{"content":"Introduction","url":"/drogue-workshops/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Getting started","url":"/drogue-workshops/getting-started/index.html","urlType":"internal"}],"root":true,"order":1},{"items":[{"content":"Telemetry end-to-end","url":"/drogue-workshops/external/telemetry-e2e.html","urlType":"internal"}],"root":true,"order":2},{"items":[{"content":"LoRaWAN end-to-end","url":"/drogue-workshops/ttn-lorawan/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-workshops/ttn-lorawan/index.html","urlType":"internal"},{"content":"Embedded toolchain","url":"/drogue-workshops/ttn-lorawan/toolchain.html","urlType":"internal"},{"content":"TTN account setup","url":"/drogue-workshops/ttn-lorawan/account-setup.html","urlType":"internal"},{"content":"Drogue Cloud setup","url":"/drogue-workshops/ttn-lorawan/drogue-cloud.html","urlType":"internal"},{"content":"Device firmware","url":"/drogue-workshops/ttn-lorawan/firmware.html","urlType":"internal"},{"content":"Quarkus application","url":"/drogue-workshops/ttn-lorawan/quarkus-application.html","urlType":"internal"},{"content":"Node.js application","url":"/drogue-workshops/ttn-lorawan/nodejs-application.html","urlType":"internal"},{"content":"Making changes","url":"/drogue-workshops/ttn-lorawan/making-changes.html","urlType":"internal"}]}],"root":true,"order":3},{"items":[{"content":"Quarkus MQTT integration starter","url":"/drogue-workshops/quarkus-mqtt-starter/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-workshops/quarkus-mqtt-starter/index.html","urlType":"internal"},{"content":"What to expect","url":"/drogue-workshops/quarkus-mqtt-starter/peeking.html","urlType":"internal"},{"content":"Running it locally","url":"/drogue-workshops/quarkus-mqtt-starter/local.html","urlType":"internal"},{"content":"How does it work?","url":"/drogue-workshops/quarkus-mqtt-starter/internals.html","urlType":"internal"},{"content":"Deploying to Kubernetes","url":"/drogue-workshops/quarkus-mqtt-starter/kubernetes.html","urlType":"internal"},{"content":"Moving to the cloud","url":"/drogue-workshops/quarkus-mqtt-starter/cloud.html","urlType":"internal"}]}],"root":true,"order":4},{"items":[{"content":"From WiFi to Websocket","url":"/drogue-workshops/wifi-websockets/index.html","urlType":"internal","items":[{"content":"Overview","url":"/drogue-workshops/wifi-websockets/index.html","urlType":"internal"},{"content":"Embedded toolchain","url":"/drogue-workshops/wifi-websockets/toolchain.html","urlType":"internal"},{"content":"Drogue Cloud setup","url":"/drogue-workshops/wifi-websockets/drogue-cloud.html","urlType":"internal"},{"content":"Device firmware","url":"/drogue-workshops/wifi-websockets/firmware.html","urlType":"internal"},{"content":"Websocket Application","url":"/drogue-workshops/wifi-websockets/websocket.html","urlType":"internal"},{"content":"TimescaleDB and Grafana","url":"/drogue-workshops/wifi-websockets/db-and-grafana.html","urlType":"internal"},{"content":"Summary","url":"/drogue-workshops/wifi-websockets/summary.html","urlType":"internal"}]}],"root":true,"order":5},{"items":[{"content":"Time series data, using managed services","url":"/drogue-workshops/timeseries-as-a-service/index.html","urlType":"internal","items":[{"content":"Introduction","url":"/drogue-workshops/timeseries-as-a-service/index.html","urlType":"internal"},{"content":"Architecture","url":"/drogue-workshops/timeseries-as-a-service/architecture.html","urlType":"internal"},{"content":"Timescale","url":"/drogue-workshops/timeseries-as-a-service/timescale.html","urlType":"internal"},{"content":"Knative","url":"/drogue-workshops/timeseries-as-a-service/knative.html","urlType":"internal"},{"content":"Drogue Cloud","url":"/drogue-workshops/timeseries-as-a-service/drogue.html","urlType":"internal"},{"content":"Grafana","url":"/drogue-workshops/timeseries-as-a-service/grafana.html","urlType":"internal"},{"content":"Simulating data","url":"/drogue-workshops/timeseries-as-a-service/simulating-data.html","urlType":"internal"},{"content":"Summary","url":"/drogue-workshops/timeseries-as-a-service/summary.html","urlType":"internal"}]}],"root":true,"order":6}]}}}})